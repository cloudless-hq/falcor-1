{"version":3,"sources":["../../src/components/container.js"],"names":["contextTypes","falcor","object","version","number","dispatch","func","containerBase","props","nextProps","thisVersion","nextVersion","thisJSON","data","nextJSON","$__hash","map","rest","$__path","length","deref","switchMap","getFragment","of","prev","settled","expand","loadContainerDataUntilSettled","takeLast","d2","error","$__version","getVersion","state","empty","query","get","call","json","catch","defaultMapFragmentToProps","defaultMapDispatchToProps","defaultMergeProps","stateProps","dispatchProps","parentProps","container","mapFragment","mapDispatch","mergeFragmentAndProps","actionCreators","mappedFragment","BaseComponent","loading","mappedDispatch","allMergedProps"],"mappings":"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","file":"container.js","sourcesContent":["import compose from 'recompose/compose';\nimport toClass from 'recompose/toClass';\nimport mapProps from 'recompose/mapProps';\nimport lifecycle from 'recompose/lifecycle';\nimport setStatic from 'recompose/setStatic';\nimport withProps from 'recompose/withProps';\nimport getContext from 'recompose/getContext';\nimport withContext from 'recompose/withContext';\nimport shallowEqual from 'recompose/shallowEqual';\nimport shouldUpdate from 'recompose/shouldUpdate';\nimport mapPropsStream from 'recompose/mapPropsStream';\nimport setDisplayName from 'recompose/setDisplayName';\nimport wrapDisplayName from 'recompose/wrapDisplayName';\nimport mapToFalcorJSON from '../utils/mapToFalcorJSON';\nimport bindActionCreators from '../utils/bindActionCreators';\nimport mergeIntoFalcorJSON from '../utils/mergeIntoFalcorJSON';\nimport setObservableConfig from 'recompose/setObservableConfig';\nimport invalidateFalcorJSON from '../utils/invalidateFalcorJSON';\nimport rxjsObservableConfig from 'recompose/rxjsObservableConfig';\nimport FalcorQuerySyntax from '@graphistry/falcor-query-syntax';\nimport { Observable } from 'rxjs';\nimport React, { PropTypes, Children } from 'react';\n\nconst contextTypes = {\n    falcor: PropTypes.object,\n    version: PropTypes.number,\n    dispatch: PropTypes.func\n};\n\nconst containerBase = compose(\n    getContext(contextTypes),\n    shouldUpdate((props, nextProps) => {\n        const { version: thisVersion } = props;\n        const { version: nextVersion } = nextProps;\n        if (thisVersion !== nextVersion) {\n            return true;\n        }\n        const { data: thisJSON } = props;\n        const { data: nextJSON } = nextProps;\n        if (!thisJSON || !nextJSON || thisJSON.$__hash !== nextJSON.$__hash) {\n            return true;\n        }\n        return !shallowEqual(props, nextProps);\n    }),\n    mapPropsStream((props) => props\n        .map((({ data, falcor, ...rest }) => {\n            data = invalidateFalcorJSON(mapToFalcorJSON(data, falcor));\n            return {\n                ...rest,data,\n                falcor: data &&\n                        data.$__path &&\n                        data.$__path.length &&\n                        falcor.deref(data) || falcor\n            };\n        }))\n        .switchMap(\n            ({ data, falcor, version, getFragment, ...rest }) => Observable\n                .of({\n                    prev: null, settled: false,\n                    data, falcor, getFragment, rest\n                })\n                .expand(loadContainerDataUntilSettled)\n                .takeLast(1),\n            ({ data, falcor, version, getFragment, ...rest }, { data: d2, error }) => ({\n                falcor, ...rest, data: d2, error\n            })\n        )\n    ),\n    withContext(contextTypes, ({ data, falcor }) => ({\n        falcor, version: data && data.$__version || falcor.getVersion()\n    }))\n);\n\nfunction loadContainerDataUntilSettled(state) {\n    if (state.settled === true) {\n        return Observable.empty();\n    }\n    const { data, rest, prev,\n            falcor, getFragment } = state;\n    const query = getFragment(data, rest);\n    if (query !== prev) {\n        return falcor\n            .get(...FalcorQuerySyntax.call(null, query))\n            .map(({ json }) => Object.assign(state, {\n                prev: query, data: mergeIntoFalcorJSON(data, json)\n            }))\n            .catch((error) => Observable.of(Object.assign(state, {\n                error, settled: true\n            })));\n    }\n    return Observable.empty();\n}\n\nconst defaultMapFragmentToProps = (data) => data;\nconst defaultMapDispatchToProps = (dispatch, props, falcor) => ({});\nconst defaultMergeProps = (stateProps, dispatchProps, parentProps) => ({\n    ...parentProps, ...stateProps, ...dispatchProps\n});\n\nconst container = (\n    getFragment,\n    mapFragment = defaultMapFragmentToProps,\n    mapDispatch = defaultMapDispatchToProps,\n    mergeFragmentAndProps = defaultMergeProps\n) => {\n    if (typeof mapDispatch !== 'function') {\n        if (mapDispatch && typeof mapDispatch !== 'object') {\n            mapDispatch = defaultMapDispatchToProps;\n        } else {\n            mapDispatch = function(actionCreators) {\n                return function(dispatch, mappedFragment, falcor) {\n                    return bindActionCreators(actionCreators, dispatch, falcor);\n                };\n            }(mapDispatch)\n        }\n    }\n    return (BaseComponent) => compose(\n        setStatic('fragment', getFragment),\n        setDisplayName(wrapDisplayName(\n            BaseComponent, 'Container'\n        )),\n        toClass, withProps({ getFragment }),\n        containerBase,\n        mapProps(({ data, error, falcor, version, loading, dispatch, getFragment, ...rest }) => {\n            const mappedFragment = mapFragment(data, { error, ...rest });\n            const mappedDispatch = mapDispatch(dispatch, mappedFragment, falcor);\n            const allMergedProps = mergeFragmentAndProps(mappedFragment, mappedDispatch, rest);\n            return allMergedProps;\n        })\n    )(BaseComponent);\n};\n\nexport default container;\n"]}