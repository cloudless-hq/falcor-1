{"version":3,"sources":["../../src/components/container.js"],"names":["container","defaultMapFragmentToProps","data","defaultMapDispatchToProps","dispatch","props","falcor","defaultMergeProps","stateProps","dispatchProps","parentProps","fragmentDesc","fragment","renderLoading","mapFragment","mapDispatch","mapFragmentAndProps","dispatchers","actionCreators","mappedFragment","BaseComponent","FalcorContainer","fragments","Component","displayName","items","hasOwnProperty","map","key","xs","i","reduce","x","derefEachPropUpdate","update","deref","fetchEachPropUpdate","self","mergeEachPropUpdate","error","version","loading","hash","$__hash","contextTypes","object","func","context","constructor","state","getVersion","propsStream","propsAction","switchMap","nextProps","nextState","nextContext","nextJSON","restNextProps","thisJSON","thisHash","thisVersion","restState","$__version","next","propsSubscription","subscribe","setState","unsubscribe","undefined","mergeFragmentAndProps","rest","mappedDispatch","allMergedProps","childContextTypes"],"mappings":"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","file":"container.js","sourcesContent":["import invariant from 'invariant';\nimport React, { PropTypes, Children } from 'react';\nimport hoistStatics from 'recompose/hoistStatics';\nimport shallowEqual from 'recompose/shallowEqual';\nimport mapToFalcorJSON from '../utils/mapToFalcorJSON';\nimport wrapDisplayName from 'recompose/wrapDisplayName';\nimport bindActionCreators from '../utils/bindActionCreators';\nimport fetchDataUntilSettled from '../utils/fetchDataUntilSettled';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\n\nconst defaultMapFragmentToProps = (data) => data;\nconst defaultMapDispatchToProps = (dispatch, props, falcor) => ({});\nconst defaultMergeProps = (stateProps, dispatchProps, parentProps) => ({\n    ...parentProps, ...stateProps, ...dispatchProps\n});\n\nexport default function container(fragmentDesc, ...rest) {\n\n    invariant(fragmentDesc && (\n        typeof fragmentDesc === 'function' || (\n        typeof fragmentDesc === 'object' &&\n        typeof fragmentDesc.fragment === 'function')),\n`Attempted to create a Falcor container component without a fragment.\nFalcor containers must be created with either a fragment function or an Object with a fragment function.`);\n\n    let renderLoading,\n        fragment, mapFragment,\n        mapDispatch, mapFragmentAndProps;\n\n    if (typeof fragmentDesc === 'object') {\n        fragment = fragmentDesc.fragment;\n        mapFragment = fragmentDesc.mapFragment;\n        renderLoading = fragmentDesc.renderLoading;\n        mapFragmentAndProps = fragmentDesc.mapFragmentAndProps;\n        mapDispatch = fragmentDesc.mapDispatch || fragmentDesc.dispatchers;\n    } else {\n        fragment = fragmentDesc;\n        mapFragment = rest[0];\n        mapDispatch = rest[1];\n        mapFragmentAndProps = rest[2];\n    }\n\n    mapFragment = mapFragment || defaultMapFragmentToProps;\n    mapDispatch = mapDispatch || defaultMapDispatchToProps;\n    mapFragmentAndProps = mapFragmentAndProps || defaultMergeProps;\n\n    if (typeof mapDispatch !== 'function') {\n        if (mapDispatch && typeof mapDispatch !== 'object') {\n            mapDispatch = defaultMapDispatchToProps;\n        } else {\n            mapDispatch = function(actionCreators) {\n                return function(dispatch, mappedFragment, falcor) {\n                    return bindActionCreators(actionCreators, dispatch, falcor);\n                };\n            }(mapDispatch);\n        }\n    }\n\n    return hoistStatics((BaseComponent) => class Container extends FalcorContainer {\n        static fragment = fragment;\n        static fragments = fragments;\n        static Component = BaseComponent;\n        static mapFragment = mapFragment;\n        static mapDispatch = mapDispatch;\n        static renderLoading = renderLoading;\n        static mapFragmentAndProps = mapFragmentAndProps;\n        static displayName = wrapDisplayName(BaseComponent, 'Container');\n    });\n}\n\nconst fragments = function(items = []) {\n    if (!items || typeof items !== 'object') {\n        return `{ length }`;\n    } else if (!items.hasOwnProperty('length')) {\n        items = Object.keys(items).map((key) => items[key]);\n    }\n    return `{ length ${Array\n        .from(items, (xs, i) => xs)\n        .reduce((xs, x, i) => `${xs}, ${i}: ${this.fragment(x)}`, '')\n    }}`;\n}\n\nfunction derefEachPropUpdate(update) {\n    update.falcor = update.falcor.deref(\n        update.data = mapToFalcorJSON(update.data)\n    );\n    return update;\n}\n\nfunction fetchEachPropUpdate({ self, data, props, falcor }) {\n    const { fragment, renderLoading } = self;\n    return fetchDataUntilSettled({\n            data, props, falcor, fragment\n        })\n        // .let((source) => renderLoading ? source : source.takeLast(1));\n}\n\nfunction mergeEachPropUpdate(\n    { props, falcor, dispatch },\n    { data, error, version, loading }\n) {\n    return {\n        ...props, falcor,\n        dispatch, version,\n        data, error, loading,\n        hash: data && data.$__hash\n    };\n}\n\nconst contextTypes = {\n    falcor: PropTypes.object,\n    dispatch: PropTypes.func\n};\n\nclass FalcorContainer extends React.Component {\n\n    static contextTypes = contextTypes;\n    static childContextTypes = contextTypes;\n\n    constructor(props, context) {\n        super(props, context);\n\n        let { data } = props;\n        let { falcor, dispatch } = context;\n        const { fragment,\n                Component,\n                mapFragment,\n                mapDispatch,\n                renderLoading,\n                mapFragmentAndProps\n        } = this.constructor;\n\n        this.fragment = fragment;\n        this.Component = Component;\n        this.mapDispatch = mapDispatch;\n        this.mapFragment = mapFragment;\n        this.renderLoading = renderLoading;\n        this.mapFragmentAndProps = mapFragmentAndProps;\n\n        falcor = falcor.deref(data = mapToFalcorJSON(data));\n\n        this.state = {\n            ...props,\n            hash: data.$__hash,\n            data, falcor, dispatch,\n            version: falcor.getVersion()\n        };\n\n        this.propsStream = new Subject();\n        this.propsAction = this.propsStream\n            .map(derefEachPropUpdate)\n            .switchMap(\n                fetchEachPropUpdate,\n                mergeEachPropUpdate\n            );\n    }\n    getChildContext() {\n        const { falcor, dispatch } = this.state;\n        return { falcor, dispatch };\n    }\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { data: nextJSON, ...restNextProps } = nextProps;\n        const { data: thisJSON, hash: thisHash,\n                version: thisVersion, ...restState } = this.state;\n        return !(\n            thisJSON && nextJSON && (\n            thisHash === nextJSON.$__hash) && (\n            thisVersion === nextJSON.$__version) &&\n            shallowEqual(restState, restNextProps)\n        );\n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n        // Receive new props from the owner\n        this.propsStream.next({\n            self: this,\n            props: nextProps,\n            data: nextProps.data,\n            falcor: nextContext.falcor,\n            dispatch: nextContext.dispatch\n        });\n    }\n    componentWillMount() {\n        // Subscribe to child prop changes so we know when to re-render\n        this.propsSubscription = this.propsAction.subscribe((nextState) => {\n            this.setState(nextState);\n        });\n        this.propsStream.next({\n            self: this,\n            props: this.props,\n            data: this.props.data,\n            falcor: this.context.falcor,\n            dispatch: this.context.dispatch\n        });\n    }\n    componentWillUnmount() {\n        // Clean-up subscription before un-mounting\n        this.propsSubscription.unsubscribe();\n        this.propsSubscription = undefined;\n        this.fragment = null;\n        this.Component = null;\n        this.mapDispatch = null;\n        this.mapFragment = null;\n        this.renderLoading = null;\n        this.mergeFragmentAndProps = null;\n    }\n    render() {\n\n        const { Component,\n                renderLoading,\n                mapFragmentAndProps,\n                mapFragment, mapDispatch } = this;\n\n        if (!Component) {\n            return null;\n        }\n\n        const { data, hash, error, falcor, version,\n                loading, dispatch, fragment, ...rest } = this.state;\n\n        const mappedFragment = mapFragment(data, { error, ...rest });\n\n        if (loading && renderLoading) {\n            mappedFragment.loading = loading;\n        }\n\n        const mappedDispatch = mapDispatch(dispatch, mappedFragment, falcor);\n        const allMergedProps = mapFragmentAndProps(mappedFragment, mappedDispatch, rest);\n\n        return <Component { ...allMergedProps }/>;\n    }\n}\n"]}