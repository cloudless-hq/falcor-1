{"version":3,"sources":["../../src/components/container.js"],"names":["defaultMapFragmentToProps","data","defaultMapDispatchToProps","dispatch","props","falcor","defaultMergeProps","stateProps","dispatchProps","parentProps","container","fragmentDesc","fragment","renderErrors","renderLoading","mapFragment","mapDispatch","mapFragmentAndProps","dispatchers","bindActionCreators","Component","context","FalcorContainer","fragments","load","fetchEachPropUpdate","contextTypes","childContextTypes","displayName","items","index","query","length","Math","max","actionCreators","reduce","key","actionCreator","state","tryDeref","_hasValidParentReference","deref","update","of","takeLast","mergeEachPropUpdate","error","version","loading","hash","$__hash","status","$__status","object","func","componentProps","propsStream","propsAction","switchMap","nextProps","nextState","nextContext","currProps","currState","traceShouldUpdate","currData","style","currStyle","restCurrProps","nextData","nextStyle","restNextProps","next","propsSubscription","subscribe","setState","bind","traceWillUpdate","global","message","log","inspect","unsubscribe","undefined","mergeFragmentAndProps","mappedFragment","allMergedProps","createElement"],"mappings":"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","file":"container.js","sourcesContent":["import invariant from 'invariant';\nimport React, { PropTypes, Children } from 'react';\nimport hoistStatics from 'recompose/hoistStatics';\nimport shallowEqual from 'recompose/shallowEqual';\nimport wrapDisplayName from 'recompose/wrapDisplayName';\nimport fetchDataUntilSettled from '../utils/fetchDataUntilSettled';\n\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/takeLast';\nimport 'rxjs/add/operator/switchMap';\n\nconst defaultMapFragmentToProps = (data) => data;\nconst defaultMapDispatchToProps = (dispatch, props, falcor) => ({});\nconst defaultMergeProps = (stateProps, dispatchProps, parentProps) => ({\n    ...parentProps, ...stateProps, ...dispatchProps\n});\n\nexport { container };\nexport default container;\n\nfunction container(fragmentDesc, ...rest) {\n\n    invariant(fragmentDesc && (\n              'function' === typeof fragmentDesc || (\n              'object'   === typeof fragmentDesc &&\n              'function' === typeof fragmentDesc.fragment)),\n`Attempted to create a Falcor container component without a fragment.\nFalcor containers must be created with a fragment function, or an Object with a \"fragment\" function.`);\n\n    let renderErrors = false,\n        renderLoading = false,\n        fragment, mapFragment,\n        mapDispatch, mapFragmentAndProps;\n\n    if ('object' !== typeof fragmentDesc) {\n        fragment = fragmentDesc;\n        mapFragment = rest[0];\n        mapDispatch = rest[1];\n        mapFragmentAndProps = rest[2];\n    } else {\n        fragment = fragmentDesc.fragment;\n        mapFragment = fragmentDesc.mapFragment;\n        renderErrors = fragmentDesc.renderErrors;\n        renderLoading = fragmentDesc.renderLoading;\n        mapFragmentAndProps = fragmentDesc.mapFragmentAndProps;\n        mapDispatch = fragmentDesc.mapDispatch || fragmentDesc.dispatchers;\n    }\n\n    mapFragment = mapFragment || defaultMapFragmentToProps;\n    mapDispatch = mapDispatch || defaultMapDispatchToProps;\n    mapFragmentAndProps = mapFragmentAndProps || defaultMergeProps;\n\n    if ('function' !== typeof mapDispatch) {\n        if (mapDispatch && 'object' !== typeof mapDispatch) {\n            mapDispatch = defaultMapDispatchToProps;\n        } else {\n            mapDispatch = bindActionCreators(mapDispatch);\n        }\n    }\n\n    return hoistStatics((Component) => class Container extends FalcorContainer {\n        static fragment = fragment;\n        static fragments = fragments;\n        static load = fetchEachPropUpdate;\n        static contextTypes = contextTypes;\n        static childContextTypes = contextTypes;\n        static displayName = wrapDisplayName(Component, 'Container');\n        constructor(props, context) {\n            super(props, context);\n            this.fragment = fragment;\n            this.Component = Component;\n            this.mapFragment = mapFragment;\n            this.renderErrors = renderErrors;\n            this.renderLoading = renderLoading;\n            this.dispatchers = mapDispatch(this);\n            this.mapFragmentAndProps = mapFragmentAndProps;\n        }\n    });\n}\n\nconst fragments = function(items) {\n    if (!items || 'object' !== typeof items) {\n        return `{ length }`;\n    }\n    let index = -1, query = 'length';\n    const length = Math.max(0, items.length) || 0;\n    while (++index < length) {\n        query = `${\n        query},\n ${     index}: ${this.fragment(items[index])}`;\n    }\n    return `{ ${query} }`;\n}\n\nfunction bindActionCreators(actionCreators) {\n    return function mapDispatch(container) {\n        return Object.keys(actionCreators).reduce((dispatchers, key) => {\n            const actionCreator = actionCreators[key];\n            dispatchers[key] = (...args) => {\n                const { falcor, dispatch } = container.state;\n                if (falcor) {\n                    return dispatch({ falcor, ...actionCreator(...args) });\n                }\n            };\n            return dispatchers;\n        }, {});\n    }\n}\n\nfunction tryDeref({ data, falcor }) {\n    return !data || !falcor ?\n        falcor :\n        falcor._hasValidParentReference() ?\n        falcor.deref(data) : null;\n}\n\nfunction fetchEachPropUpdate(update) {\n\n    invariant(\n        update.fragment || (update.fragment = this.fragment),\n        `Attempted to fetch without a fragment definition`\n    );\n\n    if (!(update.falcor = tryDeref(update))) {\n        return Observable.of(update);\n    } else if (update.renderLoading === true) {\n        return fetchDataUntilSettled(update);\n    } else {\n        return fetchDataUntilSettled(update).takeLast(1);\n    }\n}\n\nfunction mergeEachPropUpdate(\n    { props, falcor, dispatch },\n    { data, error, version, loading }\n) {\n    const hash = data && data.$__hash;\n    const status = data && data.$__status;\n    loading = status === 'pending';\n    return {\n        hash, props, falcor, dispatch,\n        data, error, loading, version\n    };\n}\n\nconst contextTypes = {\n    falcor: PropTypes.object,\n    dispatch: PropTypes.func,\n};\n\nclass FalcorContainer extends React.Component {\n    constructor(componentProps, context) {\n\n        super(componentProps, context);\n\n        const { falcor } = context;\n        const { data, ...props } = componentProps;\n\n        this.propsStream = new Subject();\n        this.propsAction = this.propsStream.switchMap(\n            fetchEachPropUpdate, mergeEachPropUpdate\n        );\n\n        this.state = {\n            data, props,\n            dispatch: context.dispatch,\n            falcor: tryDeref({ data, falcor })\n        };\n    }\n    getChildContext() {\n        const { falcor, dispatch } = this.state;\n        return { falcor, dispatch };\n    }\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n\n        const { renderLoading,\n                props: currProps = {},\n                state: currState = {} } = this;\n\n        if (renderLoading === true && currState.loading !== nextState.loading) {\n            this.traceShouldUpdate('loading', currState.loading, '->', nextState.loading);\n            return true;\n        } else if (currState.version !== nextState.version) {\n            this.traceShouldUpdate('version', currState.version, '->', nextState.version);\n            return true;\n        } else if (currState.error !== nextState.error) {\n            this.traceShouldUpdate('error', currState.error, '->', nextState.error);\n            return true;\n        } else if (currState.hash !== nextState.hash) {\n            this.traceShouldUpdate('hash', currState.hash, '->', nextState.hash);\n            return true;\n        }\n\n        const { data: currData, style: currStyle = {}, ...restCurrProps } = currProps;\n        const { data: nextData, style: nextStyle = currStyle, ...restNextProps } = nextProps;\n\n        if (!shallowEqual(currData, nextData)) {\n            this.traceShouldUpdate('data', currData, '->', nextData);\n            return true;\n        } else if (!shallowEqual(currStyle, nextStyle)) {\n            this.traceShouldUpdate('style', currStyle, '->', nextStyle);\n            return true;\n        } else if (!shallowEqual(restCurrProps, restNextProps)) {\n            this.traceShouldUpdate('props', restCurrProps, '->', restNextProps);\n            return true;\n        }\n\n        this.traceShouldUpdate(false, currProps, '->', nextProps);\n\n        return false;\n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n        // Receive new props from the owner\n        const { data, ...props } = nextProps;\n        this.propsStream.next({\n            data, props,\n            fragment: this.fragment,\n            falcor: nextContext.falcor,\n            version: this.state.version,\n            dispatch: nextContext.dispatch,\n            renderLoading: this.renderLoading\n        });\n    }\n    componentWillMount() {\n        const { data, ...props } = this.props;\n        // Subscribe to child prop changes so we know when to re-render\n        this.propsSubscription = this.propsAction.subscribe(this.setState.bind(this));\n        this.propsStream.next({\n            data, props,\n            fragment: this.fragment,\n            falcor: this.context.falcor,\n            version: this.state.version,\n            dispatch: this.context.dispatch,\n            renderLoading: this.renderLoading\n        });\n    }\n    componentWillUpdate(nextProps, nextState) {\n        this.traceWillUpdate(nextState.loading || false, nextProps, nextState);\n    }\n    traceShouldUpdate(...message) {\n        if (!global['__trace_container_diffs__']) {\n            return;\n        }\n        console.log(this.inspect(), ...message);\n    }\n    traceWillUpdate(...message) {\n        if (!global['__trace_container_updates__']) {\n            return;\n        }\n        console.log(this.inspect(), ...message);\n    }\n    inspect(...message) {\n        const { state = {} } = this;\n        const { falcor } = state;\n        return falcor && falcor.inspect() || `{ v: -1, p: [] }`;\n    }\n    componentWillUnmount() {\n        // Clean-up subscription before un-mounting\n        this.propsSubscription.unsubscribe();\n        this.propsSubscription = undefined;\n        this.propsStream = undefined;\n        this.propsAction = undefined;\n        this.fragment = null;\n        this.Component = null;\n        this.dispatchers = null;\n        this.mapDispatch = null;\n        this.mapFragment = null;\n        this.renderLoading = null;\n        this.mergeFragmentAndProps = null;\n    }\n    render() {\n\n        const { renderErrors, renderLoading,\n                mapFragment, mapFragmentAndProps,\n                Component, dispatchers, state, context } = this;\n\n        if (!Component) {\n            return null;\n        }\n\n        const { data, props, error } = state;\n        const mappedFragment = mapFragment(data || [], props);\n        const allMergedProps = mapFragmentAndProps(mappedFragment, dispatchers, props);\n\n        if (error && renderErrors === true) {\n            allMergedProps.error = error;\n        }\n\n        if (renderLoading === true) {\n            allMergedProps.loading = state.loading || false;\n        }\n\n        return React.createElement(Component, allMergedProps);\n    }\n}\n"]}