{"version":3,"sources":["../../src/components/container.js"],"names":["container","contextTypes","falcor","object","dispatch","func","FalcorContainer","props","context","data","constructor","fragment","Component","mergeFragmentAndProps","mapFragment","mapDispatch","deref","state","hash","$__hash","version","getVersion","propsStream","propsAction","map","rest","switchMap","error","nextProps","nextState","nextContext","nextJSON","restNextProps","thisJSON","thisHash","thisVersion","restState","$__version","next","propsSubscription","subscribe","setState","unsubscribe","loading","mappedFragment","mappedDispatch","allMergedProps","childContextTypes","defaultMapFragmentToProps","defaultMapDispatchToProps","defaultMergeProps","stateProps","dispatchProps","parentProps","getFragment","actionCreators","BaseComponent","displayName"],"mappings":"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","file":"container.js","sourcesContent":["import { Subject } from 'rxjs';\nimport React, { PropTypes, Children } from 'react';\nimport hoistStatics from 'recompose/hoistStatics';\nimport shallowEqual from 'recompose/shallowEqual';\nimport mapToFalcorJSON from '../utils/mapToFalcorJSON';\nimport wrapDisplayName from 'recompose/wrapDisplayName';\nimport bindActionCreators from '../utils/bindActionCreators';\nimport fetchDataUntilSettled from '../utils/fetchDataUntilSettled';\n\nconst contextTypes = {\n    falcor: PropTypes.object,\n    dispatch: PropTypes.func\n};\n\nclass FalcorContainer extends React.Component {\n\n    static contextTypes = contextTypes;\n    static childContextTypes = contextTypes;\n\n    constructor(props, context) {\n        super(props, context);\n\n        let { data } = props;\n        let { falcor, dispatch } = context;\n        const { fragment, Component,\n                mergeFragmentAndProps,\n                mapFragment, mapDispatch } = this.constructor;\n\n        this.fragment = fragment;\n        this.Component = Component;\n        this.mapDispatch = mapDispatch;\n        this.mapFragment = mapFragment;\n        this.mergeFragmentAndProps = mergeFragmentAndProps;\n\n        data = mapToFalcorJSON(data);\n        falcor = falcor.deref(data);\n        this.state = {\n            ...props,\n            hash: data.$__hash,\n            data, falcor, dispatch,\n            version: falcor.getVersion()\n        };\n        this.propsStream = new Subject();\n        this.propsAction = this.propsStream\n            .map((({ data, falcor, ...rest }) => {\n                data = mapToFalcorJSON(data);\n                falcor = falcor.deref(data);\n                return { ...rest, data, falcor, fragment };\n            }))\n            .switchMap(fetchDataUntilSettled, (\n                { fragment, ...props },\n                { data, error, version }) => ({\n                    ...props,\n                    hash: data.$__hash,\n                    version, data, error,\n                })\n            );\n    }\n    getChildContext() {\n        const { falcor, dispatch } = this.state;\n        return { falcor, dispatch };\n    }\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { data: nextJSON, ...restNextProps } = nextProps;\n        const { data: thisJSON, hash: thisHash,\n                version: thisVersion, ...restState } = this.state;\n        return !(\n            thisJSON && nextJSON && (\n            thisHash === nextJSON.$__hash) && (\n            thisVersion === nextJSON.$__version) &&\n            shallowEqual(restState, restNextProps)\n        );\n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n        // Receive new props from the owner\n        this.propsStream.next({ ...nextContext, ...nextProps });\n    }\n    componentWillMount() {\n        // Subscribe to child prop changes so we know when to re-render\n        this.propsSubscription = this.propsAction.subscribe((nextProps) => {\n            this.setState(nextProps);\n        });\n        this.propsStream.next({ ...this.context, ...this.props });\n    }\n    componentWillUnmount() {\n        // Clean-up subscription before un-mounting\n        this.propsSubscription.unsubscribe();\n        this.fragment = null;\n        this.Component = null;\n        this.mapDispatch = null;\n        this.mapFragment = null;\n        this.mergeFragmentAndProps = null;\n    }\n    render() {\n\n        const { Component,\n                mergeFragmentAndProps,\n                mapFragment, mapDispatch } = this;\n\n        const { data, hash, error, falcor, version,\n                loading, dispatch, fragment, ...rest } = this.state;\n\n        const mappedFragment = mapFragment(data, { error, ...rest });\n        const mappedDispatch = mapDispatch(dispatch, mappedFragment, falcor);\n        const allMergedProps = mergeFragmentAndProps(mappedFragment, mappedDispatch, rest);\n\n        return (\n            <Component { ...allMergedProps }/>\n        );\n    }\n}\n\nconst defaultMapFragmentToProps = (data) => data;\nconst defaultMapDispatchToProps = (dispatch, props, falcor) => ({});\nconst defaultMergeProps = (stateProps, dispatchProps, parentProps) => ({\n    ...parentProps, ...stateProps, ...dispatchProps\n});\n\nexport default function container(\n    getFragment,\n    mapFragment = defaultMapFragmentToProps,\n    mapDispatch = defaultMapDispatchToProps,\n    mergeFragmentAndProps = defaultMergeProps) {\n\n    if (typeof mapDispatch !== 'function') {\n        if (mapDispatch && typeof mapDispatch !== 'object') {\n            mapDispatch = defaultMapDispatchToProps;\n        } else {\n            mapDispatch = function(actionCreators) {\n                return function(dispatch, mappedFragment, falcor) {\n                    return bindActionCreators(actionCreators, dispatch, falcor);\n                };\n            }(mapDispatch)\n        }\n    }\n\n    return hoistStatics((BaseComponent) => class Container extends FalcorContainer {\n        static fragment = getFragment;\n        static Component = BaseComponent;\n        static mapFragment = mapFragment;\n        static mapDispatch = mapDispatch;\n        static mergeFragmentAndProps = mergeFragmentAndProps;\n        static displayName = wrapDisplayName(BaseComponent, 'Container');\n    });\n}\n"]}