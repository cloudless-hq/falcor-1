{"version":3,"sources":["../../src/components/container.js"],"names":["defaultMapFragmentToProps","data","defaultMapDispatchToProps","dispatch","props","falcor","defaultMergeProps","stateProps","dispatchProps","parentProps","container","globalDisposeDelay","globalDisposeScheduler","fragmentDesc","fragment","renderErrors","renderLoading","mapFragment","disposeScheduler","disposeDelay","mapDispatch","mapFragmentAndProps","dispatchers","bindActionCreators","Component","context","FalcorContainer","fragments","load","fetchEachPropUpdate","contextTypes","childContextTypes","displayName","items","itemsProps","index","query","length","Math","max","actionCreators","reduce","key","actionCreator","state","tryDeref","_hasValidParentReference","deref","update","Observable","of","takeLast","mergeEachPropUpdate","error","version","loading","hash","$__hash","status","$__status","PropTypes","object","func","componentProps","propsStream","Subject","propsAction","switchMap","nextProps","nextState","nextContext","currProps","currState","guardTraceShouldUpdate","traceShouldUpdate","curr","next","currData","style","currStyle","restCurrProps","nextData","nextStyle","restNextProps","propsSubscription","subscribe","setState","bind","guardTraceWillUpdate","traceWillUpdate","serializeObjectWithFalcorData","console","group","inspect","message","forEach","x","log","groupEnd","global","name","constructor","unsubscribe","undefined","mergeFragmentAndProps","mappedFragment","allMergedProps","React","createElement","obj"],"mappings":"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","file":"container.js","sourcesContent":["import { toProps } from '@graphistry/falcor';\n\nimport React from 'react';\nimport invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport hoistStatics from 'recompose/hoistStatics';\nimport shallowEqual from 'recompose/shallowEqual';\nimport wrapDisplayName from 'recompose/wrapDisplayName';\nimport fetchDataUntilSettled from '../utils/fetchDataUntilSettled';\n\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/takeLast';\nimport 'rxjs/add/operator/switchMap';\n\nconst defaultMapFragmentToProps = (data) => data;\nconst defaultMapDispatchToProps = (dispatch, props, falcor) => ({});\nconst defaultMergeProps = (stateProps, dispatchProps, parentProps) => ({\n    ...parentProps, ...stateProps, ...dispatchProps\n});\n\nexport { container };\nexport default container;\n\ncontainer.globalDisposeDelay = 0;\ncontainer.globalDisposeScheduler = null;\n\nfunction container(fragmentDesc, ...rest) {\n\n    invariant(fragmentDesc && (\n              'function' === typeof fragmentDesc || (\n              'object'   === typeof fragmentDesc &&\n              'function' === typeof fragmentDesc.fragment)),\n`Attempted to create a Falcor container component without a fragment.\nFalcor containers must be created with a fragment function, or an Object with a \"fragment\" function.`);\n\n    let renderErrors = false,\n        renderLoading = false,\n        fragment, mapFragment,\n        disposeScheduler, disposeDelay,\n        mapDispatch, mapFragmentAndProps;\n\n    if ('object' !== typeof fragmentDesc) {\n        fragment = fragmentDesc;\n        mapFragment = rest[0];\n        mapDispatch = rest[1];\n        mapFragmentAndProps = rest[2];\n    } else {\n        fragment = fragmentDesc.fragment;\n        mapFragment = fragmentDesc.mapFragment;\n        renderErrors = fragmentDesc.renderErrors;\n        renderLoading = fragmentDesc.renderLoading;\n        disposeDelay = fragmentDesc.disposeDelay;\n        disposeScheduler = fragmentDesc.disposeScheduler;\n        mapFragmentAndProps = fragmentDesc.mapFragmentAndProps;\n        mapDispatch = fragmentDesc.mapDispatch || fragmentDesc.dispatchers;\n    }\n\n    mapFragment = mapFragment || defaultMapFragmentToProps;\n    mapDispatch = mapDispatch || defaultMapDispatchToProps;\n    mapFragmentAndProps = mapFragmentAndProps || defaultMergeProps;\n\n    disposeDelay = disposeDelay || container.globalDisposeDelay;\n    disposeScheduler = disposeScheduler || container.globalDisposeScheduler;\n\n    if ('function' !== typeof mapDispatch) {\n        if (mapDispatch && 'object' !== typeof mapDispatch) {\n            mapDispatch = defaultMapDispatchToProps;\n        } else {\n            mapDispatch = bindActionCreators(mapDispatch);\n        }\n    }\n\n    return hoistStatics((Component) => class Container extends FalcorContainer {\n        static fragment = fragment;\n        static fragments = fragments;\n        static load = fetchEachPropUpdate;\n        static contextTypes = contextTypes;\n        static childContextTypes = contextTypes;\n        static displayName = wrapDisplayName(Component, 'Container');\n        constructor(props, context) {\n            super(props, context);\n            this.fragment = fragment;\n            this.Component = Component;\n            this.mapFragment = mapFragment;\n            this.renderErrors = renderErrors;\n            this.renderLoading = renderLoading;\n            this.dispatchers = mapDispatch(this);\n            this.mapFragmentAndProps = mapFragmentAndProps;\n            this.disposeDelay = disposeDelay;\n            this.disposeScheduler = disposeScheduler;\n        }\n    });\n}\n\nconst fragments = function(items, itemsProps) {\n    if (!items || 'object' !== typeof items) {\n        return `{ length }`;\n    }\n    itemsProps = !itemsProps || 'object' !== typeof itemsProps ? [] : itemsProps;\n    let index = -1, query = 'length';\n    const length = Math.max(0, items.length) || 0;\n    while (++index < length) {\n        query = `${\n        query},\n ${     index}: ${this.fragment(items[index], itemsProps[index])}`;\n    }\n    return `{ ${query} }`;\n}\n\nfunction bindActionCreators(actionCreators) {\n    return function mapDispatch(container) {\n        return Object.keys(actionCreators).reduce((dispatchers, key) => {\n            const actionCreator = actionCreators[key];\n            dispatchers[key] = (...args) => {\n                const { falcor, dispatch } = container.state;\n                if (falcor) {\n                    return dispatch({ falcor, ...actionCreator(...args) });\n                }\n            };\n            return dispatchers;\n        }, {});\n    }\n}\n\nfunction tryDeref({ data, falcor }) {\n    return !data || !falcor ?\n        falcor :\n        falcor._hasValidParentReference() ?\n        falcor.deref(data) : null;\n}\n\nfunction fetchEachPropUpdate(update) {\n\n    invariant(\n        update.fragment || (update.fragment = this.fragment),\n        `Attempted to fetch without a fragment definition`\n    );\n\n    if (!(update.falcor = tryDeref(update))) {\n        return Observable.of(update);\n    } else if (update.renderLoading === true) {\n        return fetchDataUntilSettled(update);\n    } else {\n        return fetchDataUntilSettled(update).takeLast(1);\n    }\n}\n\nfunction mergeEachPropUpdate(\n    { props, falcor, dispatch },\n    { data, query, error, version, loading }\n) {\n    const hash = data && data.$__hash;\n    const status = data && data.$__status;\n    loading = status === 'pending';\n    return {\n        hash, props, falcor, dispatch,\n        data, query, error, loading, version\n    };\n}\n\nconst contextTypes = {\n    falcor: PropTypes.object,\n    dispatch: PropTypes.func,\n};\n\nclass FalcorContainer extends React.Component {\n    constructor(componentProps, context) {\n\n        super(componentProps, context);\n\n        const { falcor } = context;\n        const { data, ...props } = componentProps;\n\n        this.propsStream = new Subject();\n        this.propsAction = this.propsStream.switchMap(\n            fetchEachPropUpdate, mergeEachPropUpdate\n        );\n\n        this.state = {\n            data, props, query: null,\n            dispatch: context.dispatch,\n            falcor: tryDeref({ data, falcor })\n        };\n    }\n    getChildContext() {\n        const { falcor, dispatch } = this.state;\n        return { falcor, dispatch };\n    }\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n\n        const { renderLoading,\n                props: currProps = {},\n                state: currState = {} } = this;\n\n        if (renderLoading === true && currState.loading !== nextState.loading) {\n            this.guardTraceShouldUpdate() && this.traceShouldUpdate(`trigger: loading`,\n                { curr: currState.loading, next: nextState.loading }\n            );\n            return true;\n        } else if (currState.version !== nextState.version) {\n            this.guardTraceShouldUpdate() && this.traceShouldUpdate(`trigger: version`,\n                { curr: currState.version, next: nextState.version }\n            );\n            return true;\n        } else if (currState.error !== nextState.error) {\n            this.guardTraceShouldUpdate() && this.traceShouldUpdate(`trigger: error`,\n                { curr: currState.error, next: nextState.error }\n            );\n            return true;\n        } else if (currState.hash !== nextState.hash) {\n            this.guardTraceShouldUpdate() && this.traceShouldUpdate(`trigger: hash`,\n                { curr: currState.hash, next: nextState.hash }\n            );\n            return true;\n        }\n\n        const { data: currData, style: currStyle = {}, ...restCurrProps } = currProps;\n        const { data: nextData, style: nextStyle = currStyle, ...restNextProps } = nextProps;\n\n        if (!shallowEqual(currData, nextData)) {\n            this.guardTraceShouldUpdate() && this.traceShouldUpdate(`trigger: data`,\n                { currData: toProps(currData), nextData: toProps(nextData) }\n            );\n            return true;\n        } else if (!shallowEqual(currStyle, nextStyle)) {\n            this.guardTraceShouldUpdate() && this.traceShouldUpdate(`trigger: style`,\n                { currStyle, nextStyle }\n            );\n            return true;\n        } else if (!shallowEqual(restCurrProps, restNextProps)) {\n            this.guardTraceShouldUpdate() && this.traceShouldUpdate(`trigger: props`,\n                { restCurrProps, restNextProps }\n            );\n            return true;\n        }\n\n        // this.guardTraceShouldUpdate() && this.traceShouldUpdate(false,\n        //     { currProps: serializeObjectWithFalcorData(currProps), nextProps: serializeObjectWithFalcorData(nextProps) },\n        //     { currState: serializeObjectWithFalcorData(currState), nextState: serializeObjectWithFalcorData(nextState) }\n        // );\n\n        return false;\n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n        // Receive new props from the owner\n        const { data, ...props } = nextProps;\n        this.propsStream.next({\n            data, props,\n            query: this.state.query,\n            fragment: this.fragment,\n            falcor: nextContext.falcor,\n            version: this.state.version,\n            dispatch: nextContext.dispatch,\n            renderLoading: this.renderLoading,\n            disposeDelay: this.disposeDelay,\n            disposeScheduler: this.disposeScheduler,\n        });\n    }\n    componentWillMount() {\n        const { data, ...props } = this.props;\n        // Subscribe to child prop changes so we know when to re-render\n        this.propsSubscription = this.propsAction.subscribe(this.setState.bind(this));\n        this.propsStream.next({\n            data, props,\n            query: this.state.query,\n            fragment: this.fragment,\n            falcor: this.context.falcor,\n            version: this.state.version,\n            dispatch: this.context.dispatch,\n            renderLoading: this.renderLoading,\n            disposeDelay: this.disposeDelay,\n            disposeScheduler: this.disposeScheduler,\n        });\n    }\n    componentWillUpdate(nextProps, nextState) {\n        this.guardTraceWillUpdate() && this.traceWillUpdate(\n            'loading: ' + nextState.loading || false,\n            { currProps: serializeObjectWithFalcorData(this.props), nextProps: serializeObjectWithFalcorData(nextProps) },\n            { currState: serializeObjectWithFalcorData(this.state), nextState: serializeObjectWithFalcorData(nextState) }\n        );\n    }\n    traceShouldUpdate(...message) {\n        if (this.guardTraceShouldUpdate()) {\n            console.group(`should update: ${this.inspect()}`);\n            message.forEach((x) => console.log(x));\n            console.groupEnd();\n        }\n    }\n    traceWillUpdate(...message) {\n        if (this.guardTraceWillUpdate()) {\n            console.group(`  will update: ${this.inspect()}`);\n            message.forEach((x) => console.log(x));\n            console.groupEnd();\n        }\n    }\n    guardTraceShouldUpdate() {\n        return !!global['__trace_container_diffs__'];\n    }\n    guardTraceWillUpdate() {\n        return !!global['__trace_container_updates__'];\n    }\n    inspect(...message) {\n        const { state = {} } = this;\n        const { falcor } = state;\n        const name = this.constructor && this.constructor.displayName || `Unknown Component`;\n        return `${name}: ${falcor && falcor.inspect() || '{ v: -1, p: [] }'}`;\n    }\n    componentWillUnmount() {\n        // Clean-up subscription before un-mounting\n        this.propsSubscription.unsubscribe();\n        this.propsSubscription = undefined;\n        this.propsStream = undefined;\n        this.propsAction = undefined;\n        this.fragment = null;\n        this.Component = null;\n        this.dispatchers = null;\n        this.mapDispatch = null;\n        this.mapFragment = null;\n        this.renderLoading = null;\n        this.mergeFragmentAndProps = null;\n    }\n    render() {\n\n        const { renderErrors, renderLoading,\n                mapFragment, mapFragmentAndProps,\n                Component, dispatchers, state } = this;\n\n        if (!Component) {\n            return null;\n        }\n\n        const { data, props, error, falcor } = state;\n        const mappedFragment = mapFragment(data || [], props, falcor);\n        const allMergedProps = mapFragmentAndProps(mappedFragment, dispatchers, props);\n\n        if (error && renderErrors === true) {\n            allMergedProps.error = error;\n        }\n\n        if (renderLoading === true) {\n            allMergedProps.loading = state.loading || false;\n        }\n\n        return React.createElement(Component, allMergedProps);\n    }\n}\n\nfunction serializeObjectWithFalcorData(obj) {\n    if (obj && typeof obj === 'object' && obj.data) {\n        return { ...obj, data: toProps(obj.data) };\n    }\n    return obj;\n}"]}