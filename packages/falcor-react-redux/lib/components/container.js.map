{"version":3,"sources":["../../src/components/container.js"],"names":["typeofNumber","typeofObject","typeofFunction","defaultMapFragmentToProps","data","defaultMapDispatchToProps","dispatch","props","falcor","defaultMergeProps","stateProps","dispatchProps","parentProps","container","fragmentDesc","fragment","renderErrors","renderLoading","mapFragment","mapDispatch","mapFragmentAndProps","dispatchers","bindActionCreators","Component","context","FalcorContainer","fragments","contextTypes","childContextTypes","displayName","items","hasOwnProperty","x","i","reduce","xs","actionCreators","key","actionCreator","state","tryDeref","deref","fetchEachPropUpdate","update","of","takeLast","mergeEachPropUpdate","error","version","loading","hash","$__hash","object","func","propsStream","propsAction","switchMap","undefined","nextProps","nextState","nextContext","currProps","currState","currData","style","currStyle","restCurrProps","nextData","nextStyle","restNextProps","next","propsSubscription","subscribe","setState","global","console","log","getFalcorPathString","getPath","idx","unsubscribe","mergeFragmentAndProps","mappedFragment","allMergedProps"],"mappings":"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","file":"container.js","sourcesContent":["import invariant from 'invariant';\nimport React, { PropTypes, Children } from 'react';\nimport hoistStatics from 'recompose/hoistStatics';\nimport shallowEqual from 'recompose/shallowEqual';\nimport wrapDisplayName from 'recompose/wrapDisplayName';\nimport fetchDataUntilSettled from '../utils/fetchDataUntilSettled';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/switchMap';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\n\nconst typeofNumber = 'number';\nconst typeofObject = 'object';\nconst typeofFunction = 'function';\nconst defaultMapFragmentToProps = (data) => data;\nconst defaultMapDispatchToProps = (dispatch, props, falcor) => ({});\nconst defaultMergeProps = (stateProps, dispatchProps, parentProps) => ({\n    ...parentProps, ...stateProps, ...dispatchProps\n});\n\nexport { container };\nexport default container;\n\nfunction container(fragmentDesc, ...rest) {\n\n    invariant(fragmentDesc && (\n              typeofFunction === typeof fragmentDesc || (\n              typeofObject   === typeof fragmentDesc &&\n              typeofFunction === typeof fragmentDesc.fragment)),\n`Attempted to create a Falcor container component without a fragment.\nFalcor containers must be created with a fragment function, or an Object with a \"fragment\" function.`);\n\n    let renderErrors = false,\n        renderLoading = false,\n        fragment, mapFragment,\n        mapDispatch, mapFragmentAndProps;\n\n    if (typeofObject !== typeof fragmentDesc) {\n        fragment = fragmentDesc;\n        mapFragment = rest[0];\n        mapDispatch = rest[1];\n        mapFragmentAndProps = rest[2];\n    } else {\n        fragment = fragmentDesc.fragment;\n        mapFragment = fragmentDesc.mapFragment;\n        renderErrors = fragmentDesc.renderErrors;\n        renderLoading = fragmentDesc.renderLoading;\n        mapFragmentAndProps = fragmentDesc.mapFragmentAndProps;\n        mapDispatch = fragmentDesc.mapDispatch || fragmentDesc.dispatchers;\n    }\n\n    mapFragment = mapFragment || defaultMapFragmentToProps;\n    mapDispatch = mapDispatch || defaultMapDispatchToProps;\n    mapFragmentAndProps = mapFragmentAndProps || defaultMergeProps;\n\n    if (typeofFunction !== typeof mapDispatch) {\n        if (mapDispatch && typeofObject !== typeof mapDispatch) {\n            mapDispatch = defaultMapDispatchToProps;\n        } else {\n            mapDispatch = bindActionCreators(mapDispatch);\n        }\n    }\n\n    return hoistStatics((Component) => class Container extends FalcorContainer {\n        static fragment = fragment;\n        static fragments = fragments;\n        static contextTypes = contextTypes;\n        static childContextTypes = contextTypes;\n        static displayName = wrapDisplayName(Component, 'Container');\n        constructor(props, context) {\n            super(props, context);\n            this.fragment = fragment;\n            this.Component = Component;\n            this.mapFragment = mapFragment;\n            this.renderErrors = renderErrors;\n            this.renderLoading = renderLoading;\n            this.dispatchers = mapDispatch(this);\n            this.mapFragmentAndProps = mapFragmentAndProps;\n        }\n    });\n}\n\nconst fragments = function(items = []) {\n    if (!items ||\n        typeofObject !== typeof items ||\n        !items.hasOwnProperty('length')) {\n        return `{ length }`;\n    }\n    return `{ length ${Array\n        .from(items, (x, i) => x)\n        .reduce((xs, x, i) =>`${xs}, ${\n            i}: ${this.fragment(x)}`, '')\n    }}`;\n}\n\nfunction bindActionCreators(actionCreators) {\n    return function mapDispatch(container) {\n        return Object.keys(actionCreators).reduce((dispatchers, key) => {\n            const actionCreator = actionCreators[key];\n            dispatchers[key] = (...args) => {\n                const { falcor, dispatch } = container.state;\n                if (falcor) {\n                    return dispatch({ falcor, ...actionCreator(...args) });\n                }\n            };\n            return dispatchers;\n        }, {});\n    }\n}\n\nfunction tryDeref({ data, falcor }) {\n    return !data || !falcor ?\n        falcor : falcor.deref(data);\n}\n\nfunction fetchEachPropUpdate(update) {\n    if (!(update.falcor = tryDeref(update))) {\n        return Observable.of(update);\n    } else if (update.renderLoading === true) {\n        return fetchDataUntilSettled(update);\n    }\n    return fetchDataUntilSettled(update).takeLast(1);\n}\n\nfunction mergeEachPropUpdate(\n    { props, falcor, dispatch },\n    { data, error, version, loading }\n) {\n    return {\n        props, falcor, dispatch,\n        hash: data && data.$__hash,\n        data, error, loading, version\n    };\n}\n\nconst contextTypes = {\n    falcor: PropTypes.object,\n    dispatch: PropTypes.func\n};\n\nclass FalcorContainer extends React.Component {\n    constructor(props, context) {\n\n        super(props, context);\n\n        const { data } = props;\n        let { falcor } = context;\n        this.propsStream = new Subject();\n        this.propsAction = this.propsStream.switchMap(\n            fetchEachPropUpdate, mergeEachPropUpdate\n        );\n\n        this.state = {\n            dispatch: context.dispatch,\n            data, hash: '', version: -1,\n            loading: false, error: undefined,\n            falcor: tryDeref({ data, falcor }),\n            props: { ...props, data: undefined },\n        };\n    }\n    getChildContext() {\n        const { falcor, dispatch } = this.state;\n        return { falcor, dispatch };\n    }\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n\n        const { props: currProps = {},\n                state: currState = {} } = this;\n\n        if (this.renderLoading === true && currState.loading !== nextState.loading) {\n            return true;\n        } else if (currState.version !== nextState.version) {\n            return true;\n        } else if (currState.error !== nextState.error) {\n            return true;\n        } else if (currState.hash !== nextState.hash) {\n            return true;\n        }\n\n        const { data: currData,\n                style: currStyle = {},\n                ...restCurrProps } = currProps;\n\n        const { data: nextData,\n                style: nextStyle = currStyle,\n                ...restNextProps } = nextProps;\n\n        if (!shallowEqual(currData, nextData)) {\n            return true;\n        } else if (!shallowEqual(currStyle, nextStyle)) {\n            return true;\n        } else if (!shallowEqual(restCurrProps, restNextProps)) {\n            return true;\n        }\n\n        return false;\n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n        // Receive new props from the owner\n        this.propsStream.next({\n            loading: false,\n            data: nextProps.data,\n            fragment: this.fragment,\n            falcor: nextContext.falcor,\n            dispatch: nextContext.dispatch,\n            renderLoading: this.renderLoading,\n            props: { ...nextProps, data: undefined },\n        });\n    }\n    componentWillMount() {\n        // Subscribe to child prop changes so we know when to re-render\n        this.propsSubscription = this.propsAction.subscribe((nextState) => {\n            this.setState(nextState);\n        });\n        this.propsStream.next({\n            loading: false,\n            data: this.props.data,\n            fragment: this.fragment,\n            falcor: this.context.falcor,\n            dispatch: this.context.dispatch,\n            renderLoading: this.renderLoading,\n            props: { ...this.props, data: undefined },\n        });\n    }\n    componentWillUpdate() {\n        if (!global['__trace_container_updates__']) {\n            return;\n        }\n        const { state = {} } = this;\n        const { falcor } = state;\n        if (falcor) {\n            console.log(`cwu:`, this.getFalcorPathString());\n        }\n    }\n    getFalcorPathString() {\n        return this.state && this.state.falcor && this.state.falcor.getPath().reduce((xs, key, idx) => {\n            if (idx === 0) {\n                return key;\n            } else if (typeofNumber === typeof key) {\n                return `${xs}[${key}]`;\n            }\n            return `${xs}['${key}']`;\n        }, '') || '';\n    }\n    componentWillUnmount() {\n        // Clean-up subscription before un-mounting\n        this.propsSubscription.unsubscribe();\n        this.propsSubscription = undefined;\n        this.fragment = null;\n        this.Component = null;\n        this.dispatchers = null;\n        this.mapDispatch = null;\n        this.mapFragment = null;\n        this.renderLoading = null;\n        this.mergeFragmentAndProps = null;\n    }\n    render() {\n\n        const { Component, dispatchers,\n                state, mapFragment, renderErrors,\n                renderLoading, mapFragmentAndProps } = this;\n\n        const { data, props, error, loading } = state;\n\n        if (!Component) {\n            return null;\n        }\n\n        const mappedFragment = mapFragment(data || [], props);\n        const allMergedProps = mapFragmentAndProps(mappedFragment, dispatchers, props);\n\n        if (error && renderErrors === true) {\n            allMergedProps.error = error;\n        }\n\n        if (loading && renderLoading === true) {\n            allMergedProps.loading = loading;\n        }\n\n        return <Component { ...allMergedProps }/>;\n    }\n}\n"]}