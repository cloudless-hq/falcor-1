{"version":3,"sources":["../../src/components/container.js"],"names":["typeofNumber","typeofObject","typeofFunction","defaultMapFragmentToProps","data","defaultMapDispatchToProps","dispatch","props","falcor","defaultMergeProps","stateProps","dispatchProps","parentProps","container","fragmentDesc","fragment","renderErrors","renderLoading","mapFragment","mapDispatch","mapFragmentAndProps","dispatchers","bindActionCreators","BaseComponent","FalcorContainer","fragments","Component","displayName","items","hasOwnProperty","x","i","reduce","xs","actionCreators","key","actionCreator","state","tryDeref","deref","fetchEachPropUpdate","update","of","takeLast","mergeEachPropUpdate","error","version","loading","hash","$__hash","contextTypes","object","func","context","constructor","propsStream","propsAction","switchMap","nextProps","nextState","nextContext","currProps","currState","currData","style","currStyle","restCurrProps","nextData","nextStyle","restNextProps","next","undefined","propsSubscription","subscribe","setState","global","console","log","getFalcorPathString","getPath","idx","unsubscribe","mergeFragmentAndProps","mappedFragment","allMergedProps","childContextTypes"],"mappings":"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","file":"container.js","sourcesContent":["import invariant from 'invariant';\nimport React, { PropTypes, Children } from 'react';\nimport hoistStatics from 'recompose/hoistStatics';\nimport shallowEqual from 'recompose/shallowEqual';\nimport wrapDisplayName from 'recompose/wrapDisplayName';\nimport fetchDataUntilSettled from '../utils/fetchDataUntilSettled';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/switchMap';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { FalcorJSON } from '@graphistry/falcor';\n\nconst typeofNumber = 'number';\nconst typeofObject = 'object';\nconst typeofFunction = 'function';\nconst defaultMapFragmentToProps = (data) => data;\nconst defaultMapDispatchToProps = (dispatch, props, falcor) => ({});\nconst defaultMergeProps = (stateProps, dispatchProps, parentProps) => ({\n    ...parentProps, ...stateProps, ...dispatchProps\n});\n\nexport { container };\nexport default container;\n\nfunction container(fragmentDesc, ...rest) {\n\n    invariant(fragmentDesc && (\n              typeofFunction === typeof fragmentDesc || (\n              typeofObject   === typeof fragmentDesc &&\n              typeofFunction === typeof fragmentDesc.fragment)),\n`Attempted to create a Falcor container component without a fragment.\nFalcor containers must be created with a fragment function, or an Object with a \"fragment\" function.`);\n\n    let renderErrors = false,\n        renderLoading = false,\n        fragment, mapFragment,\n        mapDispatch, mapFragmentAndProps;\n\n    if (typeofObject !== typeof fragmentDesc) {\n        fragment = fragmentDesc;\n        mapFragment = rest[0];\n        mapDispatch = rest[1];\n        mapFragmentAndProps = rest[2];\n    } else {\n        fragment = fragmentDesc.fragment;\n        mapFragment = fragmentDesc.mapFragment;\n        renderErrors = fragmentDesc.renderErrors;\n        renderLoading = fragmentDesc.renderLoading;\n        mapFragmentAndProps = fragmentDesc.mapFragmentAndProps;\n        mapDispatch = fragmentDesc.mapDispatch || fragmentDesc.dispatchers;\n    }\n\n    mapFragment = mapFragment || defaultMapFragmentToProps;\n    mapDispatch = mapDispatch || defaultMapDispatchToProps;\n    mapFragmentAndProps = mapFragmentAndProps || defaultMergeProps;\n\n    if (typeofFunction !== typeof mapDispatch) {\n        if (mapDispatch && typeofObject !== typeof mapDispatch) {\n            mapDispatch = defaultMapDispatchToProps;\n        } else {\n            mapDispatch = bindActionCreators(mapDispatch);\n        }\n    }\n\n    return hoistStatics((BaseComponent) => class Container extends FalcorContainer {\n        static fragment = fragment;\n        static fragments = fragments;\n        static Component = BaseComponent;\n        static mapFragment = mapFragment;\n        static mapDispatch = mapDispatch;\n        static renderErrors = renderErrors;\n        static renderLoading = renderLoading;\n        static mapFragmentAndProps = mapFragmentAndProps;\n        static displayName = wrapDisplayName(BaseComponent, 'Container');\n    });\n}\n\nconst fragments = function(items = []) {\n    if (!items ||\n        typeofObject !== typeof items ||\n        !items.hasOwnProperty('length')) {\n        return `{ length }`;\n    }\n    return `{ length ${Array\n        .from(items, (x, i) => x)\n        .reduce((xs, x, i) =>`${xs}, ${\n            i}: ${this.fragment(x)}`, '')\n    }}`;\n}\n\nfunction bindActionCreators(actionCreators) {\n    return function mapDispatch(container) {\n        return Object.keys(actionCreators).reduce((dispatchers, key) => {\n            const actionCreator = actionCreators[key];\n            dispatchers[key] = (...args) => {\n                const { falcor, dispatch } = container.state;\n                if (falcor) {\n                    return dispatch({ falcor, ...actionCreator(...args) });\n                }\n            };\n            return dispatchers;\n        }, {});\n    }\n}\n\nfunction tryDeref({ data, falcor }) {\n    return !data || !falcor ?\n        falcor : falcor.deref(data);\n}\n\nfunction fetchEachPropUpdate(update) {\n    if (!(update.falcor = tryDeref(update))) {\n        return Observable.of(update);\n    } else if (update.renderLoading === true) {\n        return fetchDataUntilSettled(update);\n    }\n    return fetchDataUntilSettled(update).takeLast(1);\n}\n\nfunction mergeEachPropUpdate(\n    { props, falcor, dispatch },\n    { data, error, version, loading }\n) {\n    return {\n        props, falcor, dispatch,\n        hash: data && data.$__hash,\n        data, error, loading, version\n    };\n}\n\nconst contextTypes = {\n    falcor: PropTypes.object,\n    dispatch: PropTypes.func\n};\n\nclass FalcorContainer extends React.Component {\n\n    static contextTypes = contextTypes;\n    static childContextTypes = contextTypes;\n\n    constructor(props, context) {\n\n        super(props, context);\n\n        const { fragment,\n                Component,\n                mapFragment,\n                mapDispatch,\n                renderErrors,\n                renderLoading,\n                mapFragmentAndProps\n        } = this.constructor;\n\n        this.fragment = fragment;\n        this.Component = Component;\n        this.mapFragment = mapFragment;\n        this.propsStream = new Subject();\n        this.renderErrors = renderErrors;\n        this.renderLoading = renderLoading;\n        this.dispatchers = mapDispatch(this);\n        this.state = { hash: '', version: 0 };\n        this.mapFragmentAndProps = mapFragmentAndProps;\n        this.propsAction = this.propsStream.switchMap(\n            fetchEachPropUpdate, mergeEachPropUpdate\n        );\n    }\n    getChildContext() {\n        const { falcor, dispatch } = this.state;\n        return { falcor, dispatch };\n    }\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n\n        const { props: currProps = {},\n                state: currState = {} } = this;\n\n        if (this.renderLoading === true && currState.loading !== nextState.loading) {\n            return true;\n        } else if (currState.version !== nextState.version) {\n            return true;\n        } else if (currState.error !== nextState.error) {\n            return true;\n        } else if (currState.hash !== nextState.hash) {\n            return true;\n        }\n\n        const { data: currData,\n                style: currStyle = {},\n                ...restCurrProps } = currProps;\n\n        const { data: nextData,\n                style: nextStyle = currStyle,\n                ...restNextProps } = nextProps;\n\n        if (!shallowEqual(currData, nextData)) {\n            return true;\n        } else if (!shallowEqual(currStyle, nextStyle)) {\n            return true;\n        } else if (!shallowEqual(restCurrProps, restNextProps)) {\n            return true;\n        }\n\n        return false;\n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n        // Receive new props from the owner\n        this.propsStream.next({\n            loading: false,\n            data: nextProps.data,\n            fragment: this.fragment,\n            falcor: nextContext.falcor,\n            dispatch: nextContext.dispatch,\n            renderLoading: this.renderLoading,\n            props: { ...nextProps, data: undefined },\n        });\n    }\n    componentWillMount() {\n        // Subscribe to child prop changes so we know when to re-render\n        this.propsSubscription = this.propsAction.subscribe((nextState) => {\n            this.setState(nextState);\n        });\n        this.propsStream.next({\n            loading: false,\n            data: this.props.data,\n            fragment: this.fragment,\n            falcor: this.context.falcor,\n            dispatch: this.context.dispatch,\n            renderLoading: this.renderLoading,\n            props: { ...this.props, data: undefined },\n        });\n    }\n    componentWillUpdate() {\n        if (!global['__trace_container_updates__']) {\n            return;\n        }\n        const { state = {} } = this;\n        const { falcor } = state;\n        if (falcor) {\n            console.log(`cwu:`, this.getFalcorPathString());\n        }\n    }\n    getFalcorPathString() {\n        return this.state && this.state.falcor && this.state.falcor.getPath().reduce((xs, key, idx) => {\n            if (idx === 0) {\n                return key;\n            } else if (typeofNumber === typeof key) {\n                return `${xs}[${key}]`;\n            }\n            return `${xs}['${key}']`;\n        }, '') || '';\n    }\n    componentWillUnmount() {\n        // Clean-up subscription before un-mounting\n        this.propsSubscription.unsubscribe();\n        this.propsSubscription = undefined;\n        this.fragment = null;\n        this.Component = null;\n        this.dispatchers = null;\n        this.mapDispatch = null;\n        this.mapFragment = null;\n        this.renderLoading = null;\n        this.mergeFragmentAndProps = null;\n    }\n    render() {\n\n        const { Component, dispatchers,\n                mapFragment, renderErrors,\n                renderLoading, mapFragmentAndProps } = this;\n\n        if (!Component) {\n            return null;\n        }\n\n        const { data, props, falcor, error, loading } = this.state;\n        const mappedFragment = data ? mapFragment(data, props) : new FalcorJSON();\n        const allMergedProps = mapFragmentAndProps(mappedFragment, dispatchers, props);\n\n        if (error && renderErrors === true) {\n            allMergedProps.error = error;\n        }\n\n        if (loading && renderLoading === true) {\n            allMergedProps.loading = loading;\n        }\n\n        return <Component { ...allMergedProps }/>;\n    }\n}\n"]}