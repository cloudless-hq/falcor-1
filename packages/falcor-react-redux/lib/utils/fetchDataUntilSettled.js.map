{"version":3,"sources":["../../src/utils/fetchDataUntilSettled.js"],"names":["fetchDataUntilSettled","memoizedQuerySyntax","data","props","falcor","fragment","memo","query","loading","version","getVersion","mapNext","handleNext","catchError","handleError","of","expand","_fetchDataUntilSettled","empty","ast","error","handleParseError","from","get","map","catch","json","process","env","NODE_ENV"],"mappings":"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","file":"fetchDataUntilSettled.js","sourcesContent":["import warning from 'warning';\nimport { errorMessage } from 'pegjs-util';\nimport memoizeQueryies from './memoizeQueryies';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/expand';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/observable/empty';\n\nconst memoizedQuerySyntax = memoizeQueryies(100);\n\nexport default function fetchDataUntilSettled({\n    data, props, falcor, fragment\n}) {\n\n    const memo = {\n        query: null, loading: true,\n        version: falcor.getVersion(),\n        data, props, falcor, fragment,\n    };\n    memo.mapNext = handleNext(memo, falcor);\n    memo.catchError = handleError(memo, falcor);\n\n    return Observable.of(memo).expand(_fetchDataUntilSettled);\n}\n\nfunction _fetchDataUntilSettled(memo) {\n    if (memo.loading === false) {\n        return Observable.empty();\n    }\n    let { query, falcor, version, fragment } = memo;\n    if ((query !== (memo.query = fragment(memo.data, memo.props))) ||\n        (version !== (memo.version = falcor.getVersion()))) {\n        let { ast, error } = memoizedQuerySyntax(memo.query);\n        if (error) {\n            return handleParseError(memo, error);\n        }\n        return Observable\n            .from(falcor.get(ast))\n            .map(memo.mapNext)\n            .catch(memo.catchError);\n    }\n    return Observable.of({\n        loading: false,\n        data: memo.data,\n        version: memo.version\n    });\n}\n\nfunction handleNext(memo, falcor) {\n    return function mapNext({ json: data }) {\n        return Object.assign(memo, {\n            data, loading: true,\n            version: falcor.getVersion()\n        });\n    }\n}\n\nfunction handleError(memo, falcor) {\n    return function catchError(error) {\n        return Observable.of({\n            error,\n            data: memo.data,\n            loading: false,\n            version: falcor.getVersion()\n        });\n    };\n}\n\nfunction handleParseError(memo, error) {\n    warning(process.env.NODE_ENV !== 'development', errorMessage(error));\n    warning(process.env.NODE_ENV !== 'development', `Error parsing query: ${memo.query}`);\n    return Observable.of({\n        error,\n        loading: false,\n        data: memo.data,\n        version: memo.version,\n    });\n}\n"]}