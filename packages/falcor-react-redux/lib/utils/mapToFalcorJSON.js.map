{"version":3,"sources":["../../src/utils/mapToFalcorJSON.js"],"names":["mapToFalcorJSON","data","falcor","dataProto","__proto__","_recycleJSON","_seed","json"],"mappings":";;;;;;;;;;;;;;;;;;;;kBAGwBA,e;;AAHxB;;;;AACA;;;;AAEe,SAASA,eAAT,CAAyBC,IAAzB,EAA+BC,MAA/B,EAAuC;AAClD,QAAIC,kBAAJ;AACA,QAAI,CAACF,IAAD,IAAS,QAAOA,IAAP,yCAAOA,IAAP,OAAgB,QAA7B,EAAuC;AACnCE,oBAAY,uBAAZ;AACAF,eAAO,sBAAcE,SAAd,CAAP;AACH,KAHD,MAGO,IAAI,EAAEF,iCAAF,CAAJ,EAAkC;AACrCE,oBAAY,sBAAcF,iCAAd,CAAZ;AACA,eAAOA,iCAAP;AACAA,aAAKG,SAAL,GAAiBD,SAAjB;AACH;AACD,QAAID,UAAUA,OAAOG,YAArB,EAAmC;AAC/BH,eAAOI,KAAP,GAAe,EAAEC,MAAMN,IAAR,EAAf;AACH;AACD,WAAOA,IAAP;AACH","file":"mapToFalcorJSON.js","sourcesContent":["import f_meta from './falcorMetadataKey';\nimport { JSONProto } from '@graphistry/falcor';\n\nexport default function mapToFalcorJSON(data, falcor) {\n    let dataProto;\n    if (!data || typeof data !== 'object') {\n        dataProto = new JSONProto();\n        data = Object.create(dataProto);\n    } else if (!(data instanceof JSONProto)) {\n        dataProto = new JSONProto(data[f_meta]);\n        delete data[f_meta];\n        data.__proto__ = dataProto;\n    }\n    if (falcor && falcor._recycleJSON) {\n        falcor._seed = { json: data };\n    }\n    return data;\n}\n"]}