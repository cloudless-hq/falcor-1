{"version":3,"sources":["../../src/utils/mapToFalcorJSON.js"],"names":["mapToFalcorJSON","data","falcor","dataProto","__proto__","prototype","_recycleJSON","_seed","json"],"mappings":";;;;;;;;;;;;;;;;;;;;kBAGwBA,e;;AAHxB;;;;AACA;;;;AAEe,SAASA,eAAT,CAAyBC,IAAzB,EAA+BC,MAA/B,EAAuC;AAClD,QAAIC,kBAAJ;AACA,QAAI,CAACF,IAAD,IAAS,QAAOA,IAAP,yCAAOA,IAAP,OAAgB,QAA7B,EAAuC;AACnCE,oBAAY,wBAAZ;AACAF,eAAO,sBAAcE,SAAd,CAAP;AACH,KAHD,MAGO,IAAI,EAAEF,kCAAF,CAAJ,EAAmC;AACtCA,aAAKG,SAAL,GAAiB,mBAAWC,SAA5B;AACH;AACD,QAAIH,UAAUA,OAAOI,YAArB,EAAmC;AAC/BJ,eAAOK,KAAP,GAAe,EAAEC,MAAMP,IAAR,EAAf;AACH;AACD,WAAOA,IAAP;AACH","file":"mapToFalcorJSON.js","sourcesContent":["import f_meta from './falcorMetadataKey';\nimport { FalcorJSON } from '@graphistry/falcor';\n\nexport default function mapToFalcorJSON(data, falcor) {\n    let dataProto;\n    if (!data || typeof data !== 'object') {\n        dataProto = new FalcorJSON();\n        data = Object.create(dataProto);\n    } else if (!(data instanceof FalcorJSON)) {\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    if (falcor && falcor._recycleJSON) {\n        falcor._seed = { json: data };\n    }\n    return data;\n}\n"]}