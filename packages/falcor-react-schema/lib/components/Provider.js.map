{"version":3,"sources":["../../src/components/Provider.js"],"names":["prototype","changes","_root","forEach","name","handler","call","next","Provider","props","context","state","falcorData","undefined","falcorModel","renderFalcorErrors","renderFalcorLoading","propsSubscription","mapPropsToDistinctChanges","propsStream","subscribe","nextProps","unsubscribe","only","children","Component","displayName","propTypes","bool","element","isRequired","object","childContextTypes","provider","props$","setStateAsync","bindCallback","callback","setState","switchMap","mapPropsToChanges","mapChangeToProps","distinctUntilChanged","getModelVersion","map","pending","multicast","updates","filter","exhaustMap","update","take","repeat","model","getVersion"],"mappings":"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","file":"Provider.js","sourcesContent":["import invariant from 'invariant';\nimport { Model } from '@graphistry/falcor';\nimport React, { PropTypes, Children } from 'react';\n\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport 'rxjs/add/observable/bindCallback';\nimport 'rxjs/add/operator/let';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/take';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/repeat';\nimport 'rxjs/add/operator/multicast';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/exhaustMap';\nimport 'rxjs/add/operator/distinctUntilChanged';\n\nif (!Model.prototype.changes) {\n    Model.prototype.changes = function() {\n        const { _root } = this;\n        let { changes } = _root;\n        if (!changes) {\n            changes = _root.changes = new BehaviorSubject(this);\n            ['onChange', 'onChangesCompleted'].forEach((name) => {\n                const handler = _root[name];\n                _root[name] = function() {\n                    if (handler) {\n                        handler.call(this);\n                    }\n                    changes.next(this);\n                }\n            });\n        }\n        return changes;\n    }\n}\n\nexport default class Provider extends React.Component {\n    static displayName = 'FalcorProvider';\n    static propTypes = {\n        renderFalcorErrors: PropTypes.bool,\n        renderFalcorLoading: PropTypes.bool,\n        children: PropTypes.element.isRequired,\n        falcorModel: PropTypes.object.isRequired,\n    };\n    static childContextTypes = {\n        falcorData: PropTypes.object,\n        falcorModel: PropTypes.object,\n        renderFalcorErrors: PropTypes.bool,\n        renderFalcorLoading: PropTypes.bool\n    };\n    constructor(props, context) {\n\n        super(props, context);\n\n        this.state = {\n            falcorData: undefined,\n            falcorModel: props.falcorModel,\n            renderFalcorErrors: props.renderFalcorErrors || false,\n            renderFalcorLoading: props.renderFalcorLoading || false,\n        };\n    }\n    getChildContext() {\n        const  { falcorData, falcorModel, renderFalcorErrors, renderFalcorLoading } = this.state;\n        return { falcorData, falcorModel, renderFalcorErrors, renderFalcorLoading };\n    }\n    componentWillMount() {\n        // Subscribe to child prop changes so we know when to re-render\n        this.propsSubscription = mapPropsToDistinctChanges(\n            this, this.propsStream = new Subject()\n        ).subscribe(() => {});\n        this.propsStream.next(this.props);\n    }\n    componentWillReceiveProps(nextProps) {\n        this.propsStream.next(nextProps);\n    }\n    componentWillUnmount() {\n        // Clean-up subscription before un-mounting\n        this.propsSubscription.unsubscribe();\n        this.propsSubscription = undefined;\n        this.propsStream = undefined;\n    }\n    render() {\n        return Children.only(this.props.children);\n    }\n}\n\nfunction mapPropsToDistinctChanges(provider, props$) {\n\n    const setStateAsync = Observable.bindCallback(\n        ({ falcorModel, renderFalcorErrors = false, renderFalcorLoading = false }, callback) => {\n            return provider.setState({ falcorModel, renderFalcorErrors, renderFalcorLoading }, callback);\n        }\n    );\n\n    return props$\n        .switchMap(mapPropsToChanges, mapChangeToProps)\n        .distinctUntilChanged(null, getModelVersion)\n        .map((props) => ({ props, pending: true }))\n        .multicast(() => new ReplaySubject(1), (updates) => updates\n            .filter(({ pending }) => pending)\n            .exhaustMap(\n                (update) => setStateAsync(update.props),\n                (update) => { update.pending = false; }\n            ).take(1).repeat()\n        );\n}\n\nfunction mapPropsToChanges(props) {\n    const model = props['falcorModel'];\n    invariant(model, `The Falcor Provider requires a root falcor Model.`);\n    return model.changes();\n}\n\nfunction mapChangeToProps(props, model) {\n    return { ...props, 'falcorModel': model };\n}\n\nfunction getModelVersion(props) {\n    return props['falcorModel'].getVersion();\n}\n"]}