{"version":3,"sources":["../../src/components/withFragment.js"],"names":["withFragment","contextTypes","object","bool","fragmentDesc","fragment","mergeProps","defaultMergeProps","mapFragment","defaultMapFragment","Component","props","context","config","FragmentContainer","fragments","load","fetchEachPropUpdate","childContextTypes","displayName","state","hash","version","propsStream","propsAction","switchMap","mergeEachPropUpdate","data","model","shouldRenderLoading","propsSubscription","subscribe","nextState","setState","checkCacheAndUpdate","nextProps","nextContext","unsubscribe","undefined","hasOwnProperty","renderLoading","next","loading","currProps","currState","error","currData","nextData","style","currStyle","restCurrProps","nextStyle","restNextProps","mappedFragment","mergedProps","items","x","i","reduce","xs","tryDeref","deref","update","of","takeLast","$__hash","status","$__status","fragmentProps","componentProps"],"mappings":"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","file":"withFragment.js","sourcesContent":["import invariant from 'invariant';\nimport React, { PropTypes, Children } from 'react';\nimport hoistStatics from 'recompose/hoistStatics';\nimport shallowEqual from 'recompose/shallowEqual';\nimport wrapDisplayName from 'recompose/wrapDisplayName';\nimport fetchDataUntilSettled from '../fetchDataUntilSettled';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/switchMap';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\n\nconst contextTypes = {\n    'falcor-data': PropTypes.object,\n    'falcor-model': PropTypes.object,\n    'falcor-render-loading': PropTypes.bool\n};\n\nexport default function withFragment(fragmentDesc, ...rest) {\n\n    invariant(fragmentDesc && (\n              'function' === typeof fragmentDesc || (\n              'object'   === typeof fragmentDesc &&\n              'function' === typeof fragmentDesc.fragment)),\n`Attempted to create a Fragment container component without a fragment definition.\nFragment containers must be created with a fragment function, or an Object with a \"fragment\" function.`);\n\n    if ('object' !== typeof fragmentDesc) {\n        fragmentDesc = {\n            fragment: fragmentDesc,\n            mergeProps: rest[1] || defaultMergeProps,\n            mapFragment: rest[0] || defaultMapFragment\n        };\n    } else {\n        if (!fragmentDesc.mergeProps) {\n            fragmentDesc.mergeProps = defaultMergeProps;\n        }\n        if (!fragmentDesc.mapFragment) {\n            fragmentDesc.mapFragment = defaultMapFragment;\n        }\n    }\n\n    return hoistStatics((Component) => {\n        return class Container extends FragmentContainer {\n            static fragments = fragments;\n            static load = fetchEachPropUpdate;\n            static contextTypes = contextTypes;\n            static childContextTypes = contextTypes;\n            static fragment = fragmentDesc.fragment;\n            static displayName = wrapDisplayName(Component, 'Container');\n            constructor(props, context) {\n                super(props, context);\n                this.config = fragmentDesc;\n                this.Component = Component;\n                this.fragment = fragmentDesc.fragment;\n            }\n        };\n    });\n}\n\nclass FragmentContainer extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = { hash: '', version: 0 };\n        this.propsStream = new Subject();\n        this.propsAction = this.propsStream.switchMap(\n            fetchEachPropUpdate, mergeEachPropUpdate\n        );\n    }\n    getChildContext() {\n        const { data, model } = this.state;\n        return {\n            'falcor-data': data, 'falcor-model': model,\n            'falcor-render-loading': this.shouldRenderLoading()\n        };\n    }\n    componentWillMount() {\n        // Subscribe to child prop changes so we know when to re-render\n        this.propsSubscription = this.propsAction.subscribe((nextState) => {\n            this.setState(nextState);\n        });\n        this.checkCacheAndUpdate(this.props, this.context);\n    }\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.checkCacheAndUpdate(nextProps, nextContext);\n    }\n    componentWillUnmount() {\n        // Clean-up subscription before un-mounting\n        this.propsSubscription.unsubscribe();\n        this.propsSubscription = undefined;\n        this.config = null;\n        this.fragment = null;\n        this.Component = null;\n    }\n    shouldRenderLoading(props = this.props, context = this.context) {\n        if (props.hasOwnProperty('renderLoading')) {\n            return props.renderLoading;\n        } else if (this.config.hasOwnProperty('renderLoading')) {\n            return this.config.renderLoading;\n        }\n        return context['falcor-render-loading'] || false;\n    }\n    checkCacheAndUpdate(props, context) {\n\n        const { fragment } = this;\n\n        // if (props.hasOwnProperty('falcor-data') || props.hasOwnProperty('falcor-model')) {\n        this.propsStream.next({\n            props, fragment, loading: false,\n            data: props['falcor-data'] || context['falcor-data'],\n            model: props['falcor-model'] || context['falcor-model'],\n            renderLoading: this.shouldRenderLoading(props, context),\n        });\n        // }\n    }\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n\n        const { props: currProps = {}, state: currState = {} } = this;\n\n        if (currState.loading !== nextState.loading && (\n            this.shouldRenderLoading(this.props, this.context) ||\n            this.shouldRenderLoading(nextProps, nextContext))) {\n            return true;\n        } else if (currState.version !== nextState.version) {\n            return true;\n        } else if (currState.error !== nextState.error) {\n            return true;\n        } else if (currState.hash !== nextState.hash) {\n            return true;\n        }\n\n        const currData = currProps['falcor-data'];\n        const nextData = nextProps['falcor-data'];\n        const { style: currStyle = {}, ...restCurrProps } = currProps;\n        const { style: nextStyle = currStyle, ...restNextProps } = nextProps;\n\n        if (!shallowEqual(currData, nextData)) {\n            return true;\n        } else if (!shallowEqual(currStyle, nextStyle)) {\n            return true;\n        } else if (!shallowEqual(restCurrProps, restNextProps)) {\n            return true;\n        }\n\n        return false;\n    }\n    render() {\n\n        const { props, state, config, Component } = this;\n\n        if (!Component) {\n            return null;\n        }\n\n        const { data, error, loading } = state;\n        const { mergeProps, mapFragment } = config;\n        const mappedFragment = data ? mapFragment(data, props) : {};\n        const mergedProps = mergeProps(mappedFragment, props);\n\n        if (error) {\n            mergedProps.error = error;\n        }\n\n        if (loading && this.shouldRenderLoading(props) === true) {\n            mergedProps.loading = loading;\n        }\n\n        return <Component { ...mergedProps }/>;\n    }\n}\n\nfunction fragments(items = []) {\n    if (!items ||\n        'object' !== typeof items ||\n        !items.hasOwnProperty('length')) {\n        return `{ length }`;\n    }\n    return `{ length ${Array\n        .from(items, (x, i) => x)\n        .reduce((xs, x, i) =>`${xs}, ${\n            i}: ${this.fragment(x)}`, '')\n    }}`;\n}\n\nfunction tryDeref({ data, model }) {\n    return !data || !model ?\n        model : model.deref(data);\n}\n\nfunction fetchEachPropUpdate(update) {\n    if (!(update.model = tryDeref(update))) {\n        return Observable.of(update);\n    } else if (update.renderLoading === true) {\n        return fetchDataUntilSettled(update);\n    }\n    return fetchDataUntilSettled(update).takeLast(1);\n}\n\nfunction mergeEachPropUpdate(\n    { props, model },\n    { data, error, version, loading }\n) {\n    const hash = data && data.$__hash;\n    const status = data && data.$__status;\n    loading = loading || status === 'pending';\n    return { hash, data, props, model, error, loading, version };\n}\n\nfunction defaultMapFragment(fragmentProps) {\n    return fragmentProps;\n}\n\nfunction defaultMergeProps(fragmentProps, componentProps) {\n    return { ...componentProps, ...fragmentProps };\n}\n"]}