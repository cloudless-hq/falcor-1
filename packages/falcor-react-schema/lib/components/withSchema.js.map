{"version":3,"sources":["../../src/components/withSchema.js"],"names":["withSchema","FalcorRouteHandlers","schemaDesc","schema","get","set","Component","Container","SchemaContainer","displayName","props","context","constructor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAOwBA,U;;AAPxB;;;;AACA;;;;AACA;;IAAYC,mB;;AACZ;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEe,SAASD,UAAT,CAAoBE,UAApB,EAAgC;;AAE3C,6BAAUA,eACA,eAAe,OAAOA,UAAtB,IACA,qBAAsBA,UAAtB,yCAAsBA,UAAtB,MACA,eAAe,OAAOA,WAAWC,MAHjC,CAAV;;AAOA,QAAI,OAAOD,UAAP,KAAsB,UAA1B,EAAsC;AAClCA,qBAAa,EAAEC,QAAQD,UAAV,EAAb;AACH;;AAEDA,eAAWE,GAAX,GAAiBF,WAAWE,GAAX,IAAkBH,oBAAoBG,GAAvD;AACAF,eAAWG,GAAX,GAAiBH,WAAWG,GAAX,IAAkBJ,oBAAoBI,GAAvD;;AAEA,WAAO,4BAAa,UAACC,SAAD,EAAe;AAAA,YACzBC,SADyB;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,UACPC,eADO;;AACzBD,iBADyB,CAEpBD,SAFoB,GAERA,SAFQ;AAG9B;AACDC,kBAAUJ,MAAV,GAAmB,oCAAqBD,UAArB,EACnBK,UAAUE,WAAV,GAAwB,+BAAgBH,SAAhB,EAA2B,QAA3B,CADL,CAAnB;AAEA,eAAOC,SAAP;AACH,KAPM,CAAP;AAQH;;IAEKC,e;;;AACF,6BAAYE,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,+IAClBD,KADkB,EACXC,OADW;;AAExB,eAAKL,SAAL,GAAiB,OAAKM,WAAL,CAAiBN,SAAlC;AAFwB;AAG3B;;;;+CACsB;AACnB,iBAAKA,SAAL,GAAiB,IAAjB;AACH;;;iCACQ;AAAA,gBACGA,SADH,GACiB,IADjB,CACGA,SADH;;AAEL,mBAAO,CAACA,SAAD,GAAa,IAAb,GAAoB,8BAAC,SAAD,EAAe,KAAKI,KAApB,CAA3B;AACH;;;;EAXyB,gBAAMJ,S","file":"withSchema.js","sourcesContent":["import React from 'react';\nimport invariant from 'invariant';\nimport * as FalcorRouteHandlers from '../falcor';\nimport hoistStatics from 'recompose/hoistStatics';\nimport wrapDisplayName from 'recompose/wrapDisplayName';\nimport wrapSchemaDescriptor from '../wrapSchemaDescriptor';\n\nexport default function withSchema(schemaDesc) {\n\n    invariant(schemaDesc && (\n              'function' === typeof schemaDesc || (\n              'object'   === typeof schemaDesc &&\n              'function' === typeof schemaDesc.schema)),\n`Attempted to create a Schema container component without a schema definition.\nSchema containers must be created with a schema function, or an Object with a \"schema\" function.`);\n\n    if (typeof schemaDesc === 'function') {\n        schemaDesc = { schema: schemaDesc };\n    }\n\n    schemaDesc.get = schemaDesc.get || FalcorRouteHandlers.get;\n    schemaDesc.set = schemaDesc.set || FalcorRouteHandlers.set;\n\n    return hoistStatics((Component) => {\n        class Container extends SchemaContainer {\n            static Component = Component;\n        };\n        Container.schema = wrapSchemaDescriptor(schemaDesc,\n        Container.displayName = wrapDisplayName(Component, 'Schema'));\n        return Container;\n    });\n}\n\nclass SchemaContainer extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        this.Component = this.constructor.Component;\n    }\n    componentWillUnmount() {\n        this.Component = null;\n    }\n    render() {\n        const { Component } = this;\n        return !Component ? null : <Component {...this.props}/>;\n    }\n}\n"]}