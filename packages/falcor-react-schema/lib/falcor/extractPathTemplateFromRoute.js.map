{"version":3,"sources":["../../src/falcor/extractPathTemplateFromRoute.js"],"names":["extractPathTemplateFromRoute","route","idMatcher","defaultIdMatcher","listMatcher","defaultListMatcher","mapIdToName","defaultMapIdToName","componentIndex","pathTemplate","componentLen","length","list","name","ids","push","listIndex","idsIndex","token","named","indexOf","slice"],"mappings":";;;;;kBAAwBA,4B;AAAT,SAASA,4BAAT,CAAsCC,KAAtC,EAIP;AAAA,mFAAJ,EAAI;AAAA,8BAHJC,SAGI;AAAA,QAHJA,SAGI,kCAHQC,gBAGR;AAAA,gCAFJC,WAEI;AAAA,QAFJA,WAEI,oCAFUC,kBAEV;AAAA,gCADJC,WACI;AAAA,QADJA,WACI,oCADUC,kBACV;;AAEJ,QAAIC,iBAAiB,CAAC,CAAtB;AACA,QAAMC,eAAe,EAArB;AACA,QAAMC,eAAeT,MAAMU,MAA3B;;AAEA,WAAO,CAACH,kBAAkB,CAAnB,IAAwBE,YAA/B,EAA6C;AACzC,YAAIN,YAAYH,MAAMO,cAAN,CAAZ,KAAsCN,UAAUD,MAAMO,iBAAiB,CAAvB,CAAV,CAA1C,EAAgF;AAC5E,gBAAMI,OAAOX,MAAMO,cAAN,CAAb;AACA,gBAAMK,OAAOP,YAAYM,IAAZ,CAAb;AACA,gBAAME,MAAMb,MAAMO,iBAAiB,CAAvB,EAA0BK,IAAtC;AACAJ,yBAAaM,IAAb,CAAkB;AACdH,0BADc,EACRE,QADQ,EACHD,UADG;AAEdG,2BAAWR,cAFG;AAGdS,0BAAUT,iBAAiB;AAHb,aAAlB;AAKH;AACJ;;AAED,WAAOC,YAAP;AACH;;AAED,SAASN,gBAAT,CAA0Be,KAA1B,EAAiC;AAC7B,WAAOA,MAAMC,KAAN,IAAe,CAACD,MAAML,IAAN,CAAWO,OAAX,CAAmB,KAAnB,CAAvB;AACH;;AAED,SAASf,kBAAT,CAA4Ba,KAA5B,EAAmC;AAC/B,WAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,CAACA,MAAME,OAAN,CAAc,OAAd,CAArC;AACH;;AAED,SAASb,kBAAT,CAA4BW,KAA5B,EAAmC;AAC/B,WAAOA,MAAMG,KAAN,CAAY,CAAZ,EAAeH,MAAME,OAAN,CAAc,OAAd,CAAf,CAAP;AACH","file":"extractPathTemplateFromRoute.js","sourcesContent":["export default function extractPathTemplateFromRoute(route, {\n    idMatcher = defaultIdMatcher,\n    listMatcher = defaultListMatcher,\n    mapIdToName = defaultMapIdToName\n} = {}) {\n\n    let componentIndex = -2;\n    const pathTemplate = [];\n    const componentLen = route.length;\n\n    while ((componentIndex += 2) < componentLen) {\n        if (listMatcher(route[componentIndex]) && idMatcher(route[componentIndex + 1])) {\n            const list = route[componentIndex];\n            const name = mapIdToName(list);\n            const ids = route[componentIndex + 1].name;\n            pathTemplate.push({\n                list, ids, name,\n                listIndex: componentIndex,\n                idsIndex: componentIndex + 1\n            });\n        }\n    }\n\n    return pathTemplate;\n}\n\nfunction defaultIdMatcher(token) {\n    return token.named && ~token.name.indexOf('Ids');\n}\n\nfunction defaultListMatcher(token) {\n    return typeof token === 'string' && ~token.indexOf('sById');\n}\n\nfunction defaultMapIdToName(token) {\n    return token.slice(0, token.indexOf('sById'));\n}\n"]}