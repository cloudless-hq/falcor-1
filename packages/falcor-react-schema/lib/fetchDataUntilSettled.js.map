{"version":3,"sources":["../src/fetchDataUntilSettled.js"],"names":["fetchDataUntilSettled","memoizedQuerySyntax","data","props","model","fragment","renderLoading","memo","query","loading","version","getVersion","mapNext","handleNext","catchError","handleError","of","expand","_fetchDataUntilSettled","empty","ast","error","console","from","get","progressively","map","catch","json"],"mappings":"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","file":"fetchDataUntilSettled.js","sourcesContent":["import { errorMessage } from 'pegjs-util';\nimport memoizeQueryies from './memoizeQueryies';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/expand';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/observable/empty';\n\nconst memoizedQuerySyntax = memoizeQueryies(100);\n\nexport default function fetchDataUntilSettled({\n    data, props, model, fragment, renderLoading\n}) {\n\n    const memo = {\n        query: null, loading: true,\n        version: model.getVersion(),\n        data, props, model, fragment,\n    };\n    memo.mapNext = handleNext(memo, model);\n    memo.catchError = handleError(memo, model);\n\n    return Observable.of(memo).expand(_fetchDataUntilSettled);\n}\n\nfunction _fetchDataUntilSettled(memo) {\n    if (memo.loading === false) {\n        return Observable.empty();\n    }\n    const { query, version, model, fragment } = memo;\n    if ((query !== (memo.query = fragment(memo.data || {}, memo.props || {}))) /*||\n        (version !== (memo.version = model.getVersion()))*/) {\n        const { ast, error } = memoizedQuerySyntax(memo.query);\n        if (error) {\n            if (typeof console !== 'undefined' && typeof console.error === 'function') {\n                console.error(errorMessage(error));\n                console.error(`Error parsing query: ${memo.query}`);\n            }\n            memo.error = error;\n        } else {\n            return Observable\n                .from(!memo.renderLoading ?\n                       model.get(ast) :\n                       model.get(ast).progressively())\n                .map(memo.mapNext)\n                .catch(memo.catchError);\n        }\n    }\n    memo.loading = false;\n    memo.version = model.getVersion();\n    return Observable.of(memo);\n}\n\nfunction handleNext(memo, model) {\n    return function mapNext({ json: data }) {\n        memo.data = data;\n        memo.loading = true;\n        memo.version = model.getVersion();\n        return memo;\n    }\n}\n\nfunction handleError(memo, model) {\n    return function catchError(error) {\n        memo.error = error;\n        memo.loading = false;\n        memo.version = model.getVersion();\n        return Observable.of(memo);\n    };\n}\n"]}