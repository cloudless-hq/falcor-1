{"version":3,"sources":["../src/fetchDataUntilSettled.js"],"names":["fetchDataUntilSettled","memoizedQuerySyntax","data","props","model","version","fragment","memo","query","loading","mapNext","handleNext","catchError","handleError","of","expand","_fetchDataUntilSettled","empty","ast","error","console","getVersion","from","get","progressively","map","catch","json"],"mappings":";;;;;kBAYwBA,qB;;AAZxB;;AACA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMC,sBAAsB,+BAAgB,GAAhB,CAA5B;;AAEe,SAASD,qBAAT,OAEZ;AAAA,QADCE,IACD,QADCA,IACD;AAAA,QADOC,KACP,QADOA,KACP;AAAA,QADcC,KACd,QADcA,KACd;AAAA,QADqBC,OACrB,QADqBA,OACrB;AAAA,QAD8BC,QAC9B,QAD8BA,QAC9B;;;AAEC,QAAMC,OAAO;AACTC,eAAO,IADE,EACIC,SAAS,IADb;AAETP,kBAFS,EAEHC,YAFG,EAEIC,YAFJ,EAEWC,gBAFX,EAEoBC;AAFpB,KAAb;AAIAC,SAAKG,OAAL,GAAeC,WAAWJ,IAAX,EAAiBH,KAAjB,CAAf;AACAG,SAAKK,UAAL,GAAkBC,YAAYN,IAAZ,EAAkBH,KAAlB,CAAlB;;AAEA,WAAO,uBAAWU,EAAX,CAAcP,IAAd,EAAoBQ,MAApB,CAA2BC,sBAA3B,CAAP;AACH;;AAED,SAASA,sBAAT,CAAgCT,IAAhC,EAAsC;AAClC,QAAIA,KAAKE,OAAL,KAAiB,KAArB,EAA4B;AACxB,eAAO,uBAAWQ,KAAX,EAAP;AACH;AAHiC,QAI1BT,KAJ0B,GAICD,IAJD,CAI1BC,KAJ0B;AAAA,QAInBJ,KAJmB,GAICG,IAJD,CAInBH,KAJmB;AAAA,QAIZE,QAJY,GAICC,IAJD,CAIZD,QAJY;;AAKlC,QAAIE,WAAWD,KAAKC,KAAL,GAAaF,SAASC,KAAKL,IAAL,IAAa,EAAtB,EAA0BK,KAAKJ,KAAL,IAAc,EAAxC,CAAxB,CAAJ,EAA0E;AAAA,mCAC/CF,oBAAoBM,KAAKC,KAAzB,CAD+C;AAAA,YAC9DU,GAD8D,wBAC9DA,GAD8D;AAAA,YACzDC,KADyD,wBACzDA,KADyD;;AAEtE,YAAIA,KAAJ,EAAW;AACP,gBAAI,OAAOC,OAAP,KAAmB,WAAnB,IAAkC,OAAOA,QAAQD,KAAf,KAAyB,UAA/D,EAA2E;AACvEC,wBAAQD,KAAR,CAAc,6BAAaA,KAAb,CAAd;AACAC,wBAAQD,KAAR,2BAAsCZ,KAAKC,KAA3C;AACH;AACDD,iBAAKY,KAAL,GAAaA,KAAb;AACAZ,iBAAKF,OAAL,GAAeD,MAAMiB,UAAN,EAAf;AACH,SAPD,MAOO;AACH,mBAAO,uBACFC,IADE,CACGlB,MAAMmB,GAAN,CAAUL,GAAV,EAAeM,aAAf,EADH,EAEFC,GAFE,CAEElB,KAAKG,OAFP,EAEgBgB,KAFhB,CAEsBnB,KAAKK,UAF3B,CAAP;AAGH;AACJ;AACDL,SAAKE,OAAL,GAAe,KAAf;AACA,WAAO,uBAAWK,EAAX,CAAcP,IAAd,CAAP;AACH;;AAED,SAASI,UAAT,CAAoBJ,IAApB,EAA0BH,KAA1B,EAAiC;AAC7B,WAAO,SAASM,OAAT,QAAiC;AAAA,YAARR,IAAQ,SAAdyB,IAAc;;AACpCpB,aAAKL,IAAL,GAAYA,IAAZ;AACAK,aAAKE,OAAL,GAAe,IAAf;AACAF,aAAKF,OAAL,GAAeD,MAAMiB,UAAN,EAAf;AACA,eAAOd,IAAP;AACH,KALD;AAMH;;AAED,SAASM,WAAT,CAAqBN,IAArB,EAA2BH,KAA3B,EAAkC;AAC9B,WAAO,SAASQ,UAAT,CAAoBO,KAApB,EAA2B;AAC9BZ,aAAKY,KAAL,GAAaA,KAAb;AACAZ,aAAKE,OAAL,GAAe,KAAf;AACAF,aAAKF,OAAL,GAAeD,MAAMiB,UAAN,EAAf;AACA,eAAO,uBAAWP,EAAX,CAAcP,IAAd,CAAP;AACH,KALD;AAMH","file":"fetchDataUntilSettled.js","sourcesContent":["import { errorMessage } from 'pegjs-util';\nimport memoizeQueryies from './memoizeQueryies';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/expand';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/observable/empty';\n\nconst memoizedQuerySyntax = memoizeQueryies(100);\n\nexport default function fetchDataUntilSettled({\n    data, props, model, version, fragment\n}) {\n\n    const memo = {\n        query: null, loading: true,\n        data, props, model, version, fragment,\n    };\n    memo.mapNext = handleNext(memo, model);\n    memo.catchError = handleError(memo, model);\n\n    return Observable.of(memo).expand(_fetchDataUntilSettled);\n}\n\nfunction _fetchDataUntilSettled(memo) {\n    if (memo.loading === false) {\n        return Observable.empty();\n    }\n    const { query, model, fragment } = memo;\n    if (query !== (memo.query = fragment(memo.data || {}, memo.props || {}))) {\n        const { ast, error } = memoizedQuerySyntax(memo.query);\n        if (error) {\n            if (typeof console !== 'undefined' && typeof console.error === 'function') {\n                console.error(errorMessage(error));\n                console.error(`Error parsing query: ${memo.query}`);\n            }\n            memo.error = error;\n            memo.version = model.getVersion();\n        } else {\n            return Observable\n                .from(model.get(ast).progressively())\n                .map(memo.mapNext).catch(memo.catchError);\n        }\n    }\n    memo.loading = false;\n    return Observable.of(memo);\n}\n\nfunction handleNext(memo, model) {\n    return function mapNext({ json: data }) {\n        memo.data = data;\n        memo.loading = true;\n        memo.version = model.getVersion();\n        return memo;\n    }\n}\n\nfunction handleError(memo, model) {\n    return function catchError(error) {\n        memo.error = error;\n        memo.loading = false;\n        memo.version = model.getVersion();\n        return Observable.of(memo);\n    };\n}\n"]}