{"version":3,"sources":["../src/wrapSchemaDescriptor.js"],"names":["wrapSchemaDescriptor","QL","routes","schema","get","set","displayName","createSchema","context","createRoutes","route","bind","toArray"],"mappings":";;;;;kBAKwBA,oB;;AALxB;;;;AACA;;;;;;IAEQC,E,GAAO,4BAAkBC,M,CAAzBD,E;AAEO,SAASD,oBAAT,OAA4E;AAAA,QAA5CG,MAA4C,QAA5CA,MAA4C;AAAA,QAApCC,GAAoC,QAApCA,GAAoC;AAAA,QAA/BC,GAA+B,QAA/BA,GAA+B;AAAA,QAAxBC,WAAwB,uEAAV,QAAU;;AACvF,WAAO,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAClC,iBAASC,YAAT,CAAsBC,KAAtB,EAA6B;;AAEzB,gBAAIR,SAASC,OAAOF,EAAP,EAAW;AACpBG,qBAAKA,IAAIO,IAAJ,CAAS,IAAT,EAAeD,KAAf,EAAsBJ,WAAtB,CADe;AAEpBD,qBAAKA,IAAIM,IAAJ,CAAS,IAAT,EAAeD,KAAf,EAAsBJ,WAAtB;AAFe,aAAX,EAGVE,OAHU,CAAb;;AAKA,gBAAI,OAAON,MAAP,KAAkB,QAAtB,EAAgC;AAC5BA,yBAASD,GAAGC,MAAH,CAAT;AACH;;AAED,mBAAOA,MAAP;AACH;AACDO,qBAAaG,OAAb,GAAuB,6BAAmBD,IAAnB,CAAwB,IAAxB,EAA8BF,YAA9B,CAAvB;AACA,eAAOA,YAAP;AACH,KAhBD;AAiBH","file":"wrapSchemaDescriptor.js","sourcesContent":["import FalcorQuerySyntax from '@graphistry/falcor-query-syntax';\nimport flatBufferToRoutes from '@graphistry/falcor-path-utils/lib/flatBufferToRoutes';\n\nconst { QL } = FalcorQuerySyntax.routes;\n\nexport default function wrapSchemaDescriptor({ schema, get, set }, displayName = 'Schema') {\n    return function createSchema(context) {\n        function createRoutes(route) {\n\n            let routes = schema(QL, {\n                get: get.bind(null, route, displayName),\n                set: set.bind(null, route, displayName)\n            }, context);\n\n            if (typeof routes === 'string') {\n                routes = QL(routes);\n            }\n\n            return routes;\n        }\n        createRoutes.toArray = flatBufferToRoutes.bind(null, createRoutes);\n        return createRoutes;\n    }\n}\n"]}