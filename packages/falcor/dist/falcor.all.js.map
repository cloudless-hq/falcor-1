{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 03b1c1453a2652d46ad7","webpack:///./lib/cache/isExpired.js","webpack:///./lib/cache/expireNode.js","webpack:///./lib/cache/get/json/FalcorJSON.js","webpack:///./lib/errors/NullInPathError.js","webpack:///./lib/errors/createErrorClass.js","webpack:///./lib/support/isObject.js","webpack:///.-path-utils/lib/support/materializedAtom.js","webpack:///./lib/cache/clone.js","webpack:///./lib/cache/createHardlink.js","webpack:///./lib/support/getSize.js","webpack:///./lib/cache/getCachePosition.js","webpack:///./lib/cache/updateNodeAncestors.js","webpack:///./lib/errors/InvalidKeySetError.js","webpack:///./lib/lru/promote.js","webpack:///./lib/request/Subscriber.js","webpack:///./lib/request/Subscription.js","webpack:///./lib/cache/get/onValueType.js","webpack:///./lib/cache/getBoundCacheNode.js","webpack:///./lib/cache/set/setJSONGraphs.js","webpack:///./lib/cache/set/setPathMaps.js","webpack:///./lib/support/isInternalKey.js","webpack:///.-path-utils/lib/flatBufferToPaths.js","webpack:///.-path-utils/lib/getHashCode.js","webpack:///.-path-utils/lib/iterateKeySet.js","webpack:///./lib/cache/get/json/index.js","webpack:///./lib/cache/get/jsonGraph/index.js","webpack:///./lib/cache/get/jsonGraph/inlineValue.js","webpack:///./lib/cache/get/onMissing.js","webpack:///./lib/cache/invalidate/invalidatePathSets.js","webpack:///./lib/cache/removeNodeAndDescendants.js","webpack:///./lib/cache/set/setPathValues.js","webpack:///./lib/cache/updateBackReferenceVersions.js","webpack:///./lib/internal/isInternal.js","webpack:///./lib/support/getTimestamp.js","webpack:///./lib/values/expires-now.js","webpack:///(webpack)/buildin/global.js","webpack:///.-path-utils/lib/collapse.js","webpack:///.-path-utils/lib/toCollapseMap.js","webpack:///.-path-utils/lib/toCollapseTrees.js","webpack:///.-path-utils/lib/toPaths.js","webpack:///./lib/cache/get/json/getJSON.js","webpack:///./lib/cache/get/json/getReferenceTarget.js","webpack:///./lib/cache/get/json/onValue.js","webpack:///./lib/cache/get/jsonGraph/getJSONGraph.js","webpack:///./lib/cache/get/onMaterialize.js","webpack:///./lib/cache/groupCacheArguments.js","webpack:///./lib/cache/insertNode.js","webpack:///./lib/cache/invalidate/invalidatePathMaps.js","webpack:///./lib/cache/mergeValueOrInsertBranch.js","webpack:///./lib/cache/reconstructPath.js","webpack:///./lib/cache/replaceNode.js","webpack:///./lib/cache/wrapNode.js","webpack:///./lib/errors/CircularReferenceError.js","webpack:///./lib/errors/InvalidSourceError.js","webpack:///./lib/lru/splice.js","webpack:///./lib/request/Source.js","webpack:///./lib/schedulers/ImmediateScheduler.js","webpack:///./lib/support/isJSONEnvelope.js","webpack:///./lib/support/isJSONGraphEnvelope.js","webpack:///./lib/support/now.js","webpack:///./lib/values/expires-never.js","webpack:///./lib/index.js","webpack:///.-path-utils/lib/computeFlatBufferHash.js","webpack:///.-path-utils/lib/hasIntersection.js","webpack:///.-path-utils/lib/toFlatBuffer.js","webpack:///.-path-utils/lib/toTree.js","webpack:///./lib/Model.js","webpack:///./lib/ModelDataSourceAdapter.js","webpack:///./lib/ModelRoot.js","webpack:///./lib/cache/call/index.js","webpack:///./lib/cache/get/index.js","webpack:///./lib/cache/get/json/onError.js","webpack:///./lib/cache/get/json/walkFlatBuffer.js","webpack:///./lib/cache/get/json/walkPath.js","webpack:///./lib/cache/get/jsonGraph/getReferenceTarget.js","webpack:///./lib/cache/get/jsonGraph/onValue.js","webpack:///./lib/cache/get/jsonGraph/walkPath.js","webpack:///./lib/cache/get/onMaterializeFlatBuffer.js","webpack:///./lib/cache/getCache.js","webpack:///./lib/cache/getVersion.js","webpack:///./lib/cache/invalidate/index.js","webpack:///./lib/cache/mergeJSONGraphNode.js","webpack:///./lib/cache/set/index.js","webpack:///./lib/cache/transferBackReferences.js","webpack:///./lib/cache/unlinkBackReferences.js","webpack:///./lib/cache/unlinkForwardReference.js","webpack:///./lib/deref/hasValidParentReference.js","webpack:///./lib/deref/index.js","webpack:///./lib/errors/BoundJSONGraphModelError.js","webpack:///./lib/errors/InvalidDerefInputError.js","webpack:///./lib/errors/InvalidModelError.js","webpack:///./lib/errors/MaxRetryExceededError.js","webpack:///./lib/internal/f_.js","webpack:///./lib/lru/collect.js","webpack:///./lib/request/Call.js","webpack:///./lib/request/Queue.js","webpack:///./lib/request/Request.js","webpack:///./lib/request/Subject.js","webpack:///./lib/schedulers/TimeoutScheduler.js","webpack:///./lib/support/clone.js","webpack:///./lib/support/getExpires.js","webpack:///./lib/support/getType.js","webpack:///./lib/support/isPathValue.js","webpack:///./~/symbol-observable/index.js","webpack:///./~/symbol-observable/lib/index.js","webpack:///./~/symbol-observable/lib/ponyfill.js","webpack:///(webpack)/buildin/module.js"],"names":["now","require","$now","$never","module","exports","isExpired","node","expireImmediate","exp","$expires","undefined","splice","expireNode","expired","lru","push","FalcorJSON","f_meta","protoBlacklist","length","toString","constructor","toLocaleString","protoDescriptors","toJSON","enumerable","value","toProps","$__hash","get","$__path","$__status","$__version","Object","defineProperties","prototype","getOwnPropertyNames","Array","reduce","descriptors","name","hasOwnProperty","fn","bindArrayMethod","writable","Function","isArray","typeofObject","typeofString","getInst","inst","typeofInst","argsLen","arguments","global","serialize","apply","includeMetadata","includeStatus","JSON","stringify","call","f_meta_inst","f_meta_json","version","json","serializer","createWithProto","count","total","keys","key","xs","ys","__proto__","$code","status","abs_path","deref_to","deref_from","createErrorClass","MESSAGE","message","init","E","Error","captureStackTrace","stack","create","is","x","isObject","$type","isInternal","clone","index","createHardlink","from","to","backRefs","f_ref","getSize","$size","getCachePosition","cache","path","type","depth","maxDepth","removeNodeAndDescendants","updateBackReferenceVersions","updateNodeAncestors","offset","curr","next","keysOrRanges","mesage","EXPIRES_NEVER","lruPromote","root","object","head","prev","Subscription","Subscriber","destination","parent","onCompleted","error","onError","onNext","complete","dest","signaled","dispose","unsubscribe","subscriptions","add","subscription","remove","indexOf","pop","onValueType","seed","results","requestedPath","requestedLength","optimizedPath","optimizedLength","fromReference","modelRoot","branchSelector","boxValues","materialized","reportMissing","treatErrorsAsValues","onValue","onMissing","onMaterialize","reportMaterialized","hasValue","getBoundCacheNode","model","_path","_node","_root","arr","mergeJSONGraphNode","NullInPathError","iterateKeySet","setJSONGraphs","jsonGraphEnvelopes","errorSelector","comparator","requestedPaths","optimizedPaths","jsonGraphEnvelopeIndex","jsonGraphEnvelopeCount","jsonGraphEnvelope","paths","jsonGraph","pathIndex","pathCount","setJSONGraphPathSet","messageRoot","messageParent","note","branch","keySet","optimizedIndex","setNode","nextNode","nextParent","nextOptimizedPath","slice","done","setReference","reference","container","isInternalKey","mergeValueOrInsertBranch","setPathMaps","pathMapEnvelopes","bound","pathMapIndex","pathMapCount","pathMapEnvelope","setPathMap","pathMap","getKeys","keyIndex","keyCount","child","itr","flatBufferToPaths","leaf","keysLen","keysIndex","len","keyset","concat","getHashCode","str","hash","i","charCodeAt","initializeNote","nextValue","loaded","rangeOffset","arrayOffset","idx","el","initializeRange","empty","memo","inlineJSONGraphValue","restPathIndex","restPathCount","restPath","isEmptyKeySet","mPath","lastKeyIsNull","isRequestedPath","missDepth","missTotal","missingPath","missingPaths","Number","requested","missing","rangeEnd","invalidatePathSets","invalidatePathSet","invalidateNode","invalidateReference","lruSplice","unlinkBackReferences","unlinkForwardReference","key2","setPathValues","pathValues","pathValueIndex","pathValueCount","pathValue","setPathSet","nodeArg","ref","n","f_","regexp","RegExp","test","bind","getTimestamp","$timestamp","toPaths","toCollapseMap","toCollapseTrees","collapse","collapseMap","$keys","acc","toTree","collapseTrees","collapseKey","typeOfObject","typeOfString","typeOfNumber","MAX_SAFE_INTEGER","MAX_SAFE_INTEGER_DIGITS","MIN_SAFE_INTEGER_DIGITS","abs","Math","safeNumberRegEx","materializedAtom","lengths","pathmap","allPaths","allPathsLength","isSafeNumber","collapsePathMap","parseInt","sets","pathsIndex","pathsCount","collapsePathSetIndexes","subs","code","codes","codesIndex","codesCount","pathsets","pathsetsCount","subPath","subCode","subKeys","subKeysIndex","subKeysCount","subSets","subSetsIndex","subSetsCount","pathset","pathsetIndex","pathsetCount","firstSubKey","pathsetClone","getSortedKeys","keysetIndex","keysetCount","collapseIndex","isSparseRange","sort","sortListAscending","a","b","map","val","num","_isSafeNumber","walkPathAndBuildOutput","walkFlatBufferAndBuildOutput","InvalidModelError","toFlatBuffer","computeFlatBufferHash","getJSON","progressive","referenceContainer","boundPath","_referenceContainer","isFlatBuffer","data","_boxed","recycleJSON","_recycleJSON","hasDataSource","Boolean","_source","_materialized","_treatErrorsAsValues","allowFromWhenceYouCame","_allowFromWhenceYouCame","args","relative","boundRequested","promote","CircularReferenceError","getReferenceTarget","context","copy","onJSONValue","$error","BoundJSONGraphModelError","getJSONGraph","typeofNumber","InvalidKeySetError","refTarget","nextKey","keyIsRange","nextDepth","keysetLength","iteratingKeyset","isPathValue","isJSONEnvelope","isJSONGraphEnvelope","groupCacheArguments","groups","argIndex","argCount","group","groupType","arg","argType","inputType","insertNode","invalidatePathMaps","_comparator","invalidatePathMap","getType","wrapNode","replaceNode","reconstructPath","cType","isDistinct","mType","sizeOffset","currentPath","transferBackReferences","replacement","getExpires","expiresNow","atomSize","typeArg","size","modelCreated","expires","referencePath","$$observable","default","Source","subscribe","source","operator","y","then","_promise","resolve","reject","values","rejected","errors","ImmediateScheduler","schedule","action","envelope","jsong","Date","Model","falcor","opts","keysLength","hasIntersection","tree","intersects","nullBuffer","pathToFlatBuffer","keysMap","pathToTree","Call","ModelRoot","ModelDataSourceAdapter","TimeoutScheduler","setCache","getCache","options","_scheduler","scheduler","_seed","boxed","_toJSON","set","preload","invalidate","deref","_hasValidParentReference","getValue","lift","subscriber","setValue","modelSetCache","cacheOrJSONGraphEnvelope","rootOnChangeHandler","onChange","_getCache","env","getVersion","_getVersion","_clone","cloneModel","batch","schedulerOrDelay","round","scheudle","unbatch","asDataSource","_materialize","materialize","_dematerialize","dematerialize","unboxValues","withoutDataSource","inspect","join","getPath","_fromWhenceYouCame","fromWhenceYouCame","allow","_optimizePath","_getPathValuesAsPathMap","_getPathValuesAsJSONG","_setPathValues","_setPathMaps","_setJSONGs","_setCache","_invalidatePathValues","_invalidatePathMaps","_model","pathSets","_toJSONG","jsongResponse","suffixes","functionTypeof","Requests","o","syncRefCount","maxRetryCount","topLevelModel","requests","collectRatio","maxSize","pow","onChangesCompleted","defaultCompare","_args","thisPaths","fragments","errorPath","errorValue","originalOnMissing","f_old_keys","f_new_keys","f_code","nodeAbsPath","jsonAbsPath","nextJSON","nextReferenceContainer","nextOptimizedLength","optimizedLengthNext","refContainerAbsPath","refContainerRefPath","arrayEqual","nextPath","nextPathKey","hasMissingPath","tmp","rPath","forEach","inlineValue","onJSONGraphValue","$ref","isLeaf","onMaterializeFlatBuffer","out","_copyCache","cloneBoxedValue","boxedValue","clonedValue","l","fromKey","filter","cacheNext","outNext","isUserCreatedcacheNext","invalidatePathValues","invalidateArgumentGroups","rootChangeHandler","changed","groupIndex","groupCount","groupedArgs","pluckPaths","operation","cIsObject","mIsObject","cTimestamp","mTimestamp","optimized","setGroupsIntoCache","arrayFlatMap","array","selector","array2","array3","j","k","fromNode","destNode","fromNodeRefsLength","destNodeRefsLength","hasValidParentReference","CONTAINER_DOES_NOT_EXIST","InvalidDerefInputError","cacheRoot","absolutePath","currentRefPath","originalRefPath","originalAbsPath","cacheNode","validContainer","shortedPath","absolute","printPaths","String","fromCharCode","collect","totalArg","max","ratioArg","ratio","targetSize","lruCollect","InvalidSourceError","MaxRetryExceededError","_subscribe","CallOperator","retry","progresive","progressively","CallSubscriber","retryCount","completed","operations","started","seedIsImmutable","tryOnError","mergeInto","tryOnNext","errored","request","shouldCollectCache","rootOnChangesCompletedHandler","e","self","err","destValue","nodeValue","Request","Queue","isolateSet","isolateCall","batchAndDedupeGet","queue","connect","callArgs","Dedupe","dataSource","requestsIndex","requestsCount","Subject","invalidatePaths","active","responded","disposable","invalidated","observers","observer","filterPathsBoundTo","errorPathValues","scheduledDisposable","flush","requestedComplements","optimizedComplements","requestedIntersection","optimizedIntersection","findIntersections","obs","complementIndex","intersectionIndex","optTotal","reqTotal","pathLen","subTree","boundLength","filtered","filteredIndex","outer","delay","TimerDisposable","id","disposed","setTimeout","clearTimeout","anyType"],"mappings":"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","file":"falcor.all.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"falcor\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"falcor\"] = factory();\n\telse\n\t\troot[\"falcor\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 107);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 03b1c1453a2652d46ad7","var now = require('../support/now');\nvar $now = require('../values/expires-now');\nvar $never = require('../values/expires-never');\n\nmodule.exports = function isExpired(node, expireImmediate) {\n    var exp = node.$expires;\n    if (exp === undefined || exp === null || exp === $never) {\n        return false;\n    } else if (exp === $now) {\n        return expireImmediate;\n    }\n    return exp < now();\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/isExpired.js","var splice = require('./../lru/splice');\n\nmodule.exports = function expireNode(node, expired, lru) {\n    if (!node[f_invalidated]) {\n        node[f_invalidated] = true;\n        expired.push(node);\n        splice(lru, node);\n    }\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/expireNode.js","function FalcorJSON(f_meta) {\n    if (!f_meta) {\n        this[f_meta_data] = {};\n    } else if (!(this[f_meta_data] = f_meta[f_meta_data])) {\n        this[f_meta_data] = f_meta;\n    }\n}\n\nvar protoBlacklist = {\n    length: true,\n    toString: true,\n    constructor: true,\n    toLocaleString: true\n};\n\nvar protoDescriptors = {\n    toJSON: { enumerable: false, value: toJSON },\n    toProps: { enumerable: false, value: toProps },\n    toString: { enumerable: false, value: toString },\n    toLocaleString: { enumerable: false, value: toString },\n    $__hash: {\n        enumerable: false,\n        get: function() {\n            var f_meta = this[f_meta_data];\n            return f_meta && f_meta['$code'] || '';\n        }\n    },\n    $__path: {\n        enumerable: false,\n        get: function() {\n            var f_meta = this[f_meta_data];\n            return f_meta && f_meta[f_meta_abs_path] || [];\n        }\n    },\n    $__status: {\n        enumerable: false,\n        get: function() {\n            var f_meta = this[f_meta_data];\n            return f_meta && f_meta[f_meta_status] || 'resolved';\n        }\n    },\n    $__version: {\n        enumerable: false,\n        get: function() {\n            var f_meta = this[f_meta_data];\n            return f_meta && f_meta[f_meta_version] || 0;\n        }\n    }\n};\n\nObject.defineProperties(FalcorJSON.prototype, Object\n    .getOwnPropertyNames(Array.prototype)\n    .reduce(function (descriptors, name) {\n        if (!protoBlacklist.hasOwnProperty(name)) {\n            var fn = Array.prototype[name];\n            if (typeof fn === 'function') {\n                descriptors[name] = {\n                    value: bindArrayMethod(name, fn),\n                    writable: true, enumerable: false\n                };\n            }\n        }\n        return descriptors;\n    }, protoDescriptors)\n);\n\nfunction bindArrayMethod(name, fn) {\n    return new Function('fn',\n        'return function ' + name + ' () {' +\n            'return fn.apply(this, arguments);' +\n        '};'\n    )(fn);\n}\n\nvar isArray = Array.isArray;\nvar typeofObject = 'object';\nvar typeofString = 'string';\n\nfunction getInst(inst) {\n    var typeofInst = typeof inst;\n    var argsLen = arguments.length;\n    if (argsLen === 0) {\n        inst = this;\n    } else if (typeofInst !== typeofString) {\n        if (!inst || typeofInst !== typeofObject) {\n            return inst;\n        }\n    } else if (argsLen !== 1) {\n        return inst;\n    } else {\n        inst = this;\n    }\n    return inst === global ? undefined : inst;\n}\n\nfunction toJSON() {\n    return serialize(getInst.apply(this, arguments), toJSON);\n}\n\nfunction toString(includeMetadata, includeStatus) {\n    return JSON.stringify(serialize(\n        getInst.call(this, this),\n        serialize,\n        includeMetadata === true,\n        false, includeStatus === true\n    ));\n}\n\nfunction toProps(inst) {\n\n    inst = getInst.apply(this, arguments);\n\n    var f_meta_inst, f_meta_json, version = 0;\n    var json = serialize(inst, toProps, true, true);\n\n    if (inst && (f_meta_inst = inst[f_meta_data])) {\n        version = f_meta_inst[f_meta_version];\n    }\n\n    if (!(!json || typeof json !== typeofObject)) {\n        if (f_meta_json = json[f_meta_data]) {\n            f_meta_json[f_meta_version] = version;\n        }\n    }\n\n    return json;\n}\n\nfunction serialize(inst, serializer, includeMetadata, createWithProto, includeStatus) {\n\n    if (!inst || typeof inst !== typeofObject) {\n        return inst;\n    }\n\n    var count, total, f_meta, keys, key, xs, ys;\n\n    if (isArray(inst)) {\n        xs = inst;\n    } else {\n\n        count = -1;\n        keys = Object.keys(inst);\n        total = keys.length;\n        xs = {};\n\n        if (createWithProto) {\n            xs.__proto__ = FalcorJSON.prototype;\n        }\n\n        if (includeMetadata && (f_meta = inst[f_meta_data])) {\n\n            var $code = f_meta['$code'];\n            var status = f_meta[f_meta_status];\n            var abs_path = f_meta[f_meta_abs_path];\n            var deref_to = f_meta[f_meta_deref_to];\n            var deref_from = f_meta[f_meta_deref_from];\n\n            f_meta = {};\n            $code && (f_meta['$code'] = $code);\n            abs_path && (f_meta[f_meta_abs_path] = abs_path);\n            deref_to && (f_meta[f_meta_deref_to] = deref_to);\n            deref_from && (f_meta[f_meta_deref_from] = deref_from);\n            includeStatus && status && (f_meta[f_meta_status] = status);\n\n            xs[f_meta_data] = f_meta;\n\n            if (createWithProto) {\n                ys = {};\n                ys.__proto__ = xs;\n                xs = ys;\n            }\n        }\n\n        while (++count < total) {\n            if ((key = keys[count]) !== f_meta_data) {\n                xs[key] = serializer(inst[key], serializer, includeMetadata, createWithProto, includeStatus);\n            }\n        }\n    }\n\n    return xs;\n}\n\nmodule.exports = FalcorJSON;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/FalcorJSON.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = '`null` is not allowed in branch key positions.';\n\n/**\n * Do not allow null in path.\n */\nmodule.exports = createErrorClass('NullInPathError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/NullInPathError.js","module.exports = createErrorClass;\n\nfunction createErrorClass(name, init) {\n    function E(message) {\n        this.message = message;\n        init && init.apply(this, arguments);\n        if (!Error.captureStackTrace) {\n            this.stack = (new Error()).stack;\n        } else {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n    E.prototype = Object.create(Error.prototype);\n    E.prototype.name = name;\n    E.prototype.constructor = E;\n    E.is = function(x) { return x.name === name; };\n    return E;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/createErrorClass.js","module.exports = isObject;\n\nfunction isObject(value) {\n    return value !== null && typeof value === 'object';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isObject.js","module.exports = { $type: 'atom' };\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/support/materializedAtom.js","var isInternal = require('../internal/isInternal');\n\nmodule.exports = clone;\n\nfunction clone(node) {\n\n    var key, keys = Object.keys(node),\n        json = {}, index = -1, length = keys.length;\n\n    while (++index < length) {\n        key = keys[index];\n        if (isInternal(key)) {\n            continue;\n        }\n        json[key] = node[key];\n    }\n\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/clone.js","module.exports = function createHardlink(from, to) {\n\n    // create a back reference\n    var backRefs = to[f_refs_length] || 0;\n    to[f_ref + backRefs] = from;\n    to[f_refs_length] = backRefs + 1;\n\n    // create a hard reference\n    from[f_ref_index] = backRefs;\n    from[f_context] = to;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/createHardlink.js","var isObject = require('./../support/isObject');\nmodule.exports = function getSize(node) {\n    return isObject(node) && node.$size || 0;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getSize.js","/**\n * getCachePosition makes a fast walk to the bound value since all bound\n * paths are the most possible optimized path.\n *\n * @param {Model} model -\n * @param {Array} path -\n * @returns {Mixed} - undefined if there is nothing in this position.\n * @private\n */\nmodule.exports = getCachePosition;\n\nfunction getCachePosition(cache, path) {\n\n    var node = cache;\n    var type, depth = 0;\n    var maxDepth = path.length;\n\n    if (maxDepth > 0) {\n        do {\n            node = node[path[depth]];\n\n            while (node && (type = node.$type) === $ref) {\n                node = getCachePosition(cache, node.value);\n            }\n        } while (++depth < maxDepth && node && !type);\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getCachePosition.js","var removeNodeAndDescendants = require('./removeNodeAndDescendants');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = updateNodeAncestors;\n\nfunction updateNodeAncestors(node, offset, lru, version) {\n    var curr = node, next = curr[f_parent];\n    do {\n        if ((curr.$size = (curr.$size || 0) - offset) > 0) {\n            if (!(next = curr[f_parent])) {\n                curr[f_version] = version;\n            } else if (curr[f_version] !== version) {\n                updateBackReferenceVersions(curr, version);\n            }\n        } else if (next = curr[f_parent]) {\n            removeNodeAndDescendants(curr, next, curr[f_key], lru, version);\n        }\n    } while (curr = next);\n    return node;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/updateNodeAncestors.js","var createErrorClass = require('./createErrorClass');\n\n/**\n * InvalidKeySetError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidKeySetError', function(path, keysOrRanges) {\n    this.mesage = '' +\n        'The KeySet ' + JSON.stringify(keysOrRanges) +\n        ' in path ' + JSON.stringify(path) + ' contains a KeySet. ' +\n        'Keysets can only contain Keys or Ranges';\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidKeySetError.js","var EXPIRES_NEVER = require('./../values/expires-never');\n\n// [H] -> Next -> ... -> [T]\n// [T] -> Prev -> ... -> [H]\nmodule.exports = function lruPromote(root, object) {\n    // Never promote node.$expires === 1.  They cannot expire.\n    if (object.$expires === EXPIRES_NEVER) {\n        return;\n    }\n\n    var head = root[f_head];\n\n    // Nothing is in the cache.\n    if (!head) {\n        root[f_head] = root[f_tail] = object;\n        return;\n    }\n\n    if (head === object) {\n        return;\n    }\n\n    // The item always exist in the cache since to get anything in the\n    // cache it first must go through set.\n    var prev = object[f_prev];\n    var next = object[f_next];\n    if (next) {\n        next[f_prev] = prev;\n    }\n    if (prev) {\n        prev[f_next] = next;\n    }\n    object[f_prev] = undefined;\n\n    // Insert into head position\n    root[f_head] = object;\n    object[f_next] = head;\n    head[f_prev] = object;\n\n    // If the item we promoted was the tail, then set prev to tail.\n    if (object === root[f_tail]) {\n        root[f_tail] = prev;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/promote.js","var Subscription = require('./Subscription');\n\nmodule.exports = Subscriber;\n\nfunction Subscriber(destination, parent, onCompleted) {\n    if (typeof destination === 'function' ||\n             typeof parent === 'function' ||\n        typeof onCompleted === 'function') {\n        Subscription.call(this, []);\n        this.destination = {\n            error: parent,\n            onError: parent,\n            next: destination,\n            onNext: destination,\n            complete: onCompleted,\n            onCompleted: onCompleted\n        }\n    } else {\n        Subscription.call(this, [], parent);\n        this.parent = parent;\n        this.destination = destination;\n    }\n}\n\nSubscriber.prototype = Object.create(Subscription.prototype);\n\nSubscriber.prototype.next =\nSubscriber.prototype.onNext = function onNext(value) {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onNext) {\n            dest.onNext(value);\n        } else if (dest.next) {\n            dest.next(value);\n        }\n    }\n}\n\nSubscriber.prototype.error =\nSubscriber.prototype.onError = function onError(error) {\n    var signaled = false;\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onError) {\n            signaled = true;\n            dest.onError(error);\n        } else if (dest.error) {\n            signaled = true;\n            dest.error(error);\n        }\n        this.dispose();\n    }\n    if (!signaled) {\n        throw error;\n    }\n}\n\nSubscriber.prototype.complete =\nSubscriber.prototype.onCompleted = function onCompleted() {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onCompleted) {\n            dest.onCompleted();\n        } else if (dest.complete) {\n            dest.complete();\n        }\n        this.dispose();\n    }\n}\n\nSubscriber.prototype.dispose =\nSubscriber.prototype.unsubscribe = function () {\n    this.destination = null;\n    Subscription.prototype.dispose.call(this);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subscriber.js","module.exports = Subscription;\n\nfunction Subscription(subscriptions, parent) {\n    this.parent = parent;\n    this.subscriptions = subscriptions || [];\n}\n\nSubscription.prototype.add = function(subscription) {\n    return this.subscriptions.push(subscription) && this || this;\n}\n\nSubscription.prototype.remove = function(subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.subscriptions.splice(index, 1);\n    }\n    return this;\n}\n\nSubscription.prototype.dispose =\nSubscription.prototype.unsubscribe = function () {\n    var subscription, subscriptions = this.subscriptions;\n    while (subscriptions.length) {\n        (subscription = subscriptions.pop()) &&\n            subscription.dispose &&\n            subscription.dispose();\n    }\n    var parent = this.parent;\n    if (parent) {\n        this.parent = null;\n        parent.remove && parent.remove(this);\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subscription.js","var isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\n\nmodule.exports = onValueType;\n\nfunction onValueType(node, type, json,\n                     path, depth, seed, results,\n                     requestedPath, requestedLength,\n                     optimizedPath, optimizedLength,\n                     fromReference, modelRoot, expired, expireImmediate,\n                     branchSelector, boxValues, materialized, reportMissing,\n                     treatErrorsAsValues, onValue, onMissing, onMaterialize) {\n\n    var reportMaterialized = reportMissing;\n\n    if (type) {\n        if (isExpired(node, expireImmediate)) {\n            if (!node[f_invalidated]) {\n                expireNode(node, expired, modelRoot);\n            }\n        } else {\n            lruPromote(modelRoot, node);\n            if (node.value === undefined) {\n                reportMissing = false;\n                reportMaterialized = materialized;\n            } else {\n                if (seed) {\n                    if (fromReference) {\n                        requestedPath[depth] = null;\n                    }\n                    return onValue(node, type, depth, seed, results,\n                                   requestedPath, optimizedPath, optimizedLength,\n                                   fromReference, boxValues, materialized, treatErrorsAsValues);\n                }\n                return undefined;\n            }\n        }\n    }\n\n    if (materialized) {\n        seed && (results.hasValue = true);\n    } else if (!reportMaterialized) {\n        return undefined;\n    }\n\n    return onMissing(path, depth, results,\n                     requestedPath, requestedLength, fromReference,\n                     optimizedPath, optimizedLength, reportMissing,\n                     materialized, json, branchSelector,\n                     boxValues, onMaterialize, modelRoot);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onValueType.js","var getCachePosition = require('./getCachePosition');\n\nmodule.exports = getBoundCacheNode;\n\nfunction getBoundCacheNode(model, path) {\n    path = path || model._path;\n    var node = model._node;\n    if (!node || node[f_parent] === undefined || node[f_invalidated]) {\n        model._node = null;\n        if (path.length === 0) {\n            node = model._root.cache;\n        } else {\n            node = getCachePosition(model._root.cache, path);\n            if (path === model._path) {\n                model._node = node;\n            }\n        }\n    }\n    return node;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getBoundCacheNode.js","var arr = new Array(5);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar mergeJSONGraphNode = require('../mergeJSONGraphNode');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\n\n/**\n * Merges a list of {@link JSONGraphEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to merge the {@link JSONGraphEnvelope}s.\n * @param {Array.<PathValue>} jsonGraphEnvelopes - the {@link JSONGraphEnvelope}s to merge.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setJSONGraphs(model, jsonGraphEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n\n    var requestedPath = [];\n    var optimizedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var jsonGraphEnvelopeIndex = -1;\n    var jsonGraphEnvelopeCount = jsonGraphEnvelopes.length;\n\n    while (++jsonGraphEnvelopeIndex < jsonGraphEnvelopeCount) {\n\n        var jsonGraphEnvelope = jsonGraphEnvelopes[jsonGraphEnvelopeIndex];\n        var paths = jsonGraphEnvelope.paths;\n        var jsonGraph = jsonGraphEnvelope.jsonGraph;\n\n        var pathIndex = -1;\n        var pathCount = paths.length;\n\n        while (++pathIndex < pathCount) {\n\n            var path = paths[pathIndex];\n            optimizedPath.index = 0;\n\n            setJSONGraphPathSet(\n                path, 0,\n                cache, cache, cache,\n                jsonGraph, jsonGraph, jsonGraph,\n                requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n                version, expired, lru, comparator, errorSelector, expireImmediate\n            );\n        }\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n    arr[3] = undefined;\n    arr[4] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setJSONGraphPathSet(\n    path, depth, root, parent, node,\n    messageRoot, messageParent, message,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n\n        var results = setNode(\n            root, parent, node, messageRoot, messageParent, message,\n            key, branch, false, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = results[0];\n        var nextParent = results[1];\n        var nextOptimizedPath = results[4];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setJSONGraphPathSet(\n                    path, depth + 1, root, nextParent, nextNode,\n                    messageRoot, results[3], results[2],\n                    requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                    version, expired, lru, comparator, errorSelector, expireImmediate\n                );\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(\n    root, node, messageRoot, message, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var messageParent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        messageParent = messageRoot;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var index = 0;\n        var container = node;\n        var count = reference.length - 1;\n        parent = node = root;\n        messageParent = message = messageRoot;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            optimizedPath.index = index;\n\n            var results = setNode(\n                root, parent, node, messageRoot, messageParent, message,\n                key, branch, true, requestedPath, optimizedPath, version,\n                expired, lru, comparator, errorSelector, expireImmediate\n            );\n            node = results[0];\n            optimizedPath = results[4];\n            if (!node || typeof node !== 'object') {\n                optimizedPath.index = index;\n                return results;\n            }\n            parent = results[1];\n            message = results[2];\n            messageParent = results[3];\n        } while (index++ < count);\n\n        optimizedPath.index = index;\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(\n    root, parent, node, messageRoot, messageParent, message,\n    key, branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = setReference(\n            root, node, messageRoot, message, requestedPath, optimizedPath,\n            version, expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        message = results[2];\n        messageParent = results[3];\n        optimizedPath = results[4];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            messageParent = message;\n            node = parent[key];\n            message = messageParent && messageParent[key];\n        }\n\n        node = mergeJSONGraphNode(\n            parent, node, message, key, requestedPath, optimizedPath,\n            version, expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setJSONGraphs.js","var arr = new Array(3);\nvar isArray = Array.isArray;\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar getCachePosition = require('../getCachePosition');\nvar isInternalKey = require('../../support/isInternalKey');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar mergeValueOrInsertBranch = require('../mergeValueOrInsertBranch');\n\n/**\n * Sets a list of {@link PathMapEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of {@link PathMapEnvelope}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setPathMaps(model, pathMapEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[f_parent] || cache;\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathMapIndex = -1;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathMap(\n            pathMapEnvelope.json, 0, cache, parent, node,\n            requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n            version, expired, modelRoot, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setPathMap(\n    pathMap, depth, root, parent, node,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var keys = getKeys(pathMap);\n\n    if (keys && keys.length) {\n\n        var keyIndex = 0;\n        var keyCount = keys.length;\n        var optimizedIndex = optimizedPath.index;\n\n        do {\n            var key = keys[keyIndex];\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n\n            requestedPath.depth = depth;\n\n            var results = setNode(\n                root, parent, node, key, child,\n                branch, false, requestedPath, optimizedPath, version,\n                expired, lru, comparator, errorSelector, expireImmediate\n            );\n\n            requestedPath[depth] = key;\n            requestedPath.index = depth;\n\n            var nextNode = results[0];\n            var nextParent = results[1];\n            var nextOptimizedPath = results[2];\n            nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n            if (nextNode) {\n                if (branch) {\n                    setPathMap(\n                        child, depth + 1,\n                        root, nextParent, nextNode,\n                        requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                        version, expired, lru, comparator, errorSelector, expireImmediate\n                    );\n                } else {\n                    requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                    optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n                }\n            }\n            if (++keyIndex >= keyCount) {\n                break;\n            }\n            optimizedPath.index = optimizedIndex;\n        } while (true);\n    }\n}\n/* eslint-enable */\n\nfunction setReference(\n    value, root, node, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n        var container = node;\n        parent = root;\n\n        node = node[f_context];\n\n        if (node != null) {\n            parent = node[f_parent] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n            optimizedPath.index = index;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                var results = setNode(\n                    root, parent, node, key, value,\n                    branch, true, requestedPath, optimizedPath, version,\n                    expired, lru, comparator, errorSelector, expireImmediate\n                );\n                node = results[0];\n                optimizedPath = results[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return results;\n                }\n                parent = results[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[f_context] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(\n    root, parent, node, key, value,\n    branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = setReference(\n            value, root, node, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        optimizedPath = results[2];\n        type = node && node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(\n            parent, node, key, value,\n            branch, reference, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction getKeys(pathMap) {\n\n    if (!(!pathMap || typeof pathMap !== 'object') && !pathMap.$type) {\n        var keys = [];\n        var itr = 0;\n        if (isArray(pathMap)) {\n            keys[itr++] = 'length';\n        }\n        for (var key in pathMap) {\n            if (isInternalKey(key)) {\n                continue;\n            }\n            keys[itr++] = key;\n        }\n        return keys;\n    }\n\n    return undefined;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setPathMaps.js","/**\n * Determined if the key passed in is an internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nmodule.exports = isInternalKey;\n\nvar isInternal = require('../internal/isInternal');\n\nfunction isInternalKey(key) {\n    return key && key[0] === '$' || isInternal(key);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isInternalKey.js","module.exports = flatBufferToPaths;\n\nfunction flatBufferToPaths(seed, paths, path) {\n\n    path = path || [];\n    paths = paths || [];\n\n    if (!seed) {\n        return paths;\n    }\n\n    var leaf = [];\n    var keys = seed['$keys'];\n    var keysLen = keys.length;\n    var keysIndex = -1, key, len;\n\n    while (++keysIndex < keysLen) {\n\n        var next = seed[keysIndex];\n        var keyset = keys[keysIndex];\n\n        if (!next || typeof next !== 'object') {\n            leaf.push(keyset);\n        } else {\n            flatBufferToPaths(next, paths, path.concat([keyset]));\n        }\n    }\n\n    if (leaf.length === 1) {\n        paths.push(path.concat(leaf));\n    } else if (leaf.length > 1) {\n        paths.push(path.concat([leaf]));\n    }\n\n    return paths;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/flatBufferToPaths.js","module.exports = getHashCode;\n\nfunction getHashCode(str) {\n    var hash = 5381, i = str.length;\n    while (i) {\n        hash = (hash * 33) ^ str.charCodeAt(--i);\n    }\n    // JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n    // integers. Since we want the results to be always positive, convert the\n    // signed int to an unsigned by doing an unsigned bitshift.\n    return hash >>> 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/getHashCode.js","var isArray = Array.isArray;\n\n/**\n * Takes in a keySet and a note attempts to iterate over it.\n * If the value is a primitive, the key will be returned and the note will\n * be marked done\n * If the value is an object, then each value of the range will be returned\n * and when finished the note will be marked done.\n * If the value is an array, each value will be iterated over, if any of the\n * inner values are ranges, those will be iterated over.  When fully done,\n * the note will be marked done.\n *\n * @param {Object|Array|String|Number} keySet -\n * @param {Object} note - The non filled note\n * @returns {String|Number|undefined} - The current iteration value.\n * If undefined, then the keySet is empty\n * @public\n */\nmodule.exports = function iterateKeySet(keySet, note) {\n    if (note.isArray === undefined) {\n        initializeNote(keySet, note);\n    }\n\n    // Array iteration\n    if (note.isArray) {\n        var nextValue;\n\n        // Cycle through the array and pluck out the next value.\n        do {\n            if (note.loaded && note.rangeOffset > note.to) {\n                ++note.arrayOffset;\n                note.loaded = false;\n            }\n\n            var idx = note.arrayOffset, length = keySet.length;\n            if (idx >= length) {\n                note.done = true;\n                break;\n            }\n\n            var el = keySet[note.arrayOffset];\n            var type = typeof el;\n\n            // Inner range iteration.\n            if (type === 'object') {\n                if (!note.loaded) {\n                    initializeRange(el, note);\n                }\n\n                // Empty to/from\n                if (note.empty) {\n                    continue;\n                }\n\n                nextValue = note.rangeOffset++;\n            }\n\n            // Primitive iteration in array.\n            else {\n                ++note.arrayOffset;\n                nextValue = el;\n            }\n        } while (nextValue === undefined);\n\n        return nextValue;\n    }\n\n    // Range iteration\n    else if (note.isObject) {\n        if (!note.loaded) {\n            initializeRange(keySet, note);\n        }\n        if (note.rangeOffset > note.to) {\n            note.done = true;\n            return undefined;\n        }\n\n        return note.rangeOffset++;\n    }\n\n    // Primitive value\n    else {\n        note.done = true;\n        return keySet;\n    }\n};\n\nfunction initializeRange(key, memo) {\n    var from = memo.from = key.from || 0;\n    var to = memo.to = key.to ||\n        (typeof key.length === 'number' &&\n        memo.from + key.length - 1 || 0);\n    memo.rangeOffset = memo.from;\n    memo.loaded = true;\n    if (from > to) {\n        memo.empty = true;\n    }\n}\n\nfunction initializeNote(key, note) {\n    note.done = false;\n    var isObject = note.isObject = !!(key && typeof key === 'object');\n    note.isArray = isObject && isArray(key);\n    note.arrayOffset = 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/iterateKeySet.js","module.exports = require('./getJSON');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/index.js","module.exports = require('./getJSONGraph');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/index.js","module.exports = inlineJSONGraphValue;\n\n/* eslint-disable no-constant-condition */\nfunction inlineJSONGraphValue(node, path, length, seed, branch) {\n\n    var key, depth = 0, prev,\n        curr = seed.jsonGraph;\n\n    if (!curr) {\n        seed.jsonGraph = curr = {};\n    }\n\n    do {\n        prev = curr;\n        key = path[depth++];\n        if (depth >= length) {\n            curr = prev[key] = branch !== true ? node : prev[key] || {};\n            break;\n        }\n        curr = prev[key] || (prev[key] = {});\n    } while (true);\n\n    return curr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/inlineValue.js","var isArray = Array.isArray;\n\nmodule.exports = onMissing;\n\n/* eslint-disable no-constant-condition */\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, json, branchSelector,\n                   boxValues, onMaterialize, modelRoot) {\n\n    if (!reportMissing && !reportMaterialized) {\n        return;\n    }\n\n    var keyset,\n        restPathIndex = -1,\n        restPathCount = requestedLength - depth,\n        restPath = restPathCount && new Array(restPathCount) || undefined;\n\n    while (++restPathIndex < restPathCount) {\n        keyset = path[restPathIndex + depth];\n        if (isEmptyKeySet(keyset)) {\n            return;\n        }\n        restPath[restPathIndex] = keyset;\n    }\n\n    var index, count, mPath;\n    var lastKeyIsNull = keyset === null;\n    var isRequestedPath = reportMissing;\n    var missDepth, missTotal, missingPath, missingPaths;\n\n    if (!reportMissing) {\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } else {\n        missDepth = depth;\n        missTotal = requestedLength;\n        missingPath = requestedPath;\n        missingPaths = results.requested || (results.requested = []);\n    }\n\n    do {\n        if (restPathCount < requestedLength || !isRequestedPath) {\n            index = -1;\n            count = missDepth;\n            mPath = new Array(missTotal);\n            while (++index < count) {\n                mPath[index] = missingPath[index];\n            }\n            restPathIndex = -1;\n            while (index < missTotal) {\n                mPath[index++] = restPath[++restPathIndex];\n            }\n        }\n\n        // break after inserting both requested and optimized missing paths\n        if (isRequestedPath = !isRequestedPath) {\n            if (reportMissing) {\n                missingPaths[missingPaths.length] = mPath;\n            }\n            break;\n        }\n\n        missingPaths[missingPaths.length] = mPath || restPath;\n\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missingPaths = results.missing || (results.missing = []);\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } while (true);\n\n    if (reportMaterialized) {\n        return onMaterialize(json, mPath, missDepth, missTotal, branchSelector, boxValues, modelRoot);\n    }\n}\n/* eslint-enable */\n\nfunction isEmptyKeySet(keyset) {\n\n    // false if the keyset is a primitive\n    if ('object' !== typeof keyset) {\n        return false;\n    } else if (keyset === null) {\n        return false;\n    }\n\n    if (isArray(keyset)) {\n        // return true if the keyset is an empty array\n        return keyset.length === 0;\n    }\n\n    var rangeEnd = keyset.to,\n        from = keyset.from || 0;\n    if ('number' !== typeof rangeEnd) {\n        rangeEnd = from + (keyset.length || 0);\n    }\n\n    // false if trying to request incorrect or empty ranges\n    // e.g. { from: 10, to: 0 } or { from: 5, length: 0 }\n    return from >= rangeEnd;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMissing.js","var arr = new Array(2);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\nvar getSize = require('../../support/getSize');\nvar createHardlink = require('../createHardlink');\nvar getBoundCacheNode = require('../getBoundCacheNode');\nvar updateNodeAncestors = require('../updateNodeAncestors');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\n\n/**\n * Invalidates a list of Paths in a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathValues.\n * @param {Array.<PathValue>} paths - the PathValues to set.\n */\n\nmodule.exports = invalidatePathSets;\n\nfunction invalidatePathSets(model, paths, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n\n    if (!node) {\n        return false;\n    }\n\n    var pathIndex = -1;\n    var pathCount = paths.length;\n    var parent = node[f_parent] || cache;\n\n    while (++pathIndex < pathCount) {\n\n        var path = paths[pathIndex];\n\n        invalidatePathSet(\n            path, 0, cache, parent, node,\n            version, expired, lru, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return true;\n    }\n\n    return false;\n}\n\nfunction invalidatePathSet(\n    path, depth, root, parent, node,\n    version, expired, lru, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n\n    do {\n        arr = invalidateNode(\n            root, parent, node,\n            key, branch, false, version,\n            expired, lru, expireImmediate\n        );\n        var nextNode = arr[0];\n        var nextParent = arr[1];\n        if (nextNode) {\n            if (branch) {\n                invalidatePathSet(\n                    path, depth + 1,\n                    root, nextParent, nextNode,\n                    version, expired, lru, expireImmediate\n                );\n            } else {\n                updateNodeAncestors(nextNode, getSize(nextNode), lru, version);\n            }\n        }\n        key = iterateKeySet(keySet, note);\n    } while (!note.done);\n}\n\nfunction invalidateReference(root, node, version, expired, lru, expireImmediate) {\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return arr;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[f_context];\n\n    if (node != null) {\n        parent = node[f_parent] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            arr = invalidateNode(\n                root, parent, node,\n                key, branch, true, version,\n                expired, lru, expireImmediate\n            );\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return arr;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\nfunction invalidateNode(\n    root, parent, node,\n    key, branch, reference, version,\n    expired, lru, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        arr = invalidateReference(root, node, version, expired, lru, expireImmediate);\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return arr;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new Error('`null` is not allowed in branch key positions.');\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/invalidatePathSets.js","var lruSplice = require('../lru/splice');\nvar isInternalKey = require('../support/isInternalKey');\nvar unlinkBackReferences = require('./unlinkBackReferences');\nvar unlinkForwardReference = require('./unlinkForwardReference');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = removeNodeAndDescendants;\n\nfunction removeNodeAndDescendants(node, parent, key, lru, version) {\n    if (!(!node || typeof node !== 'object')) {\n        var type = node.$type;\n        if (type === undefined) {\n            for (var key2 in node) {\n                if (!isInternalKey(key2)) {\n                    removeNodeAndDescendants(node[key2], node, key2, lru, version);\n                }\n            }\n        } else {\n            if (type === $ref) {\n                unlinkForwardReference(node);\n            }\n            lruSplice(lru, node);\n        }\n        unlinkBackReferences(updateBackReferenceVersions(node, version));\n        parent[key] = node[f_parent] = undefined;\n        return true;\n    }\n    return false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/removeNodeAndDescendants.js","var arr = new Array(3);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar getCachePosition = require('../getCachePosition');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\nvar mergeValueOrInsertBranch = require('../mergeValueOrInsertBranch');\n\n/**\n * Sets a list of {@link PathValue}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the {@link PathValue}s.\n * @param {Array.<PathValue>} pathValues - the list of {@link PathValue}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setPathValues(model, pathValues, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[f_parent] || cache;\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathValueIndex = -1;\n    var pathValueCount = pathValues.length;\n\n    while (++pathValueIndex < pathValueCount) {\n\n        var pathValue = pathValues[pathValueIndex];\n        var path = pathValue.path;\n        var value = pathValue.value;\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathSet(\n            value, path, 0, cache, parent, node,\n            requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n            version, expired, modelRoot, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setPathSet(\n    value, path, depth, root, parent, node,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var results = setNode(\n            root, parent, node, key, value,\n            branch, false, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = results[0];\n        var nextParent = results[1];\n        var nextOptimizedPath = results[2];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setPathSet(\n                    value, path, depth + 1,\n                    root, nextParent, nextNode,\n                    requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                    version, expired, lru, comparator, errorSelector, expireImmediate\n                );\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(\n    value, root, node, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var container = node;\n        parent = root;\n\n        node = node[f_context];\n\n        if (node != null) {\n            parent = node[f_parent] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                optimizedPath.index = index;\n\n                var results = setNode(\n                    root, parent, node, key, value,\n                    branch, true, requestedPath, optimizedPath, version,\n                    expired, lru, comparator, errorSelector, expireImmediate\n                );\n                node = results[0];\n                optimizedPath = results[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return results;\n                }\n                parent = results[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[f_context] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(\n    root, parent, node, key, value,\n    branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = setReference(\n            value, root, node, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        optimizedPath = results[2];\n        type = node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(\n            parent, node, key, value,\n            branch, reference, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setPathValues.js","module.exports = updateBackReferenceVersions;\n\nfunction updateBackReferenceVersions(nodeArg, version) {\n    var node = nodeArg, stack = [], count = 0, ref, i, n;\n    do {\n        i = -1;\n        ref = node[f_parent];\n        node[f_version] = version;\n        n = node[f_refs_length] || 0;\n        do {\n            if (ref && ref[f_version] !== version) {\n                stack[count++] = ref;\n            }\n            if (++i < n) {\n                ref = node[f_ref + i];\n                continue;\n            }\n            break;\n        } while (true);\n    } while (node = stack[--count]);\n    return nodeArg;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/updateBackReferenceVersions.js","/**\n * Determined if the key passed in is an f_ internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nvar f_ = require('./f_');\nvar regexp = new RegExp('^' + f_, 'i', 'g');\n\nmodule.exports = regexp.test.bind(regexp);\n\n\n\n// WEBPACK FOOTER //\n// ./lib/internal/isInternal.js","var isObject = require('./../support/isObject');\nmodule.exports = function getTimestamp(node) {\n    return isObject(node) && node.$timestamp || undefined;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getTimestamp.js","module.exports = 0;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/values/expires-now.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() { return this; })();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 35\n// module chunks = 0","var toPaths = require('./toPaths');\nvar toCollapseMap = require('./toCollapseMap');\nvar toCollapseTrees = require('./toCollapseTrees');\n\nmodule.exports = function collapse(paths) {\n    return toPaths(toCollapseTrees(toCollapseMap(paths)));\n};\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/collapse.js","var isArray = Array.isArray;\nvar flatBufferToPaths = require('./flatBufferToPaths');\n\nmodule.exports = toCollapseMap;\n\nfunction toCollapseMap(paths, collapseMap) {\n    if (!paths) { return collapseMap; }\n    else if (!isArray(paths)) {\n        if (isArray(paths.$keys)) {\n            paths = flatBufferToPaths(paths);\n        }\n    }\n    return paths.reduce(function(acc, path) {\n        var len = path.length;\n        if (!acc[len]) {\n            acc[len] = [];\n        }\n        acc[len].push(path);\n        return acc;\n    }, collapseMap || {});\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toCollapseMap.js","var toTree = require('./toTree');\n\nmodule.exports = toCollapseTrees;\n\nfunction toCollapseTrees(collapseMap, collapseTrees) {\n    return Object.keys(collapseMap).reduce(function(collapseTrees, collapseKey) {\n        collapseTrees[collapseKey] = toTree(\n            collapseMap[collapseKey],\n            collapseTrees[collapseKey]\n        );\n        return collapseTrees;\n    }, collapseTrees || {});\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toCollapseTrees.js","var isArray = Array.isArray;\nvar typeOfObject = 'object';\nvar typeOfString = 'string';\nvar typeOfNumber = 'number';\nvar MAX_SAFE_INTEGER = 9007199254740991; // Number.MAX_SAFE_INTEGER in es6\nvar MAX_SAFE_INTEGER_DIGITS = 16; // String(Number.MAX_SAFE_INTEGER).length\nvar MIN_SAFE_INTEGER_DIGITS = 17; // String(Number.MIN_SAFE_INTEGER).length (including sign)\nvar abs = Math.abs;\nvar safeNumberRegEx = /^(0|(\\-?[1-9][0-9]*))$/;\nvar getHashCode = require('./getHashCode');\nvar materializedAtom = require('./support/materializedAtom');\n\n/* jshint forin: false */\nmodule.exports = function toPaths(lengths) {\n    var pathmap;\n    var allPaths = [];\n    var allPathsLength = 0;\n    for (var length in lengths) {\n        if (isSafeNumber(length) && isObject(pathmap = lengths[length])) {\n            var paths = collapsePathMap(pathmap, 0, parseInt(length, 10)).sets;\n            var pathsIndex = -1;\n            var pathsCount = paths.length;\n            while (++pathsIndex < pathsCount) {\n                allPaths[allPathsLength++] = collapsePathSetIndexes(paths[pathsIndex]);\n            }\n        }\n    }\n    return allPaths;\n};\n\nfunction isObject(value) {\n    return value !== null && typeof value === typeOfObject;\n}\n\nfunction collapsePathMap(pathmap, depth, length) {\n\n    var key;\n    var subs = Object.create(null);\n    var code = '' + getHashCode('' + depth);\n\n    var codes = [];\n    var codesIndex = -1;\n    var codesCount = 0;\n\n    var pathsets = [];\n    var pathsetsCount = 0;\n\n    var subPath, subCode,\n        subKeys, subKeysIndex, subKeysCount,\n        subSets, subSetsIndex, subSetsCount,\n        pathset, pathsetIndex, pathsetCount,\n        firstSubKey, pathsetClone;\n\n    subKeys = [];\n    subKeysIndex = -1;\n\n    if (depth < length - 1) {\n\n        subKeysCount = getSortedKeys(pathmap, subKeys);\n\n        while (++subKeysIndex < subKeysCount) {\n            key = subKeys[subKeysIndex];\n            subPath = collapsePathMap(pathmap[key], depth + 1, length);\n            subCode = subPath.code;\n            if(subs[subCode]) {\n                subPath = subs[subCode];\n            } else {\n                codes[codesCount++] = subCode;\n                subPath = subs[subCode] = {\n                    keys: [],\n                    sets: subPath.sets\n                };\n            }\n            code = '' + getHashCode(code + key + subCode);\n\n            isSafeNumber(key) &&\n                subPath.keys.push(parseInt(key, 10)) ||\n                subPath.keys.push(key);\n        }\n\n        while(++codesIndex < codesCount) {\n\n            key = codes[codesIndex];\n            subPath = subs[key];\n            subKeys = subPath.keys;\n            subKeysCount = subKeys.length;\n\n            if (subKeysCount > 0) {\n\n                subSets = subPath.sets;\n                subSetsIndex = -1;\n                subSetsCount = subSets.length;\n                firstSubKey = subKeys[0];\n\n                while (++subSetsIndex < subSetsCount) {\n\n                    pathset = subSets[subSetsIndex];\n                    pathsetIndex = -1;\n                    pathsetCount = pathset.length;\n                    pathsetClone = new Array(pathsetCount + 1);\n                    pathsetClone[0] = subKeysCount > 1 && subKeys || firstSubKey;\n\n                    while (++pathsetIndex < pathsetCount) {\n                        pathsetClone[pathsetIndex + 1] = pathset[pathsetIndex];\n                    }\n\n                    pathsets[pathsetsCount++] = pathsetClone;\n                }\n            }\n        }\n    } else {\n        subKeysCount = getSortedKeys(pathmap, subKeys);\n        if (subKeysCount > 1) {\n            pathsets[pathsetsCount++] = [subKeys];\n        } else {\n            pathsets[pathsetsCount++] = subKeys;\n        }\n        while (++subKeysIndex < subKeysCount) {\n            code = '' + getHashCode(code + subKeys[subKeysIndex]);\n        }\n    }\n\n    return {\n        code: code,\n        sets: pathsets\n    };\n}\n\nfunction collapsePathSetIndexes(pathset) {\n\n    var keysetIndex = -1;\n    var keysetCount = pathset.length;\n\n    while (++keysetIndex < keysetCount) {\n        var keyset = pathset[keysetIndex];\n        if (isArray(keyset)) {\n            pathset[keysetIndex] = collapseIndex(keyset);\n        }\n    }\n\n    return pathset;\n}\n\n/**\n * Collapse range indexers, e.g. when there is a continuous\n * range in an array, turn it into an object instead:\n *\n * [1,2,3,4,5,6] => {'from':1, 'to':6}\n *\n * @private\n */\nfunction collapseIndex(keyset) {\n\n    // Do we need to dedupe an indexer keyset if they're duplicate consecutive integers?\n    // var hash = {};\n    var keyIndex = -1;\n    var keyCount = keyset.length - 1;\n    var isSparseRange = keyCount > 0;\n\n    while (++keyIndex <= keyCount) {\n\n        var key = keyset[keyIndex];\n\n        if (!isSafeNumber(key) /* || hash[key] === true*/ ) {\n            isSparseRange = false;\n            break;\n        }\n        // hash[key] = true;\n        // Cast number indexes to integers.\n        keyset[keyIndex] = parseInt(key, 10);\n    }\n\n    if (isSparseRange === true) {\n\n        keyset.sort(sortListAscending);\n\n        var from = keyset[0];\n        var to = keyset[keyCount];\n\n        // If we re-introduce deduped integer indexers, change this comparson to '==='.\n        if (to - from <= keyCount) {\n            return { from: from, to: to };\n        }\n    }\n\n    return keyset;\n}\n\nfunction sortListAscending(a, b) {\n    return a - b;\n}\n\n/* jshint forin: false */\nfunction getSortedKeys(map, keys, sort) {\n    var len = 0;\n    if (map === materializedAtom) {\n        keys[len++] = null;\n    } else {\n        for (var key in map) {\n            keys[len++] = key;\n        }\n        if (len > 1) {\n            keys.sort(sort);\n        }\n    }\n    return len;\n}\n\n/**\n * Return true if argument is a number or can be cast to a number which\n * roundtrips to the same string.\n * @private\n */\nfunction isSafeNumber(val) {\n    var num = val;\n    var type = typeof val;\n    if (type === typeOfString) {\n        var length = val.length;\n        // Number.MIN_SAFE_INTEGER is 17 digits including the sign.\n        // Anything longer cannot be safe.\n        if (length === 0 || length > MIN_SAFE_INTEGER_DIGITS) {\n            return false;\n        }\n        if (!safeNumberRegEx.test(val)) {\n            return false;\n        }\n        // Number.MAX_SAFE_INTEGER is 16 digits.\n        // Anything shorter must be safe.\n        if (length < MAX_SAFE_INTEGER_DIGITS) {\n            return true;\n        }\n        num = +val;\n    } else if (type !== typeOfNumber) {\n        return false;\n    }\n    // Number.isSafeInteger(num) in es6.\n    return num % 1 === 0 && abs(num) <= MAX_SAFE_INTEGER;\n}\n\n// export for testing\nmodule.exports._isSafeNumber = isSafeNumber;\n\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toPaths.js","var isArray = Array.isArray;\nvar walkPathAndBuildOutput = require('./walkPath');\nvar walkFlatBufferAndBuildOutput = require('./walkFlatBuffer');\nvar getBoundCacheNode = require('../../getBoundCacheNode');\nvar InvalidModelError = require('../../../errors/InvalidModelError');\nvar toFlatBuffer = require('@graphistry/falcor-path-utils/lib/toFlatBuffer');\nvar computeFlatBufferHash = require('@graphistry/falcor-path-utils/lib/computeFlatBufferHash');\n\nmodule.exports = getJSON;\n\nfunction getJSON(model, paths, seed, progressive, expireImmediate) {\n\n    var node,\n        referenceContainer,\n        boundPath = model._path,\n        modelRoot = model._root,\n        cache = modelRoot.cache,\n        requestedPath, requestedLength,\n        optimizedPath, optimizedLength =\n            boundPath && boundPath.length || 0;\n\n    // If the model is bound, get the cache position.\n    if (optimizedLength) {\n        node = getBoundCacheNode(model);\n        // If there was a short, then we 'throw an error' to the outside\n        // calling function which will onError the observer.\n        if (node && node.$type) {\n            return { error: new InvalidModelError(boundPath, boundPath) };\n        }\n        // We need to get the new cache position and copy the bound path.\n        optimizedPath = [];\n        for (var i = 0; i < optimizedLength; ++i) {\n            optimizedPath[i] = boundPath[i];\n        }\n        referenceContainer = model._referenceContainer;\n    } else {\n        node = cache;\n        optimizedPath = [];\n    }\n\n    requestedPath = [];\n\n    var isFlatBuffer = false,\n        json = seed && seed.json,\n        results = { data: seed },\n        boxValues = model._boxed,\n        expired = modelRoot.expired,\n        recycleJSON = model._recycleJSON,\n        hasDataSource = Boolean(model._source),\n        branchSelector = modelRoot.branchSelector,\n        materialized = seed && model._materialized,\n        treatErrorsAsValues = model._treatErrorsAsValues,\n        allowFromWhenceYouCame = model._allowFromWhenceYouCame;\n\n    var arr, path, pathsIndex = 0, pathsCount = paths.length;\n\n    if (pathsCount > 0) {\n\n        if (recycleJSON) {\n            isFlatBuffer = true;\n            if (pathsCount > 1 || isArray(paths[0])) {\n                pathsCount = 1;\n                paths = [computeFlatBufferHash(toFlatBuffer(paths, {}))];\n            }\n        }\n\n        do {\n            path = paths[pathsIndex];\n            if (isFlatBuffer) {\n                arr = walkFlatBufferAndBuildOutput(cache, node, json, paths[0], 0, seed, results,\n                                                   requestedPath, optimizedPath, optimizedLength,\n                                                   /* fromReference = */ false, referenceContainer,\n                                                   modelRoot, expired, expireImmediate, branchSelector,\n                                                   boxValues, materialized, hasDataSource,\n                                                   treatErrorsAsValues, allowFromWhenceYouCame);\n            } else {\n                requestedLength = path.length;\n                arr = walkPathAndBuildOutput(cache, node, json, path,\n                                          /* depth = */ 0, seed, results,\n                                             requestedPath, requestedLength,\n                                             optimizedPath, optimizedLength,\n                                             /* fromReference = */ false, referenceContainer,\n                                             modelRoot, expired, expireImmediate, branchSelector,\n                                             boxValues, materialized, hasDataSource,\n                                             treatErrorsAsValues, allowFromWhenceYouCame);\n            }\n            json = arr[0];\n            arr[0] = undefined;\n            arr[1] = undefined;\n        } while (++pathsIndex < pathsCount);\n    }\n\n    var requested = results.requested;\n\n    results.args = isFlatBuffer && paths || requested;\n\n    if (requested && requested.length) {\n        results.relative = results.args;\n        if (optimizedLength) {\n            var boundRequested = [];\n            for (var i = 0, len = requested.length; i < len; ++i) {\n                boundRequested[i] = boundPath.concat(requested[i]);\n            }\n            results.requested = boundRequested;\n        }\n    }\n\n    if (results.hasValue) {\n        seed.json = json;\n    }\n\n    return results;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/getJSON.js","var arr = new Array(3);\nvar promote = require('../../../lru/promote');\nvar isExpired = require('../../isExpired');\nvar createHardlink = require('../../createHardlink');\nvar CircularReferenceError = require('../../../errors/CircularReferenceError');\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, ref, modelRoot, expireImmediate) {\n\n    promote(modelRoot, ref);\n\n    var context,\n        key, type, depth = 0,\n        node = root, path = ref.value,\n        copy = path, length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[f_context])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                throw new CircularReferenceError(path);\n            }\n            // If the node we land on isn't the existing ref context,\n            // create a hard-link between the reference and the node\n            // it points to.\n            else if (node !== context) {\n                createHardlink(ref, node);\n            }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === $ref) {\n\n                promote(modelRoot, node);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n    arr[2] = ref;\n\n    return arr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/getReferenceTarget.js","var clone = require('../../clone');\nvar onError = require('./onError');\n\nmodule.exports = onJSONValue;\n\nfunction onJSONValue(node, type, depth, seed, results,\n                     requestedPath, optimizedPath, optimizedLength,\n                     fromReference, boxValues, materialized,\n                     treatErrorsAsValues) {\n\n    if ($error === type && !treatErrorsAsValues) {\n        return onError(node, depth, results, requestedPath,\n                       fromReference, boxValues);\n    }\n\n    results.hasValue = true;\n\n    // boxValues always clones the node\n    return !boxValues ? node.value : clone(node);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/onValue.js","var walkPathAndBuildOutput = require('./walkPath');\nvar BoundJSONGraphModelError = require('../../../errors/BoundJSONGraphModelError');\n\nmodule.exports = getJSONGraph;\n\nfunction getJSONGraph(model, paths, seed, progressive, expireImmediate) {\n\n    var node, cache,\n        boundPath = model._path,\n        modelRoot = model._root,\n        requestedPath, requestedLength,\n        optimizedPath, optimizedLength =\n            boundPath && boundPath.length || 0;\n\n    // If the model is bound, then get that cache position.\n    if (optimizedLength) {\n        // JSONGraph output cannot ever be bound or else it will\n        // throw an error.\n        return { error: new BoundJSONGraphModelError() };\n    } else {\n        optimizedPath = [];\n        cache = node = modelRoot.cache;\n    }\n\n    requestedPath = [];\n\n    var boxValues = model._boxed,\n        expired = modelRoot.expired,\n        materialized = model._materialized,\n        hasDataSource = Boolean(model._source),\n        treatErrorsAsValues = model._treatErrorsAsValues,\n\n        results = { data: seed },\n        pathsIndex = -1, pathsCount = paths.length;\n\n    while (++pathsIndex < pathsCount) {\n        var path = paths[pathsIndex];\n        requestedLength = path.length;\n        walkPathAndBuildOutput(cache, node, path,\n                            /* depth = */ 0, seed, results,\n                               requestedPath, requestedLength,\n                               optimizedPath, optimizedLength,\n              /* fromReference = */ false, modelRoot, expired, expireImmediate,\n                               boxValues, materialized, hasDataSource, treatErrorsAsValues);\n    }\n\n    results.args =\n    results.relative = results.requested;\n\n    return results;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/getJSONGraph.js","var isArray = Array.isArray;\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar clone = require('../clone');\nvar FalcorJSON = require('./json/FalcorJSON');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = onMaterialize;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterialize(json, path, depth, length,\n                       branchSelector, boxValues, modelRoot) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (depth === length) {\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta;\n\n    var nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        keysetIndex = -1, keysetLength = 0;\n\n    keyset = path[depth];\n\n    if (!json || typeofObject !== typeof json) {\n        json = {};\n        json.__proto__ = FalcorJSON.prototype;\n        json[f_meta_data] = f_meta = {};\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[f_meta_data])) {\n        json[f_meta_data] = f_meta = {};\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n    } else {\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            // insert the materialized branch\n            json[nextKey] = onMaterialize(\n                json[nextKey], path,\n                nextDepth, length,\n                branchSelector,\n                boxValues,\n                modelRoot\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMaterialize.js","var isArray = Array.isArray;\nvar isPathValue = require('../support/isPathValue');\nvar isJSONEnvelope = require('../support/isJSONEnvelope');\nvar isJSONGraphEnvelope = require('../support/isJSONGraphEnvelope');\n\nmodule.exports = groupCacheArguments;\n\nfunction groupCacheArguments(args) {\n\n    var groups = [];\n    var argIndex = -1;\n    var argCount = args.length;\n    var group, groupType, arg, argType;\n\n    while (++argIndex < argCount) {\n        arg = args[argIndex];\n        if (isArray(arg)) {\n            arg = { path: arg };\n            argType = 'PathValues';\n        } else if (isPathValue(arg)) {\n            argType = 'PathValues';\n        } else if (isJSONGraphEnvelope(arg)) {\n            argType = 'JSONGraphs';\n        } else if (isJSONEnvelope(arg)) {\n            argType = 'PathMaps';\n        }\n\n        if (groupType !== argType) {\n            groupType = argType;\n            groups.push(group = {\n                arguments: [],\n                inputType: argType\n            });\n        }\n\n        group.arguments.push(arg);\n    }\n\n    return groups;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/groupCacheArguments.js","module.exports = function insertNode(node, parent, key, version, optimizedPath) {\n    node[f_key] = key;\n    node[f_parent] = parent;\n\n    if (version !== undefined) {\n        node[f_version] = version;\n    }\n    if (!node[f_abs_path]) {\n        node[f_abs_path] = optimizedPath.slice(0, optimizedPath.index).concat(key);\n    }\n\n    parent[key] = node;\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/insertNode.js","var arr = new Array(2);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\nvar getSize = require('../../support/getSize');\nvar createHardlink = require('../createHardlink');\nvar getBoundCacheNode = require('../getBoundCacheNode');\nvar isInternalKey = require('../../support/isInternalKey');\nvar updateNodeAncestors = require('../updateNodeAncestors');\n\n/**\n * Sets a list of PathMaps into a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of @PathMapEnvelopes to set.\n */\n\nmodule.exports = invalidatePathMaps;\n\nfunction invalidatePathMaps(model, pathMapEnvelopes, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var comparator = modelRoot._comparator;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n\n    if (!node) {\n        return false;\n    }\n\n    var pathMapIndex = -1;\n    var parent = node[f_parent] || cache;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n\n        invalidatePathMap(\n            pathMapEnvelope.json, 0, cache, parent, node,\n            version, expired, lru, comparator, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return true;\n    }\n\n    return false;\n}\n\nfunction invalidatePathMap(\n    pathMap, depth, root, parent, node, version,\n    expired, lru, comparator, expireImmediate) {\n\n    if (!pathMap || typeof pathMap !== 'object' || pathMap.$type) {\n        return;\n    }\n\n    for (var key in pathMap) {\n        if (!isInternalKey(key)) {\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n            arr = invalidateNode(\n                root, parent, node,\n                key, child, branch, false, version, expired,\n                lru, comparator, expireImmediate\n            );\n            var nextNode = arr[0];\n            var nextParent = arr[1];\n            if (nextNode) {\n                if (branch) {\n                    invalidatePathMap(\n                        child, depth + 1,\n                        root, nextParent, nextNode,\n                        version, expired, lru, comparator, expireImmediate\n                    );\n                } else {\n                    updateNodeAncestors(nextNode, getSize(nextNode), lru, version);\n                }\n            }\n        }\n    }\n}\n\nfunction invalidateReference(\n    value, root, node, version,\n    expired, lru, comparator, expireImmediate) {\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return arr;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[f_context];\n\n    if (node != null) {\n        parent = node[f_parent] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            arr = invalidateNode(\n                root, parent, node,\n                key, value, branch, true, version,\n                expired, lru, comparator, expireImmediate\n            );\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return arr;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\nfunction invalidateNode(\n    root, parent, node,\n    key, value, branch, reference, version,\n    expired, lru, comparator, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        arr = invalidateReference(\n            value, root, node, version, expired,\n            lru, comparator, expireImmediate\n        );\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return arr;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new Error('`null` is not allowed in branch key positions.');\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/invalidatePathMaps.js","var $now = require('../values/expires-now');\nvar getType = require('../support/getType');\nvar getSize = require('../support/getSize');\nvar getTimestamp = require('../support/getTimestamp');\n\nvar wrapNode = require('./wrapNode');\nvar isExpired = require('./isExpired');\nvar expireNode = require('./expireNode');\nvar insertNode = require('./insertNode');\nvar replaceNode = require('./replaceNode');\nvar reconstructPath = require('./reconstructPath');\nvar updateNodeAncestors = require('./updateNodeAncestors');\nvar removeNodeAndDescendants = require('./removeNodeAndDescendants');\n\nmodule.exports = function mergeValueOrInsertBranch(\n    parent, node, key, value,\n    branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var cType = getType(node, reference);\n\n    if (branch || reference) {\n        if (cType && isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge if it expires immediately\n             */\n            true)) {\n            expireNode(node, expired, lru);\n            cType = node.$expires === $now ? cType : 'expired';\n        }\n        if ((cType && cType !== $ref) || (!node || typeof node !== 'object')) {\n            node = replaceNode(node, {}, parent, key, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    } else {\n        var message = value;\n        var isDistinct = true;\n        var mType = getType(message);\n\n        // If both the cache and message are primitives,\n        // insert the message into the cache.\n        if (!cType && !mType) {\n            isDistinct = true;\n        }\n        // Compare the current cache value with the new value. If either of\n        // them don't have a timestamp, or the message's timestamp is newer,\n        // replace the cache value with the message value. If a comparator\n        // is specified, the comparator takes precedence over timestamps.\n        else if (comparator) {\n            isDistinct = !(comparator.length < 3 ?\n                comparator(node, message) : comparator(node, message,\n                    optimizedPath.slice(0, optimizedPath.index))\n            );\n        } else {\n            // Comparing either Number or undefined to undefined always results in false.\n            isDistinct = getTimestamp(message) < getTimestamp(node) === false;\n        }\n\n        if (isDistinct) {\n\n            if (errorSelector && mType === $error) {\n                message = errorSelector(reconstructPath(requestedPath, key), message);\n            }\n\n            var sizeOffset = getSize(node) - getSize(message =\n                wrapNode(message, mType, mType ? message.value : message));\n\n            node = replaceNode(node, message, parent, key, lru, version);\n            parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/mergeValueOrInsertBranch.js","/**\n * Reconstructs the path for the current key, from currentPath (requestedPath)\n * state maintained during set/merge walk operations.\n *\n * During the walk, since the requestedPath array is updated after we attempt to\n * merge/insert nodes during a walk (it reflects the inserted node's parent branch)\n * we need to reconstitute a path from it.\n *\n * @param  {Array} currentPath The current requestedPath state, during the walk\n * @param  {String} key        The current key value, during the walk\n * @return {Array} A new array, with the path which represents the node we're about\n * to insert\n */\nmodule.exports = function reconstructPath(currentPath, key) {\n\n    var path = currentPath.slice(0, currentPath.depth);\n    path[path.length] = key;\n\n    return path;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/reconstructPath.js","var transferBackReferences = require('./transferBackReferences');\nvar removeNodeAndDescendants = require('./removeNodeAndDescendants');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = function replaceNode(node, replacement, parent, key, lru, version) {\n    if (node === replacement) {\n        return node;\n    } else if (!(!node || typeof node !== 'object')) {\n        transferBackReferences(node, replacement);\n        removeNodeAndDescendants(node, parent, key, lru);\n        updateBackReferenceVersions(replacement, version);\n    }\n\n    parent[key] = replacement;\n    return replacement;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/replaceNode.js","var isArray = Array.isArray;\nvar now = require('../support/now');\nvar clone = require('./../support/clone');\nvar getSize = require('./../support/getSize');\nvar getExpires = require('../support/getExpires');\nvar expiresNow = require('../values/expires-now');\n\nvar atomSize = 50;\n\nmodule.exports = function wrapNode(nodeArg, typeArg, value) {\n\n    var size = 0;\n    var node = nodeArg;\n    var type = typeArg;\n\n    if (type) {\n        var modelCreated = node[f_wrapped_value];\n        node = clone(node);\n        size = getSize(node);\n        node.$type = type;\n        node[f_prev] = undefined;\n        node[f_next] = undefined;\n        node[f_wrapped_value] = modelCreated || false;\n    } else {\n        node = { $type: $atom, value: value };\n        node[f_prev] = undefined;\n        node[f_next] = undefined;\n        node[f_wrapped_value] = true;\n    }\n\n    if (value == null) {\n        size = atomSize + 1;\n    } else if (size == null || size <= 0) {\n        switch (typeof value) {\n            case 'object':\n                if (isArray(value)) {\n                    size = atomSize + value.length;\n                } else {\n                    size = atomSize + 1;\n                }\n                break;\n            case 'string':\n                size = atomSize + value.length;\n                break;\n            default:\n                size = atomSize + 1;\n                break;\n        }\n    }\n\n    var expires = getExpires(node);\n\n    if (typeof expires === 'number' && expires < expiresNow) {\n        node.$expires = now() + (expires * -1);\n    }\n\n    node.$size = size;\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/wrapNode.js","var createErrorClass = require('./createErrorClass');\n\nmodule.exports = createErrorClass('CircularReferenceError', function(referencePath) {\n    this.message = 'Encountered circular reference ' + JSON.stringify(referencePath);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/CircularReferenceError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'An exception was thrown when making a request';\n\n/**\n * InvalidSourceError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidSourceError', function(error) {\n    this.message = MESSAGE + ':\\n\\t' + error;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidSourceError.js","module.exports = function lruSplice(root, object) {\n\n    // Its in the cache.  Splice out.\n    var prev = object[f_prev];\n    var next = object[f_next];\n    if (next) {\n        next[f_prev] = prev;\n    }\n    if (prev) {\n        prev[f_next] = next;\n    }\n    object[f_prev] = object[f_next] = undefined;\n\n    if (object === root[f_head]) {\n        root[f_head] = next;\n    }\n    if (object === root[f_tail]) {\n        root[f_tail] = prev;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/splice.js","var Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar $$observable = require('symbol-observable').default;\n\nmodule.exports = Source;\n\nfunction Source(subscribe) {\n    if (!subscribe) {\n        return;\n    }\n    switch (typeof subscribe) {\n        case 'object':\n            this.source = subscribe;\n            break;\n        case 'function':\n            this.source = { subscribe: subscribe };\n            break;\n    }\n}\n\nSource.prototype[$$observable] = function() {\n    return this;\n}\n\nSource.prototype.operator = function(destination) {\n    return this.subscribe(destination);\n}\n\n// Unused\n// Source.prototype.lift = function(operator, source) {\n//     source = new Source(source || this);\n//     source.operator = operator;\n//     source._promise = this._promise;\n//     return source;\n// }\n\nSource.prototype.subscribe = function(destination, x, y) {\n    return new Subscription([\n        this.operator.call(\n            this.source, !(destination instanceof Subscriber) ?\n                new Subscriber(destination, x, y) : destination)\n    ]);\n}\n\nSource.prototype.then = function then(onNext, onError) {\n    /* global Promise */\n    var source = this;\n    if (!this._promise) {\n        this._promise = new global['Promise'](function(resolve, reject) {\n            var values = [], rejected = false;\n            source.subscribe({\n                next: function(value) { values[values.length] = value; },\n                error: function(errors) { (rejected = true) && reject(errors); },\n                complete: function() {\n                    !rejected &&\n                    resolve(values.length <= 1 ? values[0] : values);\n                }\n            });\n        });\n    }\n    return this._promise.then(onNext, onError);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Source.js","var empty = {\n    dispose: function() {},\n    unsubscribe: function() {}\n};\n\nfunction ImmediateScheduler() {}\n\nImmediateScheduler.prototype.schedule = function schedule(action) {\n    action();\n    return empty;\n};\n\nmodule.exports = ImmediateScheduler;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/schedulers/ImmediateScheduler.js","var isObject = require('./../support/isObject');\n\nmodule.exports = function isJSONEnvelope(envelope) {\n    return isObject(envelope) && ('json' in envelope);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isJSONEnvelope.js","var isArray = Array.isArray;\nvar isObject = require('./../support/isObject');\n\nmodule.exports = function isJSONGraphEnvelope(envelope) {\n    return isObject(envelope) && isArray(envelope.paths) && (\n        isObject(envelope.jsonGraph) ||\n        isObject(envelope.jsong) ||\n        isObject(envelope.json) ||\n        isObject(envelope.values) ||\n        isObject(envelope.value)\n    );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isJSONGraphEnvelope.js","module.exports = Date.now;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/now.js","module.exports = 1;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/values/expires-never.js","var Model = require('./Model');\nvar FalcorJSON = require('./cache/get/json/FalcorJSON');\n\nfunction falcor(opts) {\n    if (!(this instanceof Model)) {\n        return new Model(opts);\n    }\n    Model.call(this, opts);\n}\n\nfalcor.prototype = Object.create(Model.prototype);\n\nfalcor['Model'] = Model;\nfalcor['FalcorJSON'] = FalcorJSON;\nfalcor['toProps'] = FalcorJSON.prototype.toProps;\n\nmodule.exports = falcor;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/index.js","var isArray = Array.isArray;\nvar getHashCode = require('./getHashCode');\n\nmodule.exports = computeFlatBufferHash;\n\nfunction computeFlatBufferHash(seed) {\n\n    if (seed === undefined) {\n        return undefined;\n    }\n\n    var code = '';\n    var keys = seed['$keys'];\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    while (++keysIndex < keysLength) {\n\n        var key = keys[keysIndex];\n\n        if (key === null) {\n            code = '' + getHashCode('' + code + 'null');\n            continue;\n        } else if (typeof key === 'object') {\n            key = '[' + key.from + '..' + (key.from + key.length - 1) + ']';\n        }\n\n        var next = computeFlatBufferHash(seed[keysIndex]);\n        if (next === undefined) {\n            code = '' + getHashCode('' + code + key);\n        } else {\n            code = '' + getHashCode('' + code + key + next['$code']);\n        }\n    }\n\n    seed['$code'] = code;\n\n    return seed;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/computeFlatBufferHash.js","var isArray = Array.isArray;\nvar materializedAtom = require('./support/materializedAtom');\n\nmodule.exports = hasIntersection\n\n/**\n * Tests to see if the intersection should be stripped from the\n * total paths.  The only way this happens currently is if the entirety\n * of the path is contained in the tree.\n * @private\n */\n\nfunction hasIntersection(tree, path, depth, length) {\n\n    if (depth === length) {\n        return true;\n    }\n\n    var intersects = true;\n    var keyset, keysetIndex = -1, keysetLength = 0;\n    var next, nextKey, nextDepth = depth + 1,\n        keyIsRange, rangeEnd, keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return tree === materializedAtom;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                break iteratingKeyset;\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        do {\n            if (nextDepth === length) {\n                if (tree[nextKey] !== null) {\n                    return false;\n                }\n            } else {\n                next = tree[nextKey];\n                if (next === null || next === undefined) {\n                    return false;\n                } else if (hasIntersection(next, path, nextDepth, length) === false) {\n                    return false;\n                }\n            }\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/hasIntersection.js","var isArray = Array.isArray;\nvar nullBuffer = { '$keys': [null], '$keysMap': { 'null': 0 } };\nvar flatBufferToPaths = require('./flatBufferToPaths');\n\nmodule.exports = toFlatBuffer;\n\nfunction toFlatBuffer(paths, seed) {\n    return paths.reduce(function(seed, path) {\n        if (isArray(path)) {\n            return pathToFlatBuffer(seed, path, 0, path.length);\n        } else if (isArray(path.$keys)) {\n            return toFlatBuffer(flatBufferToPaths(path), seed);\n        }\n        return seed;\n    }, seed || {});\n}\n\nfunction pathToFlatBuffer(seed, path, depth, length) {\n\n    if (depth === length) {\n        return undefined;\n    }\n\n    seed = seed || {};\n    var keys = seed['$keys'] || (seed['$keys'] = []);\n    var keysMap = seed['$keysMap'] || (seed['$keysMap'] = {});\n    var keysIndex = -1;\n\n    var keyset, keysetIndex = -1, keysetLength = 0;\n    var node, next, nextKey, nextDepth = depth + 1,\n        rangeEnd, keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return nullBuffer;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            if ('undefined' === typeof (keysIndex = keysMap[nextKey])) {\n                keysIndex = keys.length;\n            }\n            keys[keysIndex] = nextKey;\n            keysMap[nextKey] = keysIndex;\n            next = pathToFlatBuffer(seed[keysIndex], path, nextDepth, length);\n            if (next !== undefined) {\n                seed[keysIndex] = next;\n            }\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                break iteratingKeyset;\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyset = { from: nextKey, length: rangeEnd - nextKey + 1 };\n            nextKey = '[' + nextKey + '..' + rangeEnd + ']';\n            if ('undefined' === typeof (keysIndex = keysMap[nextKey])) {\n                keysIndex = keys.length;\n            }\n            keys[keysIndex] = keyset;\n            keysMap[nextKey] = keysIndex;\n            next = pathToFlatBuffer(seed[keysIndex], path, nextDepth, length);\n            if (next !== undefined) {\n                seed[keysIndex] = next;\n            }\n        }\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return seed;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toFlatBuffer.js","var isArray = Array.isArray;\nvar materializedAtom = require('./support/materializedAtom');\n\nmodule.exports = toTree;\n\n/**\n * @param {Array} paths -\n * @returns {Object} -\n */\n\nfunction toTree(paths, seed) {\n    return paths.reduce(function(seed, path) {\n        return pathToTree(seed, path, 0, path.length, null);\n    }, seed || {});\n};\n\nfunction pathToTree(seed, path, depth, length, value) {\n\n    if (depth === length) {\n        return true;\n    }\n\n    seed = seed || {};\n\n    var keyset, keysetIndex = -1, keysetLength = 0;\n    var node, next, nextKey, nextDepth = depth + 1,\n        keyIsRange, rangeEnd, keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return materializedAtom;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                break iteratingKeyset;\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        do {\n            if (nextDepth === length) {\n                seed[nextKey] = value;\n            } else {\n                node = seed[nextKey];\n                next = pathToTree(node, path, nextDepth, length, value);\n                if (!next) {\n                    seed[nextKey] = value;\n                } else if (!node) {\n                    seed[nextKey] = next;\n                }\n            }\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return seed;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toTree.js","var Call = require('./request/Call');\nvar ModelRoot = require('./ModelRoot');\nvar FalcorJSON = require('./cache/get/json/FalcorJSON');\nvar ModelDataSourceAdapter = require('./ModelDataSourceAdapter');\nvar TimeoutScheduler = require('./schedulers/TimeoutScheduler');\nvar ImmediateScheduler = require('./schedulers/ImmediateScheduler');\nvar collapse = require('@graphistry/falcor-path-utils/lib/collapse');\n\nvar getSize = require('./support/getSize');\nvar isObject = require('./support/isObject');\nvar isJSONEnvelope = require('./support/isJSONEnvelope');\nvar getCachePosition = require('./cache/getCachePosition');\nvar isJSONGraphEnvelope = require('./support/isJSONGraphEnvelope');\n\nvar setCache = require('./cache/set/setPathMaps');\nvar setJSONGraphs = require('./cache/set/setJSONGraphs');\n\nvar getJSON = require('./cache/get/json');\nvar getCache = require('./cache/getCache');\nvar getJSONGraph = require('./cache/get/jsonGraph');\n\nmodule.exports = Model;\n\n/**\n * This callback is invoked when the Model's cache is changed.\n * @callback Model~onChange\n */\n\n /**\n * This function is invoked on every JSONGraph Error retrieved from the DataSource. This function allows Error objects to be transformed before being stored in the Model's cache.\n * @callback Model~errorSelector\n * @param {Object} jsonGraphError - the JSONGraph Error object to transform before it is stored in the Model's cache.\n * @returns {Object} the JSONGraph Error object to store in the Model cache.\n */\n\n /**\n * This function is invoked every time a value in the Model cache is about to be replaced with a new value. If the function returns true, the existing value is replaced with a new value and the version flag on all of the value's ancestors in the tree are incremented.\n * @callback Model~comparator\n * @param {Object} existingValue - the current value in the Model cache.\n * @param {Object} newValue - the value about to be set into the Model cache.\n * @returns {Boolean} the Boolean value indicating whether the new value and the existing value are equal.\n */\n\n/**\n * A Model object is used to execute commands against a {@link JSONGraph} object. {@link Model}s can work with a local JSONGraph cache, or it can work with a remote {@link JSONGraph} object through a {@link DataSource}.\n * @constructor\n * @param {?Object} options - a set of options to customize behavior\n * @param {?DataSource} options.source - a data source to retrieve and manage the {@link JSONGraph}\n * @param {?JSONGraph} options.cache - initial state of the {@link JSONGraph}\n * @param {?number} options.maxSize - the maximum size of the cache. This value roughly correlates to item count (where itemCount = maxSize / 50). Each item by default is given a metadata `$size` of 50 (or its length when it's an array or string). You can get better control of falcor's memory usage by tweaking `$size`\n * @param {?number} options.collectRatio - the ratio of the maximum size to collect when the maxSize is exceeded\n * @param {?Model~errorSelector} options.errorSelector - a function used to translate errors before they are returned\n * @param {?Model~onChange} options.onChange - a function called whenever the Model's cache is changed\n * @param {?Model~comparator} options.comparator - a function called whenever a value in the Model's cache is about to be replaced with a new value.\n */\nfunction Model(opts) {\n\n    var options = opts || {};\n\n    this._node = options._node;\n    this._path = options._path || [];\n    this._source = options.source || options._source;\n    this._root = options._root || new ModelRoot(options, this);\n    this._recycleJSON = options.recycleJSON === true || options._recycleJSON;\n    this._scheduler = options.scheduler || options._scheduler || new ImmediateScheduler();\n\n    if (options._seed) {\n        this._recycleJSON = true;\n        this._seed = options._seed;\n        this._treatErrorsAsValues = true;\n    } else if (this._recycleJSON) {\n        this._treatErrorsAsValues = true;\n        this._seed = {};\n        this._seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    this._boxed = options.boxed === true || options._boxed || false;\n    this._materialized = options.materialized === true || options._materialized || false;\n    this._treatErrorsAsValues = options.treatErrorsAsValues === true || options._treatErrorsAsValues || false;\n    this._allowFromWhenceYouCame = options.allowFromWhenceYouCame === true || options._allowFromWhenceYouCame || false;\n\n    if (options.cache) {\n        this.setCache(options.cache);\n    }\n}\n\nModel.prototype.constructor = Model;\n\n/**\n * The get method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model}. The get method loads each value into a JSON object and returns in a ModelResponse.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - the requested data as JSON\n */\nModel.prototype.get = function get(...args) {\n    var seed = this._seed;\n    if (!seed) {\n        seed = {};\n        seed.__proto__ = FalcorJSON.prototype;\n    }\n    return new Call('get', this, args)._toJSON(seed, []);\n}\n\n/**\n * Sets the value at one or more places in the JSONGraph model. The set method accepts one or more {@link PathValue}s, each of which is a combination of a location in the document and the value to place there.  In addition to accepting  {@link PathValue}s, the set method also returns the values after the set operation is complete.\n * @function\n * @return {ModelResponse.<JSONEnvelope>} - an {@link Observable} stream containing the values in the JSONGraph model after the set was attempted\n */\nModel.prototype.set = function set(...args) {\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n    return new Call('set', this, args)._toJSON(seed, []);\n}\n\n/**\n * The preload method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model} and loads them into the Model cache.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - a ModelResponse that completes when the data has been loaded into the cache.\n */\nModel.prototype.preload = function preload(...args) {\n    return new Call('get', this, args)._toJSON(null, []);\n}\n\n/**\n * Invokes a function in the JSON Graph.\n * @function\n * @param {Path} functionPath - the path to the function to invoke\n * @param {Array.<Object>} args - the arguments to pass to the function\n * @param {Array.<PathSet>} refPaths - the paths to retrieve from the JSON Graph References in the message returned from the function\n * @param {Array.<PathSet>} thisPaths - the paths to retrieve from function's this object after successful function execution\n * @return {ModelResponse.<JSONEnvelope> - a JSONEnvelope contains the values returned from the function\n */\n\nModel.prototype.call = function call(...args) {\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n    return new Call('call', this, args)._toJSON(seed, []);\n}\n\n/**\n * The invalidate method synchronously removes several {@link Path}s or {@link PathSet}s from a {@link Model} cache.\n * @function\n * @param {...PathSet} path - the  paths to remove from the {@link Model}'s cache.\n */\nModel.prototype.invalidate = function invalidate(...args) {\n    return new Call('invalidate', this, args)._toJSON(null, null).then();\n}\n\n/**\n * Returns a new {@link Model} bound to a location within the {@link\n * JSONGraph}. The bound location is never a {@link Reference}: any {@link\n * Reference}s encountered while resolving the bound {@link Path} are always\n * replaced with the {@link Reference}s target value. For subsequent operations\n * on the {@link Model}, all paths will be evaluated relative to the bound\n * path. Deref allows you to:\n * - Expose only a fragment of the {@link JSONGraph} to components, rather than\n *   the entire graph\n * - Hide the location of a {@link JSONGraph} fragment from components\n * - Optimize for executing multiple operations and path looksup at/below the\n *   same location in the {@link JSONGraph}\n * @method\n * @param {Object} responseObject - an object previously retrieved from the\n * Model\n * @return {Model} - the dereferenced {@link Model}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.deref = require('./deref');\n\n/**\n * A dereferenced model can become invalid when the reference from which it was\n * built has been removed/collected/expired/etc etc.  To fix the issue, a from\n * the parent request should be made (no parent, then from the root) for a valid\n * path and re-dereference performed to update what the model is bound too.\n *\n * @method\n * @private\n * @return {Boolean} - If the currently deref'd model is still considered a\n * valid deref.\n */\nModel.prototype._hasValidParentReference = require('./deref/hasValidParentReference');\n\n/**\n * Get data for a single {@link Path}.\n * @param {Path} path - the path to retrieve\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     getValue('user.name').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.getValue = function getValue(path) {\n    return new Call('get', this, [path])\n        ._toJSON({}, [])\n        .lift(function(subscriber) {\n            return this.subscribe({\n                onNext: function(data) {\n                    var depth = -1;\n                    var x = data.json;\n                    var length = path.length;\n                    while (x && !x.$type && ++depth < length) {\n                        x = x[path[depth]];\n                    }\n                    subscriber.onNext(x);\n                },\n                onError: subscriber.onError.bind(subscriber),\n                onCompleted: subscriber.onCompleted.bind(subscriber)\n            })\n        });\n}\n\n/**\n * Set value for a single {@link Path}.\n * @param {Path} path - the path to set\n * @param {Object} value - the value to set\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     setValue('user.name', 'Jim').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.setValue = function setValue(path, value) {\n    path = arguments.length === 1 ? path.path : path;\n    value = arguments.length === 1 ? path : {path:path,value:value};\n    return new Call('set', this, [value])\n        ._toJSON({}, [])\n        .lift(function(subscriber) {\n            return this.subscribe({\n                onNext: function(data) {\n                    var depth = -1;\n                    var x = data.json;\n                    var length = path.length;\n                    while (x && !x.$type && ++depth < length) {\n                        x = x[path[depth]];\n                    }\n                    subscriber.onNext(x);\n                },\n                onError: subscriber.onError.bind(subscriber),\n                onCompleted: subscriber.onCompleted.bind(subscriber)\n            })\n        });\n}\n\n/**\n * Set the local cache to a {@link JSONGraph} fragment. This method can be a useful way of mocking a remote document, or restoring the local cache from a previously stored state.\n * @param {JSONGraph} jsonGraph - the {@link JSONGraph} fragment to use as the local cache\n */\nModel.prototype.setCache = function modelSetCache(cacheOrJSONGraphEnvelope) {\n\n    var modelRoot = this._root;\n    var cache = modelRoot.cache;\n\n    if (cacheOrJSONGraphEnvelope !== cache) {\n\n        var options = {\n            _path: [],\n            _boxed: false,\n            _root: modelRoot,\n            _materialized: false,\n            _treatErrorsAsValues: false\n        };\n\n        modelRoot.cache = this._node = {};\n\n        if (typeof cache !== 'undefined') {\n            modelRoot.expired = [];\n            modelRoot[f_head] = undefined;\n            modelRoot[f_tail] = undefined;\n            if (this._recycleJSON) {\n                this._seed = {};\n                this._seed.__proto__ = FalcorJSON.prototype;\n            }\n        }\n\n        var results, rootOnChangeHandler;\n        if (isJSONGraphEnvelope(cacheOrJSONGraphEnvelope)) {\n            results = setJSONGraphs(options, [cacheOrJSONGraphEnvelope]);\n        } else if (isJSONEnvelope(cacheOrJSONGraphEnvelope)) {\n            results = setCache(options, [cacheOrJSONGraphEnvelope]);\n        } else if (isObject(cacheOrJSONGraphEnvelope)) {\n            results = setCache(options, [{ json: cacheOrJSONGraphEnvelope }]);\n        }\n\n        if (results) {\n            // performs promotion without producing output.\n            if (results[0].length) {\n                getJSON(options, results[0], null, false, false);\n            }\n            if (results[2] && (rootOnChangeHandler = modelRoot.onChange)) {\n                rootOnChangeHandler();\n            }\n        }\n    } else if (typeof cache === 'undefined') {\n        this._root.cache = {};\n    }\n    return this;\n};\n\n/**\n * Get the local {@link JSONGraph} cache. This method can be a useful to store the state of the cache.\n * @param {...Array.<PathSet>} [pathSets] - The path(s) to retrieve. If no paths are specified, the entire {@link JSONGraph} is returned.\n * @return {JSONGraph} all of the {@link JSONGraph} data in the {@link Model} cache.\n * @example\n // Storing the boxshot of the first 10 titles in the first 10 genreLists to local storage.\n localStorage.setItem('cache', JSON.stringify(model.getCache('genreLists[0...10][0...10].boxshot')));\n */\nModel.prototype.getCache = function _getCache() {\n\n    var paths = Array.prototype.slice.call(arguments, 0);\n\n    if (paths.length === 0) {\n        return getCache(this._root.cache);\n    }\n\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n\n    var env = getJSONGraph({\n        _path: [],\n        _root: this._root,\n        _boxed: this._boxed,\n        _materialized: this._materialized,\n        _treatErrorsAsValues: this._treatErrorsAsValues\n    }, paths, seed).data;\n\n    env.paths = collapse(paths);\n\n    return env;\n};\n\n/**\n * Retrieves a number which is incremented every single time a value is changed underneath the Model or the object at an optionally-provided Path beneath the Model.\n * @param {Path?} path - a path at which to retrieve the version number\n * @return {Number} a version number which changes whenever a value is changed underneath the Model or provided Path\n */\nModel.prototype.getVersion = function getVersion(path) {\n    path = path || [];\n    if (Array.isArray(path) === false) {\n        throw new Error('Model#getVersion must be called with an Array path.');\n    }\n    if (this._path.length) {\n        path = this._path.concat(path);\n    }\n    return this._getVersion(this, path);\n};\n\n/* eslint-disable guard-for-in */\nModel.prototype._clone = function cloneModel(opts) {\n    var clone = new Model(this);\n    if (opts) {\n        for (var key in opts) {\n            var value = opts[key];\n            if (value === 'delete') {\n                delete clone[key];\n            } else if (key === '_path') {\n                clone[key] = value;\n                if (false === opts.hasOwnProperty('_node')) {\n                    delete clone['_node'];\n                }\n            } else {\n                clone[key] = value;\n            }\n        }\n    }\n    if (clone._path.length > 0) {\n        clone.setCache = void 0;\n    }\n    return clone;\n};\n/* eslint-enable */\n\n/**\n * Returns a clone of the {@link Model} that enables batching. Within the configured time period, paths for get operations are collected and sent to the {@link DataSource} in a batch. Batching can be more efficient if the {@link DataSource} access the network, potentially reducing the number of HTTP requests to the server.\n * @param {?Scheduler|number} schedulerOrDelay - Either a {@link Scheduler} that determines when to send a batch to the {@link DataSource}, or the number in milliseconds to collect a batch before sending to the {@link DataSource}. If this parameter is omitted, then batch collection ends at the end of the next tick.\n * @return {Model} a Model which schedules a batch of get requests to the DataSource.\n */\nModel.prototype.batch = function batch(schedulerOrDelay) {\n\n    var scheduler;\n\n    if (typeof schedulerOrDelay === 'number') {\n        scheduler = new TimeoutScheduler(Math.round(Math.abs(schedulerOrDelay)));\n    } else if (!schedulerOrDelay) {\n        scheduler = new TimeoutScheduler(1);\n    } else if (typeof schedulerOrDelay.schedule === 'function') {\n        scheduler = schedulerOrDelay;\n    } else if (typeof schedulerOrDelay === 'function') {\n        scheduler = { scheudle: schedulerOrDelay };\n    }\n\n    return this._clone({ _scheduler: scheduler });\n};\n\n/**\n * Returns a clone of the {@link Model} that disables batching. This is the default mode. Each get operation will be executed on the {@link DataSource} separately.\n * @name unbatch\n * @memberof Model.prototype\n * @function\n * @return {Model} a {@link Model} that batches requests of the same type and sends them to the data source together\n */\nModel.prototype.unbatch = function unbatch() {\n    return this._clone({ _scheduler: new ImmediateScheduler() });\n};\n\n/**\n * Returns a clone of the {@link Model} that treats errors as values. Errors will be reported in the same callback used to report data. Errors will appear as objects in responses, rather than being sent to the {@link Observable~onErrorCallback} callback of the {@link ModelResponse}.\n * @return {Model}\n */\nModel.prototype.treatErrorsAsValues = function treatErrorsAsValues() {\n    return this._clone({ _treatErrorsAsValues: true });\n};\n\n/**\n * Adapts a Model to the {@link DataSource} interface.\n * @return {DataSource}\n * @example\nvar model =\n    new falcor.Model({\n        cache: {\n            user: {\n                name: 'Steve',\n                surname: 'McGuire'\n            }\n        }\n    }),\n    proxyModel = new falcor.Model({ source: model.asDataSource() });\n\n// Prints 'Steve'\nproxyModel.getValue('user.name').\n    then(function(name) {\n        console.log(name);\n    });\n */\nModel.prototype.asDataSource = function asDataSource() {\n    return new ModelDataSourceAdapter(this);\n};\n\nModel.prototype._materialize = function materialize() {\n    return this._clone({\n        _materialized: true\n    });\n};\n\nModel.prototype._dematerialize = function dematerialize() {\n    return this._clone({\n        _materialized: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that boxes values returning the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the value inside it. This allows any metadata attached to the wrapper to be inspected.\n * @return {Model}\n */\nModel.prototype.boxValues = function boxValues() {\n    return this._clone({\n        _boxed: true\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that unboxes values, returning the value inside of the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the wrapper itself. This is the default mode.\n * @return {Model}\n */\nModel.prototype.unboxValues = function unboxValues() {\n    return this._clone({\n        _boxed: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that only uses the local {@link JSONGraph} and never uses a {@link DataSource} to retrieve missing paths.\n * @return {Model}\n */\nModel.prototype.withoutDataSource = function withoutDataSource() {\n    return this._clone({\n        _source: 'delete'\n    });\n};\n\n/* implement inspect method for node's inspect utility */\nModel.prototype.inspect = function inspect() {\n    return '{ v: ' + this.getVersion() + ' p: [' + this._path.join(', ') + '] }';\n}\n\nModel.prototype.toJSON = function toJSON() {\n    return {\n        $type: 'ref',\n        value: this.getPath()\n    };\n};\n\n/**\n * Returns the {@link Path} to the object within the JSON Graph that this Model references.\n * @return {Path}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.getPath = function getPath() {\n    return this._path.slice(0);\n};\n\n/**\n * This one is actually private.  I would not use this without talking to\n * jhusain, sdesai, or michaelbpaulson (github).\n * @private\n */\nModel.prototype._fromWhenceYouCame = function fromWhenceYouCame(allow) {\n    return this._clone({\n        _allowFromWhenceYouCame: allow === undefined ? true : allow\n    });\n};\n\nModel.prototype._optimizePath = function _optimizePath(path) {\n    var node = getCachePosition(this._root.cache, path);\n    var abs_path = node && node[f_abs_path] || [];\n    return abs_path.slice(0);\n};\n\nModel.prototype._getVersion = require('./cache/getVersion');\nModel.prototype._getPathValuesAsPathMap = getJSON;\nModel.prototype._getPathValuesAsJSONG = getJSONGraph;\n\nModel.prototype._setPathValues = require('./cache/set/setPathValues');\nModel.prototype._setPathMaps = require('./cache/set/setPathMaps');\nModel.prototype._setJSONGs = require('./cache/set/setJSONGraphs');\nModel.prototype._setCache = require('./cache/set/setPathMaps');\n\nModel.prototype._invalidatePathValues = require('./cache/invalidate/invalidatePathSets');\nModel.prototype._invalidatePathMaps = require('./cache/invalidate/invalidatePathMaps');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Model.js","function ModelDataSourceAdapter(model) {\n    this._model = model\n        // .boxValues()\n        ._materialize().treatErrorsAsValues();\n}\n\nModelDataSourceAdapter.prototype.get = function get(pathSets) {\n    return this._model.get.apply(this._model, pathSets)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.set = function set(jsongResponse) {\n    return this._model.set(jsongResponse)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.call = function call(path, args, suffixes, paths) {\n    return this._model.call.apply(this._model, [\n        path, args, suffixes\n    ].concat(paths))._toJSONG();\n};\n\nmodule.exports = ModelDataSourceAdapter;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ModelDataSourceAdapter.js","var functionTypeof = 'function';\nvar Requests = require('./request/Queue');\nvar getTimestamp = require('./support/getTimestamp');\n\nfunction ModelRoot(o, model) {\n\n    var options = o || {};\n\n    this.cache = {};\n    this.version = -1;\n    this.syncRefCount = 0;\n    this.maxRetryCount = 10;\n    this.topLevelModel = model;\n    this.requests = new Requests(this);\n    this.expired = options.expired || [];\n\n    this.collectRatio = 0.75;\n    this.maxSize = Math.pow(2, 53) - 1;\n\n    if (typeof options.collectRatio === 'number') {\n        this.collectRatio = options.collectRatio;\n    }\n\n    if (typeof options.maxSize === 'number') {\n        this.maxSize = options.maxSize;\n    }\n\n    if (typeof options.comparator === functionTypeof) {\n        this.comparator = options.comparator;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.errorSelector === functionTypeof) {\n        this.errorSelector = options.errorSelector;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.onChange === functionTypeof) {\n        this.onChange = options.onChange;\n    }\n\n    if (typeof options.onChangesCompleted === functionTypeof) {\n        this.onChangesCompleted = options.onChangesCompleted;\n    }\n}\n\nfunction defaultCompare(node, message) {\n    var cType = node && node.$type;\n    var mType = message && message.$type;\n    if (cType) {\n        // If the cache has a type, but the message is a primitive,\n        // the message might be the primitive response from the datasource.\n        // If so, return true, so we don't update the back-reference versions.\n        if (!mType) {\n            return node.value === message;\n        }\n        // If the message is older than the cache node, then isDistinct = false\n        else if (getTimestamp(message) < getTimestamp(node) === true) {\n            return true; // isDistinct = false\n        }\n        // Otherwise they are the same if all the following fields are the same.\n        return !(\n            cType !== mType ||\n            node.value !== message.value ||\n            node.$expires !== message.$expires\n        );\n    }\n    // If cache doesn't have a type but the message\n    // does, they must be different.\n    else if (mType) {\n        return false;\n    }\n    return node === message;\n}\n\nModelRoot.comparator = ModelRoot.prototype.comparator = defaultCompare;\n\nmodule.exports = ModelRoot;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ModelRoot.js","var getJSON = require('../get/json');\nvar getJSONGraph = require('../get/jsonGraph');\n\nmodule.exports = { json: json, jsonGraph: jsonGraph };\n\nfunction json(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue =  getJSON(model, thisPaths, data, progressive, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [\n            path, args, suffixes, thisPaths\n        ]\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed,\n            _materialized: model._materialized,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, thisPaths, data, true, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [\n            path, args, suffixes, thisPaths\n        ]\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/call/index.js","module.exports = {\n    json: require('./json/getJSON'),\n    jsonGraph: require('./jsonGraph/getJSONGraph')\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/index.js","var clone = require('../../clone');\n\nmodule.exports = onError;\n\nfunction onError(node, depth, results,\n                 requestedPath, fromReference, boxValues) {\n\n    var index = -1;\n    var length = depth + !!fromReference; // depth + 1 if fromReference === true\n    var errorPath = new Array(length);\n    var errorValue = !boxValues ? node.value : clone(node);\n\n    while (++index < length) {\n        errorPath[index] = requestedPath[index];\n    }\n\n    (results.errors || (results.errors = [])).push({\n        path: errorPath,\n        value: errorValue\n    });\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/onError.js","var arr = new Array(2);\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar onValue = require('./onValue');\nvar FalcorJSON = require('./FalcorJSON');\nvar isExpired = require('../../isExpired');\nvar onValueType = require('../onValueType');\nvar originalOnMissing = require('../onMissing');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar onMaterialize = require('../onMaterializeFlatBuffer');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar getHashCode = require('@graphistry/falcor-path-utils/lib/getHashCode');\nvar flatBufferToPaths = require('@graphistry/falcor-path-utils/lib/flatBufferToPaths');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, json, path,\n                                depth, seed, results, requestedPath,\n                                optimizedPath, optimizedLength,\n                                fromReference, referenceContainer,\n                                modelRoot, expired, expireImmediate,\n                                branchSelector, boxValues, materialized,\n                                hasDataSource, treatErrorsAsValues,\n                                allowFromWhenceYouCame) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === node ||\n        undefined !== (type = node.$type) ||\n        undefined === path) {\n        arr[1] = hasDataSource && node === undefined;\n        arr[0] = onValueType(node, type, json,\n                             path, depth, seed, results,\n                             requestedPath, depth,\n                             optimizedPath, optimizedLength,\n                             fromReference, modelRoot, expired, expireImmediate,\n                             branchSelector, boxValues, materialized, hasDataSource,\n                             treatErrorsAsValues, onValue, onMissing, onMaterialize);\n        return arr;\n    }\n\n    var f_meta, f_old_keys, f_new_keys, f_code = '';\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        keys = path['$keys'],\n        nodeAbsPath, jsonAbsPath,\n        nextDepth = depth + 1, rangeEnd,\n        nextJSON, nextReferenceContainer,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath, refContainerRefPath;\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[f_abs_path];\n    }\n\n    if (!json || typeofObject !== typeof json) {\n        json = undefined;\n    } else if (f_meta = json[f_meta_data]) {\n\n        nodeAbsPath = node[f_abs_path];\n        jsonAbsPath = f_meta[f_meta_abs_path];\n\n        if (!branchSelector && !(json instanceof FalcorJSON)) {\n            json.__proto__ = {};\n            json.__proto__[f_meta_data] = f_meta;\n            json.__proto__.__proto__ = FalcorJSON.prototype;\n        }\n\n        if (!arrayEqual(nodeAbsPath, jsonAbsPath)) {\n            f_meta['$code'] = '';\n            f_meta[f_meta_status] = 'pending';\n            f_meta[f_meta_abs_path] = nodeAbsPath;\n            f_meta[f_meta_version] = node[f_version];\n            refContainerRefPath && (f_meta[f_meta_deref_to] = refContainerRefPath);\n            refContainerAbsPath && (f_meta[f_meta_deref_from] = refContainerAbsPath);\n            if (f_old_keys = f_meta[f_meta_keys]) {\n                f_meta[f_meta_keys] = Object.create(null);\n                for (nextKey in f_old_keys) {\n                    if (f_old_keys[nextKey]) {\n                        delete json[nextKey];\n                    }\n                }\n            }\n            arr[0] = json;\n            arr[1] = true;\n            return arr;\n        } else if (!(\n            f_meta[f_meta_version]  !== node[f_version]  ||\n            f_meta['$code']         !== path['$code'])) {\n            results.hasValue = true;\n            arr[0] = json;\n            arr[1] = false;\n            return arr;\n        }\n\n        f_old_keys = f_meta[f_meta_keys];\n        f_meta[f_meta_abs_path] = nodeAbsPath;\n        f_meta[f_meta_version] = node[f_version];\n        refContainerRefPath && (f_meta[f_meta_deref_to] = refContainerRefPath);\n        refContainerAbsPath && (f_meta[f_meta_deref_from] = refContainerAbsPath);\n    }\n\n    f_new_keys = Object.create(null);\n\n    var keysIndex = -1;\n    var keysLength = keys.length;\n    var nextPath, nextPathKey,\n        hasMissingPath = false;\n\n    iteratingKeyset:\n    while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            f_code = '' + getHashCode('' + f_code + 'null');\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n            nextPathKey = nextKey;\n        }\n        // If the Keyset isn't null or primitive, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n            nextPathKey = '[' + nextKey + '..' + rangeEnd + ']';\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextPath === undefined) {\n\n                arr = walkPathAndBuildOutput(\n                    root, next, nextJSON, nextPath, nextDepth, seed,\n                    results, requestedPath, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined && !materialized) {\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n            else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                    // If the reference is expired, it will be invalidated and\n                    // reported as missing in the next call to walkPath below.\n                    next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                arr = walkPathAndBuildOutput(\n                    root, next, nextJSON, nextPath, nextDepth, seed,\n                    results, requestedPath, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined) {\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = {};\n                f_meta[f_meta_version] = node[f_version];\n                f_meta[f_meta_abs_path] = node[f_abs_path];\n                refContainerRefPath && (f_meta[f_meta_deref_to] = refContainerRefPath);\n                refContainerAbsPath && (f_meta[f_meta_deref_from] = refContainerAbsPath);\n                json = {};\n                json[f_meta_data] = f_meta;\n                json.__proto__ = FalcorJSON.prototype;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                // node creation to them.\n                if (branchSelector) {\n                    json = branchSelector(json);\n                } else {\n                    var tmp = json;\n                    json = {};\n                    json.__proto__ = tmp;\n                    tmp = undefined;\n                }\n            }\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && (nextKey in f_old_keys)) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        f_code = '' + getHashCode('' + f_code +\n                                 ( !hasMissingPath ? nextPathKey : '') +\n                                 (  nextPath ? nextPath['$code'] : ''));\n    }\n\n    if (f_meta) {\n        f_meta['$code'] = f_code;\n        f_meta[f_meta_keys] = f_new_keys;\n        f_meta[f_meta_status] = hasMissingPath && 'pending' || 'resolved';\n        if (f_old_keys) {\n            for (nextKey in f_old_keys) {\n                if (f_old_keys[nextKey]) {\n                    delete json[nextKey];\n                }\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n\n    arr[0] = json;\n    arr[1] = hasMissingPath;\n\n    return arr;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, json, branchSelector,\n                   boxValues, onMaterialize, modelRoot) {\n\n    if (reportMaterialized) {\n        return onMaterialize(json, path, depth, depth, branchSelector,\n                             boxValues, modelRoot, results, requestedPath, optimizedPath,\n                             optimizedLength, fromReference, reportMissing, onMissing);\n    }\n\n    var paths = path ? flatBufferToPaths(path) : [[]];\n    var rPath = requestedPath.slice(0, requestedLength);\n\n    return paths.forEach(function(restPath) {\n        requestedLength = depth + restPath.length;\n        return originalOnMissing(rPath.concat(restPath), depth, results,\n                                 requestedPath, requestedLength, fromReference,\n                                 optimizedPath, optimizedLength, reportMissing,\n                                 false, json, branchSelector,\n                                 boxValues, onMaterialize, modelRoot);\n    });\n}\n\nfunction arrayEqual(xs, ys) {\n    if (xs === ys) {\n        return true;\n    }\n    var len = xs.length;\n    if (len !== ys.length) {\n        return false;\n    }\n    while (~--len) {\n        if (xs[len] !== ys[len]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/walkFlatBuffer.js","var arr = new Array(2);\nvar isArray = Array.isArray;\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar onValue = require('./onValue');\nvar onMissing = require('../onMissing');\nvar FalcorJSON = require('./FalcorJSON');\nvar onValueType = require('../onValueType');\nvar isExpired = require('../../isExpired');\nvar onMaterialize = require('../onMaterialize');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, json, path,\n                                depth, seed, results,\n                                requestedPath, requestedLength,\n                                optimizedPath, optimizedLength,\n                                fromReference, referenceContainer,\n                                modelRoot, expired, expireImmediate,\n                                branchSelector, boxValues, materialized,\n                                hasDataSource, treatErrorsAsValues,\n                                allowFromWhenceYouCame) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (\n        type = node.$type) || (\n        depth === requestedLength)) {\n        arr[1] = hasDataSource && node === undefined;\n        arr[0] = onValueType(node, type, json,\n                             path, depth, seed, results,\n                             requestedPath, requestedLength,\n                             optimizedPath, optimizedLength,\n                             fromReference, modelRoot, expired, expireImmediate,\n                             branchSelector, boxValues, materialized, hasDataSource,\n                             treatErrorsAsValues, onValue, onMissing, onMaterialize);\n        return arr;\n    }\n\n    var f_meta;\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        nextJSON, nextReferenceContainer,\n        keysetIndex = -1, keysetLength = 0,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath, refContainerRefPath;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        arr[0] = json;\n        arr[1] = false;\n        return arr;\n    }\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[f_abs_path];\n    }\n\n    if (!json || typeofObject !== typeof json) {\n        json = undefined;\n    } else if (f_meta = json[f_meta_data]) {\n        f_meta[f_meta_version] = node[f_version];\n        f_meta[f_meta_abs_path] = node[f_abs_path];\n        refContainerRefPath && (f_meta[f_meta_deref_to] = refContainerRefPath);\n        refContainerAbsPath && (f_meta[f_meta_deref_from] = refContainerAbsPath);\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n     var hasMissingPath = false;\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextDepth === requestedLength) {\n\n                arr = walkPathAndBuildOutput(\n                    root, next, nextJSON, path, nextDepth, seed,\n                    results, requestedPath, requestedLength, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined && !materialized) {\n                    continue;\n                }\n            }\n            else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                    // If the reference is expired, it will be invalidated and\n                    // reported as missing in the next call to walkPath below.\n                    next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                arr = walkPathAndBuildOutput(\n                    root, next, nextJSON, path, nextDepth, seed,\n                    results, requestedPath, requestedLength, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined) {\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = {};\n                f_meta[f_meta_version] = node[f_version];\n                f_meta[f_meta_abs_path] = node[f_abs_path];\n                refContainerRefPath && (f_meta[f_meta_deref_to] = refContainerRefPath);\n                refContainerAbsPath && (f_meta[f_meta_deref_from] = refContainerAbsPath);\n                json = {};\n                json[f_meta_data] = f_meta;\n                json.__proto__ = FalcorJSON.prototype;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                // node creation to them.\n                if (branchSelector) {\n                    json = branchSelector(json);\n                }\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    if (f_meta) {\n        f_meta[f_meta_status] = hasMissingPath && 'pending' || 'resolved';\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    arr[0] = json;\n    arr[1] = hasMissingPath;\n\n    return arr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/walkPath.js","var arr = new Array(2);\nvar clone = require('../../clone');\nvar inlineValue = require('./inlineValue');\nvar promote = require('../../../lru/promote');\nvar isExpired = require('../../isExpired');\nvar createHardlink = require('../../createHardlink');\nvar CircularReferenceError = require('../../../errors/CircularReferenceError');\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, ref, modelRoot, seed, expireImmediate) {\n\n    promote(modelRoot, ref);\n\n    var context,\n        key, type, depth = 0,\n        node = root, path = ref.value,\n        copy = path, length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[f_context])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                throw new CircularReferenceError(path);\n            }\n            // If the node we land on isn't the existing ref context,\n            // create a hard-link between the reference and the node\n            // it points to.\n            else if (node !== context) {\n                createHardlink(ref, node);\n            }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === $ref) {\n\n                promote(modelRoot, node);\n\n                seed && inlineValue(clone(node), path, length, seed);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n\n    return arr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/getReferenceTarget.js","var typeofObject = 'object';\nvar clone = require('../../clone');\nvar inlineValue = require('./inlineValue');\n\nmodule.exports = onJSONGraphValue;\n\nfunction onJSONGraphValue(node, type, depth, seed, results,\n                          requestedPath, optimizedPath, optimizedLength,\n                          fromReference, boxValues, materialized) {\n\n    var value = node.value;\n\n    // boxValues always clones the node\n    if (boxValues || !(\n        /**\n         * JSON Graph should always clone:\n         * - refs\n         * - errors\n         * - atoms we didn't create\n         * - atoms we created to wrap Objects\n         **/\n        $ref !== type &&\n        $error !== type &&\n        node[f_wrapped_value] &&\n        typeofObject !== typeof value)) {\n        value = clone(node);\n    }\n\n    results.hasValue = true;\n    inlineValue(value, optimizedPath, optimizedLength, seed);\n    (seed.paths || (seed.paths = [])).push(\n        requestedPath.slice(0, depth + !!fromReference) // depth + 1 if fromReference === true\n    );\n\n    return value;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/onValue.js","var isArray = Array.isArray;\nvar clone = require('../../clone');\nvar onValue = require('./onValue');\nvar inlineValue = require('./inlineValue');\nvar isExpired = require('../../isExpired');\nvar onValueType = require('../onValueType');\nvar onMaterialize = require('../onMaterialize');\nvar originalOnMissing = require('../onMissing');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, path,\n                                depth, seed, results,\n                                requestedPath, requestedLength,\n                                optimizedPath, optimizedLength,\n                                fromReference, modelRoot, expired, expireImmediate,\n                                boxValues, materialized, hasDataSource, treatErrorsAsValues) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (\n        type = node.$type) || (\n        depth === requestedLength)) {\n        return onValueType(node, type, seed,\n                           path, depth, seed, results,\n                           requestedPath, requestedLength,\n                           optimizedPath, optimizedLength,\n                           fromReference, modelRoot, expired, expireImmediate,\n                           undefined, boxValues, materialized, hasDataSource,\n                           treatErrorsAsValues, onValue, onMissing, onMaterialize);\n    }\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        keysetIndex = -1, keysetLength = 0,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        return undefined;\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            keyset = keysOrRanges[keysetIndex];\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            // If we encounter a ref, inline the reference target and continue\n            // evaluating the path.\n            if (next &&\n                nextDepth < requestedLength &&\n                // If the reference is expired, it will be invalidated and\n                // reported as missing in the next call to walkPath below.\n                next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                // Write the cloned ref value into the jsonGraph at the\n                // optimized path. JSONGraph must always clone references.\n                seed && inlineValue(clone(next), optimizedPath, nextOptimizedLength, seed);\n\n                // Retrieve the reference target and next referenceContainer (if\n                // this reference points to other references) and continue\n                // following the path. If the reference resolves to a missing\n                // path or leaf node, it will be handled in the next call to\n                // walkPath.\n                refTarget = getReferenceTarget(root, next, modelRoot, seed, expireImmediate);\n\n                next = refTarget[0];\n                fromReference = true;\n                nextOptimizedPath = refTarget[1];\n                nextOptimizedLength = nextOptimizedPath.length;\n                refTarget[0] = refTarget[1] = undefined;\n            }\n\n            walkPathAndBuildOutput(\n                root, next, path, nextDepth, seed,\n                results, requestedPath, requestedLength, nextOptimizedPath,\n                nextOptimizedLength, fromReference, modelRoot, expired, expireImmediate,\n                boxValues, materialized, hasDataSource, treatErrorsAsValues\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return undefined;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, seed, branchSelector,\n                   boxValues, onMaterialize, modelRoot) {\n\n    var json, isLeaf;\n\n    if (seed && reportMaterialized) {\n\n        (seed.paths || (seed.paths = [])).push(\n            (isLeaf = 0 === requestedLength - depth) &&\n                                 // depth + 1 if fromReference === true\n                requestedPath.slice(0, depth + !!fromReference) ||\n                requestedPath.slice(0, depth).concat(path\n                    .slice(depth, requestedLength + !!fromReference))\n        );\n\n        json = inlineValue(isLeaf && clone(materializedAtom) || undefined,\n                           optimizedPath, optimizedLength, seed, !isLeaf);\n    }\n\n    return originalOnMissing(path, depth, results,\n                             requestedPath, requestedLength, fromReference,\n                             optimizedPath, optimizedLength, reportMissing,\n                             !isLeaf && reportMaterialized, json,\n                             branchSelector, true, onMaterialize, modelRoot);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/walkPath.js","var typeofNumber = 'number';\nvar typeofObject = 'object';\nvar clone = require('../clone');\nvar onValueType = require('./onValueType');\nvar FalcorJSON = require('./json/FalcorJSON');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = onMaterializeFlatBuffer;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterializeFlatBuffer(json, path, depth, length,\n                                 branchSelector, boxValues, modelRoot, results,\n                                 requestedPath, optimizedPath, optimizedLength,\n                                 fromReference, reportMissing, onMissing) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === path) {\n        onValueType(undefined, undefined, json,\n                    path, depth, undefined, results,\n                    requestedPath, depth, optimizedPath,\n                    optimizedLength, fromReference, modelRoot, undefined,\n                    false, branchSelector, boxValues, false, reportMissing,\n                    false, undefined, onMissing, undefined);\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta, f_old_keys, f_new_keys;\n\n    var nextKey,\n        keyset, keyIsRange,\n        keys = path['$keys'],\n        nextDepth = depth + 1, rangeEnd,\n        nextOptimizedLength = optimizedLength + 1;\n\n    if (!json || typeofObject !== typeof json) {\n        json = {};\n        json.__proto__ = FalcorJSON.prototype;\n        json[f_meta_data] = f_meta = {};\n        f_meta['$code'] = '';\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[f_meta_data])) {\n        json[f_meta_data] = f_meta = {};\n        f_meta['$code'] = '';\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n    } else {\n        f_old_keys = f_meta[f_meta_keys];\n        f_meta['$code'] = '';\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n    }\n\n    f_new_keys = Object.create(null);\n\n    var nextPath;\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    iteratingKeyset:\n    while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If the Keyset isn't null or primitive, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && (nextKey in f_old_keys)) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // insert the materialized branch\n            json[nextKey] = onMaterializeFlatBuffer(\n                json[nextKey], nextPath, nextDepth,\n                nextDepth, branchSelector, boxValues, modelRoot, results,\n                requestedPath, optimizedPath, nextOptimizedLength,\n                fromReference, reportMissing, onMissing\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n    }\n\n    f_meta[f_meta_keys] = f_new_keys;\n    if (f_old_keys) {\n        for (nextKey in f_old_keys) {\n            if (f_old_keys[nextKey]) {\n                delete json[nextKey];\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMaterializeFlatBuffer.js","var isInternalKey = require('../support/isInternalKey');\n\n/**\n * decends and copies the cache.\n */\nmodule.exports = function getCache(cache) {\n    var out = {};\n    _copyCache(cache, out);\n\n    return out;\n};\n\nfunction cloneBoxedValue(boxedValue) {\n    var clonedValue = {};\n\n    var keys = Object.keys(boxedValue);\n    var key;\n    var i;\n    var l;\n\n    for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n\n        if (key === '$type' || !isInternalKey(key)) {\n            clonedValue[key] = boxedValue[key];\n        }\n    }\n\n    return clonedValue;\n}\n\nfunction _copyCache(node, out, fromKey) {\n    // copy and return\n\n    // only copy objects\n    if (!node || typeof node !== 'object') {\n        return;\n    }\n\n    Object.\n        keys(node).\n        filter(function(key) {\n            // Its not an internal key and the node has a value.  In the cache\n            // there are 3 possibilities for values.\n            // 1: A branch node.\n            // 2: A $type-value node.\n            // 3: undefined\n            // We will strip out 3\n            return (key === '$type' || !isInternalKey(key)) && node[key] !== undefined;\n        }).\n        forEach(function(key) {\n            var cacheNext = node[key];\n            var outNext = out[key];\n\n            if (!outNext) {\n                outNext = out[key] = {};\n            }\n\n            // Paste the node into the out cache.\n            if (cacheNext.$type) {\n                var isObject = cacheNext.value && typeof cacheNext.value === 'object';\n                var isUserCreatedcacheNext = !cacheNext[f_wrapped_value];\n                var value;\n                if (isObject || isUserCreatedcacheNext) {\n                    value = cloneBoxedValue(cacheNext);\n                } else {\n                    value = cacheNext.value;\n                }\n\n                out[key] = value;\n                return;\n            }\n\n            _copyCache(cacheNext, outNext, key);\n        });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getCache.js","var getBoundCacheNode = require('./getBoundCacheNode');\n\nmodule.exports = function _getVersion(model, path) {\n    var node = getBoundCacheNode(model, path);\n    var version = node && node[f_version];\n    return (version == null) ? -1 : version;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getVersion.js","var groupCacheArguments = require('../groupCacheArguments');\n\nmodule.exports = {\n    json: invalidate,\n    jsonGraph: invalidate,\n    invalidatePathMaps: require('./invalidatePathMaps'),\n    invalidatePathValues: require('./invalidatePathSets')\n};\n\nfunction invalidate(model, args, seed, progressive, expireImmediate) {\n    if (invalidateArgumentGroups(model, groupCacheArguments(args), expireImmediate)) {\n        var rootChangeHandler = model._root.onChange;\n        rootChangeHandler && rootChangeHandler();\n    }\n    return {};\n}\n\nfunction invalidateArgumentGroups(model, xs, expireImmediate) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            if (inputType === 'PathValues') {\n                groupedArgs = groupedArgs.map(pluckPaths);\n            }\n            var operation = module.exports['invalidate' + inputType];\n            if (operation(model, groupedArgs, expireImmediate)) {\n                changed = true;\n            }\n        }\n    }\n    return changed;\n}\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/index.js","var wrapNode = require('./wrapNode');\nvar isExpired = require('./isExpired');\nvar insertNode = require('./insertNode');\nvar expireNode = require('./expireNode');\nvar replaceNode = require('./replaceNode');\nvar getSize = require('../support/getSize');\nvar reconstructPath = require('./reconstructPath');\nvar getTimestamp = require('../support/getTimestamp');\nvar updateNodeAncestors = require('./updateNodeAncestors');\n\nmodule.exports = function mergeJSONGraphNode(\n    parent, node, message, key, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var sizeOffset;\n\n    var cType, mType,\n        cIsObject, mIsObject,\n        cTimestamp, mTimestamp;\n\n    // If the cache and message are the same, we can probably return early:\n    // - If they're both nullsy,\n    //   - If null then the node needs to be wrapped in an atom and inserted.\n    //     This happens from whole branch merging when a leaf is just a null value\n    //     instead of being wrapped in an atom.\n    //   - If undefined then return null (previous behavior).\n    // - If they're both branches, return the branch.\n    // - If they're both edges, continue below.\n    if (node === message) {\n\n        // The message and cache are both undefined, return undefined.\n        if (message === undefined) {\n            return message;\n        }\n        // There should not be undefined values. Those should always be\n        // wrapped in an $atom\n        else if (message === null) {\n            node = wrapNode(message, undefined, message);\n            parent = updateNodeAncestors(parent, -node.$size, lru, version);\n            node = insertNode(node, parent, key, undefined, optimizedPath);\n            return node;\n        }\n        // Is the cache node a branch? If so, return the cache branch.\n        else if ((\n            cIsObject = !(!node || typeof node !== 'object')) && (\n            cType = node.$type) === undefined) {\n            // Has the branch been introduced to the cache yet? If not,\n            // give it a parent, key, and absolute path.\n            if (node[f_parent] === undefined) {\n                insertNode(node, parent, key, version, optimizedPath);\n            }\n            return node;\n        }\n    } else if (cIsObject = !(!node || typeof node !== 'object')) {\n        cType = node.$type;\n    }\n\n    // If the cache isn't a reference, we might be able to return early.\n    if (cType !== $ref) {\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n        }\n        if (cIsObject && !cType) {\n            // If the cache is a branch and the message is empty or\n            // also a branch, continue with the cache branch.\n            if (message == null || (mIsObject && !mType)) {\n                return node;\n            }\n        }\n    }\n    // If the cache is a reference, we might not need to replace it.\n    else {\n        // If the cache is a reference, but the message is empty,\n        // leave the cache alone...\n        if (message == null) {\n            // ...unless the cache is an expired reference. In that case, expire\n            // the cache node and return undefined.\n            if (isExpired(node, expireImmediate)) {\n                expireNode(node, expired, lru);\n                return void 0;\n            }\n            return node;\n        }\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n            // If the cache and the message are both references,\n            // check if we need to replace the cache reference.\n            if (mType === $ref) {\n                if (node === message) {\n                    // If the cache and message are the same reference,\n                    // we performed a whole-branch merge of one of the\n                    // grandparents. If we've previously graphed this\n                    // reference, break early. Otherwise, continue to\n                    // leaf insertion below.\n                    if (node[f_parent] != null) {\n                        return node;\n                    }\n                } else {\n\n                    cTimestamp = node.$timestamp;\n                    mTimestamp = message.$timestamp;\n\n                    // - If either the cache or message reference is expired,\n                    //   replace the cache reference with the message.\n                    // - If neither of the references are expired, compare their\n                    //   timestamps. If either of them don't have a timestamp,\n                    //   or the message's timestamp is newer, replace the cache\n                    //   reference with the message reference.\n                    // - If the message reference is older than the cache\n                    //   reference, short-circuit.\n                    if (!isExpired(node, expireImmediate) &&\n                        !isExpired(message, expireImmediate) &&\n                        mTimestamp < cTimestamp) {\n                        return void 0;\n                    }\n                }\n            }\n        }\n    }\n\n    // If the cache is a leaf but the message is a branch,\n    // merge the branch over the leaf.\n    if (cType && mIsObject && !mType) {\n        return insertNode(replaceNode(\n                node, message, parent, key, lru, version),\n            parent, key, undefined, optimizedPath\n        );\n    }\n    // If the message is a sentinel or primitive, insert it into the cache.\n    else if (mType || !mIsObject) {\n\n        if (mType === $error && errorSelector) {\n            message = errorSelector(reconstructPath(requestedPath, key), message);\n        }\n\n        // If the cache and the message are the same value, we branch-merged one\n        // of the message's ancestors. If this is the first time we've seen this\n        // leaf, give the message a $size and $type, attach its graph pointers,\n        // and update the cache sizes and versions.\n        if (mType && node === message) {\n            if (!node[f_parent]) {\n                node = wrapNode(node, cType, node.value);\n                parent = updateNodeAncestors(parent, -node.$size, lru, version);\n                node = insertNode(node, parent, key, version, optimizedPath);\n            }\n        }\n        // If the cache and message are different, the cache value is expired,\n        // or the message is a primitive, replace the cache with the message value.\n        // If the message is a sentinel, clone and maintain its type.\n        // If the message is a primitive value, wrap it in an atom.\n        else {\n            var isDistinct = true;\n            // If both the cache and message are primitives, we branch-merged\n            // one of the message's ancestors. Insert the value into the cache.\n            if (!cType && !mType) {\n                isDistinct = true;\n            }\n            // If the cache is a branch, but the message is a leaf, replace the\n            // cache branch with the message leaf.\n            else if (!cIsObject || !isExpired(node, expireImmediate)) {\n                // Compare the current cache value with the new value. If either of\n                // them don't have a timestamp, or the message's timestamp is newer,\n                // replace the cache value with the message value. If a comparator\n                // is specified, the comparator takes precedence over timestamps.\n                if (comparator) {\n                    isDistinct = !(comparator.length < 3 ?\n                        comparator(node, message) : comparator(node, message,\n                            optimizedPath.slice(0, optimizedPath.index))\n                    );\n                } else {\n                    // Comparing either Number or undefined to undefined always results in false.\n                    isDistinct = getTimestamp(message) < getTimestamp(node) === false;\n                }\n            }\n            if (isDistinct) {\n                sizeOffset = getSize(node) - getSize(message =\n                    wrapNode(message, mType, mType ? message.value : message));\n                node = replaceNode(node, message, parent, key, lru, version);\n                parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n                node = insertNode(node, parent, key, version, optimizedPath);\n            }\n        }\n\n        // Promote the message edge in the LRU.\n        if (isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge.\n             */\n            true)) {\n            expireNode(node, expired, lru);\n        }\n    }\n    else if (node == null) {\n        node = insertNode(message, parent, key, undefined, optimizedPath);\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/mergeJSONGraphNode.js","var getJSON = require('../get/json');\nvar getJSONGraph = require('../get/jsonGraph');\nvar groupCacheArguments = require('../groupCacheArguments');\n\nmodule.exports = {\n    json: json,\n    jsonGraph: jsonGraph,\n    setPathMaps: require('./setPathMaps'),\n    setPathValues: require('./setPathValues'),\n    setJSONGraphs: require('./setJSONGraphs')\n};\n\nfunction json(model, _args, data, progressive, expireImmediate) {\n\n    var set, get, jsong,\n        changed, relative, optimized,\n        missing, fragments, requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args, expireImmediate);\n\n    if ((relative = set.requested).length) {\n\n        if (!(changed = set.changed) || progressive) {\n            get = getJSON(model, relative, data, progressive, expireImmediate);\n        }\n\n        if (changed) {\n\n            jsong = getJSONGraph({\n                _root: model._root,\n                _boxed: model._boxed, _materialized: true,\n                _treatErrorsAsValues: model._treatErrorsAsValues\n            }, set.optimized, {}, progressive, expireImmediate);\n\n            fragments = jsong.data;\n            missing = fragments.paths;\n            requested = jsong.requested;\n\n            var rootChangeHandler = model._root.onChange;\n            rootChangeHandler && rootChangeHandler();\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: get && get.error,\n        errors: get && get.errors,\n        hasValue: get && get.hasValue\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive, expireImmediate) {\n\n    var set, jsong,\n        changed, relative, optimized,\n        missing, fragments, requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args, expireImmediate);\n\n    if ((relative = set.requested).length && (\n         progressive || (changed = set.changed))) {\n\n        jsong = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed, _materialized: true,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, set.optimized, data, progressive, expireImmediate);\n\n        fragments = jsong.data;\n        missing = fragments.paths;\n        requested = jsong.requested;\n\n        if (changed) {\n            var rootChangeHandler = model._root.onChange;\n            rootChangeHandler && rootChangeHandler();\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: jsong && jsong.error,\n        hasValue: jsong && jsong.hasValue\n    };\n}\n\nfunction setGroupsIntoCache(model, xs, expireImmediate) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var modelRoot = model._root;\n    var errorSelector = modelRoot.errorSelector;\n\n    expireImmediate = expireImmediate && !Boolean(model._source);\n    var comparator = Boolean(model._source) ? null : modelRoot.comparator;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            var operation = module.exports['set' + inputType];\n            var results = operation(model, groupedArgs, errorSelector, comparator, expireImmediate);\n            changed = changed || results[2];\n            optimizedPaths.push.apply(optimizedPaths, results[1]);\n            if (inputType === 'PathValues') {\n                requestedPaths.push.apply(requestedPaths, groupedArgs.map(pluckPaths));\n            } else if (inputType === 'JSONGraphs') {\n                requestedPaths.push.apply(requestedPaths, arrayFlatMap(groupedArgs, pluckPaths));\n            } else {\n                requestedPaths.push.apply(requestedPaths, results[0]);\n            }\n        }\n    }\n\n    return {\n        changed: changed,\n        requested: requestedPaths,\n        optimized: optimizedPaths\n    };\n}\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\nfunction arrayFlatMap(array, selector) {\n    var index = -1;\n    var i = -1;\n    var n = array.length;\n    var array2 = [];\n    while (++i < n) {\n        var array3 = selector(array[i], i, array);\n        var j = -1;\n        var k = array3.length;\n        while (++j < k) {\n            array2[++index] = array3[j];\n        }\n    }\n    return array2;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/index.js","module.exports = function transferBackReferences(fromNode, destNode) {\n    var fromNodeRefsLength = fromNode[f_refs_length] || 0,\n        destNodeRefsLength = destNode[f_refs_length] || 0,\n        i = -1;\n    while (++i < fromNodeRefsLength) {\n        var ref = fromNode[f_ref + i];\n        if (ref !== undefined) {\n            ref[f_context] = destNode;\n            destNode[f_ref + (destNodeRefsLength + i)] = ref;\n            fromNode[f_ref + i] = undefined;\n        }\n    }\n    destNode[f_refs_length] = fromNodeRefsLength + destNodeRefsLength;\n    fromNode[f_refs_length] = undefined;\n    return destNode;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/transferBackReferences.js","module.exports = function unlinkBackReferences(node) {\n    var i = -1, n = node[f_refs_length] || 0;\n    while (++i < n) {\n        var ref = node[f_ref + i];\n        if (ref != null) {\n            ref[f_context] = ref[f_ref_index] = node[f_ref + i] = void 0;\n        }\n    }\n    node[f_refs_length] = void 0;\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/unlinkBackReferences.js","module.exports = function unlinkForwardReference(reference) {\n    var destination = reference[f_context];\n    if (destination) {\n        var i = (reference[f_ref_index] || 0) - 1,\n            n = (destination[f_refs_length] || 0) - 1;\n        while (++i <= n) {\n            destination[f_ref + i] = destination[f_ref + (i + 1)];\n        }\n        destination[f_refs_length] = n;\n        reference[f_ref_index] = reference[f_context] = destination = void 0;\n    }\n    return reference;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/unlinkForwardReference.js","module.exports = hasValidParentReference;\n\nfunction hasValidParentReference() {\n    var reference = this._referenceContainer;\n\n    // Always true when this mode is false.\n    if (!this._allowFromWhenceYouCame) {\n        return true;\n    }\n\n    // If fromWhenceYouCame is true and the first set of keys did not have\n    // a reference, this case can happen.  They are always valid.\n    if (reference === true) {\n        return true;\n    }\n\n    // was invalid before even derefing.\n    if (reference === false) {\n        return false;\n    }\n\n    // Its been disconnected (set over or collected) from the graph.\n    if (reference && reference[f_parent] === undefined) {\n        return false;\n    }\n\n    // The reference has expired but has not been collected from the graph.\n    if (reference && reference[f_invalidated]) {\n        return false;\n    }\n\n    return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/deref/hasValidParentReference.js","var CONTAINER_DOES_NOT_EXIST = 'e';\nvar FalcorJSON = require('../cache/get/json/FalcorJSON');\nvar getCachePosition = require('../cache/getCachePosition');\nvar InvalidDerefInputError = require('../errors/InvalidDerefInputError');\n\nmodule.exports = function deref(json) {\n\n    var seed, f_meta;\n\n    if (!json || 'object' !== typeof json || !(\n        f_meta = json[f_meta_data]) || 'object' !== typeof f_meta) {\n        return null;\n    }\n\n    var cacheRoot = this._root.cache;\n    var recycleJSON = this._recycleJSON;\n    var absolutePath = f_meta[f_meta_abs_path];\n    var referenceContainer, currentRefPath, i, len;\n\n    if (!absolutePath) {\n        if (recycleJSON) {\n            seed = { json: json };\n            seed.__proto__ = FalcorJSON.prototype;\n        }\n        return this._clone({\n            _node: undefined,\n            _seed: seed\n        });\n    } else if (absolutePath.length === 0) {\n        if (recycleJSON) {\n            seed = { json: json };\n            seed.__proto__ = FalcorJSON.prototype;\n        }\n        return this._clone({\n            _node: cacheRoot,\n            _path: absolutePath,\n            _referenceContainer: true,\n            _seed: seed\n        });\n    }\n\n    var originalRefPath = f_meta[f_meta_deref_to];\n    var originalAbsPath = f_meta[f_meta_deref_from];\n\n    // We deref and then ensure that the reference container is attached to\n    // the model.\n    var cacheNode = getCachePosition(cacheRoot, absolutePath);\n    var validContainer = CONTAINER_DOES_NOT_EXIST;\n\n    if (originalAbsPath) {\n\n        validContainer = false;\n\n        i = -1;\n        len = originalAbsPath.length;\n        referenceContainer = cacheRoot;\n        while (++i < len) {\n            referenceContainer = referenceContainer[originalAbsPath[i]];\n            if (!referenceContainer || referenceContainer.$type) {\n                break;\n            }\n        }\n\n        // If the reference container is still a sentinel value then compare\n        // the reference value with refPath.  If they are the same, then the\n        // model is still valid.\n        if (originalRefPath && referenceContainer && referenceContainer.$type === $ref) {\n            validContainer = true;\n            len = originalRefPath.length;\n            currentRefPath = referenceContainer.value;\n            for (i = 0; i < len; ++i) {\n                if (currentRefPath[i] !== originalRefPath[i]) {\n                    cacheNode = undefined;\n                    validContainer = false;\n                    break;\n                }\n            }\n        }\n    }\n\n    // Signal to the deref'd model that it has been disconnected from the\n    // graph or there is no _fromWhenceYouCame\n    if (!validContainer) {\n        referenceContainer = false;\n    }\n\n    // The container did not exist, therefore there is no reference\n    // container and fromWhenceYouCame should always return true.\n    else if (validContainer === CONTAINER_DOES_NOT_EXIST) {\n        referenceContainer = true;\n    }\n\n    if (recycleJSON) {\n        seed = { json: json };\n        seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    return this._clone({\n        _seed: seed,\n        _node: cacheNode,\n        _path: absolutePath,\n        _referenceContainer: referenceContainer\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/deref/index.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'It is not legal to use the JSON Graph ' +\n    'format from a bound Model. JSON Graph format' +\n    ' can only be used from a root model.';\n\n/**\n * When a bound model attempts to retrieve JSONGraph it should throw an\n * error.\n *\n * @private\n */\nmodule.exports = createErrorClass('BoundJSONGraphModelError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/BoundJSONGraphModelError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'Deref can only be used with a non-primitive object from get, set, or call.';\n\n/**\n * An invalid deref input is when deref is used with input that is not generated\n * from a get, set, or a call.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidDerefInputError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidDerefInputError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'The boundPath of the model is not valid since a value or error was found before the path end.';\n\n/**\n * An InvalidModelError can only happen when a user binds, whether sync\n * or async to shorted value.  See the unit tests for examples.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidModelError', function(boundPath, shortedPath) {\n    this.message = MESSAGE;\n    this.boundPath = boundPath;\n    this.shortedPath = shortedPath;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidModelError.js","var createErrorClass = require('./createErrorClass');\n\n/**\n * A request can only be retried up to a specified limit.  Once that\n * limit is exceeded, then an error will be thrown.\n *\n * @private\n */\nmodule.exports = createErrorClass('MaxRetryExceededError', function(maxRetryCount, absolute, relative, optimized) {\n    this.message = '' +\n        'Exceeded the max retry count (' + maxRetryCount + ') for these paths: \\n' +\n        (absolute &&\n        'absolute: [\\n\\t' + printPaths(absolute) + '\\n]\\n' || '') +\n        (relative &&\n        'relative: [\\n\\t' + printPaths(relative) + '\\n]\\n' || '') +\n        (optimized &&\n        'optimized: [\\n\\t' + printPaths(optimized) + '\\n]\\n' || '');\n});\n\nfunction printPaths(paths) {\n    return paths.map(function(path) {\n        return JSON.stringify(path);\n    }).join(',\\n\\t');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/MaxRetryExceededError.js","module.exports = String.fromCharCode(30) + 'ƒ_';\n\n\n\n// WEBPACK FOOTER //\n// ./lib/internal/f_.js","var updateNodeAncestors = require('../cache/updateNodeAncestors');\n\nmodule.exports = function collect(lru, expired, totalArg, max, ratioArg, version) {\n\n    var total = totalArg;\n    var ratio = ratioArg;\n\n    if (typeof ratio !== 'number') {\n        ratio = 0.75;\n    }\n\n    var node, size, targetSize = max * ratio;\n\n    while (node = expired.pop()) {\n        total -= (size = node.$size || 0);\n        updateNodeAncestors(node, size, lru, version);\n    }\n\n    if (total >= max) {\n        var prev = lru[f_tail];\n        while ((total >= targetSize) && (node = prev)) {\n            prev = prev[f_prev];\n            total -= (size = node.$size || 0);\n            updateNodeAncestors(node, size, lru, version);\n        }\n\n        lru[f_tail] = node;\n        if (node == null) {\n            lru[f_head] = undefined;\n        } else {\n            node[f_next] = undefined;\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/collect.js","var Source = require('./Source');\nvar Subscriber = require('./Subscriber');\nvar lruCollect = require('../lru/collect');\nvar FalcorJSON = require('../cache/get/json/FalcorJSON');\nvar collapse = require('@graphistry/falcor-path-utils/lib/collapse');\nvar InvalidSourceError = require('../errors/InvalidSourceError');\nvar MaxRetryExceededError = require('../errors/MaxRetryExceededError');\n\nmodule.exports = Call;\n\nfunction Call(type, model, _args) {\n    Source.call(this, type);\n    if (model && _args) {\n        this.type = type;\n        this.source = this;\n        this.model = model;\n        this._args = _args;\n    }\n}\n\nCall.prototype = Object.create(Source.prototype);\n\nCall.prototype.lift = function(operator, source) {\n    source = new Call(source || this);\n    source.type = this.type;\n    source.model = this.model;\n    source._args = this._args;\n    source.operator = operator;\n    operator.data = operator.data || this.operator.data;\n    operator.errors = operator.errors || this.operator.errors;\n    operator.operation = operator.operation || this.operator.operation;\n    operator.progressive = operator.progressive || this.operator.progressive;\n    operator.maxRetryCount = operator.maxRetryCount || this.operator.maxRetryCount;\n    return source;\n}\n\nCall.prototype.operator = function(subscriber) {\n    return this._subscribe(subscriber);\n}\n\nCall.prototype._subscribe = function(subscriber) {\n    subscriber.onNext({\n        type: this.type,\n        args: this._args,\n        model: this.model,\n        version: this.model._root.version\n    });\n    subscriber.onCompleted();\n    return subscriber;\n}\n\nCall.prototype._toJSON = function(data, errors) {\n    if (data === undefined) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    return this.lift(new CallOperator(\n        data, errors || this.operator.errors, 'json',\n        this.operator.progressive, this.operator.maxRetryCount\n    ), this.source);\n}\n\nCall.prototype._toJSONG = function(data, errors) {\n    if (data === undefined) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    return this.lift(new CallOperator(\n        data, errors || this.operator.errors, 'jsonGraph',\n        this.operator.progressive, this.operator.maxRetryCount\n    ), this.source);\n}\n\nCall.prototype.retry = function(maxRetryCount) {\n    return this.lift(new CallOperator(\n        this.operator.data,\n        this.operator.errors,\n        this.operator.operation,\n        this.operator.progresive,\n        maxRetryCount\n    ), this.source);\n}\n\nCall.prototype.progressively = function() {\n    return this.lift(new CallOperator(\n        this.operator.data,\n        this.operator.errors,\n        this.operator.operation,\n        true,\n        this.operator.maxRetryCount\n    ), this.source);\n}\n\nfunction CallOperator(data, errors, operation, progressive, maxRetryCount) {\n    this.data = data;\n    this.errors = errors;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallOperator.prototype.call = function(source, destination) {\n    return source.subscribe(new CallSubscriber(\n        destination, this.data, this.errors, this.operation, this.progressive\n    ));\n}\n\nfunction CallSubscriber(destination, data, errors, operation, progressive, maxRetryCount) {\n    Subscriber.call(this, destination);\n    this.data = data;\n    this.retryCount = -1;\n    this.errors = errors;\n    this.hasValue = false;\n    this.completed = false;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallSubscriber.prototype = Object.create(Subscriber.prototype);\nCallSubscriber.prototype.operations = {\n    get: require('../cache/get'),\n    set: require('../cache/set'),\n    call: require('../cache/call'),\n    invalidate: require('../cache/invalidate')\n};\n\nCallSubscriber.prototype.next =\nCallSubscriber.prototype.onNext = function(seed) {\n\n    if (!this.started) {\n        this.args = seed.args;\n        this.type = seed.type;\n        this.model = seed.model;\n        this.version = seed.version;\n        this.maxRetryCount = this.maxRetryCount || this.model._root.maxRetryCount;\n        return;\n    } else if (!this.destination) {\n        return;\n    }\n\n    var missing, fragments;\n    var type = seed.type;\n    var args = seed.args || seed.paths;\n\n    var data = this.data;\n    var model = this.model;\n    var errors = this.errors;\n    var results = this.results;\n    var version = this.version;\n    var hasValue = this.hasValue;\n    var operation = this.operation;\n    var progressive = this.progressive;\n    var seedIsImmutable = progressive && data;\n\n    if (model._recycleJSON && this.type === 'get') {\n        seedIsImmutable = false;\n    }\n\n    // If we request paths as JSON in progressive mode, ensure each progressive\n    // valueNode is immutable. If not in progressive mode, we can write into the\n    // same JSON tree until the request is completed.\n    if (seedIsImmutable) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n\n    if (args && args.length) {\n\n        results = this.operations[type]\n            [operation](model, args, data,\n                        progressive || !model._source,\n                        this.retryCount === -1);\n\n        // We must communicate critical errors from get, such as bound path is\n        // broken or this is a JSONGraph request with a bound path.\n        if (results.error) {\n            return tryOnError(this, results.error);\n        }\n\n        errors && results.errors &&\n            errors.push.apply(errors, results.errors);\n\n        if (fragments = results.fragments) {\n            args = results.args;\n            this.fragments = fragments;\n        }\n\n        this.relative = results.relative;\n        this.requested = results.requested;\n        this.missing = missing = results.missing;\n        this.hasValue = hasValue || (hasValue = results.hasValue);\n    }\n\n    // We are done when there are no missing paths or\n    // the model does not have a dataSource to fetch from.\n    this.completed = !missing || !model._source;\n\n    if (type !== 'set') {\n        this.args = args;\n        if (seedIsImmutable) {\n            this.data = mergeInto(data, this.data);\n        }\n    }\n\n    if (progressive && hasValue && data && (data.json || data.jsonGraph)) {\n        tryOnNext(data, operation, model._root, this.destination);\n    }\n}\n\nCallSubscriber.prototype.error =\nCallSubscriber.prototype.onError = function(error) {\n    if (error instanceof InvalidSourceError) {\n        return Subscriber.prototype.onError.call(this, error);\n    }\n    this.errored = true;\n    this.onCompleted(error);\n}\n\nCallSubscriber.prototype.complete =\nCallSubscriber.prototype.onCompleted = function(error) {\n\n    if (!this.destination) {\n        return;\n    }\n\n    var data, type, errors, errored;\n\n    if (!this.started && (this.started = true)) {\n        this.onNext(this);\n    } else if (errored = this.errored) {\n        this.onNext({ type: 'get', paths: this.relative });\n    }\n\n    if (errored || this.completed) {\n        if (!this.progressive && this.hasValue && (\n            (data = this.data) && data.json || data.jsonGraph)) {\n            tryOnNext(data, this.operation, this.model._root, this.destination);\n        }\n        errors = this.errors;\n        if (errored || error || errors && errors.length) {\n            return tryOnError(this, errors.length && errors || error);\n        }\n\n        return Subscriber.prototype.onCompleted.call(this);\n    }\n\n    if (++this.retryCount >= this.maxRetryCount) {\n        return tryOnError(this, new MaxRetryExceededError(\n            this.retryCount,\n            this.requested,\n            this.relative,\n            this.missing\n        ));\n    }\n\n    this.request = this.model._root.requests[this.type](\n        this.model, this.missing, this.relative, this.fragments\n    ).subscribe(this);\n}\n\nCallSubscriber.prototype.dispose =\nCallSubscriber.prototype.unsubscribe = function() {\n\n    var model = this.model;\n    var version = this.version;\n    var request = this.request;\n\n    this.args = null;\n    this.data = null;\n    this.model = null;\n    this.errors = null;\n    this.errored = false;\n    this.started = false;\n    this.hasValue = false;\n    this.completed = false;\n\n    Subscriber.prototype.dispose.call(this);\n\n    if (request) {\n        this.request = null;\n        request.dispose();\n    }\n\n    if (model) {\n\n        var modelRoot = model._root;\n        var cache = modelRoot.cache;\n        var shouldCollectCache = modelRoot.syncRefCount <= 0 &&\n                                 version !== modelRoot.version;\n\n        // Prune the cache via the LRU if this is the last request.\n        if (shouldCollectCache) {\n\n            if (cache) {\n                lruCollect(modelRoot,\n                           modelRoot.expired,\n                           cache.$size || 0,\n                           modelRoot.maxSize,\n                           modelRoot.collectRatio,\n                           modelRoot.version);\n            }\n\n            var rootOnChangesCompletedHandler = modelRoot.onChangesCompleted;\n\n            if (rootOnChangesCompletedHandler) {\n                rootOnChangesCompletedHandler.call(modelRoot.topLevelModel);\n            }\n        }\n    }\n}\n\nfunction tryOnNext(data, operation, modelRoot, destination) {\n    if (operation === 'jsonGraph' && data.paths) {\n        data.paths = collapse(data.paths);\n    }\n    try {\n        ++modelRoot.syncRefCount;\n        destination.onNext(data);\n    } catch(e) {\n        throw e;\n    } finally {\n        --modelRoot.syncRefCount;\n    }\n}\n\nfunction tryOnError(self, error) {\n    try {\n        throw error;\n    } catch (err) {\n        Subscriber.prototype.onError.call(self, err);\n    }\n}\n\nfunction mergeInto(dest, node) {\n\n    var destValue, nodeValue,\n        key, keys = Object.keys(node),\n        index = -1, length = keys.length;\n\n    while (++index < length) {\n\n        key = keys[index];\n\n        if (key === f_meta_data) {\n            dest[f_meta_data] = node[f_meta_data];\n        } else {\n\n            nodeValue = node[key];\n            destValue = dest[key];\n\n            if (destValue !== nodeValue) {\n                if (!nodeValue || typeof nodeValue !== 'object') {\n                    if (destValue === undefined) {\n                        dest[key] = nodeValue;\n                    }\n                } else if (destValue === undefined) {\n                    dest[key] = nodeValue;\n                } else {\n                    mergeInto(destValue, nodeValue);\n                }\n            }\n        }\n    }\n\n    return dest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Call.js","var Source = require('./Source');\nvar Request = require('./Request');\nvar Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar ImmediateScheduler = require('../schedulers/ImmediateScheduler');\n\nmodule.exports = Queue;\n\nfunction Queue(modelRoot) {\n    Subscription.call(this, []);\n    this.modelRoot = modelRoot;\n}\n\nQueue.prototype = Object.create(Subscription.prototype);\n\nQueue.prototype.set = isolateSet;\nQueue.prototype.call = isolateCall;\nQueue.prototype.get = batchAndDedupeGet;\n\nfunction isolateSet(model, optimized, requested, env) {\n    var queue = this;\n    return new Source(function(destination) {\n\n        var request = new Request('set', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = env.jsonGraph;\n        request.requested.push(requested);\n        request.optimized.push(optimized);\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction isolateCall(model, optimized, requested, callArgs) {\n    var queue = this;\n    return new Source(function(destination) {\n\n        var request = new Request('call', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = callArgs;\n        request.boundPath = model._path;\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction batchAndDedupeGet(model, optimized, requested) {\n    return new Dedupe(\n        this, model._source, model._scheduler, requested, optimized\n    );\n}\n\nfunction Dedupe(queue, source, scheduler, requested, optimized) {\n    this.queue = queue;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n    this.requested = requested;\n    this.optimized = optimized;\n}\n\nDedupe.prototype.subscribe = function(destination) {\n\n    var queue = this.queue;\n    var source = this.dataSource;\n    var requested = this.requested;\n    var optimized = this.optimized;\n    var scheduler = this.scheduler;\n\n    var requestsIndex = -1;\n    var requests  = queue.subscriptions;\n    var requestsCount = requests.length;\n    var subscription = new Subscription([], destination);\n\n    while (++requestsIndex < requestsCount) {\n\n        var request = requests[requestsIndex];\n\n        if (request.type !== 'get') {\n            continue;\n        }\n\n        if (request = request.batch(requested, optimized, requested = [], optimized = [])) {\n            subscription.add(request.subscribe(new Subscriber(destination, request)));\n        }\n\n        if (!optimized.length) {\n            break;\n        }\n    }\n\n    if (optimized.length) {\n        request = requests[requestsIndex] =\n            new Request('get', queue, source, scheduler).batch(requested, optimized);\n        subscription.add(request.subscribe(new Subscriber(destination, request)));\n        request.connect();\n    }\n\n    return subscription;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Queue.js","var isArray = Array.isArray;\nvar Subject = require('./Subject');\nvar Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar InvalidSourceError = require('../errors/InvalidSourceError');\n\nvar setJSONGraphs = require('../cache/set/setJSONGraphs');\nvar setPathValues = require('../cache/set/setPathValues');\nvar invalidatePaths = require('../cache/invalidate/invalidatePathSets');\n\nvar toPaths = require('@graphistry/falcor-path-utils/lib/toPaths');\nvar toCollapseMap = require('@graphistry/falcor-path-utils/lib/toCollapseMap');\nvar toCollapseTrees = require('@graphistry/falcor-path-utils/lib/toCollapseTrees');\nvar hasIntersection = require('@graphistry/falcor-path-utils/lib/hasIntersection');\n\nmodule.exports = Request;\n\nfunction Request(type, queue, source, scheduler) {\n    Subject.call(this, [], queue);\n    this.tree = {};\n    this.paths = [];\n    this.type = type;\n    this.data = null;\n    this.active = false;\n    this.responded = false;\n    this.requested = [];\n    this.optimized = [];\n    this.disposable = null;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n}\n\nRequest.prototype = Object.create(Subject.prototype);\n\nRequest.prototype.next =\nRequest.prototype.onNext = function(env) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    var changed = false;\n    var jsonGraph = env.jsonGraph;\n    var boundPath = this.boundPath;\n    var modelRoot = queue.modelRoot;\n    var invalidated = env.invalidated;\n    var paths = env.paths || this.paths;\n    var requested = this.requested.slice(0);\n    var rootChangeHandler = modelRoot.onChange;\n\n    // Run invalidations first.\n    if (invalidated && invalidated.length) {\n        changed = invalidatePaths({ _root: modelRoot, _path: [] }, invalidated, false);\n    }\n\n    if (paths && paths.length && !(!jsonGraph || typeof jsonGraph !== 'object')) {\n        var results = setJSONGraphs(\n            { _root: modelRoot },\n            [{ paths: paths, jsonGraph: jsonGraph }],\n            modelRoot.errorSelector, modelRoot.comparator, false\n        );\n        paths = results[0];\n        changed = changed || results[2];\n    }\n\n    if (changed && rootChangeHandler) {\n        rootChangeHandler();\n    }\n\n    this.observers.slice(0).forEach(function(observer, index) {\n        observer.onNext({\n            type: 'get', paths: requested[index] ||\n                filterPathsBoundTo(boundPath, paths)\n        });\n    });\n}\n\nRequest.prototype.error =\nRequest.prototype.onError = function(error) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    error = error || {};\n\n    // Converts errors to object we can insert into the cache.\n    error = !(error instanceof Error) ?\n        // if it's $type error, use it raw\n        error.$type === $error && error ||\n        // Otherwise make it an error\n        { $type: $error, value: error } :\n        // If it's instanceof Error, pluck error.message\n        { $type: $error, value: { message: error.message }};\n\n    var modelRoot = queue.modelRoot;\n\n    var errorPathValues = toPaths(toCollapseTrees(\n        this.requested.reduce(function(collapseMap, paths) {\n            return toCollapseMap(paths, collapseMap);\n        }, {})\n    ))\n    .map(function(path) { return { path: path, value: error }; });\n\n    if (errorPathValues.length) {\n        setPathValues(\n            { _root: modelRoot, _path: [] },\n            errorPathValues,\n            modelRoot.errorSelector,\n            modelRoot.comparator,\n            false\n        );\n    }\n\n    Subject.prototype.onError.call(this, error);\n}\n\nRequest.prototype.complete =\nRequest.prototype.onCompleted = function() {\n    if (this.responded === false) {\n        this.onNext({});\n    }\n    Subject.prototype.onCompleted.call(this);\n}\n\nRequest.prototype.remove = function(subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.requested.splice(index, 1);\n        this.optimized.splice(index, 1);\n        this.observers.splice(index, 1);\n        this.subscriptions.splice(index, 1);\n    }\n    if (this.subscriptions.length === 0) {\n        this.dispose();\n    }\n    return this;\n}\n\nRequest.prototype.dispose =\nRequest.prototype.unsubscribe = function () {\n    this.tree = {};\n    this.data = null;\n    this.paths = null;\n    this.active = false;\n    this.boundPath = null;\n    this.requested = [];\n    this.optimized = [];\n    var queue = this.parent;\n    if (queue) {\n        this.parent = null;\n        queue.remove(this);\n    }\n    var disposable = this.disposable;\n    if (disposable) {\n        this.disposable = null;\n        if (disposable.dispose) {\n            disposable.dispose();\n        } else if (disposable.unsubscribe) {\n            disposable.unsubscribe();\n        }\n    }\n    Subject.prototype.dispose.call(this);\n}\n\nRequest.prototype.connect = function() {\n    if (!this.active && !this.disposable) {\n        var scheduledDisposable = this.scheduler.schedule(flush.bind(this));\n        if (!this.disposable) {\n            this.disposable = scheduledDisposable;\n        }\n    }\n    return this;\n}\n\nRequest.prototype.batch = function(requested, optimized,\n                                   requestedComplements,\n                                   optimizedComplements) {\n    if (this.active) {\n        var requestedIntersection = [];\n        var optimizedIntersection = [];\n        if (findIntersections(this.tree,\n                              requested, optimized,\n                              requestedComplements,\n                              optimizedComplements,\n                              requestedIntersection,\n                              optimizedIntersection)) {\n            this.requested.push(requestedIntersection);\n            this.optimized.push(optimizedIntersection);\n            return this;\n        }\n        return null;\n    }\n    this.requested.push(requested);\n    this.optimized.push(optimized);\n    return this;\n}\n\nfunction flush() {\n\n    this.active = true;\n\n    var obs, paths = this.paths = toPaths(this.tree = toCollapseTrees(\n        this.optimized.reduce(function(collapseMap, paths) {\n            return toCollapseMap(paths, collapseMap);\n        }, {})\n    ));\n\n    try {\n        switch (this.type) {\n            case 'get':\n                obs = this.dataSource.get(paths);\n                break;\n            case 'set':\n                obs = this.dataSource.set({ paths: paths, jsonGraph: this.data });\n                break;\n            case 'call':\n                obs = this.dataSource.call.apply(this.dataSource, this.data);\n                break;\n        }\n        this.disposable = obs.subscribe(this);\n    } catch (e) {\n        this.disposable = {};\n        Subject.prototype.onError.call(this, new InvalidSourceError(e));\n    }\n}\n\nfunction findIntersections(tree,\n                           requested, optimized,\n                           requestedComplements,\n                           optimizedComplements,\n                           requestedIntersection,\n                           optimizedIntersection) {\n\n    var index = -1;\n    var complementIndex = -1;\n    var intersectionIndex = -1;\n    var optTotal = optimized.length;\n    var reqTotal = requested.length - 1;\n\n    while (++index < optTotal) {\n        var path = optimized[index];\n        var pathLen = path.length;\n        var subTree = tree[pathLen];\n        if (subTree && hasIntersection(subTree, path, 0, pathLen)) {\n            optimizedIntersection[++intersectionIndex] = path;\n            requestedIntersection[intersectionIndex] = requested[\n                index < reqTotal ? index : reqTotal\n            ];\n        } else {\n            optimizedComplements[++complementIndex] = path;\n            requestedComplements[complementIndex] = requested[\n                index < reqTotal ? index : reqTotal\n            ];\n        }\n    }\n\n    return ~intersectionIndex;\n}\n\nfunction filterPathsBoundTo(boundPath, paths) {\n\n    var boundLength;\n\n    if (!boundPath || (boundLength = boundPath.length) === 0) {\n        return paths;\n    }\n\n    var filtered = [], filteredIndex = -1, keyIndex;\n    var path, pathsIndex = -1, pathsCount = paths.length;\n\n    outer: while (++pathsIndex < pathsCount) {\n        path = paths[pathsIndex];\n        if (path.length > boundLength) {\n            keyIndex = 0;\n            do {\n                if (path[keyIndex] !== boundPath[keyIndex]) {\n                    continue outer;\n                }\n            } while (++keyIndex < boundLength);\n            filtered[++filteredIndex] = path.slice(boundLength);\n        }\n    }\n\n    return filtered;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Request.js","var Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\n\nmodule.exports = Subject;\n\nfunction Subject(observers, parent) {\n    Subscriber.call(this, null, parent);\n    this.observers = observers || [];\n}\n\nSubject.prototype = Object.create(Subscriber.prototype);\n\n// Unused\n// Subject.prototype.onNext = function(value) {\n//     this.observers.slice(0).forEach(function(observer) {\n//         observer.onNext(value);\n//     });\n// }\n\nSubject.prototype.onError = function(error) {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function(observer) {\n        observer.onError(error);\n    });\n}\n\nSubject.prototype.onCompleted = function() {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function(observer) {\n        observer.onCompleted();\n    });\n}\n\nSubject.prototype.subscribe = function(subscriber) {\n    this.observers.push(subscriber);\n    this.subscriptions.push(subscriber = new Subscription([subscriber], this));\n    return subscriber;\n}\n\nSubject.prototype.dispose =\nSubject.prototype.unsubscribe = function () {\n    this.observers = [];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subject.js","function TimeoutScheduler(delay) {\n    this.delay = delay;\n}\n\nvar TimerDisposable = function TimerDisposable(id) {\n    this.id = id;\n    this.disposed = false;\n};\n\nTimeoutScheduler.prototype.schedule = function schedule(action) {\n    return new TimerDisposable(setTimeout(action, this.delay));\n};\n\nTimerDisposable.prototype.dispose =\nTimerDisposable.prototype.unsubscribe = function() {\n    if (!this.disposed) {\n        clearTimeout(this.id);\n        this.id = null;\n        this.disposed = true;\n    }\n};\n\nmodule.exports = TimeoutScheduler;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/schedulers/TimeoutScheduler.js","var isArray = Array.isArray;\nvar isInternal = require('../internal/isInternal');\n\nmodule.exports = clone;\n\nfunction clone(source) {\n    var dest = source;\n    if (!(!dest || typeof dest !== 'object')) {\n        dest = isArray(source) ? [] : {};\n        for (var key in source) {\n            if (isInternal(key)) {\n                continue;\n            }\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/clone.js","var isObject = require('./isObject');\nmodule.exports = function getSize(node) {\n    return isObject(node) && node.$expires || undefined;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getExpires.js","var isObject = require('./../support/isObject');\n\nmodule.exports = function getType(node, anyType) {\n    var type = isObject(node) && node.$type || void 0;\n    if (anyType && type) {\n        return 'branch';\n    }\n    return type;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getType.js","var isArray = Array.isArray;\nvar isObject = require('./../support/isObject');\n\nmodule.exports = function isPathValue(pathValue) {\n    return isObject(pathValue) && (\n        isArray(pathValue.path) || (\n            typeof pathValue.path === 'string'\n        ));\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isPathValue.js","module.exports = require('./lib/index');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/index.js\n// module id = 103\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = require('./ponyfill');\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/lib/index.js\n// module id = 104\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/lib/ponyfill.js\n// module id = 105\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.l; }\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.i; }\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 106\n// module chunks = 0"],"sourceRoot":""}