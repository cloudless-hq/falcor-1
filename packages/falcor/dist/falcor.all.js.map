{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 274db5524737515670d2","webpack:///./lib/cache/isExpired.js","webpack:///./lib/cache/expireNode.js","webpack:///./lib/cache/get/json/FalcorJSON.js","webpack:///./lib/errors/NullInPathError.js","webpack:///./lib/errors/createErrorClass.js","webpack:///./lib/support/isObject.js","webpack:///.-path-utils/lib/support/materializedAtom.js","webpack:///./lib/cache/clone.js","webpack:///./lib/cache/createHardlink.js","webpack:///./lib/support/getSize.js","webpack:///./lib/cache/getCachePosition.js","webpack:///./lib/cache/updateNodeAncestors.js","webpack:///./lib/errors/InvalidKeySetError.js","webpack:///./lib/lru/promote.js","webpack:///./lib/request/Subscriber.js","webpack:///./lib/request/Subscription.js","webpack:///./lib/cache/get/onValueType.js","webpack:///./lib/cache/getBoundCacheNode.js","webpack:///./lib/cache/removeNodeAndDescendants.js","webpack:///./lib/cache/set/setJSONGraphs.js","webpack:///./lib/cache/set/setPathMaps.js","webpack:///./lib/support/isInternalKey.js","webpack:///.-path-utils/lib/flatBufferToPaths.js","webpack:///.-path-utils/lib/getHashCode.js","webpack:///.-path-utils/lib/iterateKeySet.js","webpack:///./lib/cache/get/json/index.js","webpack:///./lib/cache/get/jsonGraph/index.js","webpack:///./lib/cache/get/jsonGraph/inlineValue.js","webpack:///./lib/cache/get/onMissing.js","webpack:///./lib/cache/invalidate/invalidatePathSets.js","webpack:///./lib/cache/removeNode.js","webpack:///./lib/cache/set/setPathValues.js","webpack:///./lib/internal/isInternal.js","webpack:///./lib/values/expires-now.js","webpack:///(webpack)/buildin/global.js","webpack:///.-path-utils/lib/collapse.js","webpack:///.-path-utils/lib/toCollapseMap.js","webpack:///.-path-utils/lib/toCollapseTrees.js","webpack:///.-path-utils/lib/toPaths.js","webpack:///./lib/cache/get/json/getJSON.js","webpack:///./lib/cache/get/json/getReferenceTarget.js","webpack:///./lib/cache/get/json/onValue.js","webpack:///./lib/cache/get/jsonGraph/getJSONGraph.js","webpack:///./lib/cache/get/onMaterialize.js","webpack:///./lib/cache/insertNode.js","webpack:///./lib/cache/invalidate/invalidatePathMaps.js","webpack:///./lib/cache/mergeValueOrInsertBranch.js","webpack:///./lib/cache/reconstructPath.js","webpack:///./lib/cache/replaceNode.js","webpack:///./lib/cache/updateBackReferenceVersions.js","webpack:///./lib/cache/wrapNode.js","webpack:///./lib/errors/CircularReferenceError.js","webpack:///./lib/errors/InvalidSourceError.js","webpack:///./lib/lru/collect.js","webpack:///./lib/lru/splice.js","webpack:///./lib/request/Source.js","webpack:///./lib/schedulers/ImmediateScheduler.js","webpack:///./lib/support/getTimestamp.js","webpack:///./lib/support/isJSONEnvelope.js","webpack:///./lib/support/isJSONGraphEnvelope.js","webpack:///./lib/support/now.js","webpack:///./lib/values/expires-never.js","webpack:///./lib/index.js","webpack:///.-path-utils/lib/computeFlatBufferHash.js","webpack:///.-path-utils/lib/hasIntersection.js","webpack:///.-path-utils/lib/toFlatBuffer.js","webpack:///.-path-utils/lib/toTree.js","webpack:///./lib/Model.js","webpack:///./lib/ModelDataSourceAdapter.js","webpack:///./lib/ModelRoot.js","webpack:///./lib/cache/call/index.js","webpack:///./lib/cache/get/index.js","webpack:///./lib/cache/get/json/onError.js","webpack:///./lib/cache/get/json/walkFlatBuffer.js","webpack:///./lib/cache/get/json/walkPath.js","webpack:///./lib/cache/get/jsonGraph/getReferenceTarget.js","webpack:///./lib/cache/get/jsonGraph/onValue.js","webpack:///./lib/cache/get/jsonGraph/walkPath.js","webpack:///./lib/cache/get/onMaterializeFlatBuffer.js","webpack:///./lib/cache/getCache.js","webpack:///./lib/cache/getVersion.js","webpack:///./lib/cache/groupCacheArguments.js","webpack:///./lib/cache/invalidate/index.js","webpack:///./lib/cache/mergeJSONGraphNode.js","webpack:///./lib/cache/set/index.js","webpack:///./lib/cache/transferBackReferences.js","webpack:///./lib/cache/unlinkBackReferences.js","webpack:///./lib/cache/unlinkForwardReference.js","webpack:///./lib/deref/hasValidParentReference.js","webpack:///./lib/deref/index.js","webpack:///./lib/errors/BoundJSONGraphModelError.js","webpack:///./lib/errors/InvalidDerefInputError.js","webpack:///./lib/errors/InvalidModelError.js","webpack:///./lib/errors/MaxRetryExceededError.js","webpack:///./lib/internal/f_.js","webpack:///./lib/request/Call.js","webpack:///./lib/request/Queue.js","webpack:///./lib/request/Request.js","webpack:///./lib/request/Subject.js","webpack:///./lib/schedulers/TimeoutScheduler.js","webpack:///./lib/support/array-flat-map.js","webpack:///./lib/support/clone.js","webpack:///./lib/support/getExpires.js","webpack:///./lib/support/getType.js","webpack:///./lib/support/isPathValue.js","webpack:///./~/symbol-observable/index.js","webpack:///./~/symbol-observable/lib/index.js","webpack:///./~/symbol-observable/lib/ponyfill.js","webpack:///(webpack)/buildin/module.js"],"names":["now","require","$now","$never","module","exports","isExpired","node","expireImmediate","exp","$expires","undefined","splice","expireNode","expired","lru","push","FalcorJSON","f_meta","prototype","toJSON","toProps","toString","constructor","Object","defineProperties","reduce","descriptors","name","writable","enumerable","value","bindArrayMethod","Array","$__hash","get","$__version","fn","bound","apply","arguments","isArray","typeofObject","typeofString","getInst","inst","typeofInst","argsLen","length","global","serialize","includeMetadata","JSON","stringify","call","f_meta_inst","f_meta_json","version","json","serializer","createWithProto","count","total","keys","key","xs","__proto__","$code","abs_path","deref_to","deref_from","createErrorClass","MESSAGE","message","init","E","Error","captureStackTrace","stack","is","x","objTypeof","isObject","$type","isInternal","clone","index","createHardlink","from","to","backRefs","f_ref","getSize","$size","getCachePosition","cache","path","type","depth","maxDepth","removeNode","updateBackReferenceVersions","updateNodeAncestors","nodeArg","offset","child","size","keysOrRanges","mesage","EXPIRES_NEVER","lruPromote","root","object","head","prev","next","Subscription","Subscriber","destination","parent","onCompleted","error","onError","onNext","complete","create","dest","signaled","dispose","unsubscribe","subscriptions","add","subscription","remove","indexOf","pop","onValueType","seed","results","requestedPath","requestedLength","optimizedPath","optimizedLength","fromReference","modelRoot","branchSelector","boxValues","materialized","reportMissing","treatErrorsAsValues","onValue","onMissing","onMaterialize","reportMaterialized","hasValue","getBoundCacheNode","model","_path","_node","_root","isInternalKey","removeNodeAndDescendants","key2","arr","mergeJSONGraphNode","NullInPathError","iterateKeySet","setJSONGraphs","jsonGraphEnvelopes","errorSelector","comparator","initialVersion","requestedPaths","optimizedPaths","jsonGraphEnvelopeIndex","jsonGraphEnvelopeCount","jsonGraphEnvelope","paths","jsonGraph","pathIndex","pathCount","setJSONGraphPathSet","newVersion","rootChangeHandler","onChange","messageRoot","messageParent","note","branch","keySet","optimizedIndex","setNode","nextNode","nextParent","nextOptimizedPath","slice","done","setReference","reference","container","mergeValueOrInsertBranch","setPathMaps","pathMapEnvelopes","pathMapIndex","pathMapCount","pathMapEnvelope","setPathMap","pathMap","getKeys","keyIndex","keyCount","itr","flatBufferToPaths","flatBuf","leaf","keysLen","keysIndex","len","rest","keyset","concat","getHashCode","str","hash","i","charCodeAt","initializeNote","nextValue","loaded","rangeOffset","arrayOffset","idx","el","initializeRange","empty","memo","inlineJSONGraphValue","curr","restPathIndex","restPathCount","restPath","isEmptyKeySet","mPath","lastKeyIsNull","isRequestedPath","missDepth","missTotal","missingPath","missingPaths","Number","requested","missing","rangeEnd","invalidatePathSets","invalidatePathSet","invalidateNode","invalidateReference","lruSplice","unlinkBackReferences","unlinkForwardReference","setPathValues","pathValues","pathValueIndex","pathValueCount","pathValue","setPathSet","f_","regexp","RegExp","test","bind","toPaths","toCollapseMap","toCollapseTrees","collapse","collapseMap","$keys","acc","toTree","collapseTrees","collapseKey","typeOfObject","typeOfString","typeOfNumber","MAX_SAFE_INTEGER","MAX_SAFE_INTEGER_DIGITS","MIN_SAFE_INTEGER_DIGITS","abs","Math","safeNumberRegEx","materializedAtom","lengths","pathmap","allPaths","allPathsLength","isSafeNumber","collapsePathMap","parseInt","sets","pathsIndex","pathsCount","collapsePathSetIndexes","subs","code","codes","codesIndex","codesCount","pathsets","pathsetsCount","subPath","subCode","subKeys","subKeysIndex","subKeysCount","subSets","subSetsIndex","subSetsCount","pathset","pathsetIndex","pathsetCount","firstSubKey","pathsetClone","getSortedKeys","keysetIndex","keysetCount","collapseIndex","isSparseRange","sort","sortListAscending","a","b","map","val","num","_isSafeNumber","walkPathAndBuildOutput","walkFlatBufferAndBuildOutput","InvalidModelError","toFlatBuffer","computeFlatBufferHash","getJSON","progressive","referenceContainer","boundPath","_referenceContainer","isFlatBuffer","data","_boxed","recycleJSON","_recycleJSON","_materialized","hasDataSource","Boolean","_source","_treatErrorsAsValues","allowFromWhenceYouCame","_allowFromWhenceYouCame","args","relative","boundRequested","promote","CircularReferenceError","getReferenceTarget","ref","context","copy","onJSONValue","$error","BoundJSONGraphModelError","getJSONGraph","typeofNumber","InvalidKeySetError","refTarget","nextKey","keyIsRange","nextDepth","keysetLength","iteratingKeyset","insertNode","invalidatePathMaps","_comparator","invalidatePathMap","getType","getTimestamp","wrapNode","replaceNode","reconstructPath","isDistinct","mType","sizeOffset","currentPath","transferBackReferences","replacement","n","getExpires","expiresNow","atomSize","typeArg","modelCreated","expires","referencePath","collect","totalArg","max","ratioArg","ratio","shouldUpdate","targetSize","$$observable","default","Source","subscribe","source","operator","y","then","_promise","resolve","reject","values","rejected","errors","ImmediateScheduler","schedule","action","$timestamp","isJSONEnvelope","envelope","isJSONGraphEnvelope","jsong","Date","Model","falcor","opts","keysLength","hasIntersection","tree","intersects","nullBuffer","pathToFlatBuffer","keysMap","pathToTree","seedKeySet","Call","ModelRoot","ModelDataSourceAdapter","TimeoutScheduler","lruCollect","setCache","getCache","options","_scheduler","scheduler","_seed","boxed","_toJSON","set","preload","invalidate","deref","_hasValidParentReference","getValue","lift","subscriber","setValue","modelSetCache","cacheOrJSONGraphEnvelope","_getCache","env","getVersion","_getVersion","_clone","cloneModel","hasOwnProperty","batch","schedulerOrDelay","round","scheudle","unbatch","asDataSource","_materialize","materialize","_dematerialize","dematerialize","unboxValues","withoutDataSource","getPath","_fromWhenceYouCame","fromWhenceYouCame","allow","_optimizePath","_getPathValuesAsPathMap","_getPathValuesAsJSONG","_setPathValues","_setPathMaps","_setJSONGs","_setCache","_invalidatePathValues","_invalidatePathMaps","_model","pathSets","_toJSONG","jsongResponse","suffixes","functionTypeof","Requests","o","syncRefCount","maxRetryCount","topLevelModel","requests","collectRatio","maxSize","pow","onChangesCompleted","cacheNode","messageNode","cType","_args","thisPaths","fragments","errorPath","errorValue","originalOnMissing","f_old_keys","f_new_keys","f_code","nextJSON","nextReferenceContainer","nextOptimizedLength","optimizedLengthNext","refContainerAbsPath","refContainerRefPath","nextPath","nextPathKey","hasMissingPath","rPath","forEach","inlineValue","onJSONGraphValue","$ref","isLeaf","onMaterializeFlatBuffer","out","_copyCache","cloneBoxedValue","boxedValue","clonedValue","l","fromKey","filter","cacheNext","outNext","isUserCreatedcacheNext","isPathValue","groupCacheArguments","groups","argIndex","argCount","group","groupType","arg","argType","inputType","cIsObject","mIsObject","cTimestamp","mTimestamp","arrayFlatMap","changed","optimized","setGroupsIntoCache","groupIndex","groupCount","selector","groupedArgs","operation","pluckPaths","fromNode","destNode","fromNodeRefsLength","destNodeRefsLength","hasValidParentReference","CONTAINER_DOES_NOT_EXIST","InvalidDerefInputError","cacheRoot","absolutePath","currentRefPath","originalRefPath","originalAbsPath","validContainer","shortedPath","absolute","printPaths","join","String","fromCharCode","InvalidSourceError","MaxRetryExceededError","_subscribe","CallOperator","retry","progresive","progressively","CallSubscriber","retryCount","completed","operations","started","seedIsImmutable","tryOnError","mergeInto","tryOnNext","errored","request","shouldCollectCache","rootOnChangesCompletedHandler","e","self","err","destValue","nodeValue","Request","Queue","isolateSet","isolateCall","batchAndDedupeGet","queue","connect","callArgs","Dedupe","dataSource","requestsIndex","requestsCount","Subject","invalidatePaths","active","responded","disposable","envelopes","envelopeIndex","envelopeCount","invalidated","observers","observer","filterPathsBoundTo","errorPathValues","scheduledDisposable","flush","requestedComplements","optimizedComplements","requestedIntersection","optimizedIntersection","findIntersections","obs","complementIndex","intersectionIndex","optTotal","reqTotal","pathLen","subTree","boundLength","filtered","filteredIndex","outer","delay","TimerDisposable","id","disposed","setTimeout","clearTimeout","array","array2","array3","j","k","anyType"],"mappings":"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","file":"falcor.all.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"falcor\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"falcor\"] = factory();\n\telse\n\t\troot[\"falcor\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 109);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 274db5524737515670d2","var now = require('../support/now');\nvar $now = require('../values/expires-now');\nvar $never = require('../values/expires-never');\n\nmodule.exports = function isExpired(node, expireImmediate) {\n    var exp = node.$expires;\n    if (exp === undefined || exp === null || exp === $never) {\n        return false;\n    } else if (exp === $now) {\n        return expireImmediate;\n    }\n    return exp < now();\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/isExpired.js","var splice = require('./../lru/splice');\n\nmodule.exports = function expireNode(node, expired, lru) {\n    if (!node[f_invalidated]) {\n        node[f_invalidated] = true;\n        expired.push(node);\n        splice(lru, node);\n    }\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/expireNode.js","function FalcorJSON(f_meta) {\n    if (!f_meta) {\n        this[f_meta_data] = {};\n    } else if (!(this[f_meta_data] = f_meta[f_meta_data])) {\n        this[f_meta_data] = f_meta;\n    }\n}\n\nFalcorJSON.prototype.toJSON = toJSON;\nFalcorJSON.prototype.toProps = toProps;\nFalcorJSON.prototype.toString = toString;\nFalcorJSON.prototype.constructor = FalcorJSON;\n\nObject.defineProperties(FalcorJSON.prototype, [\n        'concat', 'copyWithin', 'entries', 'every', 'fill', 'filter',\n        'find', 'findIndex', 'forEach', 'includes', 'indexOf', 'join',\n        'keys', 'lastIndexOf', 'map', 'pop', 'push', 'reduce', 'reduceRight',\n        'reverse', 'shift', 'slice', 'some', 'sort', 'splice', 'unshift', 'values'\n    ]\n    .reduce(function (descriptors, name) {\n        descriptors[name] = {\n            writable: true, enumerable: false,\n            value: bindArrayMethod(Array.prototype[name])\n        };\n        return descriptors;\n    }, {\n        $__hash: {\n            enumerable: false,\n            get: function() {\n                var f_meta = this[f_meta_data];\n                return f_meta && f_meta['$code'] || '';\n            }\n        },\n        $__version: {\n            enumerable: false,\n            get: function() {\n                var f_meta = this[f_meta_data];\n                return f_meta && f_meta[f_meta_version] || 0;\n            }\n        }\n    })\n);\n\nfunction bindArrayMethod(fn) {\n    return (bound.fn = fn) && bound;\n    function bound() {\n        return bound.fn.apply(this, arguments);\n    }\n}\n\nvar isArray = Array.isArray;\nvar typeofObject = 'object';\nvar typeofString = 'string';\n\nfunction getInst(inst) {\n    var typeofInst = typeof inst;\n    var argsLen = arguments.length;\n    if (argsLen === 0) {\n        inst = this;\n    } else if (typeofInst !== typeofString) {\n        if (!inst || typeofInst !== typeofObject) {\n            return inst;\n        }\n    } else if (argsLen !== 1) {\n        return inst;\n    } else {\n        inst = this;\n    }\n    return inst === global ? undefined : inst;\n}\n\nfunction toJSON() {\n    return serialize(getInst.apply(this, arguments), toJSON);\n}\n\nfunction toString(includeMetadata) {\n    return JSON.stringify(serialize(\n        getInst.call(this, this),\n        serialize, includeMetadata === true\n    ));\n}\n\nfunction toProps(inst) {\n\n    inst = getInst.apply(this, arguments);\n\n    var f_meta_inst, f_meta_json, version = 0;\n    var json = serialize(inst, toProps, true, true);\n\n    if (inst && (f_meta_inst = inst[f_meta_data])) {\n        version = f_meta_inst[f_meta_version];\n    }\n\n    if (!(!json || typeof json !== typeofObject)) {\n        if (f_meta_json = json[f_meta_data]) {\n            f_meta_json[f_meta_version] = version;\n        }\n    }\n\n    return json;\n}\n\nfunction serialize(inst, serializer, includeMetadata, createWithProto) {\n\n    if (!inst || typeof inst !== typeofObject) {\n        return inst;\n    }\n\n    var count, total, f_meta, keys, key, xs;\n\n    if (isArray(inst)) {\n        xs = inst;\n    } else {\n\n        count = -1;\n        keys = Object.keys(inst);\n        total = keys.length;\n        xs = !createWithProto && {} || {\n            __proto__: FalcorJSON.prototype\n        };\n\n        if (includeMetadata && (f_meta = inst[f_meta_data])) {\n\n            var $code = f_meta['$code'];\n            var abs_path = f_meta[f_meta_abs_path];\n            var deref_to = f_meta[f_meta_deref_to];\n            var deref_from = f_meta[f_meta_deref_from];\n\n            f_meta = { __proto__: null };\n            $code && (f_meta['$code'] = $code);\n            abs_path && (f_meta[f_meta_abs_path] = abs_path);\n            deref_to && (f_meta[f_meta_deref_to] = deref_to);\n            deref_from && (f_meta[f_meta_deref_from] = deref_from);\n\n            xs[f_meta_data] = f_meta;\n\n            if (createWithProto) {\n                xs = { __proto__: xs };\n            }\n        }\n\n        while (++count < total) {\n            if ((key = keys[count]) !== f_meta_data) {\n                xs[key] = serializer(inst[key], serializer, includeMetadata);\n            }\n        }\n    }\n\n    return xs;\n}\n\nmodule.exports = FalcorJSON;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/FalcorJSON.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = '`null` is not allowed in branch key positions.';\n\n/**\n * Do not allow null in path.\n */\nmodule.exports = createErrorClass('NullInPathError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/NullInPathError.js","module.exports = createErrorClass;\n\nfunction createErrorClass(name, init) {\n    function E(message) {\n        this.message = message;\n        init && init.apply(this, arguments);\n        if (!Error.captureStackTrace) {\n            this.stack = (new Error()).stack;\n        } else {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n    E.prototype = new Error();\n    E.prototype.name = name;\n    E.prototype.constructor = E;\n    E.is = function(x) { return x.name === name; };\n    return E;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/createErrorClass.js","var objTypeof = 'object';\nmodule.exports = function isObject(value) {\n    return value !== null && typeof value === objTypeof;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isObject.js","module.exports = { $type: 'atom' };\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/support/materializedAtom.js","var isInternal = require('../internal/isInternal');\n\nmodule.exports = clone;\n\nfunction clone(node) {\n\n    var key, keys = Object.keys(node),\n        json = {}, index = -1, length = keys.length;\n\n    while (++index < length) {\n        key = keys[index];\n        if (isInternal(key)) {\n            continue;\n        }\n        json[key] = node[key];\n    }\n\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/clone.js","module.exports = function createHardlink(from, to) {\n\n    // create a back reference\n    var backRefs = to[f_refs_length] || 0;\n    to[f_ref + backRefs] = from;\n    to[f_refs_length] = backRefs + 1;\n\n    // create a hard reference\n    from[f_ref_index] = backRefs;\n    from[f_context] = to;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/createHardlink.js","var isObject = require('./../support/isObject');\nmodule.exports = function getSize(node) {\n    return isObject(node) && node.$size || 0;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getSize.js","/**\n * getCachePosition makes a fast walk to the bound value since all bound\n * paths are the most possible optimized path.\n *\n * @param {Model} model -\n * @param {Array} path -\n * @returns {Mixed} - undefined if there is nothing in this position.\n * @private\n */\nmodule.exports = getCachePosition;\n\nfunction getCachePosition(cache, path) {\n\n    var node = cache;\n    var type, depth = 0;\n    var maxDepth = path.length;\n\n    if (maxDepth > 0) {\n        do {\n            node = node[path[depth]];\n\n            while (node && (type = node.$type) === $ref) {\n                node = getCachePosition(cache, node.value);\n            }\n        } while (++depth < maxDepth && node && !type);\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getCachePosition.js","var removeNode = require('./removeNode');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = function updateNodeAncestors(nodeArg, offset, lru, version) {\n    var child = nodeArg;\n    do {\n        var node = child[f_parent];\n        var size = child.$size = (child.$size || 0) - offset;\n        if (size <= 0 && node != null) {\n            removeNode(child, node, child[f_key], lru);\n        } else if (child[f_version] !== version) {\n            updateBackReferenceVersions(child, version);\n        }\n        child = node;\n    } while (child);\n    return nodeArg;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/updateNodeAncestors.js","var createErrorClass = require('./createErrorClass');\n\n/**\n * InvalidKeySetError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidKeySetError', function(path, keysOrRanges) {\n    this.mesage = '' +\n        'The KeySet ' + JSON.stringify(keysOrRanges) +\n        ' in path ' + JSON.stringify(path) + ' contains a KeySet. ' +\n        'Keysets can only contain Keys or Ranges';\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidKeySetError.js","var EXPIRES_NEVER = require('./../values/expires-never');\n\n// [H] -> Next -> ... -> [T]\n// [T] -> Prev -> ... -> [H]\nmodule.exports = function lruPromote(root, object) {\n    // Never promote node.$expires === 1.  They cannot expire.\n    if (object.$expires === EXPIRES_NEVER) {\n        return;\n    }\n\n    var head = root[f_head];\n\n    // Nothing is in the cache.\n    if (!head) {\n        root[f_head] = root[f_tail] = object;\n        return;\n    }\n\n    if (head === object) {\n        return;\n    }\n\n    // The item always exist in the cache since to get anything in the\n    // cache it first must go through set.\n    var prev = object[f_prev];\n    var next = object[f_next];\n    if (next) {\n        next[f_prev] = prev;\n    }\n    if (prev) {\n        prev[f_next] = next;\n    }\n    object[f_prev] = undefined;\n\n    // Insert into head position\n    root[f_head] = object;\n    object[f_next] = head;\n    head[f_prev] = object;\n\n    // If the item we promoted was the tail, then set prev to tail.\n    if (object === root[f_tail]) {\n        root[f_tail] = prev;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/promote.js","var Subscription = require('./Subscription');\n\nmodule.exports = Subscriber;\n\nfunction Subscriber(destination, parent, onCompleted) {\n    if (typeof destination === 'function' ||\n             typeof parent === 'function' ||\n        typeof onCompleted === 'function') {\n        Subscription.call(this, []);\n        this.destination = {\n            error: parent,\n            onError: parent,\n            next: destination,\n            onNext: destination,\n            complete: onCompleted,\n            onCompleted: onCompleted\n        }\n    } else {\n        Subscription.call(this, [], parent);\n        this.parent = parent;\n        this.destination = destination;\n    }\n}\n\nSubscriber.prototype = Object.create(Subscription.prototype);\n\nSubscriber.prototype.next =\nSubscriber.prototype.onNext = function onNext(value) {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onNext) {\n            dest.onNext(value);\n        } else if (dest.next) {\n            dest.next(value);\n        }\n    }\n}\n\nSubscriber.prototype.error =\nSubscriber.prototype.onError = function onError(error) {\n    var signaled = false;\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onError) {\n            signaled = true;\n            dest.onError(error);\n        } else if (dest.error) {\n            signaled = true;\n            dest.error(error);\n        }\n        this.dispose();\n    }\n    if (!signaled) {\n        throw error;\n    }\n}\n\nSubscriber.prototype.complete =\nSubscriber.prototype.onCompleted = function onCompleted() {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onCompleted) {\n            dest.onCompleted();\n        } else if (dest.complete) {\n            dest.complete();\n        }\n        this.dispose();\n    }\n}\n\nSubscriber.prototype.dispose =\nSubscriber.prototype.unsubscribe = function () {\n    this.destination = null;\n    Subscription.prototype.dispose.call(this);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subscriber.js","module.exports = Subscription;\n\nfunction Subscription(subscriptions, parent) {\n    this.parent = parent;\n    this.subscriptions = subscriptions || [];\n}\n\nSubscription.prototype.add = function(subscription) {\n    return this.subscriptions.push(subscription) && this || this;\n}\n\nSubscription.prototype.remove = function(subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.subscriptions.splice(index, 1);\n    }\n    return this;\n}\n\nSubscription.prototype.dispose =\nSubscription.prototype.unsubscribe = function () {\n    var subscription, subscriptions = this.subscriptions;\n    while (subscriptions.length) {\n        (subscription = subscriptions.pop()) &&\n            subscription.dispose &&\n            subscription.dispose();\n    }\n    var parent = this.parent;\n    if (parent) {\n        this.parent = null;\n        parent.remove && parent.remove(this);\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subscription.js","var isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\n\nmodule.exports = onValueType;\n\nfunction onValueType(node, type, json,\n                     path, depth, seed, results,\n                     requestedPath, requestedLength,\n                     optimizedPath, optimizedLength,\n                     fromReference, modelRoot, expired, expireImmediate,\n                     branchSelector, boxValues, materialized, reportMissing,\n                     treatErrorsAsValues, onValue, onMissing, onMaterialize) {\n\n    var reportMaterialized = reportMissing;\n\n    if (type) {\n        if (isExpired(node, expireImmediate)) {\n            if (!node[f_invalidated]) {\n                expireNode(node, expired, modelRoot);\n            }\n        } else {\n            lruPromote(modelRoot, node);\n            if (node.value === undefined) {\n                reportMissing = false;\n                reportMaterialized = materialized;\n            } else {\n                if (seed) {\n                    if (fromReference) {\n                        requestedPath[depth] = null;\n                    }\n                    return onValue(node, type, depth, seed, results,\n                                   requestedPath, optimizedPath, optimizedLength,\n                                   fromReference, boxValues, materialized, treatErrorsAsValues);\n                }\n                return undefined;\n            }\n        }\n    }\n\n    if (materialized) {\n        seed && (results.hasValue = true);\n    } else if (!reportMaterialized) {\n        return undefined;\n    }\n\n    return onMissing(path, depth, results,\n                     requestedPath, requestedLength, fromReference,\n                     optimizedPath, optimizedLength, reportMissing,\n                     materialized, json, branchSelector,\n                     boxValues, onMaterialize);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onValueType.js","var getCachePosition = require('./getCachePosition');\n\nmodule.exports = getBoundCacheNode;\n\nfunction getBoundCacheNode(model, path) {\n    path = path || model._path;\n    var node = model._node;\n    if (!node || node[f_parent] === undefined || node[f_invalidated]) {\n        model._node = null;\n        if (path.length === 0) {\n            node = model._root.cache;\n        } else {\n            node = getCachePosition(model._root.cache, path);\n            if (path === model._path) {\n                model._node = node;\n            }\n        }\n    }\n    return node;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getBoundCacheNode.js","var removeNode = require('./removeNode');\nvar isInternalKey = require('../support/isInternalKey');\n\nmodule.exports = function removeNodeAndDescendants(node, parent, key, lru) {\n    if (removeNode(node, parent, key, lru)) {\n        if (node.$type == null) {\n            for (var key2 in node) {\n                if (!isInternalKey(key2)) {\n                    removeNodeAndDescendants(node[key2], node, key2, lru);\n                }\n            }\n        }\n        return true;\n    }\n    return false;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/removeNodeAndDescendants.js","var arr = new Array(5);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar mergeJSONGraphNode = require('../mergeJSONGraphNode');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\n\n/**\n * Merges a list of {@link JSONGraphEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to merge the {@link JSONGraphEnvelope}s.\n * @param {Array.<PathValue>} jsonGraphEnvelopes - the {@link JSONGraphEnvelope}s to merge.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setJSONGraphs(model, jsonGraphEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n    var initialVersion = cache[f_version];\n\n    var requestedPath = [];\n    var optimizedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var jsonGraphEnvelopeIndex = -1;\n    var jsonGraphEnvelopeCount = jsonGraphEnvelopes.length;\n\n    while (++jsonGraphEnvelopeIndex < jsonGraphEnvelopeCount) {\n\n        var jsonGraphEnvelope = jsonGraphEnvelopes[jsonGraphEnvelopeIndex];\n        var paths = jsonGraphEnvelope.paths;\n        var jsonGraph = jsonGraphEnvelope.jsonGraph;\n\n        var pathIndex = -1;\n        var pathCount = paths.length;\n\n        while (++pathIndex < pathCount) {\n\n            var path = paths[pathIndex];\n            optimizedPath.index = 0;\n\n            setJSONGraphPathSet(\n                path, 0,\n                cache, cache, cache,\n                jsonGraph, jsonGraph, jsonGraph,\n                requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n                version, expired, lru, comparator, errorSelector, expireImmediate\n            );\n        }\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n    arr[3] = undefined;\n    arr[4] = undefined;\n\n    var newVersion = cache[f_version];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (initialVersion !== newVersion) {\n        modelRoot.version = version;\n        rootChangeHandler && rootChangeHandler();\n    }\n\n    return [requestedPaths, optimizedPaths, initialVersion !== newVersion];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setJSONGraphPathSet(\n    path, depth, root, parent, node,\n    messageRoot, messageParent, message,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n\n        var results = setNode(\n            root, parent, node, messageRoot, messageParent, message,\n            key, branch, false, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = results[0];\n        var nextParent = results[1];\n        var nextOptimizedPath = results[4];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setJSONGraphPathSet(\n                    path, depth + 1, root, nextParent, nextNode,\n                    messageRoot, results[3], results[2],\n                    requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                    version, expired, lru, comparator, errorSelector, expireImmediate\n                );\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(\n    root, node, messageRoot, message, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var messageParent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        messageParent = messageRoot;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var index = 0;\n        var container = node;\n        var count = reference.length - 1;\n        parent = node = root;\n        messageParent = message = messageRoot;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            optimizedPath.index = index;\n\n            var results = setNode(\n                root, parent, node, messageRoot, messageParent, message,\n                key, branch, true, requestedPath, optimizedPath, version,\n                expired, lru, comparator, errorSelector, expireImmediate\n            );\n            node = results[0];\n            optimizedPath = results[4];\n            if (!node || typeof node !== 'object') {\n                optimizedPath.index = index;\n                return results;\n            }\n            parent = results[1];\n            message = results[2];\n            messageParent = results[3];\n        } while (index++ < count);\n\n        optimizedPath.index = index;\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(\n    root, parent, node, messageRoot, messageParent, message,\n    key, branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = setReference(\n            root, node, messageRoot, message, requestedPath, optimizedPath,\n            version, expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        message = results[2];\n        messageParent = results[3];\n        optimizedPath = results[4];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            messageParent = message;\n            node = parent[key];\n            message = messageParent && messageParent[key];\n        }\n\n        node = mergeJSONGraphNode(\n            parent, node, message, key, requestedPath, optimizedPath,\n            version, expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setJSONGraphs.js","var arr = new Array(3);\nvar isArray = Array.isArray;\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar getCachePosition = require('../getCachePosition');\nvar isInternalKey = require('../../support/isInternalKey');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar mergeValueOrInsertBranch = require('../mergeValueOrInsertBranch');\n\n/**\n * Sets a list of {@link PathMapEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of {@link PathMapEnvelope}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setPathMaps(model, pathMapEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[f_parent] || cache;\n    var initialVersion = cache[f_version];\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathMapIndex = -1;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathMap(\n            pathMapEnvelope.json, 0, cache, parent, node,\n            requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n            version, expired, modelRoot, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    var newVersion = cache[f_version];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (initialVersion !== newVersion) {\n        modelRoot.version = version;\n        rootChangeHandler && rootChangeHandler();\n    }\n\n    return [requestedPaths, optimizedPaths, initialVersion !== newVersion];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setPathMap(\n    pathMap, depth, root, parent, node,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var keys = getKeys(pathMap);\n\n    if (keys && keys.length) {\n\n        var keyIndex = 0;\n        var keyCount = keys.length;\n        var optimizedIndex = optimizedPath.index;\n\n        do {\n            var key = keys[keyIndex];\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n\n            requestedPath.depth = depth;\n\n            var results = setNode(\n                root, parent, node, key, child,\n                branch, false, requestedPath, optimizedPath, version,\n                expired, lru, comparator, errorSelector, expireImmediate\n            );\n\n            requestedPath[depth] = key;\n            requestedPath.index = depth;\n\n            var nextNode = results[0];\n            var nextParent = results[1];\n            var nextOptimizedPath = results[2];\n            nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n            if (nextNode) {\n                if (branch) {\n                    setPathMap(\n                        child, depth + 1,\n                        root, nextParent, nextNode,\n                        requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                        version, expired, lru, comparator, errorSelector, expireImmediate\n                    );\n                } else {\n                    requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                    optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n                }\n            }\n            if (++keyIndex >= keyCount) {\n                break;\n            }\n            optimizedPath.index = optimizedIndex;\n        } while (true);\n    }\n}\n/* eslint-enable */\n\nfunction setReference(\n    value, root, node, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n        var container = node;\n        parent = root;\n\n        node = node[f_context];\n\n        if (node != null) {\n            parent = node[f_parent] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n            optimizedPath.index = index;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                var results = setNode(\n                    root, parent, node, key, value,\n                    branch, true, requestedPath, optimizedPath, version,\n                    expired, lru, comparator, errorSelector, expireImmediate\n                );\n                node = results[0];\n                optimizedPath = results[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return results;\n                }\n                parent = results[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[f_context] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(\n    root, parent, node, key, value,\n    branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = setReference(\n            value, root, node, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        optimizedPath = results[2];\n        type = node && node.$type;\n    }\n\n    if (type === void 0) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(\n            parent, node, key, value,\n            branch, reference, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction getKeys(pathMap) {\n\n    if (!(!pathMap || typeof pathMap !== 'object') && !pathMap.$type) {\n        var keys = [];\n        var itr = 0;\n        if (isArray(pathMap)) {\n            keys[itr++] = 'length';\n        }\n        for (var key in pathMap) {\n            if (isInternalKey(key)) {\n                continue;\n            }\n            keys[itr++] = key;\n        }\n        return keys;\n    }\n\n    return void 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setPathMaps.js","/**\n * Determined if the key passed in is an internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nmodule.exports = isInternalKey;\n\nvar isInternal = require('../internal/isInternal');\n\nfunction isInternalKey(key) {\n    return key && key[0] === '$' || isInternal(key);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isInternalKey.js","module.exports = flatBufferToPaths;\n\nfunction flatBufferToPaths(flatBuf, paths, path) {\n\n    path = path || [];\n    paths = paths || [];\n\n    var leaf = [];\n    var keys = flatBuf['$keys'];\n    var keysLen = keys.length;\n    var keysIndex = -1, key, len;\n\n    while (++keysIndex < keysLen) {\n\n        var rest = flatBuf[keysIndex];\n        var keyset = keys[keysIndex];\n\n        if (!rest) {\n            leaf.push(keyset);\n        } else {\n            flatBufferToPaths(rest, paths, path.concat([keyset]));\n        }\n    }\n\n    if (leaf.length === 1) {\n        paths.push(path.concat(leaf));\n    } else if (leaf.length > 1) {\n        paths.push(path.concat([leaf]));\n    }\n\n    return paths;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/flatBufferToPaths.js","module.exports = getHashCode;\n\nfunction getHashCode(str) {\n    var hash = 5381, i = str.length;\n    while (i) {\n        hash = (hash * 33) ^ str.charCodeAt(--i);\n    }\n    // JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n    // integers. Since we want the results to be always positive, convert the\n    // signed int to an unsigned by doing an unsigned bitshift.\n    return hash >>> 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/getHashCode.js","var isArray = Array.isArray;\n\n/**\n * Takes in a keySet and a note attempts to iterate over it.\n * If the value is a primitive, the key will be returned and the note will\n * be marked done\n * If the value is an object, then each value of the range will be returned\n * and when finished the note will be marked done.\n * If the value is an array, each value will be iterated over, if any of the\n * inner values are ranges, those will be iterated over.  When fully done,\n * the note will be marked done.\n *\n * @param {Object|Array|String|Number} keySet -\n * @param {Object} note - The non filled note\n * @returns {String|Number|undefined} - The current iteration value.\n * If undefined, then the keySet is empty\n * @public\n */\nmodule.exports = function iterateKeySet(keySet, note) {\n    if (note.isArray === undefined) {\n        initializeNote(keySet, note);\n    }\n\n    // Array iteration\n    if (note.isArray) {\n        var nextValue;\n\n        // Cycle through the array and pluck out the next value.\n        do {\n            if (note.loaded && note.rangeOffset > note.to) {\n                ++note.arrayOffset;\n                note.loaded = false;\n            }\n\n            var idx = note.arrayOffset, length = keySet.length;\n            if (idx >= length) {\n                note.done = true;\n                break;\n            }\n\n            var el = keySet[note.arrayOffset];\n            var type = typeof el;\n\n            // Inner range iteration.\n            if (type === 'object') {\n                if (!note.loaded) {\n                    initializeRange(el, note);\n                }\n\n                // Empty to/from\n                if (note.empty) {\n                    continue;\n                }\n\n                nextValue = note.rangeOffset++;\n            }\n\n            // Primitive iteration in array.\n            else {\n                ++note.arrayOffset;\n                nextValue = el;\n            }\n        } while (nextValue === undefined);\n\n        return nextValue;\n    }\n\n    // Range iteration\n    else if (note.isObject) {\n        if (!note.loaded) {\n            initializeRange(keySet, note);\n        }\n        if (note.rangeOffset > note.to) {\n            note.done = true;\n            return undefined;\n        }\n\n        return note.rangeOffset++;\n    }\n\n    // Primitive value\n    else {\n        note.done = true;\n        return keySet;\n    }\n};\n\nfunction initializeRange(key, memo) {\n    var from = memo.from = key.from || 0;\n    var to = memo.to = key.to ||\n        (typeof key.length === 'number' &&\n        memo.from + key.length - 1 || 0);\n    memo.rangeOffset = memo.from;\n    memo.loaded = true;\n    if (from > to) {\n        memo.empty = true;\n    }\n}\n\nfunction initializeNote(key, note) {\n    note.done = false;\n    var isObject = note.isObject = !!(key && typeof key === 'object');\n    note.isArray = isObject && isArray(key);\n    note.arrayOffset = 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/iterateKeySet.js","module.exports = require('./getJSON');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/index.js","module.exports = require('./getJSONGraph');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/index.js","module.exports = inlineJSONGraphValue;\n\n/* eslint-disable no-constant-condition */\nfunction inlineJSONGraphValue(node, path, length, seed, branch) {\n\n    var key, depth = 0, prev,\n        curr = seed.jsonGraph;\n\n    if (!curr) {\n        seed.jsonGraph = curr = {};\n    }\n\n    do {\n        prev = curr;\n        key = path[depth++];\n        if (depth >= length) {\n            curr = prev[key] = branch !== true ? node : prev[key] || {};\n            break;\n        }\n        curr = prev[key] || (prev[key] = {});\n    } while (true);\n\n    return curr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/inlineValue.js","var isArray = Array.isArray;\n\nmodule.exports = onMissing;\n\n/* eslint-disable no-constant-condition */\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, json, branchSelector,\n                   boxValues, onMaterialize) {\n\n    if (!reportMissing && !reportMaterialized) {\n        return;\n    }\n\n    var keyset,\n        restPathIndex = -1,\n        restPathCount = requestedLength - depth,\n        restPath = restPathCount && new Array(restPathCount) || undefined;\n\n    while (++restPathIndex < restPathCount) {\n        keyset = path[restPathIndex + depth];\n        if (isEmptyKeySet(keyset)) {\n            return;\n        }\n        restPath[restPathIndex] = keyset;\n    }\n\n    var index, count, mPath;\n    var lastKeyIsNull = keyset === null;\n    var isRequestedPath = reportMissing;\n    var missDepth, missTotal, missingPath, missingPaths;\n\n    if (!reportMissing) {\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } else {\n        missDepth = depth;\n        missTotal = requestedLength;\n        missingPath = requestedPath;\n        missingPaths = results.requested || (results.requested = []);\n    }\n\n    do {\n        if (restPathCount < requestedLength || !isRequestedPath) {\n            index = -1;\n            count = missDepth;\n            mPath = new Array(missTotal);\n            while (++index < count) {\n                mPath[index] = missingPath[index];\n            }\n            restPathIndex = -1;\n            while (index < missTotal) {\n                mPath[index++] = restPath[++restPathIndex];\n            }\n        }\n\n        // break after inserting both requested and optimized missing paths\n        if (isRequestedPath = !isRequestedPath) {\n            if (reportMissing) {\n                missingPaths[missingPaths.length] = mPath;\n            }\n            break;\n        }\n\n        missingPaths[missingPaths.length] = mPath || restPath;\n\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missingPaths = results.missing || (results.missing = []);\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } while (true);\n\n    if (reportMaterialized) {\n        return onMaterialize(json, mPath, missDepth, missTotal, branchSelector, boxValues);\n    }\n}\n/* eslint-enable */\n\nfunction isEmptyKeySet(keyset) {\n\n    // false if the keyset is a primitive\n    if ('object' !== typeof keyset) {\n        return false;\n    } else if (keyset === null) {\n        return false;\n    }\n\n    if (isArray(keyset)) {\n        // return true if the keyset is an empty array\n        return keyset.length === 0;\n    }\n\n    var rangeEnd = keyset.to,\n        from = keyset.from || 0;\n    if ('number' !== typeof rangeEnd) {\n        rangeEnd = from + (keyset.length || 0);\n    }\n\n    // false if trying to request incorrect or empty ranges\n    // e.g. { from: 10, to: 0 } or { from: 5, length: 0 }\n    return from >= rangeEnd;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMissing.js","var arr = new Array(2);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\nvar getSize = require('../../support/getSize');\nvar createHardlink = require('../createHardlink');\nvar getBoundCacheNode = require('../getBoundCacheNode');\nvar updateNodeAncestors = require('../updateNodeAncestors');\nvar removeNodeAndDescendants = require('../removeNodeAndDescendants');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\n\n/**\n * Invalidates a list of Paths in a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathValues.\n * @param {Array.<PathValue>} paths - the PathValues to set.\n */\n\nmodule.exports = function invalidatePathSets(model, paths, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version++;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n    var parent = node[f_parent] || cache;\n    var initialVersion = cache[f_version];\n\n    var pathIndex = -1;\n    var pathCount = paths.length;\n\n    while (++pathIndex < pathCount) {\n\n        var path = paths[pathIndex];\n\n        invalidatePathSet(\n            path, 0, cache, parent, node,\n            version, expired, lru, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    var newVersion = cache[f_version];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (rootChangeHandler && initialVersion !== newVersion) {\n        rootChangeHandler();\n    }\n};\n\nfunction invalidatePathSet(\n    path, depth, root, parent, node,\n    version, expired, lru, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n\n    do {\n        arr = invalidateNode(\n            root, parent, node,\n            key, branch, false, version,\n            expired, lru, expireImmediate\n        );\n        var nextNode = arr[0];\n        var nextParent = arr[1];\n        if (nextNode) {\n            if (branch) {\n                invalidatePathSet(\n                    path, depth + 1,\n                    root, nextParent, nextNode,\n                    version, expired, lru, expireImmediate\n                );\n            } else if (removeNodeAndDescendants(nextNode, nextParent, key, lru)) {\n                updateNodeAncestors(nextParent, getSize(nextNode), lru, version);\n            }\n        }\n        key = iterateKeySet(keySet, note);\n    } while (!note.done);\n}\n\nfunction invalidateReference(root, node, version, expired, lru, expireImmediate) {\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return arr;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[f_context];\n\n    if (node != null) {\n        parent = node[f_parent] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            arr = invalidateNode(\n                root, parent, node,\n                key, branch, true, version,\n                expired, lru, expireImmediate\n            );\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return arr;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\nfunction invalidateNode(\n    root, parent, node,\n    key, branch, reference, version,\n    expired, lru, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        arr = invalidateReference(root, node, version, expired, lru, expireImmediate);\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return arr;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type !== void 0) {\n        return [node, parent];\n    }\n\n    if (key == null) {\n        if (branch) {\n            throw new Error('`null` is not allowed in branch key positions.');\n        } else if (node) {\n            key = node[f_key];\n        }\n    } else {\n        parent = node;\n        node = parent[key];\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/invalidatePathSets.js","var lruSplice = require('../lru/splice');\nvar unlinkBackReferences = require('./unlinkBackReferences');\nvar unlinkForwardReference = require('./unlinkForwardReference');\n\nmodule.exports = function removeNode(node, parent, key, lru) {\n    if (!(!node || typeof node !== 'object')) {\n        var type = node.$type;\n        if (type) {\n            if (type === $ref) {\n                unlinkForwardReference(node);\n            }\n            lruSplice(lru, node);\n        }\n        unlinkBackReferences(node);\n        parent[key] = node[f_parent] = void 0;\n        return true;\n    }\n    return false;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/removeNode.js","var arr = new Array(3);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar getCachePosition = require('../getCachePosition');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\nvar mergeValueOrInsertBranch = require('../mergeValueOrInsertBranch');\n\n/**\n * Sets a list of {@link PathValue}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the {@link PathValue}s.\n * @param {Array.<PathValue>} pathValues - the list of {@link PathValue}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setPathValues(model, pathValues, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[f_parent] || cache;\n    var initialVersion = cache[f_version];\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathValueIndex = -1;\n    var pathValueCount = pathValues.length;\n\n    while (++pathValueIndex < pathValueCount) {\n\n        var pathValue = pathValues[pathValueIndex];\n        var path = pathValue.path;\n        var value = pathValue.value;\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathSet(\n            value, path, 0, cache, parent, node,\n            requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n            version, expired, modelRoot, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    var newVersion = cache[f_version];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (initialVersion !== newVersion) {\n        modelRoot.version = version;\n        rootChangeHandler && rootChangeHandler();\n    }\n\n    return [requestedPaths, optimizedPaths, initialVersion !== newVersion];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setPathSet(\n    value, path, depth, root, parent, node,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var results = setNode(\n            root, parent, node, key, value,\n            branch, false, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = results[0];\n        var nextParent = results[1];\n        var nextOptimizedPath = results[2];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setPathSet(\n                    value, path, depth + 1,\n                    root, nextParent, nextNode,\n                    requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                    version, expired, lru, comparator, errorSelector, expireImmediate\n                );\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(\n    value, root, node, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var container = node;\n        parent = root;\n\n        node = node[f_context];\n\n        if (node != null) {\n            parent = node[f_parent] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                optimizedPath.index = index;\n\n                var results = setNode(\n                    root, parent, node, key, value,\n                    branch, true, requestedPath, optimizedPath, version,\n                    expired, lru, comparator, errorSelector, expireImmediate\n                );\n                node = results[0];\n                optimizedPath = results[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return results;\n                }\n                parent = results[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[f_context] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(\n    root, parent, node, key, value,\n    branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = setReference(\n            value, root, node, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        optimizedPath = results[2];\n        type = node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(\n            parent, node, key, value,\n            branch, reference, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setPathValues.js","/**\n * Determined if the key passed in is an f_ internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nvar f_ = require('./f_');\nvar regexp = new RegExp('^' + f_, 'i', 'g');\n\nmodule.exports = regexp.test.bind(regexp);\n\n\n\n// WEBPACK FOOTER //\n// ./lib/internal/isInternal.js","module.exports = 0;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/values/expires-now.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() { return this; })();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 34\n// module chunks = 0","var toPaths = require('./toPaths');\nvar toCollapseMap = require('./toCollapseMap');\nvar toCollapseTrees = require('./toCollapseTrees');\n\nmodule.exports = function collapse(paths) {\n    return toPaths(toCollapseTrees(toCollapseMap(paths)));\n};\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/collapse.js","var isArray = Array.isArray;\nvar flatBufferToPaths = require('./flatBufferToPaths');\n\nmodule.exports = toCollapseMap;\n\nfunction toCollapseMap(paths, collapseMap) {\n    if (!paths) { return collapseMap; }\n    else if (!isArray(paths)) {\n        if (isArray(paths.$keys)) {\n            paths = flatBufferToPaths(paths);\n        }\n    }\n    return paths.reduce(function(acc, path) {\n        var len = path.length;\n        if (!acc[len]) {\n            acc[len] = [];\n        }\n        acc[len].push(path);\n        return acc;\n    }, collapseMap || {});\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toCollapseMap.js","var toTree = require('./toTree');\n\nmodule.exports = toCollapseTrees;\n\nfunction toCollapseTrees(collapseMap, collapseTrees) {\n    return Object.keys(collapseMap).reduce(function(collapseTrees, collapseKey) {\n        collapseTrees[collapseKey] = toTree(\n            collapseMap[collapseKey],\n            collapseTrees[collapseKey]\n        );\n        return collapseTrees;\n    }, collapseTrees || {});\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toCollapseTrees.js","var isArray = Array.isArray;\nvar typeOfObject = 'object';\nvar typeOfString = 'string';\nvar typeOfNumber = 'number';\nvar MAX_SAFE_INTEGER = 9007199254740991; // Number.MAX_SAFE_INTEGER in es6\nvar MAX_SAFE_INTEGER_DIGITS = 16; // String(Number.MAX_SAFE_INTEGER).length\nvar MIN_SAFE_INTEGER_DIGITS = 17; // String(Number.MIN_SAFE_INTEGER).length (including sign)\nvar abs = Math.abs;\nvar safeNumberRegEx = /^(0|(\\-?[1-9][0-9]*))$/;\nvar getHashCode = require('./getHashCode');\nvar materializedAtom = require('./support/materializedAtom');\n\n/* jshint forin: false */\nmodule.exports = function toPaths(lengths) {\n    var pathmap;\n    var allPaths = [];\n    var allPathsLength = 0;\n    for (var length in lengths) {\n        if (isSafeNumber(length) && isObject(pathmap = lengths[length])) {\n            var paths = collapsePathMap(pathmap, 0, parseInt(length, 10)).sets;\n            var pathsIndex = -1;\n            var pathsCount = paths.length;\n            while (++pathsIndex < pathsCount) {\n                allPaths[allPathsLength++] = collapsePathSetIndexes(paths[pathsIndex]);\n            }\n        }\n    }\n    return allPaths;\n};\n\nfunction isObject(value) {\n    return value !== null && typeof value === typeOfObject;\n}\n\nfunction collapsePathMap(pathmap, depth, length) {\n\n    var key;\n    var subs = Object.create(null);\n    var code = '' + getHashCode('' + depth);\n\n    var codes = [];\n    var codesIndex = -1;\n    var codesCount = 0;\n\n    var pathsets = [];\n    var pathsetsCount = 0;\n\n    var subPath, subCode,\n        subKeys, subKeysIndex, subKeysCount,\n        subSets, subSetsIndex, subSetsCount,\n        pathset, pathsetIndex, pathsetCount,\n        firstSubKey, pathsetClone;\n\n    subKeys = [];\n    subKeysIndex = -1;\n\n    if (depth < length - 1) {\n\n        subKeysCount = getSortedKeys(pathmap, subKeys);\n\n        while (++subKeysIndex < subKeysCount) {\n            key = subKeys[subKeysIndex];\n            subPath = collapsePathMap(pathmap[key], depth + 1, length);\n            subCode = subPath.code;\n            if(subs[subCode]) {\n                subPath = subs[subCode];\n            } else {\n                codes[codesCount++] = subCode;\n                subPath = subs[subCode] = {\n                    keys: [],\n                    sets: subPath.sets\n                };\n            }\n            code = '' + getHashCode(code + key + subCode);\n\n            isSafeNumber(key) &&\n                subPath.keys.push(parseInt(key, 10)) ||\n                subPath.keys.push(key);\n        }\n\n        while(++codesIndex < codesCount) {\n\n            key = codes[codesIndex];\n            subPath = subs[key];\n            subKeys = subPath.keys;\n            subKeysCount = subKeys.length;\n\n            if (subKeysCount > 0) {\n\n                subSets = subPath.sets;\n                subSetsIndex = -1;\n                subSetsCount = subSets.length;\n                firstSubKey = subKeys[0];\n\n                while (++subSetsIndex < subSetsCount) {\n\n                    pathset = subSets[subSetsIndex];\n                    pathsetIndex = -1;\n                    pathsetCount = pathset.length;\n                    pathsetClone = new Array(pathsetCount + 1);\n                    pathsetClone[0] = subKeysCount > 1 && subKeys || firstSubKey;\n\n                    while (++pathsetIndex < pathsetCount) {\n                        pathsetClone[pathsetIndex + 1] = pathset[pathsetIndex];\n                    }\n\n                    pathsets[pathsetsCount++] = pathsetClone;\n                }\n            }\n        }\n    } else {\n        subKeysCount = getSortedKeys(pathmap, subKeys);\n        if (subKeysCount > 1) {\n            pathsets[pathsetsCount++] = [subKeys];\n        } else {\n            pathsets[pathsetsCount++] = subKeys;\n        }\n        while (++subKeysIndex < subKeysCount) {\n            code = '' + getHashCode(code + subKeys[subKeysIndex]);\n        }\n    }\n\n    return {\n        code: code,\n        sets: pathsets\n    };\n}\n\nfunction collapsePathSetIndexes(pathset) {\n\n    var keysetIndex = -1;\n    var keysetCount = pathset.length;\n\n    while (++keysetIndex < keysetCount) {\n        var keyset = pathset[keysetIndex];\n        if (isArray(keyset)) {\n            pathset[keysetIndex] = collapseIndex(keyset);\n        }\n    }\n\n    return pathset;\n}\n\n/**\n * Collapse range indexers, e.g. when there is a continuous\n * range in an array, turn it into an object instead:\n *\n * [1,2,3,4,5,6] => {'from':1, 'to':6}\n *\n * @private\n */\nfunction collapseIndex(keyset) {\n\n    // Do we need to dedupe an indexer keyset if they're duplicate consecutive integers?\n    // var hash = {};\n    var keyIndex = -1;\n    var keyCount = keyset.length - 1;\n    var isSparseRange = keyCount > 0;\n\n    while (++keyIndex <= keyCount) {\n\n        var key = keyset[keyIndex];\n\n        if (!isSafeNumber(key) /* || hash[key] === true*/ ) {\n            isSparseRange = false;\n            break;\n        }\n        // hash[key] = true;\n        // Cast number indexes to integers.\n        keyset[keyIndex] = parseInt(key, 10);\n    }\n\n    if (isSparseRange === true) {\n\n        keyset.sort(sortListAscending);\n\n        var from = keyset[0];\n        var to = keyset[keyCount];\n\n        // If we re-introduce deduped integer indexers, change this comparson to '==='.\n        if (to - from <= keyCount) {\n            return { from: from, to: to };\n        }\n    }\n\n    return keyset;\n}\n\nfunction sortListAscending(a, b) {\n    return a - b;\n}\n\n/* jshint forin: false */\nfunction getSortedKeys(map, keys, sort) {\n    var len = 0;\n    if (map === materializedAtom) {\n        keys[len++] = null;\n    } else {\n        for (var key in map) {\n            keys[len++] = key;\n        }\n        if (len > 1) {\n            keys.sort(sort);\n        }\n    }\n    return len;\n}\n\n// function getHashCode(key) {\n//     var code = 5381;\n//     var index = -1;\n//     var count = key.length;\n//     while (++index < count) {\n//         code = (code << 5) + code + key.charCodeAt(index);\n//     }\n//     return String(code);\n// }\n\n/**\n * Return true if argument is a number or can be cast to a number which\n * roundtrips to the same string.\n * @private\n */\nfunction isSafeNumber(val) {\n    var num = val;\n    var type = typeof val;\n    if (type === typeOfString) {\n        var length = val.length;\n        // Number.MIN_SAFE_INTEGER is 17 digits including the sign.\n        // Anything longer cannot be safe.\n        if (length === 0 || length > MIN_SAFE_INTEGER_DIGITS) {\n            return false;\n        }\n        if (!safeNumberRegEx.test(val)) {\n            return false;\n        }\n        // Number.MAX_SAFE_INTEGER is 16 digits.\n        // Anything shorter must be safe.\n        if (length < MAX_SAFE_INTEGER_DIGITS) {\n            return true;\n        }\n        num = +val;\n    } else if (type !== typeOfNumber) {\n        return false;\n    }\n    // Number.isSafeInteger(num) in es6.\n    return num % 1 === 0 && abs(num) <= MAX_SAFE_INTEGER;\n}\n\n// export for testing\nmodule.exports._isSafeNumber = isSafeNumber;\n\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toPaths.js","var isArray = Array.isArray;\nvar walkPathAndBuildOutput = require('./walkPath');\nvar walkFlatBufferAndBuildOutput = require('./walkFlatBuffer');\nvar getBoundCacheNode = require('../../getBoundCacheNode');\nvar InvalidModelError = require('../../../errors/InvalidModelError');\nvar toFlatBuffer = require('@graphistry/falcor-path-utils/lib/toFlatBuffer');\nvar computeFlatBufferHash = require('@graphistry/falcor-path-utils/lib/computeFlatBufferHash');\n\nmodule.exports = getJSON;\n\nfunction getJSON(model, paths, seed, progressive, expireImmediate) {\n\n    var node,\n        referenceContainer,\n        boundPath = model._path,\n        modelRoot = model._root,\n        cache = modelRoot.cache,\n        requestedPath, requestedLength,\n        optimizedPath, optimizedLength =\n            boundPath && boundPath.length || 0;\n\n    // If the model is bound, get the cache position.\n    if (optimizedLength) {\n        node = getBoundCacheNode(model);\n        // If there was a short, then we 'throw an error' to the outside\n        // calling function which will onError the observer.\n        if (node && node.$type) {\n            return { error: new InvalidModelError(boundPath, boundPath) };\n        }\n        // We need to get the new cache position and copy the bound path.\n        optimizedPath = [];\n        for (var i = 0; i < optimizedLength; ++i) {\n            optimizedPath[i] = boundPath[i];\n        }\n        referenceContainer = model._referenceContainer;\n    } else {\n        node = cache;\n        optimizedPath = [];\n    }\n\n    requestedPath = [];\n\n    var isFlatBuffer = false,\n        json = seed && seed.json,\n        results = { data: seed },\n        boxValues = model._boxed,\n        expired = modelRoot.expired,\n        recycleJSON = model._recycleJSON,\n        materialized = model._materialized,\n        hasDataSource = Boolean(model._source),\n        branchSelector = modelRoot.branchSelector,\n        treatErrorsAsValues = model._treatErrorsAsValues,\n        allowFromWhenceYouCame = model._allowFromWhenceYouCame;\n\n    var arr, path, pathsIndex = 0, pathsCount = paths.length;\n\n    if (pathsCount > 0) {\n        if (recycleJSON) {\n            pathsCount = 1;\n            isFlatBuffer = true;\n            if (!paths[0].$keys) {\n                paths = [computeFlatBufferHash(toFlatBuffer(paths, {}))];\n            }\n            arr = walkFlatBufferAndBuildOutput(cache, node, json, paths[0], 0, seed, results,\n                                               requestedPath, optimizedPath, optimizedLength,\n                                               /* fromReference = */ false, referenceContainer,\n                                               modelRoot, expired, expireImmediate, branchSelector,\n                                               boxValues, materialized, hasDataSource,\n                                               treatErrorsAsValues, allowFromWhenceYouCame);\n            json = arr[0];\n            arr[0] = undefined;\n            arr[1] = undefined;\n        } else {\n            do {\n                path = paths[pathsIndex];\n                requestedLength = path.length;\n                json = walkPathAndBuildOutput(cache, node, json, path,\n                                           /* depth = */ 0, seed, results,\n                                              requestedPath, requestedLength,\n                                              optimizedPath, optimizedLength,\n                                              /* fromReference = */ false, referenceContainer,\n                                              modelRoot, expired, expireImmediate, branchSelector,\n                                              boxValues, materialized, hasDataSource,\n                                              treatErrorsAsValues, allowFromWhenceYouCame);\n            } while (++pathsIndex < pathsCount)\n        }\n    }\n\n    var requested = results.requested;\n\n    results.args = isFlatBuffer && paths || requested;\n\n    if (requested && requested.length) {\n        results.relative = results.args;\n        if (optimizedLength) {\n            var boundRequested = [];\n            for (var i = 0, len = requested.length; i < len; ++i) {\n                boundRequested[i] = boundPath.concat(requested[i]);\n            }\n            results.requested = boundRequested;\n        }\n    }\n\n    if (results.hasValue) {\n        seed.json = json;\n    }\n\n    return results;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/getJSON.js","var arr = new Array(3);\nvar promote = require('../../../lru/promote');\nvar isExpired = require('../../isExpired');\nvar createHardlink = require('../../createHardlink');\nvar CircularReferenceError = require('../../../errors/CircularReferenceError');\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, ref, modelRoot, expireImmediate) {\n\n    promote(modelRoot, ref);\n\n    var context,\n        key, type, depth = 0,\n        node = root, path = ref.value,\n        copy = path, length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[f_context])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                throw new CircularReferenceError(path);\n            }\n            // If the node we land on isn't the existing ref context,\n            // create a hard-link between the reference and the node\n            // it points to.\n            else if (node !== context) {\n                createHardlink(ref, node);\n            }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === $ref) {\n\n                promote(modelRoot, node);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n    arr[2] = ref;\n\n    return arr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/getReferenceTarget.js","var clone = require('../../clone');\nvar onError = require('./onError');\n\nmodule.exports = onJSONValue;\n\nfunction onJSONValue(node, type, depth, seed, results,\n                     requestedPath, optimizedPath, optimizedLength,\n                     fromReference, boxValues, materialized,\n                     treatErrorsAsValues) {\n\n    if ($error === type && !treatErrorsAsValues) {\n        return onError(node, depth, results, requestedPath,\n                       fromReference, boxValues);\n    }\n\n    results.hasValue = true;\n\n    // boxValues always clones the node\n    return !boxValues ? node.value : clone(node);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/onValue.js","var walkPathAndBuildOutput = require('./walkPath');\nvar BoundJSONGraphModelError = require('../../../errors/BoundJSONGraphModelError');\n\nmodule.exports = getJSONGraph;\n\nfunction getJSONGraph(model, paths, seed, progressive, expireImmediate) {\n\n    var node, cache,\n        boundPath = model._path,\n        modelRoot = model._root,\n        requestedPath, requestedLength,\n        optimizedPath, optimizedLength =\n            boundPath && boundPath.length || 0;\n\n    // If the model is bound, then get that cache position.\n    if (optimizedLength) {\n        // JSONGraph output cannot ever be bound or else it will\n        // throw an error.\n        return { error: new BoundJSONGraphModelError() };\n    } else {\n        optimizedPath = [];\n        cache = node = modelRoot.cache;\n    }\n\n    requestedPath = [];\n\n    var boxValues = model._boxed,\n        expired = modelRoot.expired,\n        materialized = model._materialized,\n        hasDataSource = Boolean(model._source),\n        treatErrorsAsValues = model._treatErrorsAsValues,\n\n        results = { data: seed },\n        pathsIndex = -1, pathsCount = paths.length;\n\n    while (++pathsIndex < pathsCount) {\n        var path = paths[pathsIndex];\n        requestedLength = path.length;\n        walkPathAndBuildOutput(cache, node, path,\n                            /* depth = */ 0, seed, results,\n                               requestedPath, requestedLength,\n                               optimizedPath, optimizedLength,\n              /* fromReference = */ false, modelRoot, expired, expireImmediate,\n                               boxValues, materialized, hasDataSource, treatErrorsAsValues);\n    }\n\n    results.args =\n    results.relative = results.requested;\n\n    return results;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/getJSONGraph.js","var isArray = Array.isArray;\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar clone = require('../clone');\nvar FalcorJSON = require('./json/FalcorJSON');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = onMaterialize;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterialize(json, path, depth, length,\n                       branchSelector, boxValues) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (depth === length) {\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta;\n\n    var nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        keysetIndex = -1, keysetLength = 0;\n\n    keyset = path[depth];\n\n    if (!json || typeofObject !== typeof json) {\n        json = { __proto__: FalcorJSON.prototype };\n        json[f_meta_data] = f_meta = { __proto__: null };\n        f_meta[f_meta_version] = 0;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[f_meta_data])) {\n        json[f_meta_data] = f_meta = { __proto__: null };\n        f_meta[f_meta_version] = 0;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n    } else {\n        f_meta[f_meta_version] = 0;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            // insert the materialized branch\n            json[nextKey] = onMaterialize(\n                json[nextKey], path,\n                nextDepth, length,\n                branchSelector,\n                boxValues\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMaterialize.js","module.exports = function insertNode(node, parent, key, version, optimizedPath) {\n    node[f_key] = key;\n    node[f_parent] = parent;\n\n    if (version !== undefined) {\n        node[f_version] = version;\n    }\n    if (!node[f_abs_path]) {\n        node[f_abs_path] = optimizedPath.slice(0, optimizedPath.index).concat(key);\n    }\n\n    parent[key] = node;\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/insertNode.js","var isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\nvar getSize = require('../../support/getSize');\nvar createHardlink = require('../createHardlink');\nvar getBoundCacheNode = require('../getBoundCacheNode');\nvar isInternalKey = require('../../support/isInternalKey');\nvar updateNodeAncestors = require('../updateNodeAncestors');\nvar removeNodeAndDescendants = require('../removeNodeAndDescendants');\n\n/**\n * Sets a list of PathMaps into a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of @PathMapEnvelopes to set.\n */\n\nmodule.exports = function invalidatePathMaps(model, pathMapEnvelopes, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version++;\n    var comparator = modelRoot._comparator;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n    var parent = node[f_parent] || cache;\n    var initialVersion = cache[f_version];\n\n    var pathMapIndex = -1;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n\n        invalidatePathMap(\n            pathMapEnvelope.json, 0, cache, parent, node,\n            version, expired, lru, comparator, expireImmediate\n        );\n    }\n\n    var newVersion = cache[f_version];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (rootChangeHandler && initialVersion !== newVersion) {\n        rootChangeHandler();\n    }\n};\n\nfunction invalidatePathMap(\n    pathMap, depth, root, parent, node, version,\n    expired, lru, comparator, expireImmediate) {\n\n    if (!pathMap || typeof pathMap !== 'object' || pathMap.$type) {\n        return;\n    }\n\n    for (var key in pathMap) {\n        if (!isInternalKey(key)) {\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n            var results = invalidateNode(\n                root, parent, node,\n                key, child, branch, false, version, expired,\n                lru, comparator, expireImmediate\n            );\n            var nextNode = results[0];\n            var nextParent = results[1];\n            if (nextNode) {\n                if (branch) {\n                    invalidatePathMap(\n                        child, depth + 1,\n                        root, nextParent, nextNode,\n                        version, expired, lru, comparator, expireImmediate\n                    );\n                } else if (removeNodeAndDescendants(nextNode, nextParent, key, lru)) {\n                    updateNodeAncestors(nextParent, getSize(nextNode), lru, version);\n                }\n            }\n        }\n    }\n}\n\nfunction invalidateReference(\n    value, root, node, version,\n    expired, lru, comparator, expireImmediate) {\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        return [undefined, root];\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[f_context];\n\n    if (node != null) {\n        parent = node[f_parent] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            var results = invalidateNode(\n                root, parent, node,\n                key, value, branch, true, version,\n                expired, lru, comparator, expireImmediate\n            );\n            node = results[0];\n            if (!node || typeof node !== 'object') {\n                return results;\n            }\n            parent = results[1];\n        } while (index++ < count);\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    return [node, parent];\n}\n\nfunction invalidateNode(\n    root, parent, node,\n    key, value, branch, reference, version,\n    expired, lru, comparator, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = invalidateReference(\n            value, root, node, version, expired,\n            lru, comparator, expireImmediate\n        );\n\n        node = results[0];\n\n        if (!node && typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        type = node && node.$type;\n    }\n\n    if (type !== void 0) {\n        return [node, parent];\n    }\n\n    if (key == null) {\n        if (branch) {\n            throw new Error('`null` is not allowed in branch key positions.');\n        } else if (node) {\n            key = node[f_key];\n        }\n    } else {\n        parent = node;\n        node = parent[key];\n    }\n\n    return [node, parent];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/invalidatePathMaps.js","var $now = require('../values/expires-now');\nvar getType = require('../support/getType');\nvar getSize = require('../support/getSize');\nvar getTimestamp = require('../support/getTimestamp');\n\nvar wrapNode = require('./wrapNode');\nvar isExpired = require('./isExpired');\nvar expireNode = require('./expireNode');\nvar insertNode = require('./insertNode');\nvar replaceNode = require('./replaceNode');\nvar reconstructPath = require('./reconstructPath');\nvar updateNodeAncestors = require('./updateNodeAncestors');\nvar removeNodeAndDescendants = require('./removeNodeAndDescendants');\n\nmodule.exports = function mergeValueOrInsertBranch(\n    parent, node, key, value,\n    branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = getType(node, reference);\n\n    if (branch || reference) {\n        if (type && isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge if it expires immediately\n             */\n            true)) {\n            expireNode(node, expired, lru);\n            type = node.$expires === $now ? type : 'expired';\n        }\n        if ((type && type !== $ref) || (!node || typeof node !== 'object')) {\n            node = replaceNode(node, {}, parent, key, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    } else {\n        var message = value;\n        var isDistinct = true;\n        var mType = getType(message);\n\n        // Compare the current cache value with the new value. If either of\n        // them don't have a timestamp, or the message's timestamp is newer,\n        // replace the cache value with the message value. If a comparator\n        // is specified, the comparator takes precedence over timestamps.\n        if (comparator) {\n            isDistinct = !comparator(\n                node, message, optimizedPath.slice(0, optimizedPath.index)\n            );\n        } else if (!mType) {\n            isDistinct = !node || node.value !== message;\n        } else {\n            isDistinct = !type || ((\n                // Comparing either Number or undefined to undefined always results in false.\n                getTimestamp(message) < getTimestamp(node)) === false) || !(\n                // They're the same if the following fields are the same.\n                type !== mType ||\n                node.value !== message.value ||\n                node.$expires !== message.$expires);\n        }\n\n        if (isDistinct) {\n\n            if (errorSelector && mType === $error) {\n                message = errorSelector(reconstructPath(requestedPath, key), message);\n            }\n\n            var sizeOffset = getSize(node) - getSize(message =\n                wrapNode(message, mType, mType ? message.value : message));\n\n            node = replaceNode(node, message, parent, key, lru, version);\n            parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/mergeValueOrInsertBranch.js","/**\n * Reconstructs the path for the current key, from currentPath (requestedPath)\n * state maintained during set/merge walk operations.\n *\n * During the walk, since the requestedPath array is updated after we attempt to\n * merge/insert nodes during a walk (it reflects the inserted node's parent branch)\n * we need to reconstitute a path from it.\n *\n * @param  {Array} currentPath The current requestedPath state, during the walk\n * @param  {String} key        The current key value, during the walk\n * @return {Array} A new array, with the path which represents the node we're about\n * to insert\n */\nmodule.exports = function reconstructPath(currentPath, key) {\n\n    var path = currentPath.slice(0, currentPath.depth);\n    path[path.length] = key;\n\n    return path;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/reconstructPath.js","var transferBackReferences = require('./transferBackReferences');\nvar removeNodeAndDescendants = require('./removeNodeAndDescendants');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = function replaceNode(node, replacement, parent, key, lru, version) {\n    if (node === replacement) {\n        return node;\n    } else if (!(!node || typeof node !== 'object')) {\n        transferBackReferences(node, replacement);\n        removeNodeAndDescendants(node, parent, key, lru);\n        updateBackReferenceVersions(replacement, version);\n    }\n\n    parent[key] = replacement;\n    return replacement;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/replaceNode.js","module.exports = function updateBackReferenceVersions(nodeArg, version) {\n    var stack = [nodeArg];\n    var count = 0;\n    do {\n        var node = stack[count];\n        if (node && node[f_version] !== version) {\n            node[f_version] = version;\n            stack[count++] = node[f_parent];\n            var i = -1;\n            var n = node[f_refs_length] || 0;\n            while (++i < n) {\n                stack[count++] = node[f_ref + i];\n            }\n        }\n    } while (--count > -1);\n    return nodeArg;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/updateBackReferenceVersions.js","var isArray = Array.isArray;\nvar now = require('../support/now');\nvar clone = require('./../support/clone');\nvar getSize = require('./../support/getSize');\nvar getExpires = require('../support/getExpires');\nvar expiresNow = require('../values/expires-now');\n\nvar atomSize = 50;\n\nmodule.exports = function wrapNode(nodeArg, typeArg, value) {\n\n    var size = 0;\n    var node = nodeArg;\n    var type = typeArg;\n\n    if (type) {\n        var modelCreated = node[f_wrapped_value];\n        node = clone(node);\n        size = getSize(node);\n        node.$type = type;\n        node[f_prev] = undefined;\n        node[f_next] = undefined;\n        node[f_wrapped_value] = modelCreated || false;\n    } else {\n        node = { $type: $atom, value: value };\n        node[f_prev] = undefined;\n        node[f_next] = undefined;\n        node[f_wrapped_value] = true;\n    }\n\n    if (value == null) {\n        size = atomSize + 1;\n    } else if (size == null || size <= 0) {\n        switch (typeof value) {\n            case 'object':\n                if (isArray(value)) {\n                    size = atomSize + value.length;\n                } else {\n                    size = atomSize + 1;\n                }\n                break;\n            case 'string':\n                size = atomSize + value.length;\n                break;\n            default:\n                size = atomSize + 1;\n                break;\n        }\n    }\n\n    var expires = getExpires(node);\n\n    if (typeof expires === 'number' && expires < expiresNow) {\n        node.$expires = now() + (expires * -1);\n    }\n\n    node.$size = size;\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/wrapNode.js","var createErrorClass = require('./createErrorClass');\n\nmodule.exports = createErrorClass('CircularReferenceError', function(referencePath) {\n    this.message = 'Encountered circular reference ' + JSON.stringify(referencePath);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/CircularReferenceError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'An exception was thrown when making a request';\n\n/**\n * InvalidSourceError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidSourceError', function(error) {\n    this.message = MESSAGE + ':\\n\\t' + error;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidSourceError.js","var removeNode = require('../cache/removeNode');\nvar updateNodeAncestors = require('../cache/updateNodeAncestors');\n\nmodule.exports = function collect(lru, expired, totalArg, max, ratioArg, version) {\n\n    var total = totalArg;\n    var ratio = ratioArg;\n\n    if (typeof ratio !== 'number') {\n        ratio = 0.75;\n    }\n\n    var shouldUpdate = typeof version === 'number';\n    var targetSize = max * ratio;\n    var parent, node, size;\n\n    node = expired.pop();\n\n    while (node) {\n        size = node.$size || 0;\n        total -= size;\n        if (shouldUpdate === true) {\n            updateNodeAncestors(node, size, lru, version);\n        } else if (parent = node[f_parent]) {  // eslint-disable-line no-cond-assign\n            removeNode(node, parent, node[f_key], lru);\n        }\n        node = expired.pop();\n    }\n\n    if (total >= max) {\n        var prev = lru[f_tail];\n        node = prev;\n        while ((total >= targetSize) && node) {\n            prev = prev[f_prev];\n            size = node.$size || 0;\n            total -= size;\n            if (shouldUpdate === true) {\n                updateNodeAncestors(node, size, lru, version);\n            }\n            node = prev;\n        }\n\n        lru[f_tail] = lru[f_prev] = node;\n        if (node == null) {\n            lru[f_head] = lru[f_next] = undefined;\n        } else {\n            node[f_next] = undefined;\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/collect.js","module.exports = function lruSplice(root, object) {\n\n    // Its in the cache.  Splice out.\n    var prev = object[f_prev];\n    var next = object[f_next];\n    if (next) {\n        next[f_prev] = prev;\n    }\n    if (prev) {\n        prev[f_next] = next;\n    }\n    object[f_prev] = object[f_next] = undefined;\n\n    if (object === root[f_head]) {\n        root[f_head] = next;\n    }\n    if (object === root[f_tail]) {\n        root[f_tail] = prev;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/splice.js","var Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar $$observable = require('symbol-observable').default;\n\nmodule.exports = Source;\n\nfunction Source(subscribe) {\n    if (!subscribe) {\n        return;\n    }\n    switch (typeof subscribe) {\n        case 'object':\n            this.source = subscribe;\n            break;\n        case 'function':\n            this.source = { subscribe: subscribe };\n            break;\n    }\n}\n\nSource.prototype[$$observable] = function() {\n    return this;\n}\n\nSource.prototype.operator = function(destination) {\n    return this.subscribe(destination);\n}\n\n// Unused\n// Source.prototype.lift = function(operator, source) {\n//     source = new Source(source || this);\n//     source.operator = operator;\n//     source._promise = this._promise;\n//     return source;\n// }\n\nSource.prototype.subscribe = function(destination, x, y) {\n    return new Subscription([\n        this.operator.call(\n            this.source, !(destination instanceof Subscriber) ?\n                new Subscriber(destination, x, y) : destination)\n    ]);\n}\n\nSource.prototype.then = function then(onNext, onError) {\n    /* global Promise */\n    var source = this;\n    if (!this._promise) {\n        this._promise = new global['Promise'](function(resolve, reject) {\n            var values = [], rejected = false;\n            source.subscribe({\n                next: function(value) { values[values.length] = value; },\n                error: function(errors) { (rejected = true) && reject(errors); },\n                complete: function() {\n                    !rejected &&\n                    resolve(values.length <= 1 ? values[0] : values);\n                }\n            });\n        });\n    }\n    return this._promise.then(onNext, onError);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Source.js","var empty = {\n    dispose: function() {},\n    unsubscribe: function() {}\n};\n\nfunction ImmediateScheduler() {}\n\nImmediateScheduler.prototype.schedule = function schedule(action) {\n    action();\n    return empty;\n};\n\nmodule.exports = ImmediateScheduler;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/schedulers/ImmediateScheduler.js","var isObject = require('./../support/isObject');\nmodule.exports = function getTimestamp(node) {\n    return isObject(node) && node.$timestamp || undefined;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getTimestamp.js","var isObject = require('./../support/isObject');\n\nmodule.exports = function isJSONEnvelope(envelope) {\n    return isObject(envelope) && ('json' in envelope);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isJSONEnvelope.js","var isArray = Array.isArray;\nvar isObject = require('./../support/isObject');\n\nmodule.exports = function isJSONGraphEnvelope(envelope) {\n    return isObject(envelope) && isArray(envelope.paths) && (\n        isObject(envelope.jsonGraph) ||\n        isObject(envelope.jsong) ||\n        isObject(envelope.json) ||\n        isObject(envelope.values) ||\n        isObject(envelope.value)\n    );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isJSONGraphEnvelope.js","module.exports = Date.now;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/now.js","module.exports = 1;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/values/expires-never.js","var Model = require('./Model');\nvar FalcorJSON = require('./cache/get/json/FalcorJSON');\n\nfunction falcor(opts) {\n    if (!(this instanceof Model)) {\n        return new Model(opts);\n    }\n    Model.call(this, opts);\n}\n\nfalcor.prototype = Object.create(Model.prototype);\n\nfalcor['Model'] = Model;\nfalcor['FalcorJSON'] = FalcorJSON;\nfalcor['toProps'] = FalcorJSON.prototype.toProps;\n\nmodule.exports = falcor;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/index.js","var isArray = Array.isArray;\nvar getHashCode = require('./getHashCode');\n\nmodule.exports = computeFlatBufferHash;\n\nfunction computeFlatBufferHash(seed) {\n\n    if (seed === undefined) {\n        return undefined;\n    }\n\n    var code = '';\n    var keys = seed['$keys'];\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    while (++keysIndex < keysLength) {\n\n        var key = keys[keysIndex];\n\n        if (key === null) {\n            code = '' + getHashCode('' + code + 'null');\n            continue;\n        } else if (typeof key === 'object') {\n            key = '{from:' + key.from + ',length:' + key.length + '}';\n        }\n\n        var next = computeFlatBufferHash(seed[keysIndex]);\n        if (next === undefined) {\n            code = '' + getHashCode('' + code + key);\n        } else {\n            code = '' + getHashCode('' + code + key + next['$code']);\n        }\n    }\n\n    seed['$code'] = code;\n\n    return seed;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/computeFlatBufferHash.js","var isArray = Array.isArray;\nvar materializedAtom = require('./support/materializedAtom');\n\nmodule.exports = hasIntersection\n\n/**\n * Tests to see if the intersection should be stripped from the\n * total paths.  The only way this happens currently is if the entirety\n * of the path is contained in the tree.\n * @private\n */\n\nfunction hasIntersection(tree, path, depth, length) {\n\n    if (depth === length) {\n        return true;\n    }\n\n    var intersects = true;\n    var keyset, keysetIndex = -1, keysetLength = 0;\n    var next, nextKey, nextDepth = depth + 1,\n        keyIsRange, rangeEnd, keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return tree === materializedAtom;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                break iteratingKeyset;\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        do {\n            if (nextDepth === length) {\n                if (tree[nextKey] !== null) {\n                    return false;\n                }\n            } else {\n                next = tree[nextKey];\n                if (next === null || next === undefined) {\n                    return false;\n                } else if (hasIntersection(next, path, nextDepth, length) === false) {\n                    return false;\n                }\n            }\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/hasIntersection.js","var isArray = Array.isArray;\nvar nullBuffer = { '$keys': [null], '$keysMap': { 'null': 0 } };\nvar flatBufferToPaths = require('./flatBufferToPaths');\n\nmodule.exports = toFlatBuffer;\n\nfunction toFlatBuffer(paths, seed) {\n    return paths.reduce(function(seed, path) {\n        if (isArray(path)) {\n            return pathToFlatBuffer(seed, path, 0, path.length);\n        }\n        return toFlatBuffer(flatBufferToPaths(path), seed);\n    }, seed || {});\n}\n\nfunction pathToFlatBuffer(seed, path, depth, length) {\n\n    if (depth === length) {\n        return undefined;\n    }\n\n    seed = seed || {};\n    var keys = seed['$keys'] || (seed['$keys'] = []);\n    var keysMap = seed['$keysMap'] || (seed['$keysMap'] = {});\n    var keysIndex = -1;\n\n    var keyset, keysetIndex = -1, keysetLength = 0;\n    var node, next, nextKey, nextDepth = depth + 1,\n        rangeEnd, keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return nullBuffer;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            if ('undefined' === typeof (keysIndex = keysMap[nextKey])) {\n                keysIndex = keys.length;\n            }\n            keys[keysIndex] = nextKey;\n            keysMap[nextKey] = keysIndex;\n            next = pathToFlatBuffer(seed[keysIndex], path, nextDepth, length);\n            if (next !== undefined) {\n                seed[keysIndex] = next;\n            }\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                break iteratingKeyset;\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyset = { from: nextKey, length: rangeEnd - nextKey + 1 };\n            nextKey = '{from:' + nextKey + ',length:' + (rangeEnd - nextKey + 1) + '}';\n            if ('undefined' === typeof (keysIndex = keysMap[nextKey])) {\n                keysIndex = keys.length;\n            }\n            keys[keysIndex] = keyset;\n            keysMap[nextKey] = keysIndex;\n            next = pathToFlatBuffer(seed[keysIndex], path, nextDepth, length);\n            if (next !== undefined) {\n                seed[keysIndex] = next;\n            }\n        }\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return seed;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toFlatBuffer.js","var isArray = Array.isArray;\nvar materializedAtom = require('./support/materializedAtom');\n\nmodule.exports = toTree;\nmodule.exports.pathToTree = pathToTree;\n\n/**\n * @param {Array} paths -\n * @returns {Object} -\n */\n\nfunction toTree(paths, seed) {\n    return paths.reduce(function(seed, path) {\n        return pathToTree(seed, path, 0, path.length, null);\n    }, seed || {});\n};\n\nfunction pathToTree(seed, path, depth, length, value, branch) {\n\n    if (depth === length) {\n        return true;\n    }\n\n    var seedKeySet, keyset, keysetIndex = -1, keysetLength = 0;\n    var node, next, nextKey, nextDepth = depth + 1,\n        keyIsRange, rangeEnd, keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return materializedAtom;\n    }\n\n    seedKeySet = keyset;\n    seed = seed ? seed : branch ? branch(path, depth, seed) : {};\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                break iteratingKeyset;\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        do {\n            if (nextDepth === length) {\n                seed[nextKey] = value;\n            } else {\n                node = seed[path[depth] = nextKey];\n                next = pathToTree(node, path, nextDepth, length, value);\n                if (!next) {\n                    seed[nextKey] = value;\n                } else if (!node) {\n                    seed[nextKey] = next;\n                }\n            }\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    path[depth] = seedKeySet;\n\n    return seed;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toTree.js","var Call = require('./request/Call');\nvar ModelRoot = require('./ModelRoot');\nvar FalcorJSON = require('./cache/get/json/FalcorJSON');\nvar ModelDataSourceAdapter = require('./ModelDataSourceAdapter');\nvar TimeoutScheduler = require('./schedulers/TimeoutScheduler');\nvar ImmediateScheduler = require('./schedulers/ImmediateScheduler');\nvar collapse = require('@graphistry/falcor-path-utils/lib/collapse');\n\nvar lruCollect = require('./lru/collect');\nvar getSize = require('./support/getSize');\nvar isObject = require('./support/isObject');\nvar isJSONEnvelope = require('./support/isJSONEnvelope');\nvar getCachePosition = require('./cache/getCachePosition');\nvar isJSONGraphEnvelope = require('./support/isJSONGraphEnvelope');\n\nvar setCache = require('./cache/set/setPathMaps');\nvar setJSONGraphs = require('./cache/set/setJSONGraphs');\n\nvar getJSON = require('./cache/get/json');\nvar getCache = require('./cache/getCache');\nvar getJSONGraph = require('./cache/get/jsonGraph');\n\nmodule.exports = Model;\n\n/**\n * This callback is invoked when the Model's cache is changed.\n * @callback Model~onChange\n */\n\n /**\n * This function is invoked on every JSONGraph Error retrieved from the DataSource. This function allows Error objects to be transformed before being stored in the Model's cache.\n * @callback Model~errorSelector\n * @param {Object} jsonGraphError - the JSONGraph Error object to transform before it is stored in the Model's cache.\n * @returns {Object} the JSONGraph Error object to store in the Model cache.\n */\n\n /**\n * This function is invoked every time a value in the Model cache is about to be replaced with a new value. If the function returns true, the existing value is replaced with a new value and the version flag on all of the value's ancestors in the tree are incremented.\n * @callback Model~comparator\n * @param {Object} existingValue - the current value in the Model cache.\n * @param {Object} newValue - the value about to be set into the Model cache.\n * @returns {Boolean} the Boolean value indicating whether the new value and the existing value are equal.\n */\n\n/**\n * A Model object is used to execute commands against a {@link JSONGraph} object. {@link Model}s can work with a local JSONGraph cache, or it can work with a remote {@link JSONGraph} object through a {@link DataSource}.\n * @constructor\n * @param {?Object} options - a set of options to customize behavior\n * @param {?DataSource} options.source - a data source to retrieve and manage the {@link JSONGraph}\n * @param {?JSONGraph} options.cache - initial state of the {@link JSONGraph}\n * @param {?number} options.maxSize - the maximum size of the cache. This value roughly correlates to item count (where itemCount = maxSize / 50). Each item by default is given a metadata `$size` of 50 (or its length when it's an array or string). You can get better control of falcor's memory usage by tweaking `$size`\n * @param {?number} options.collectRatio - the ratio of the maximum size to collect when the maxSize is exceeded\n * @param {?Model~errorSelector} options.errorSelector - a function used to translate errors before they are returned\n * @param {?Model~onChange} options.onChange - a function called whenever the Model's cache is changed\n * @param {?Model~comparator} options.comparator - a function called whenever a value in the Model's cache is about to be replaced with a new value.\n */\nfunction Model(opts) {\n\n    var options = opts || {};\n\n    this._node = options._node;\n    this._path = options._path || [];\n    this._source = options.source || options._source;\n    this._root = options._root || new ModelRoot(options, this);\n    this._recycleJSON = options.recycleJSON === true || options._recycleJSON;\n    this._scheduler = options.scheduler || options._scheduler || new ImmediateScheduler();\n\n    if (options._seed) {\n        this._recycleJSON = true;\n        this._seed = options._seed;\n        this._treatErrorsAsValues = true;\n    } else if (this._recycleJSON) {\n        this._treatErrorsAsValues = true;\n        this._seed = { __proto__: FalcorJSON.prototype };\n    }\n\n    this._boxed = options.boxed === true || options._boxed || false;\n    this._materialized = options.materialized === true || options._materialized || false;\n    this._treatErrorsAsValues = options.treatErrorsAsValues === true || options._treatErrorsAsValues || false;\n    this._allowFromWhenceYouCame = options.allowFromWhenceYouCame === true || options._allowFromWhenceYouCame || false;\n\n    if (options.cache) {\n        this.setCache(options.cache);\n    }\n}\n\nModel.prototype.constructor = Model;\n\n/**\n * The get method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model}. The get method loads each value into a JSON object and returns in a ModelResponse.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - the requested data as JSON\n */\nModel.prototype.get = function get() {\n    return new Call(\n        'get', this, Array.prototype.slice.call(arguments, 0)\n    )._toJSON(this._seed || { __proto__: FalcorJSON.prototype }, []);\n}\n\n/**\n * Sets the value at one or more places in the JSONGraph model. The set method accepts one or more {@link PathValue}s, each of which is a combination of a location in the document and the value to place there.  In addition to accepting  {@link PathValue}s, the set method also returns the values after the set operation is complete.\n * @function\n * @return {ModelResponse.<JSONEnvelope>} - an {@link Observable} stream containing the values in the JSONGraph model after the set was attempted\n */\nModel.prototype.set = function set() {\n    return new Call(\n        'set', this, Array.prototype.slice.call(arguments, 0)\n    )._toJSON({ __proto__: FalcorJSON.prototype }, []);\n}\n\n/**\n * The preload method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model} and loads them into the Model cache.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - a ModelResponse that completes when the data has been loaded into the cache.\n */\nModel.prototype.preload = function preload() {\n    return new Call(\n        'get', this, Array.prototype.slice.call(arguments, 0)\n    )._toJSON(null, []);\n}\n\n/**\n * Invokes a function in the JSON Graph.\n * @function\n * @param {Path} functionPath - the path to the function to invoke\n * @param {Array.<Object>} args - the arguments to pass to the function\n * @param {Array.<PathSet>} refPaths - the paths to retrieve from the JSON Graph References in the message returned from the function\n * @param {Array.<PathSet>} thisPaths - the paths to retrieve from function's this object after successful function execution\n * @return {ModelResponse.<JSONEnvelope> - a JSONEnvelope contains the values returned from the function\n */\n\nModel.prototype.call = function call() {\n    return new Call(\n        'call', this, Array.prototype.slice.call(arguments, 0)\n    )._toJSON({ __proto__: FalcorJSON.prototype }, []);\n}\n\n/**\n * The invalidate method synchronously removes several {@link Path}s or {@link PathSet}s from a {@link Model} cache.\n * @function\n * @param {...PathSet} path - the  paths to remove from the {@link Model}'s cache.\n */\nModel.prototype.invalidate = function invalidate() {\n    return new Call(\n        'invalidate', this, Array.prototype.slice.call(arguments, 0)\n    )._toJSON(null, null).then();\n}\n\n/**\n * Returns a new {@link Model} bound to a location within the {@link\n * JSONGraph}. The bound location is never a {@link Reference}: any {@link\n * Reference}s encountered while resolving the bound {@link Path} are always\n * replaced with the {@link Reference}s target value. For subsequent operations\n * on the {@link Model}, all paths will be evaluated relative to the bound\n * path. Deref allows you to:\n * - Expose only a fragment of the {@link JSONGraph} to components, rather than\n *   the entire graph\n * - Hide the location of a {@link JSONGraph} fragment from components\n * - Optimize for executing multiple operations and path looksup at/below the\n *   same location in the {@link JSONGraph}\n * @method\n * @param {Object} responseObject - an object previously retrieved from the\n * Model\n * @return {Model} - the dereferenced {@link Model}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.deref = require('./deref');\n\n/**\n * A dereferenced model can become invalid when the reference from which it was\n * built has been removed/collected/expired/etc etc.  To fix the issue, a from\n * the parent request should be made (no parent, then from the root) for a valid\n * path and re-dereference performed to update what the model is bound too.\n *\n * @method\n * @private\n * @return {Boolean} - If the currently deref'd model is still considered a\n * valid deref.\n */\nModel.prototype._hasValidParentReference = require('./deref/hasValidParentReference');\n\n/**\n * Get data for a single {@link Path}.\n * @param {Path} path - the path to retrieve\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     getValue('user.name').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.getValue = function getValue(path) {\n    return new Call('get', this, [path])\n        ._toJSON({ __proto__: FalcorJSON.prototype }, [])\n        .lift(function(subscriber) {\n            return this.subscribe({\n                onNext: function(data) {\n                    var depth = -1;\n                    var x = data.json;\n                    var length = path.length;\n                    while (x && !x.$type && ++depth < length) {\n                        x = x[path[depth]];\n                    }\n                    subscriber.onNext(x);\n                },\n                onError: subscriber.onError.bind(subscriber),\n                onCompleted: subscriber.onCompleted.bind(subscriber)\n            })\n        });\n}\n\n/**\n * Set value for a single {@link Path}.\n * @param {Path} path - the path to set\n * @param {Object} value - the value to set\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     setValue('user.name', 'Jim').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.setValue = function setValue(path, value) {\n    path = arguments.length === 1 ? path.path : path;\n    value = arguments.length === 1 ? path : {path:path,value:value};\n    return new Call('set', this, [value])\n        ._toJSON({ __proto__: FalcorJSON.prototype }, [])\n        .lift(function(subscriber) {\n            return this.subscribe({\n                onNext: function(data) {\n                    var depth = -1;\n                    var x = data.json;\n                    var length = path.length;\n                    while (x && !x.$type && ++depth < length) {\n                        x = x[path[depth]];\n                    }\n                    subscriber.onNext(x);\n                },\n                onError: subscriber.onError.bind(subscriber),\n                onCompleted: subscriber.onCompleted.bind(subscriber)\n            })\n        });\n}\n\n/**\n * Set the local cache to a {@link JSONGraph} fragment. This method can be a useful way of mocking a remote document, or restoring the local cache from a previously stored state.\n * @param {JSONGraph} jsonGraph - the {@link JSONGraph} fragment to use as the local cache\n */\nModel.prototype.setCache = function modelSetCache(cacheOrJSONGraphEnvelope) {\n\n    var modelRoot = this._root;\n    var cache = modelRoot.cache;\n\n    if (cacheOrJSONGraphEnvelope !== cache) {\n\n        var options = {\n            _path: [],\n            _boxed: false,\n            _root: modelRoot,\n            _materialized: false,\n            _treatErrorsAsValues: false\n        };\n\n        modelRoot.cache = this._node = {};\n\n        if (typeof cache !== 'undefined') {\n            lruCollect(modelRoot, modelRoot.expired, getSize(cache), 0);\n            if (this._recycleJSON) {\n                this._seed = { __proto__: FalcorJSON.prototype };\n            }\n        }\n\n        var paths;\n        if (isJSONGraphEnvelope(cacheOrJSONGraphEnvelope)) {\n            paths = setJSONGraphs(options, [cacheOrJSONGraphEnvelope])[0];\n        } else if (isJSONEnvelope(cacheOrJSONGraphEnvelope)) {\n            paths = setCache(options, [cacheOrJSONGraphEnvelope])[0];\n        } else if (isObject(cacheOrJSONGraphEnvelope)) {\n            paths = setCache(options, [{ json: cacheOrJSONGraphEnvelope }])[0];\n        }\n\n        // performs promotion without producing output.\n        if (paths) {\n            getJSON(options, paths, null, false, false);\n        }\n    } else if (typeof cache === 'undefined') {\n        this._root.cache = {};\n    }\n    return this;\n};\n\n/**\n * Get the local {@link JSONGraph} cache. This method can be a useful to store the state of the cache.\n * @param {...Array.<PathSet>} [pathSets] - The path(s) to retrieve. If no paths are specified, the entire {@link JSONGraph} is returned.\n * @return {JSONGraph} all of the {@link JSONGraph} data in the {@link Model} cache.\n * @example\n // Storing the boxshot of the first 10 titles in the first 10 genreLists to local storage.\n localStorage.setItem('cache', JSON.stringify(model.getCache('genreLists[0...10][0...10].boxshot')));\n */\nModel.prototype.getCache = function _getCache() {\n\n    var paths = Array.prototype.slice.call(arguments, 0);\n\n    if (paths.length === 0) {\n        return getCache(this._root.cache);\n    }\n\n    var env = getJSONGraph({\n        _path: [],\n        _root: this._root,\n        _boxed: this._boxed,\n        _materialized: this._materialized,\n        _treatErrorsAsValues: this._treatErrorsAsValues\n    }, paths, { __proto__: FalcorJSON.prototype }).data;\n\n    env.paths = collapse(paths);\n\n    return env;\n};\n\n/**\n * Retrieves a number which is incremented every single time a value is changed underneath the Model or the object at an optionally-provided Path beneath the Model.\n * @param {Path?} path - a path at which to retrieve the version number\n * @return {Number} a version number which changes whenever a value is changed underneath the Model or provided Path\n */\nModel.prototype.getVersion = function getVersion(path) {\n    path = path || [];\n    if (Array.isArray(path) === false) {\n        throw new Error('Model#getVersion must be called with an Array path.');\n    }\n    if (this._path.length) {\n        path = this._path.concat(path);\n    }\n    return this._getVersion(this, path);\n};\n\n/* eslint-disable guard-for-in */\nModel.prototype._clone = function cloneModel(opts) {\n    var clone = new Model(this);\n    if (opts) {\n        for (var key in opts) {\n            var value = opts[key];\n            if (value === 'delete') {\n                delete clone[key];\n            } else if (key === '_path') {\n                clone[key] = value;\n                if (false === opts.hasOwnProperty('_node')) {\n                    delete clone['_node'];\n                }\n            } else {\n                clone[key] = value;\n            }\n        }\n    }\n    if (clone._path.length > 0) {\n        clone.setCache = void 0;\n    }\n    return clone;\n};\n/* eslint-enable */\n\n/**\n * Returns a clone of the {@link Model} that enables batching. Within the configured time period, paths for get operations are collected and sent to the {@link DataSource} in a batch. Batching can be more efficient if the {@link DataSource} access the network, potentially reducing the number of HTTP requests to the server.\n * @param {?Scheduler|number} schedulerOrDelay - Either a {@link Scheduler} that determines when to send a batch to the {@link DataSource}, or the number in milliseconds to collect a batch before sending to the {@link DataSource}. If this parameter is omitted, then batch collection ends at the end of the next tick.\n * @return {Model} a Model which schedules a batch of get requests to the DataSource.\n */\nModel.prototype.batch = function batch(schedulerOrDelay) {\n\n    var scheduler;\n\n    if (typeof schedulerOrDelay === 'number') {\n        scheduler = new TimeoutScheduler(Math.round(Math.abs(schedulerOrDelay)));\n    } else if (!schedulerOrDelay) {\n        scheduler = new TimeoutScheduler(1);\n    } else if (typeof schedulerOrDelay.schedule === 'function') {\n        scheduler = schedulerOrDelay;\n    } else if (typeof schedulerOrDelay === 'function') {\n        scheduler = { scheudle: schedulerOrDelay };\n    }\n\n    return this._clone({ _scheduler: scheduler });\n};\n\n/**\n * Returns a clone of the {@link Model} that disables batching. This is the default mode. Each get operation will be executed on the {@link DataSource} separately.\n * @name unbatch\n * @memberof Model.prototype\n * @function\n * @return {Model} a {@link Model} that batches requests of the same type and sends them to the data source together\n */\nModel.prototype.unbatch = function unbatch() {\n    return this._clone({ _scheduler: new ImmediateScheduler() });\n};\n\n/**\n * Returns a clone of the {@link Model} that treats errors as values. Errors will be reported in the same callback used to report data. Errors will appear as objects in responses, rather than being sent to the {@link Observable~onErrorCallback} callback of the {@link ModelResponse}.\n * @return {Model}\n */\nModel.prototype.treatErrorsAsValues = function treatErrorsAsValues() {\n    return this._clone({ _treatErrorsAsValues: true });\n};\n\n/**\n * Adapts a Model to the {@link DataSource} interface.\n * @return {DataSource}\n * @example\nvar model =\n    new falcor.Model({\n        cache: {\n            user: {\n                name: 'Steve',\n                surname: 'McGuire'\n            }\n        }\n    }),\n    proxyModel = new falcor.Model({ source: model.asDataSource() });\n\n// Prints 'Steve'\nproxyModel.getValue('user.name').\n    then(function(name) {\n        console.log(name);\n    });\n */\nModel.prototype.asDataSource = function asDataSource() {\n    return new ModelDataSourceAdapter(this);\n};\n\nModel.prototype._materialize = function materialize() {\n    return this._clone({\n        _materialized: true\n    });\n};\n\nModel.prototype._dematerialize = function dematerialize() {\n    return this._clone({\n        _materialized: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that boxes values returning the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the value inside it. This allows any metadata attached to the wrapper to be inspected.\n * @return {Model}\n */\nModel.prototype.boxValues = function boxValues() {\n    return this._clone({\n        _boxed: true\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that unboxes values, returning the value inside of the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the wrapper itself. This is the default mode.\n * @return {Model}\n */\nModel.prototype.unboxValues = function unboxValues() {\n    return this._clone({\n        _boxed: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that only uses the local {@link JSONGraph} and never uses a {@link DataSource} to retrieve missing paths.\n * @return {Model}\n */\nModel.prototype.withoutDataSource = function withoutDataSource() {\n    return this._clone({\n        _source: 'delete'\n    });\n};\n\nModel.prototype.toJSON = function toJSON() {\n    return {\n        $type: 'ref',\n        value: this.getPath()\n    };\n};\n\n/**\n * Returns the {@link Path} to the object within the JSON Graph that this Model references.\n * @return {Path}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.getPath = function getPath() {\n    return this._path.slice(0);\n};\n\n/**\n * This one is actually private.  I would not use this without talking to\n * jhusain, sdesai, or michaelbpaulson (github).\n * @private\n */\nModel.prototype._fromWhenceYouCame = function fromWhenceYouCame(allow) {\n    return this._clone({\n        _allowFromWhenceYouCame: allow === undefined ? true : allow\n    });\n};\n\nModel.prototype._optimizePath = function _optimizePath(path) {\n    var node = getCachePosition(this._root.cache, path);\n    var abs_path = node && node[f_abs_path] || [];\n    return abs_path.slice(0);\n};\n\nModel.prototype._getVersion = require('./cache/getVersion');\nModel.prototype._getPathValuesAsPathMap = getJSON;\nModel.prototype._getPathValuesAsJSONG = getJSONGraph;\n\nModel.prototype._setPathValues = require('./cache/set/setPathValues');\nModel.prototype._setPathMaps = require('./cache/set/setPathMaps');\nModel.prototype._setJSONGs = require('./cache/set/setJSONGraphs');\nModel.prototype._setCache = require('./cache/set/setPathMaps');\n\nModel.prototype._invalidatePathValues = require('./cache/invalidate/invalidatePathSets');\nModel.prototype._invalidatePathMaps = require('./cache/invalidate/invalidatePathMaps');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Model.js","function ModelDataSourceAdapter(model) {\n    this._model = model\n        // .boxValues()\n        ._materialize().treatErrorsAsValues();\n}\n\nModelDataSourceAdapter.prototype.get = function get(pathSets) {\n    return this._model.get.apply(this._model, pathSets)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.set = function set(jsongResponse) {\n    return this._model.set(jsongResponse)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.call = function call(path, args, suffixes, paths) {\n    return this._model.call.apply(this._model, [\n        path, args, suffixes\n    ].concat(paths))._toJSONG();\n};\n\nmodule.exports = ModelDataSourceAdapter;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ModelDataSourceAdapter.js","var functionTypeof = 'function';\nvar Requests = require('./request/Queue');\n\nfunction ModelRoot(o, model) {\n\n    var options = o || {};\n\n    this.cache = {};\n    this.version = -1;\n    this.syncRefCount = 0;\n    this.maxRetryCount = 10;\n    this.topLevelModel = model;\n    this.requests = new Requests(this);\n    this.expired = options.expired || [];\n\n    this.collectRatio = 0.75;\n    this.maxSize = Math.pow(2, 53) - 1;\n\n    if (typeof options.collectRatio === 'number') {\n        this.collectRatio = options.collectRatio;\n    }\n\n    if (typeof options.maxSize === 'number') {\n        this.maxSize = options.maxSize;\n    }\n\n    if (typeof options.comparator === functionTypeof) {\n        this.comparator = options.comparator;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.errorSelector === functionTypeof) {\n        this.errorSelector = options.errorSelector;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.onChange === functionTypeof) {\n        this.onChange = options.onChange;\n    }\n\n    if (typeof options.onChangesCompleted === functionTypeof) {\n        this.onChangesCompleted = options.onChangesCompleted;\n    }\n}\n\nModelRoot.comparator = function comparator(cacheNode, messageNode) {\n    var cType = cacheNode && cacheNode.$type;\n    var mType = messageNode && messageNode.$type;\n    if (cType) {\n        if (!mType) {\n            return cacheNode.value === messageNode;\n        } else {\n            // They are the same only if the following fields are the same.\n            return !(cType !== mType ||\n                     cacheNode.value !== messageNode.value ||\n                     cacheNode.$expires !== messageNode.$expires);\n        }\n    } else if (mType) {\n        return false;\n    }\n    return cacheNode === messageNode;\n};\n\nmodule.exports = ModelRoot;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ModelRoot.js","var getJSON = require('../get/json');\nvar getJSONGraph = require('../get/jsonGraph');\n\nmodule.exports = { json: json, jsonGraph: jsonGraph };\n\nfunction json(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue =  getJSON(model, thisPaths, data, progressive, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [\n            path, args, suffixes, thisPaths\n        ]\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed,\n            _materialized: model._materialized,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, thisPaths, data, true, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [\n            path, args, suffixes, thisPaths\n        ]\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/call/index.js","module.exports = {\n    json: require('./json/getJSON'),\n    jsonGraph: require('./jsonGraph/getJSONGraph')\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/index.js","var clone = require('../../clone');\n\nmodule.exports = onError;\n\nfunction onError(node, depth, results,\n                 requestedPath, fromReference, boxValues) {\n\n    var index = -1;\n    var length = depth + !!fromReference; // depth + 1 if fromReference === true\n    var errorPath = new Array(length);\n    var errorValue = !boxValues ? node.value : clone(node);\n\n    while (++index < length) {\n        errorPath[index] = requestedPath[index];\n    }\n\n    (results.errors || (results.errors = [])).push({\n        path: errorPath,\n        value: errorValue\n    });\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/onError.js","var arr = new Array(2);\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar onValue = require('./onValue');\nvar FalcorJSON = require('./FalcorJSON');\nvar isExpired = require('../../isExpired');\nvar onValueType = require('../onValueType');\nvar originalOnMissing = require('../onMissing');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar onMaterialize = require('../onMaterializeFlatBuffer');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar getHashCode = require('@graphistry/falcor-path-utils/lib/getHashCode');\nvar flatBufferToPaths = require('@graphistry/falcor-path-utils/lib/flatBufferToPaths');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, json, path,\n                                depth, seed, results, requestedPath,\n                                optimizedPath, optimizedLength,\n                                fromReference, referenceContainer,\n                                modelRoot, expired, expireImmediate,\n                                branchSelector, boxValues, materialized,\n                                hasDataSource, treatErrorsAsValues,\n                                allowFromWhenceYouCame) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === node ||\n        undefined !== (type = node.$type) ||\n        undefined === path) {\n        arr[1] = hasDataSource && node === undefined;\n        arr[0] = onValueType(node, type, json,\n                             path, depth, seed, results,\n                             requestedPath, depth,\n                             optimizedPath, optimizedLength,\n                             fromReference, modelRoot, expired, expireImmediate,\n                             branchSelector, boxValues, materialized, hasDataSource,\n                             treatErrorsAsValues, onValue, onMissing, onMaterialize);\n        return arr;\n    }\n\n    var f_meta, f_old_keys, f_new_keys, f_code = '';\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        keys = path['$keys'],\n        nextDepth = depth + 1, rangeEnd,\n        nextJSON, nextReferenceContainer,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath, refContainerRefPath;\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[f_abs_path];\n    }\n\n    if (json) {\n        if (typeofObject !== typeof json) {\n            json = undefined;\n        } else if (f_meta = json[f_meta_data]) {\n            if (!branchSelector && !(json instanceof FalcorJSON)) {\n                json.__proto__ = { __proto__: FalcorJSON.prototype };\n                json.__proto__[f_meta_data] = f_meta;\n            } else if (\n                f_meta[f_meta_version]  === node[f_version] &&\n                f_meta['$code']         === path['$code'] &&\n                f_meta[f_meta_abs_path] === node[f_abs_path]) {\n                results.hasValue = true;\n                arr[0] = json;\n                arr[1] = false;\n                return arr;\n            }\n            f_old_keys = f_meta[f_meta_keys];\n            f_meta[f_meta_version] = node[f_version];\n            f_meta[f_meta_abs_path] = node[f_abs_path];\n            f_meta[f_meta_deref_to] = refContainerRefPath;\n            f_meta[f_meta_deref_from] = refContainerAbsPath;\n        }\n    }\n\n    f_new_keys = { __proto__: null };\n\n    var keysIndex = -1;\n    var keysLength = keys.length;\n    var nextPath, nextPathKey,\n        hasMissingPath = false;\n\n    iteratingKeyset:\n    while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            f_code = '' + getHashCode('' + f_code + 'null');\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n            nextPathKey = nextKey;\n        }\n        // If the Keyset isn't null or primitive, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n            nextPathKey = '{from:' + nextKey + ',length:' + (rangeEnd - nextKey + 1) + '}';\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextPath === undefined) {\n\n                arr = walkPathAndBuildOutput(\n                    root, next, nextJSON, nextPath, nextDepth, seed,\n                    results, requestedPath, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                nextJSON = arr[0];\n                hasMissingPath = hasMissingPath || arr[1];\n\n                if (nextJSON === undefined && !materialized) {\n                    hasMissingPath = true;\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n            else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                    // If the reference is expired, it will be invalidated and\n                    // reported as missing in the next call to walkPath below.\n                    next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                arr = walkPathAndBuildOutput(\n                    root, next, nextJSON, nextPath, nextDepth, seed,\n                    results, requestedPath, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                nextJSON = arr[0];\n                hasMissingPath = hasMissingPath || arr[1];\n\n                if (nextJSON === undefined) {\n                    hasMissingPath = true;\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = { __proto__: null };\n                f_meta[f_meta_version] = node[f_version];\n                f_meta[f_meta_abs_path] = node[f_abs_path];\n                f_meta[f_meta_deref_to] = refContainerRefPath;\n                f_meta[f_meta_deref_from] = refContainerAbsPath;\n                json = { __proto__: FalcorJSON.prototype };\n                json[f_meta_data] = f_meta;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                // node creation to them.\n                json = !branchSelector && { __proto__: json } || branchSelector(json);\n            }\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && (nextKey in f_old_keys)) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        if (!hasMissingPath) {\n            if (undefined === nextPath) {\n                f_code = '' + getHashCode('' + f_code + nextPathKey);\n            } else {\n                f_code = '' + getHashCode('' + f_code + nextPathKey + nextPath['$code']);\n            }\n        }\n    }\n\n    if (hasMissingPath) {\n        f_code = '__incomplete__';\n    }\n\n    if (f_meta) {\n        f_meta['$code'] = f_code;\n        f_meta[f_meta_keys] = f_new_keys;\n        if (f_old_keys) {\n            for (nextKey in f_old_keys) {\n                if (f_old_keys[nextKey]) {\n                    delete json[nextKey];\n                }\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n\n    arr[0] = json;\n    arr[1] = hasMissingPath;\n\n    return arr;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, json, branchSelector,\n                   boxValues, onMaterialize) {\n\n    if (reportMaterialized) {\n        return onMaterialize(json, path, depth, depth, branchSelector,\n                             boxValues, results, requestedPath, optimizedPath,\n                             optimizedLength, fromReference, reportMissing, onMissing);\n    }\n\n    var paths = path ? flatBufferToPaths(path) : [[]];\n    var rPath = requestedPath.slice(0, requestedLength);\n\n    return paths.forEach(function(restPath) {\n        requestedLength = depth + restPath.length;\n        return originalOnMissing(rPath.concat(restPath), depth, results,\n                                 requestedPath, requestedLength, fromReference,\n                                 optimizedPath, optimizedLength, reportMissing,\n                                 false, json, branchSelector,\n                                 boxValues, onMaterialize);\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/walkFlatBuffer.js","var isArray = Array.isArray;\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar onValue = require('./onValue');\nvar onMissing = require('../onMissing');\nvar FalcorJSON = require('./FalcorJSON');\nvar onValueType = require('../onValueType');\nvar isExpired = require('../../isExpired');\nvar onMaterialize = require('../onMaterialize');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, json, path,\n                                depth, seed, results,\n                                requestedPath, requestedLength,\n                                optimizedPath, optimizedLength,\n                                fromReference, referenceContainer,\n                                modelRoot, expired, expireImmediate,\n                                branchSelector, boxValues, materialized,\n                                hasDataSource, treatErrorsAsValues,\n                                allowFromWhenceYouCame) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (\n        type = node.$type) || (\n        depth === requestedLength)) {\n        return onValueType(node, type, json,\n                           path, depth, seed, results,\n                           requestedPath, requestedLength,\n                           optimizedPath, optimizedLength,\n                           fromReference, modelRoot, expired, expireImmediate,\n                           branchSelector, boxValues, materialized, hasDataSource,\n                           treatErrorsAsValues, onValue, onMissing, onMaterialize);\n    }\n\n    var f_meta;\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        nextJSON, nextReferenceContainer,\n        keysetIndex = -1, keysetLength = 0,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath, refContainerRefPath;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        return json;\n    }\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[f_abs_path];\n    }\n\n    if (json) {\n        if (typeofObject !== typeof json) {\n            json = undefined;\n        } else if (f_meta = json[f_meta_data]) {\n            f_meta[f_meta_version] = node[f_version];\n            f_meta[f_meta_abs_path] = node[f_abs_path];\n            f_meta[f_meta_deref_to] = refContainerRefPath;\n            f_meta[f_meta_deref_from] = refContainerAbsPath;\n        }\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextDepth === requestedLength) {\n                nextJSON = walkPathAndBuildOutput(\n                    root, next, nextJSON, path, nextDepth, seed,\n                    results, requestedPath, requestedLength, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n                if (nextJSON === undefined && !materialized) {\n                    continue;\n                }\n            }\n            else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                    // If the reference is expired, it will be invalidated and\n                    // reported as missing in the next call to walkPath below.\n                    next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                if (undefined === (nextJSON = walkPathAndBuildOutput(\n                        root, next, nextJSON, path, nextDepth, seed,\n                        results, requestedPath, requestedLength, nextOptimizedPath,\n                        nextOptimizedLength, fromReference, nextReferenceContainer,\n                        modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                        materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                    ))) {\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = { __proto__: null };\n                f_meta[f_meta_version] = node[f_version];\n                f_meta[f_meta_abs_path] = node[f_abs_path];\n                f_meta[f_meta_deref_to] = refContainerRefPath;\n                f_meta[f_meta_deref_from] = refContainerAbsPath;\n                json = { __proto__: FalcorJSON.prototype };\n                json[f_meta_data] = f_meta;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                if (branchSelector) {\n                    json = branchSelector(json);\n                }\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/walkPath.js","var arr = new Array(2);\nvar clone = require('../../clone');\nvar inlineValue = require('./inlineValue');\nvar promote = require('../../../lru/promote');\nvar isExpired = require('../../isExpired');\nvar createHardlink = require('../../createHardlink');\nvar CircularReferenceError = require('../../../errors/CircularReferenceError');\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, ref, modelRoot, seed, expireImmediate) {\n\n    promote(modelRoot, ref);\n\n    var context,\n        key, type, depth = 0,\n        node = root, path = ref.value,\n        copy = path, length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[f_context])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                throw new CircularReferenceError(path);\n            }\n            // If the node we land on isn't the existing ref context,\n            // create a hard-link between the reference and the node\n            // it points to.\n            else if (node !== context) {\n                createHardlink(ref, node);\n            }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === $ref) {\n\n                promote(modelRoot, node);\n\n                seed && inlineValue(clone(node), path, length, seed);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n\n    return arr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/getReferenceTarget.js","var typeofObject = 'object';\nvar clone = require('../../clone');\nvar inlineValue = require('./inlineValue');\n\nmodule.exports = onJSONGraphValue;\n\nfunction onJSONGraphValue(node, type, depth, seed, results,\n                          requestedPath, optimizedPath, optimizedLength,\n                          fromReference, boxValues, materialized) {\n\n    var value = node.value;\n\n    // boxValues always clones the node\n    if (boxValues || !(\n        /**\n         * JSON Graph should always clone:\n         * - refs\n         * - errors\n         * - atoms we didn't create\n         * - atoms we created to wrap Objects\n         **/\n        $ref !== type &&\n        $error !== type &&\n        node[f_wrapped_value] &&\n        typeofObject !== typeof value)) {\n        value = clone(node);\n    }\n\n    if (seed) {\n        results.hasValue = true;\n        inlineValue(value, optimizedPath, optimizedLength, seed);\n        (seed.paths || (seed.paths = [])).push(\n            requestedPath.slice(0, depth + !!fromReference) // depth + 1 if fromReference === true\n        );\n    }\n\n    return value;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/onValue.js","var isArray = Array.isArray;\nvar clone = require('../../clone');\nvar onValue = require('./onValue');\nvar inlineValue = require('./inlineValue');\nvar isExpired = require('../../isExpired');\nvar onValueType = require('../onValueType');\nvar onMaterialize = require('../onMaterialize');\nvar originalOnMissing = require('../onMissing');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, path,\n                                depth, seed, results,\n                                requestedPath, requestedLength,\n                                optimizedPath, optimizedLength,\n                                fromReference, modelRoot, expired, expireImmediate,\n                                boxValues, materialized, hasDataSource, treatErrorsAsValues) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (\n        type = node.$type) || (\n        depth === requestedLength)) {\n        return onValueType(node, type, seed,\n                           path, depth, seed, results,\n                           requestedPath, requestedLength,\n                           optimizedPath, optimizedLength,\n                           fromReference, modelRoot, expired, expireImmediate,\n                           undefined, boxValues, materialized, hasDataSource,\n                           treatErrorsAsValues, onValue, onMissing, onMaterialize);\n    }\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        keysetIndex = -1, keysetLength = 0,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        return undefined;\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            keyset = keysOrRanges[keysetIndex];\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            // If we encounter a ref, inline the reference target and continue\n            // evaluating the path.\n            if (next &&\n                nextDepth < requestedLength &&\n                // If the reference is expired, it will be invalidated and\n                // reported as missing in the next call to walkPath below.\n                next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                // Write the cloned ref value into the jsonGraph at the\n                // optimized path. JSONGraph must always clone references.\n                seed && inlineValue(clone(next), optimizedPath, nextOptimizedLength, seed);\n\n                // Retrieve the reference target and next referenceContainer (if\n                // this reference points to other references) and continue\n                // following the path. If the reference resolves to a missing\n                // path or leaf node, it will be handled in the next call to\n                // walkPath.\n                refTarget = getReferenceTarget(root, next, modelRoot, seed, expireImmediate);\n\n                next = refTarget[0];\n                fromReference = true;\n                nextOptimizedPath = refTarget[1];\n                nextOptimizedLength = nextOptimizedPath.length;\n                refTarget[0] = refTarget[1] = undefined;\n            }\n\n            walkPathAndBuildOutput(\n                root, next, path, nextDepth, seed,\n                results, requestedPath, requestedLength, nextOptimizedPath,\n                nextOptimizedLength, fromReference, modelRoot, expired, expireImmediate,\n                boxValues, materialized, hasDataSource, treatErrorsAsValues\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return undefined;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, seed, branchSelector,\n                   boxValues, onMaterialize) {\n\n    var json, isLeaf;\n\n    if (seed && reportMaterialized) {\n\n        (seed.paths || (seed.paths = [])).push(\n            (isLeaf = 0 === requestedLength - depth) &&\n                                 // depth + 1 if fromReference === true\n                requestedPath.slice(0, depth + !!fromReference) ||\n                requestedPath.slice(0, depth).concat(path\n                    .slice(depth, requestedLength + !!fromReference))\n        );\n\n        json = inlineValue(isLeaf && clone(materializedAtom) || undefined,\n                           optimizedPath, optimizedLength, seed, !isLeaf);\n    }\n\n    return originalOnMissing(path, depth, results,\n                             requestedPath, requestedLength, fromReference,\n                             optimizedPath, optimizedLength, reportMissing,\n                             !isLeaf && reportMaterialized, json,\n                             branchSelector, true, onMaterialize);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/walkPath.js","var typeofNumber = 'number';\nvar typeofObject = 'object';\nvar clone = require('../clone');\nvar onValueType = require('./onValueType');\nvar FalcorJSON = require('./json/FalcorJSON');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = onMaterializeFlatBuffer;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterializeFlatBuffer(json, path, depth, length,\n                                 branchSelector, boxValues, results,\n                                 requestedPath, optimizedPath, optimizedLength,\n                                 fromReference, reportMissing, onMissing) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === path) {\n        onValueType(undefined, undefined, json,\n                    path, depth, undefined, results,\n                    requestedPath, depth, optimizedPath,\n                    optimizedLength, fromReference, undefined, undefined,\n                    false, branchSelector, boxValues, false, reportMissing,\n                    false, undefined, onMissing, undefined);\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta, f_old_keys, f_new_keys;\n\n    var nextKey,\n        keyset, keyIsRange,\n        keys = path['$keys'],\n        nextDepth = depth + 1, rangeEnd,\n        nextOptimizedLength = optimizedLength + 1;\n\n    if (!json || typeofObject !== typeof json) {\n        json = { __proto__: FalcorJSON.prototype };\n        json[f_meta_data] = f_meta = { __proto__: null };\n        f_meta[f_meta_version] = 0;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[f_meta_data])) {\n        json[f_meta_data] = f_meta = { __proto__: null };\n        f_meta[f_meta_version] = 0;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n    } else {\n        f_old_keys = f_meta[f_meta_keys];\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n    }\n\n    f_new_keys = { __proto__: null };\n\n    var nextPath;\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    iteratingKeyset:\n    while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If the Keyset isn't null or primitive, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && (nextKey in f_old_keys)) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // insert the materialized branch\n            json[nextKey] = onMaterializeFlatBuffer(\n                json[nextKey], nextPath, nextDepth,\n                nextDepth, branchSelector, boxValues, results,\n                requestedPath, optimizedPath, nextOptimizedLength,\n                fromReference, reportMissing, onMissing\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n    }\n\n    f_meta['$code'] = '__incomplete__';\n    f_meta[f_meta_keys] = f_new_keys;\n    if (f_old_keys) {\n        for (nextKey in f_old_keys) {\n            if (f_old_keys[nextKey]) {\n                delete json[nextKey];\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMaterializeFlatBuffer.js","var isInternalKey = require('../support/isInternalKey');\n\n/**\n * decends and copies the cache.\n */\nmodule.exports = function getCache(cache) {\n    var out = {};\n    _copyCache(cache, out);\n\n    return out;\n};\n\nfunction cloneBoxedValue(boxedValue) {\n    var clonedValue = {};\n\n    var keys = Object.keys(boxedValue);\n    var key;\n    var i;\n    var l;\n\n    for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n\n        if (key === '$type' || !isInternalKey(key)) {\n            clonedValue[key] = boxedValue[key];\n        }\n    }\n\n    return clonedValue;\n}\n\nfunction _copyCache(node, out, fromKey) {\n    // copy and return\n\n    // only copy objects\n    if (!node || typeof node !== 'object') {\n        return;\n    }\n\n    Object.\n        keys(node).\n        filter(function(key) {\n            // Its not an internal key and the node has a value.  In the cache\n            // there are 3 possibilities for values.\n            // 1: A branch node.\n            // 2: A $type-value node.\n            // 3: undefined\n            // We will strip out 3\n            return (key === '$type' || !isInternalKey(key)) && node[key] !== undefined;\n        }).\n        forEach(function(key) {\n            var cacheNext = node[key];\n            var outNext = out[key];\n\n            if (!outNext) {\n                outNext = out[key] = {};\n            }\n\n            // Paste the node into the out cache.\n            if (cacheNext.$type) {\n                var isObject = cacheNext.value && typeof cacheNext.value === 'object';\n                var isUserCreatedcacheNext = !cacheNext[f_wrapped_value];\n                var value;\n                if (isObject || isUserCreatedcacheNext) {\n                    value = cloneBoxedValue(cacheNext);\n                } else {\n                    value = cacheNext.value;\n                }\n\n                out[key] = value;\n                return;\n            }\n\n            _copyCache(cacheNext, outNext, key);\n        });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getCache.js","var getBoundCacheNode = require('./getBoundCacheNode');\n\nmodule.exports = function _getVersion(model, path) {\n    var node = getBoundCacheNode(model, path);\n    var version = node && node[f_version];\n    return (version == null) ? -1 : version;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getVersion.js","var isArray = Array.isArray;\nvar isPathValue = require('../support/isPathValue');\nvar isJSONEnvelope = require('../support/isJSONEnvelope');\nvar isJSONGraphEnvelope = require('../support/isJSONGraphEnvelope');\n\nmodule.exports = groupCacheArguments;\n\nfunction groupCacheArguments(args) {\n\n    var groups = [];\n    var argIndex = -1;\n    var argCount = args.length;\n    var group, groupType, arg, argType;\n\n    while (++argIndex < argCount) {\n        arg = args[argIndex];\n        if (isArray(arg)) {\n            arg = { path: arg };\n            argType = 'PathValues';\n        } else if (isPathValue(arg)) {\n            argType = 'PathValues';\n        } else if (isJSONGraphEnvelope(arg)) {\n            argType = 'JSONGraphs';\n        } else if (isJSONEnvelope(arg)) {\n            argType = 'PathMaps';\n        }\n\n        if (groupType !== argType) {\n            groupType = argType;\n            groups.push(group = {\n                arguments: [],\n                inputType: argType\n            });\n        }\n\n        group.arguments.push(arg);\n    }\n\n    return groups;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/groupCacheArguments.js","var invalidatePathSets = require('./invalidatePathSets');\nvar invalidatePathMaps = require('./invalidatePathMaps');\n\nmodule.exports = {\n    json: invalidate,\n    jsonGraph: invalidate,\n}\n\nfunction invalidate(model, args, seed, progressive, expireImmediate) {\n    invalidatePathSets(model, args, expireImmediate);\n    return {};\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/index.js","var wrapNode = require('./wrapNode');\nvar isExpired = require('./isExpired');\nvar insertNode = require('./insertNode');\nvar expireNode = require('./expireNode');\nvar replaceNode = require('./replaceNode');\nvar getSize = require('../support/getSize');\nvar reconstructPath = require('./reconstructPath');\nvar getTimestamp = require('../support/getTimestamp');\nvar updateNodeAncestors = require('./updateNodeAncestors');\n\nmodule.exports = function mergeJSONGraphNode(\n    parent, node, message, key, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var sizeOffset;\n\n    var cType, mType,\n        cIsObject, mIsObject,\n        cTimestamp, mTimestamp;\n\n    // If the cache and message are the same, we can probably return early:\n    // - If they're both nullsy,\n    //   - If null then the node needs to be wrapped in an atom and inserted.\n    //     This happens from whole branch merging when a leaf is just a null value\n    //     instead of being wrapped in an atom.\n    //   - If undefined then return null (previous behavior).\n    // - If they're both branches, return the branch.\n    // - If they're both edges, continue below.\n    if (node === message) {\n\n        // The message and cache are both undefined, return undefined.\n        if (message === undefined) {\n            return message;\n        }\n        // There should not be undefined values. Those should always be\n        // wrapped in an $atom\n        else if (message === null) {\n            node = wrapNode(message, undefined, message);\n            parent = updateNodeAncestors(parent, -node.$size, lru, version);\n            node = insertNode(node, parent, key, undefined, optimizedPath);\n            return node;\n        }\n        // Is the cache node a branch? If so, return the cache branch.\n        else if ((\n            cIsObject = !(!node || typeof node !== 'object')) && (\n            cType = node.$type) === undefined) {\n            // Has the branch been introduced to the cache yet? If not,\n            // give it a parent, key, and absolute path.\n            if (node[f_parent] === undefined) {\n                insertNode(node, parent, key, version, optimizedPath);\n            }\n            return node;\n        }\n    } else if (cIsObject = !(!node || typeof node !== 'object')) {\n        cType = node.$type;\n    }\n\n    // If the cache isn't a reference, we might be able to return early.\n    if (cType !== $ref) {\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n        }\n        if (cIsObject && !cType) {\n            // If the cache is a branch and the message is empty or\n            // also a branch, continue with the cache branch.\n            if (message == null || (mIsObject && !mType)) {\n                return node;\n            }\n        }\n    }\n    // If the cache is a reference, we might not need to replace it.\n    else {\n        // If the cache is a reference, but the message is empty, leave the cache alone...\n        if (message == null) {\n            // ...unless the cache is an expired reference. In that case, expire\n            // the cache node and return undefined.\n            if (isExpired(node, expireImmediate)) {\n                expireNode(node, expired, lru);\n                return void 0;\n            }\n            return node;\n        }\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n            // If the cache and the message are both references,\n            // check if we need to replace the cache reference.\n            if (mType === $ref) {\n                if (node === message) {\n                    // If the cache and message are the same reference,\n                    // we performed a whole-branch merge of one of the\n                    // grandparents. If we've previously graphed this\n                    // reference, break early. Otherwise, continue to\n                    // leaf insertion below.\n                    if (node[f_parent] != null) {\n                        return node;\n                    }\n                } else {\n\n                    cTimestamp = node.$timestamp;\n                    mTimestamp = message.$timestamp;\n\n                    // - If either the cache or message reference is expired,\n                    //   replace the cache reference with the message.\n                    // - If neither of the references are expired, compare their\n                    //   timestamps. If either of them don't have a timestamp,\n                    //   or the message's timestamp is newer, replace the cache\n                    //   reference with the message reference.\n                    // - If the message reference is older than the cache\n                    //   reference, short-circuit.\n                    if (!isExpired(node, expireImmediate) &&\n                        !isExpired(message, expireImmediate) &&\n                        mTimestamp < cTimestamp) {\n                        return void 0;\n                    }\n                }\n            }\n        }\n    }\n\n    // If the cache is a leaf but the message is a branch, merge the branch over the leaf.\n    if (cType && mIsObject && !mType) {\n        return insertNode(replaceNode(\n                node, message, parent, key, lru, version),\n            parent, key, undefined, optimizedPath\n        );\n    }\n    // If the message is a sentinel or primitive, insert it into the cache.\n    else if (mType || !mIsObject) {\n        // If the cache and the message are the same value, we branch-merged one\n        // of the message's ancestors. If this is the first time we've seen this\n        // leaf, give the message a $size and $type, attach its graph pointers,\n        // and update the cache sizes and versions.\n\n        if (mType === $error && errorSelector) {\n            message = errorSelector(reconstructPath(requestedPath, key), message);\n        }\n\n        if (mType && node === message) {\n            if (node[f_parent] == null) {\n                node = wrapNode(node, cType, node.value);\n                parent = updateNodeAncestors(parent, -node.$size, lru, version);\n                node = insertNode(node, parent, key, version, optimizedPath);\n            }\n        }\n        // If the cache and message are different, the cache value is expired,\n        // or the message is a primitive, replace the cache with the message value.\n        // If the message is a sentinel, clone and maintain its type.\n        // If the message is a primitive value, wrap it in an atom.\n        else {\n            var isDistinct = true;\n            // If the cache is a branch, but the message is a leaf, replace the\n            // cache branch with the message leaf.\n            if (!cIsObject || (cType && !isExpired(node, expireImmediate))) {\n\n                // Compare the current cache value with the new value. If either of\n                // them don't have a timestamp, or the message's timestamp is newer,\n                // replace the cache value with the message value. If a comparator\n                // is specified, the comparator takes precedence over timestamps.\n                if (comparator) {\n                    isDistinct = !comparator(\n                        node, message, optimizedPath.slice(0, optimizedPath.index)\n                    );\n                } else if (!mType) {\n                    isDistinct = !node || node.value !== message;\n                } else {\n                    isDistinct = !cType || ((\n                        // Comparing either Number or undefined to undefined always results in false.\n                        getTimestamp(message) < getTimestamp(node)) === false) || !(\n                        // They're the same if the following fields are the same.\n                        cType !== mType ||\n                        node.value !== message.value ||\n                        node.$expires !== message.$expires);\n                }\n            }\n            if (isDistinct) {\n                message = wrapNode(message, mType, mType ? message.value : message);\n                sizeOffset = getSize(node) - getSize(message);\n                node = replaceNode(node, message, parent, key, lru, version);\n                parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n                node = insertNode(node, parent, key, version, optimizedPath);\n            }\n        }\n\n        // Promote the message edge in the LRU.\n        if (isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge.\n             */\n            true)) {\n            expireNode(node, expired, lru);\n        }\n    }\n    else if (node == null) {\n        node = insertNode(message, parent, key, undefined, optimizedPath);\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/mergeJSONGraphNode.js","var getJSON = require('../get/json');\nvar getJSONGraph = require('../get/jsonGraph');\nvar arrayFlatMap = require('../../support/array-flat-map');\nvar groupCacheArguments = require('../groupCacheArguments');\n\nmodule.exports = {\n    json: json,\n    jsonGraph: jsonGraph,\n    setPathMaps: require('./setPathMaps'),\n    setPathValues: require('./setPathValues'),\n    setJSONGraphs: require('./setJSONGraphs')\n};\n\nfunction json(model, _args, data, progressive, expireImmediate) {\n\n    var set, get, jsong,\n        changed, relative, optimized,\n        missing, fragments, requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args /*, expireImmediate */);\n\n    if ((relative = set.requested).length) {\n\n        if (!(changed = set.changed) || progressive) {\n            get = getJSON(model, relative, data, progressive, expireImmediate);\n        }\n\n        if (changed) {\n\n            jsong = getJSONGraph({\n                _root: model._root,\n                _boxed: model._boxed, _materialized: true,\n                _treatErrorsAsValues: model._treatErrorsAsValues\n            }, set.optimized, {}, progressive, expireImmediate);\n\n            fragments = jsong.data;\n            missing = fragments.paths;\n            requested = jsong.requested;\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: get && get.error,\n        errors: get && get.errors,\n        hasValue: get && get.hasValue\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive, expireImmediate) {\n\n    var set, jsong,\n        changed, relative, optimized,\n        missing, fragments, requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args /*, expireImmediate */);\n\n    if ((relative = set.requested).length && (\n         progressive || set.changed)) {\n\n        jsong = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed, _materialized: true,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, set.optimized, data, progressive, expireImmediate);\n\n        fragments = jsong.data;\n        missing = fragments.paths;\n        requested = jsong.requested;\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: jsong && jsong.error,\n        hasValue: jsong && jsong.hasValue\n    };\n}\n\nfunction setGroupsIntoCache(model, xs /*, expireImmediate */) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var modelRoot = model._root;\n    var selector = modelRoot.errorSelector;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            var operation = module.exports['set' + inputType];\n            var results = operation(model, groupedArgs, selector, null, false);\n            changed = changed || results[2];\n            optimizedPaths.push.apply(optimizedPaths, results[1]);\n            if (inputType === 'PathValues') {\n                requestedPaths.push.apply(requestedPaths, groupedArgs.map(pluckPaths));\n            } else if (inputType === 'JSONGraphs') {\n                requestedPaths.push.apply(requestedPaths, arrayFlatMap(groupedArgs, pluckPaths));\n            } else {\n                requestedPaths.push.apply(requestedPaths, results[0]);\n            }\n        }\n    }\n\n    return {\n        changed: changed,\n        requested: requestedPaths,\n        optimized: optimizedPaths\n    };\n};\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/index.js","module.exports = function transferBackReferences(fromNode, destNode) {\n    var fromNodeRefsLength = fromNode[f_refs_length] || 0,\n        destNodeRefsLength = destNode[f_refs_length] || 0,\n        i = -1;\n    while (++i < fromNodeRefsLength) {\n        var ref = fromNode[f_ref + i];\n        if (ref !== void 0) {\n            ref[f_context] = destNode;\n            destNode[f_ref + (destNodeRefsLength + i)] = ref;\n            fromNode[f_ref + i] = void 0;\n        }\n    }\n    destNode[f_refs_length] = fromNodeRefsLength + destNodeRefsLength;\n    fromNode[f_refs_length] = void 0;\n    return destNode;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/transferBackReferences.js","module.exports = function unlinkBackReferences(node) {\n    var i = -1, n = node[f_refs_length] || 0;\n    while (++i < n) {\n        var ref = node[f_ref + i];\n        if (ref != null) {\n            ref[f_context] = ref[f_ref_index] = node[f_ref + i] = void 0;\n        }\n    }\n    node[f_refs_length] = void 0;\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/unlinkBackReferences.js","module.exports = function unlinkForwardReference(reference) {\n    var destination = reference[f_context];\n    if (destination) {\n        var i = (reference[f_ref_index] || 0) - 1,\n            n = (destination[f_refs_length] || 0) - 1;\n        while (++i <= n) {\n            destination[f_ref + i] = destination[f_ref + (i + 1)];\n        }\n        destination[f_refs_length] = n;\n        reference[f_ref_index] = reference[f_context] = destination = void 0;\n    }\n    return reference;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/unlinkForwardReference.js","module.exports = hasValidParentReference;\n\nfunction hasValidParentReference() {\n    var reference = this._referenceContainer;\n\n    // Always true when this mode is false.\n    if (!this._allowFromWhenceYouCame) {\n        return true;\n    }\n\n    // If fromWhenceYouCame is true and the first set of keys did not have\n    // a reference, this case can happen.  They are always valid.\n    if (reference === true) {\n        return true;\n    }\n\n    // was invalid before even derefing.\n    if (reference === false) {\n        return false;\n    }\n\n    // Its been disconnected (set over or collected) from the graph.\n    if (reference && reference[f_parent] === undefined) {\n        return false;\n    }\n\n    // The reference has expired but has not been collected from the graph.\n    if (reference && reference[f_invalidated]) {\n        return false;\n    }\n\n    return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/deref/hasValidParentReference.js","var typeofObject = 'object';\nvar CONTAINER_DOES_NOT_EXIST = 'e';\nvar FalcorJSON = require('../cache/get/json/FalcorJSON');\nvar getCachePosition = require('../cache/getCachePosition');\nvar InvalidDerefInputError = require('../errors/InvalidDerefInputError');\n\nmodule.exports = function deref(json) {\n\n    var f_meta;\n\n    if (!json || typeofObject !== typeof json || ! (\n        f_meta = json[f_meta_data]) || typeofObject !== typeof f_meta) {\n        return null;\n    }\n\n    var cacheRoot = this._root.cache;\n    var recycleJSON = this._recycleJSON;\n    var absolutePath = f_meta[f_meta_abs_path];\n    var referenceContainer, currentRefPath, i, len;\n\n    if (!absolutePath) {\n        return this._clone({\n            _node: undefined,\n            _seed: recycleJSON && {\n                json: json, __proto__: FalcorJSON.prototype\n            } || undefined\n        });\n    } else if (absolutePath.length === 0) {\n        return this._clone({\n            _node: cacheRoot,\n            _path: absolutePath,\n            _referenceContainer: true,\n            _seed: recycleJSON && {\n                json: json, __proto__: FalcorJSON.prototype\n            } || undefined\n        });\n    }\n\n    var originalRefPath = f_meta[f_meta_deref_to];\n    var originalAbsPath = f_meta[f_meta_deref_from];\n\n    // We deref and then ensure that the reference container is attached to\n    // the model.\n    var cacheNode = getCachePosition(cacheRoot, absolutePath);\n    var validContainer = CONTAINER_DOES_NOT_EXIST;\n\n    if (originalAbsPath) {\n\n        validContainer = false;\n\n        i = -1;\n        len = originalAbsPath.length;\n        referenceContainer = cacheRoot;\n        while (++i < len) {\n            referenceContainer = referenceContainer[originalAbsPath[i]];\n            if (!referenceContainer || referenceContainer.$type) {\n                break;\n            }\n        }\n\n        // If the reference container is still a sentinel value then compare\n        // the reference value with refPath.  If they are the same, then the\n        // model is still valid.\n        if (originalRefPath && referenceContainer && referenceContainer.$type === $ref) {\n            validContainer = true;\n            len = originalRefPath.length;\n            currentRefPath = referenceContainer.value;\n            for (i = 0; i < len; ++i) {\n                if (currentRefPath[i] !== originalRefPath[i]) {\n                    cacheNode = undefined;\n                    validContainer = false;\n                    break;\n                }\n            }\n        }\n    }\n\n    // Signal to the deref'd model that it has been disconnected from the\n    // graph or there is no _fromWhenceYouCame\n    if (!validContainer) {\n        referenceContainer = false;\n    }\n\n    // The container did not exist, therefore there is no reference\n    // container and fromWhenceYouCame should always return true.\n    else if (validContainer === CONTAINER_DOES_NOT_EXIST) {\n        referenceContainer = true;\n    }\n\n    return this._clone({\n        _node: cacheNode,\n        _path: absolutePath,\n        _referenceContainer: referenceContainer,\n        _seed: recycleJSON && {\n            json: json, __proto__: FalcorJSON.prototype\n        } || undefined\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/deref/index.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'It is not legal to use the JSON Graph ' +\n    'format from a bound Model. JSON Graph format' +\n    ' can only be used from a root model.';\n\n/**\n * When a bound model attempts to retrieve JSONGraph it should throw an\n * error.\n *\n * @private\n */\nmodule.exports = createErrorClass('BoundJSONGraphModelError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/BoundJSONGraphModelError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'Deref can only be used with a non-primitive object from get, set, or call.';\n\n/**\n * An invalid deref input is when deref is used with input that is not generated\n * from a get, set, or a call.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidDerefInputError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidDerefInputError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'The boundPath of the model is not valid since a value or error was found before the path end.';\n\n/**\n * An InvalidModelError can only happen when a user binds, whether sync\n * or async to shorted value.  See the unit tests for examples.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidModelError', function(boundPath, shortedPath) {\n    this.message = MESSAGE;\n    this.boundPath = boundPath;\n    this.shortedPath = shortedPath;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidModelError.js","var createErrorClass = require('./createErrorClass');\n\n/**\n * A request can only be retried up to a specified limit.  Once that\n * limit is exceeded, then an error will be thrown.\n *\n * @private\n */\nmodule.exports = createErrorClass('MaxRetryExceededError', function(maxRetryCount, absolute, relative, optimized) {\n    this.message = '' +\n        'Exceeded the max retry count (' + maxRetryCount + ') for these paths: \\n' +\n        (absolute &&\n        'absolute: [\\n\\t' + printPaths(absolute) + '\\n]\\n' || '') +\n        (relative &&\n        'relative: [\\n\\t' + printPaths(relative) + '\\n]\\n' || '') +\n        (optimized &&\n        'optimized: [\\n\\t' + printPaths(optimized) + '\\n]\\n' || '');\n});\n\nfunction printPaths(paths) {\n    return paths.map(function(path) {\n        return JSON.stringify(path);\n    }).join(',\\n\\t');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/MaxRetryExceededError.js","module.exports = String.fromCharCode(30) + 'ƒ_';\n\n\n\n// WEBPACK FOOTER //\n// ./lib/internal/f_.js","var Source = require('./Source');\nvar Subscriber = require('./Subscriber');\nvar lruCollect = require('../lru/collect');\nvar FalcorJSON = require('../cache/get/json/FalcorJSON');\nvar collapse = require('@graphistry/falcor-path-utils/lib/collapse');\nvar InvalidSourceError = require('../errors/InvalidSourceError');\nvar MaxRetryExceededError = require('../errors/MaxRetryExceededError');\n\nmodule.exports = Call;\n\nfunction Call(type, model, _args) {\n    Source.call(this, type);\n    if (model && _args) {\n        this.type = type;\n        this.source = this;\n        this.model = model;\n        this._args = _args;\n    }\n}\n\nCall.prototype = Object.create(Source.prototype);\n\nCall.prototype.lift = function(operator, source) {\n    source = new Call(source || this);\n    source.type = this.type;\n    source.model = this.model;\n    source._args = this._args;\n    source.operator = operator;\n    operator.data = operator.data || this.operator.data;\n    operator.errors = operator.errors || this.operator.errors;\n    operator.operation = operator.operation || this.operator.operation;\n    operator.progressive = operator.progressive || this.operator.progressive;\n    operator.maxRetryCount = operator.maxRetryCount || this.operator.maxRetryCount;\n    return source;\n}\n\nCall.prototype.operator = function(subscriber) {\n    return this._subscribe(subscriber);\n}\n\nCall.prototype._subscribe = function(subscriber) {\n    subscriber.onNext({\n        type: this.type,\n        args: this._args,\n        model: this.model,\n        version: this.model._root.version\n    });\n    subscriber.onCompleted();\n    return subscriber;\n}\n\nCall.prototype._toJSON = function(data, errors) {\n    if (data === undefined) {\n        data = { __proto__: FalcorJSON.prototype };\n    }\n    return this.lift(new CallOperator(\n        data, errors || this.operator.errors, 'json',\n        this.operator.progressive, this.operator.maxRetryCount\n    ), this.source);\n}\n\nCall.prototype._toJSONG = function(data, errors) {\n    if (data === undefined) {\n        data = { __proto__: FalcorJSON.prototype };\n    }\n    return this.lift(new CallOperator(\n        data, errors || this.operator.errors, 'jsonGraph',\n        this.operator.progressive, this.operator.maxRetryCount\n    ), this.source);\n}\n\nCall.prototype.retry = function(maxRetryCount) {\n    return this.lift(new CallOperator(\n        this.operator.data,\n        this.operator.errors,\n        this.operator.operation,\n        this.operator.progresive,\n        maxRetryCount\n    ), this.source);\n}\n\nCall.prototype.progressively = function() {\n    return this.lift(new CallOperator(\n        this.operator.data,\n        this.operator.errors,\n        this.operator.operation,\n        true,\n        this.operator.maxRetryCount\n    ), this.source);\n}\n\nfunction CallOperator(data, errors, operation, progressive, maxRetryCount) {\n    this.data = data;\n    this.errors = errors;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallOperator.prototype.call = function(source, destination) {\n    return source.subscribe(new CallSubscriber(\n        destination, this.data, this.errors, this.operation, this.progressive\n    ));\n}\n\nfunction CallSubscriber(destination, data, errors, operation, progressive, maxRetryCount) {\n    Subscriber.call(this, destination);\n    this.data = data;\n    this.retryCount = -1;\n    this.errors = errors;\n    this.hasValue = false;\n    this.completed = false;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallSubscriber.prototype = Object.create(Subscriber.prototype);\nCallSubscriber.prototype.operations = {\n    get: require('../cache/get'),\n    set: require('../cache/set'),\n    call: require('../cache/call'),\n    invalidate: require('../cache/invalidate')\n};\n\nCallSubscriber.prototype.next =\nCallSubscriber.prototype.onNext = function(seed) {\n\n    if (!this.started) {\n        this.args = seed.args;\n        this.type = seed.type;\n        this.model = seed.model;\n        this.version = seed.version;\n        this.maxRetryCount = this.maxRetryCount || this.model._root.maxRetryCount;\n        return;\n    }\n\n    var missing, fragments;\n    var type = seed.type;\n    var args = seed.args || seed.paths;\n\n    var data = this.data;\n    var model = this.model;\n    var errors = this.errors;\n    var results = this.results;\n    var version = this.version;\n    var hasValue = this.hasValue;\n    var operation = this.operation;\n    var progressive = this.progressive;\n\n    var seedIsImmutable = progressive && data;\n\n    // If we request paths as JSON in progressive mode, ensure each progressive\n    // valueNode is immutable. If not in progressive mode, we can write into the\n    // same JSON tree until the request is completed.\n    if (seedIsImmutable) {\n        data = { __proto__: FalcorJSON.prototype };\n    }\n\n    if (args && args.length) {\n\n        results = this.operations[type]\n            [operation](model, args, data,\n                        progressive || !model._source,\n                        this.retryCount === -1);\n\n        // We must communicate critical errors from get, such as bound path is\n        // broken or this is a JSONGraph request with a bound path.\n        if (results.error) {\n            return tryOnError(this, results.error);\n        }\n\n        errors && results.errors &&\n            errors.push.apply(errors, results.errors);\n\n        if (fragments = results.fragments) {\n            args = results.args;\n            this.fragments = fragments;\n        }\n\n        this.relative = results.relative;\n        this.requested = results.requested;\n        this.missing = missing = results.missing;\n        this.hasValue = hasValue || (hasValue = results.hasValue);\n    }\n\n    // We are done when there are no missing paths or\n    // the model does not have a dataSource to fetch from.\n    this.completed = !missing || !model._source;\n\n    if (type !== 'set') {\n        this.args = args;\n        if (seedIsImmutable) {\n            this.data = mergeInto(data, this.data);\n        }\n    }\n\n    if (progressive && hasValue && data && (data.json || data.jsonGraph)) {\n        tryOnNext(data, operation, model._root, this.destination);\n    }\n}\n\nCallSubscriber.prototype.error =\nCallSubscriber.prototype.onError = function(error) {\n    if (error instanceof InvalidSourceError) {\n        return Subscriber.prototype.onError.call(this, error);\n    }\n    this.errored = true;\n    this.onCompleted(error);\n}\n\nCallSubscriber.prototype.complete =\nCallSubscriber.prototype.onCompleted = function(error) {\n\n    var data, type, errors, errored;\n\n    if (!this.started && (this.started = true)) {\n        this.onNext(this);\n    } else if (errored = this.errored) {\n        this.onNext({ type: 'get', paths: this.relative });\n    }\n\n    if (errored || this.completed) {\n        if (!this.progressive && this.hasValue && (\n            (data = this.data) && data.json || data.jsonGraph)) {\n            tryOnNext(data, this.operation, this.model._root, this.destination);\n        }\n        errors = this.errors;\n        if (errored || error || errors && errors.length) {\n            return tryOnError(this, errors.length && errors || error);\n        }\n\n        return Subscriber.prototype.onCompleted.call(this);\n    }\n\n    if (++this.retryCount >= this.maxRetryCount) {\n        return tryOnError(this, new MaxRetryExceededError(\n            this.retryCount,\n            this.requested,\n            this.relative,\n            this.missing\n        ));\n    }\n\n    this.request = this.model._root.requests[this.type](\n        this.model, this.missing, this.relative, this.fragments\n    ).subscribe(this);\n}\n\nCallSubscriber.prototype.dispose =\nCallSubscriber.prototype.unsubscribe = function() {\n\n    var model = this.model;\n    var version = this.version;\n    var request = this.request;\n\n    this.args = null;\n    this.data = null;\n    this.model = null;\n    this.errors = null;\n    this.errored = false;\n    this.started = false;\n    this.hasValue = false;\n    this.completed = false;\n\n    Subscriber.prototype.dispose.call(this);\n\n    if (request) {\n        this.request = null;\n        request.dispose();\n    }\n\n    if (model) {\n\n        var modelRoot = model._root;\n        var cache = modelRoot.cache;\n        var shouldCollectCache = modelRoot.syncRefCount <= 0 &&\n                                 version !== modelRoot.version;\n\n        // Prune the cache via the LRU if this is the last request.\n        if (shouldCollectCache) {\n\n            if (cache) {\n                lruCollect(modelRoot,\n                           modelRoot.expired,\n                           cache.$size || 0,\n                           modelRoot.maxSize,\n                           modelRoot.collectRatio,\n                           modelRoot.version);\n            }\n\n            var rootOnChangesCompletedHandler = modelRoot.onChangesCompleted;\n\n            if (rootOnChangesCompletedHandler) {\n                rootOnChangesCompletedHandler.call(modelRoot.topLevelModel);\n            }\n        }\n    }\n}\n\nfunction tryOnNext(data, operation, modelRoot, destination) {\n    if (operation === 'jsonGraph' && data.paths) {\n        data.paths = collapse(data.paths);\n    }\n    try {\n        ++modelRoot.syncRefCount;\n        destination.onNext(data);\n    } catch(e) {\n        throw e;\n    } finally {\n        --modelRoot.syncRefCount;\n    }\n}\n\nfunction tryOnError(self, error) {\n    try {\n        throw error;\n    } catch (err) {\n        Subscriber.prototype.onError.call(self, err);\n    }\n}\n\nfunction mergeInto(dest, node) {\n\n    var destValue, nodeValue,\n        key, keys = Object.keys(node),\n        index = -1, length = keys.length;\n\n    while (++index < length) {\n\n        key = keys[index];\n\n        if (key === f_meta_data) {\n            dest[f_meta_data] = node[f_meta_data];\n        } else {\n\n            nodeValue = node[key];\n            destValue = dest[key];\n\n            if (destValue !== nodeValue) {\n                if (!nodeValue || typeof nodeValue !== 'object') {\n                    if (destValue === undefined) {\n                        dest[key] = nodeValue;\n                    }\n                } else if (destValue === undefined) {\n                    dest[key] = nodeValue;\n                } else {\n                    mergeInto(destValue, nodeValue);\n                }\n            }\n        }\n    }\n\n    return dest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Call.js","var Source = require('./Source');\nvar Request = require('./Request');\nvar Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar ImmediateScheduler = require('../schedulers/ImmediateScheduler');\n\nmodule.exports = Queue;\n\nfunction Queue(modelRoot) {\n    Subscription.call(this, []);\n    this.modelRoot = modelRoot;\n}\n\nQueue.prototype = Object.create(Subscription.prototype);\n\nQueue.prototype.set = isolateSet;\nQueue.prototype.call = isolateCall;\nQueue.prototype.get = batchAndDedupeGet;\n\nfunction isolateSet(model, optimized, requested, env) {\n    var queue = this;\n    return new Source(function(destination) {\n\n        var request = new Request('set', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = env.jsonGraph;\n        request.requested.push(requested);\n        request.optimized.push(optimized);\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction isolateCall(model, optimized, requested, callArgs) {\n    var queue = this;\n    return new Source(function(destination) {\n\n        var request = new Request('call', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = callArgs;\n        request.boundPath = model._path;\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction batchAndDedupeGet(model, optimized, requested) {\n    return new Dedupe(\n        this, model._source, model._scheduler, requested, optimized\n    );\n}\n\nfunction Dedupe(queue, source, scheduler, requested, optimized) {\n    this.queue = queue;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n    this.requested = requested;\n    this.optimized = optimized;\n}\n\nDedupe.prototype.subscribe = function(destination) {\n\n    var queue = this.queue;\n    var source = this.dataSource;\n    var requested = this.requested;\n    var optimized = this.optimized;\n    var scheduler = this.scheduler;\n\n    var requestsIndex = -1;\n    var requests  = queue.subscriptions;\n    var requestsCount = requests.length;\n    var subscription = new Subscription([], destination);\n\n    while (++requestsIndex < requestsCount) {\n\n        var request = requests[requestsIndex];\n\n        if (request.type !== 'get') {\n            continue;\n        }\n\n        if (request = request.batch(requested, optimized, requested = [], optimized = [])) {\n            subscription.add(request.subscribe(new Subscriber(destination, request)));\n        }\n\n        if (!optimized.length) {\n            break;\n        }\n    }\n\n    if (optimized.length) {\n        request = requests[requestsIndex] =\n            new Request('get', queue, source, scheduler).batch(requested, optimized);\n        subscription.add(request.subscribe(new Subscriber(destination, request)));\n        request.connect();\n    }\n\n    return subscription;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Queue.js","var isArray = Array.isArray;\nvar Subject = require('./Subject');\nvar Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar InvalidSourceError = require('../errors/InvalidSourceError');\n\nvar setJSONGraphs = require('../cache/set/setJSONGraphs');\nvar setPathValues = require('../cache/set/setPathValues');\nvar invalidatePaths = require('../cache/invalidate/invalidatePathSets');\n\nvar toPaths = require('@graphistry/falcor-path-utils/lib/toPaths');\nvar toCollapseMap = require('@graphistry/falcor-path-utils/lib/toCollapseMap');\nvar toCollapseTrees = require('@graphistry/falcor-path-utils/lib/toCollapseTrees');\nvar hasIntersection = require('@graphistry/falcor-path-utils/lib/hasIntersection');\n\nmodule.exports = Request;\n\nfunction Request(type, queue, source, scheduler) {\n    Subject.call(this, [], queue);\n    this.tree = {};\n    this.paths = [];\n    this.type = type;\n    this.data = null;\n    this.active = false;\n    this.responded = false;\n    this.requested = [];\n    this.optimized = [];\n    this.disposable = null;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n}\n\nRequest.prototype = Object.create(Subject.prototype);\n\nRequest.prototype.next =\nRequest.prototype.onNext = function(envelopes) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    var env = envelopes,\n        envelopeIndex = 0,\n        envelopeCount = 0;\n\n    if (isArray(envelopes)) {\n        if ((envelopeCount = envelopes.length) <= 0) {\n            return;\n        }\n        env = envelopes[0];\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    var boundPath = this.boundPath;\n\n    do {\n\n        var jsonGraph = env.jsonGraph;\n        var requested = this.requested;\n        var modelRoot = queue.modelRoot;\n        var invalidated = env.invalidated;\n        var paths = env.paths || this.paths;\n\n        // Run invalidations first.\n        if (invalidated && invalidated.length) {\n            invalidatePaths({ _root: modelRoot, _path: [] }, invalidated, false);\n        }\n\n        if (paths && paths.length && !(!jsonGraph || typeof jsonGraph !== 'object')) {\n            paths = setJSONGraphs(\n                { _root: modelRoot },\n                [{ paths: paths, jsonGraph: jsonGraph }],\n                modelRoot.errorSelector, modelRoot.comparator, false\n            )[0];\n        }\n    } while (++envelopeIndex < envelopeCount && (env = envelopes[envelopeIndex]))\n\n    this.observers.slice(0).forEach(function(observer, index) {\n        observer.onNext({\n            type: 'get', paths: requested[index] ||\n                filterPathsBoundTo(boundPath, paths)\n        });\n    });\n}\n\nRequest.prototype.error =\nRequest.prototype.onError = function(error) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    error = error || {};\n\n    // Converts errors to object we can insert into the cache.\n    error = !(error instanceof Error) ?\n        // if it's $type error, use it raw\n        error.$type === $error && error ||\n        // Otherwise make it an error\n        { $type: $error, value: error } :\n        // If it's instanceof Error, pluck error.message\n        { $type: $error, value: { message: error.message }};\n\n    var modelRoot = queue.modelRoot;\n\n    var errorPathValues = toPaths(toCollapseTrees(\n        this.requested.reduce(function(collapseMap, paths) {\n            return toCollapseMap(paths, collapseMap);\n        }, {})\n    ))\n    .map(function(path) { return { path: path, value: error }; });\n\n    if (errorPathValues.length) {\n        setPathValues(\n            { _root: modelRoot, _path: [] },\n            errorPathValues,\n            modelRoot.errorSelector,\n            modelRoot.comparator,\n            false\n        );\n    }\n\n    Subject.prototype.onError.call(this, error);\n}\n\nRequest.prototype.complete =\nRequest.prototype.onCompleted = function() {\n    if (this.responded === false) {\n        this.onNext({});\n    }\n    Subject.prototype.onCompleted.call(this);\n}\n\nRequest.prototype.remove = function(subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.requested.splice(index, 1);\n        this.optimized.splice(index, 1);\n        this.observers.splice(index, 1);\n        this.subscriptions.splice(index, 1);\n    }\n    if (this.subscriptions.length === 0) {\n        this.dispose();\n    }\n    return this;\n}\n\nRequest.prototype.dispose =\nRequest.prototype.unsubscribe = function () {\n    this.tree = {};\n    this.data = null;\n    this.paths = null;\n    this.active = false;\n    this.boundPath = null;\n    this.requested = [];\n    this.optimized = [];\n    var queue = this.parent;\n    if (queue) {\n        this.parent = null;\n        queue.remove(this);\n    }\n    var disposable = this.disposable;\n    if (disposable) {\n        this.disposable = null;\n        if (disposable.dispose) {\n            disposable.dispose();\n        } else if (disposable.unsubscribe) {\n            disposable.unsubscribe();\n        }\n    }\n    Subject.prototype.dispose.call(this);\n}\n\nRequest.prototype.connect = function() {\n    if (!this.active && !this.disposable) {\n        var scheduledDisposable = this.scheduler.schedule(flush.bind(this));\n        if (!this.disposable) {\n            this.disposable = scheduledDisposable;\n        }\n    }\n    return this;\n}\n\nRequest.prototype.batch = function(requested, optimized,\n                                   requestedComplements,\n                                   optimizedComplements) {\n    if (this.active) {\n        var requestedIntersection = [];\n        var optimizedIntersection = [];\n        if (findIntersections(this.tree,\n                              requested, optimized,\n                              requestedComplements,\n                              optimizedComplements,\n                              requestedIntersection,\n                              optimizedIntersection)) {\n            this.requested.push(requestedIntersection);\n            this.optimized.push(optimizedIntersection);\n            return this;\n        }\n        return null;\n    }\n    this.requested.push(requested);\n    this.optimized.push(optimized);\n    return this;\n}\n\nfunction flush() {\n\n    this.active = true;\n\n    var obs, paths = this.paths = toPaths(this.tree = toCollapseTrees(\n        this.optimized.reduce(function(collapseMap, paths) {\n            return toCollapseMap(paths, collapseMap);\n        }, {})\n    ));\n\n    try {\n        switch (this.type) {\n            case 'get':\n                obs = this.dataSource.get(paths);\n                break;\n            case 'set':\n                obs = this.dataSource.set({ paths: paths, jsonGraph: this.data });\n                break;\n            case 'call':\n                obs = this.dataSource.call.apply(this.dataSource, this.data);\n                break;\n        }\n        this.disposable = obs.subscribe(this);\n    } catch (e) {\n        this.disposable = {};\n        Subject.prototype.onError.call(this, new InvalidSourceError(e));\n    }\n}\n\nfunction findIntersections(tree,\n                           requested, optimized,\n                           requestedComplements,\n                           optimizedComplements,\n                           requestedIntersection,\n                           optimizedIntersection) {\n\n    var index = -1;\n    var complementIndex = -1;\n    var intersectionIndex = -1;\n    var optTotal = optimized.length;\n    var reqTotal = requested.length - 1;\n\n    while (++index < optTotal) {\n        var path = optimized[index];\n        var pathLen = path.length;\n        var subTree = tree[pathLen];\n        if (subTree && hasIntersection(subTree, path, 0, pathLen)) {\n            optimizedIntersection[++intersectionIndex] = path;\n            requestedIntersection[intersectionIndex] = requested[\n                index < reqTotal ? index : reqTotal\n            ];\n        } else {\n            optimizedComplements[++complementIndex] = path;\n            requestedComplements[complementIndex] = requested[\n                index < reqTotal ? index : reqTotal\n            ];\n        }\n    }\n\n    return ~intersectionIndex;\n}\n\nfunction filterPathsBoundTo(boundPath, paths) {\n\n    var boundLength;\n\n    if (!boundPath || (boundLength = boundPath.length) === 0) {\n        return paths;\n    }\n\n    var filtered = [], filteredIndex = -1, keyIndex;\n    var path, pathsIndex = -1, pathsCount = paths.length;\n\n    outer: while (++pathsIndex < pathsCount) {\n        path = paths[pathsIndex];\n        if (path.length > boundLength) {\n            keyIndex = 0;\n            do {\n                if (path[keyIndex] !== boundPath[keyIndex]) {\n                    continue outer;\n                }\n            } while (++keyIndex < boundLength);\n            filtered[++filteredIndex] = path.slice(boundLength);\n        }\n    }\n\n    return filtered;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Request.js","var Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\n\nmodule.exports = Subject;\n\nfunction Subject(observers, parent) {\n    Subscriber.call(this, null, parent);\n    this.observers = observers || [];\n}\n\nSubject.prototype = Object.create(Subscriber.prototype);\n\n// Unused\n// Subject.prototype.onNext = function(value) {\n//     this.observers.slice(0).forEach(function(observer) {\n//         observer.onNext(value);\n//     });\n// }\n\nSubject.prototype.onError = function(error) {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function(observer) {\n        observer.onError(error);\n    });\n}\n\nSubject.prototype.onCompleted = function() {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function(observer) {\n        observer.onCompleted();\n    });\n}\n\nSubject.prototype.subscribe = function(subscriber) {\n    this.observers.push(subscriber);\n    this.subscriptions.push(subscriber = new Subscription([subscriber], this));\n    return subscriber;\n}\n\nSubject.prototype.dispose =\nSubject.prototype.unsubscribe = function () {\n    this.observers = [];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subject.js","function TimeoutScheduler(delay) {\n    this.delay = delay;\n}\n\nvar TimerDisposable = function TimerDisposable(id) {\n    this.id = id;\n    this.disposed = false;\n};\n\nTimeoutScheduler.prototype.schedule = function schedule(action) {\n    return new TimerDisposable(setTimeout(action, this.delay));\n};\n\nTimerDisposable.prototype.dispose =\nTimerDisposable.prototype.unsubscribe = function() {\n    if (!this.disposed) {\n        clearTimeout(this.id);\n        this.id = null;\n        this.disposed = true;\n    }\n};\n\nmodule.exports = TimeoutScheduler;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/schedulers/TimeoutScheduler.js","module.exports = function arrayFlatMap(array, selector) {\n    var index = -1;\n    var i = -1;\n    var n = array.length;\n    var array2 = [];\n    while (++i < n) {\n        var array3 = selector(array[i], i, array);\n        var j = -1;\n        var k = array3.length;\n        while (++j < k) {\n            array2[++index] = array3[j];\n        }\n    }\n    return array2;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/array-flat-map.js","var isArray = Array.isArray;\nvar isInternal = require('../internal/isInternal');\n\nmodule.exports = clone;\n\nfunction clone(source) {\n    var dest = source;\n    if (!(!dest || typeof dest !== 'object')) {\n        dest = isArray(source) ? [] : {};\n        for (var key in source) {\n            if (isInternal(key)) {\n                continue;\n            }\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/clone.js","var isObject = require('./isObject');\nmodule.exports = function getSize(node) {\n    return isObject(node) && node.$expires || undefined;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getExpires.js","var isObject = require('./../support/isObject');\n\nmodule.exports = function getType(node, anyType) {\n    var type = isObject(node) && node.$type || void 0;\n    if (anyType && type) {\n        return 'branch';\n    }\n    return type;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getType.js","var isArray = Array.isArray;\nvar isObject = require('./../support/isObject');\n\nmodule.exports = function isPathValue(pathValue) {\n    return isObject(pathValue) && (\n        isArray(pathValue.path) || (\n            typeof pathValue.path === 'string'\n        ));\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isPathValue.js","module.exports = require('./lib/index');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/index.js\n// module id = 105\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = require('./ponyfill');\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/lib/index.js\n// module id = 106\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/lib/ponyfill.js\n// module id = 107\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.l; }\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.i; }\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 108\n// module chunks = 0"],"sourceRoot":""}