{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 7ca7d74837d04b5e0637","webpack:///./lib/cache/isExpired.js","webpack:///./lib/cache/clone.js","webpack:///./lib/cache/expireNode.js","webpack:///./lib/cache/get/json/FalcorJSON.js","webpack:///./lib/errors/NullInPathError.js","webpack:///./lib/errors/createErrorClass.js","webpack:///./lib/support/isObject.js","webpack:///./lib/cache/createHardlink.js","webpack:///.-path-utils/lib/support/materializedAtom.js","webpack:///./lib/support/getSize.js","webpack:///./lib/cache/getCachePosition.js","webpack:///./lib/cache/updateNodeAncestors.js","webpack:///./lib/errors/InvalidKeySetError.js","webpack:///./lib/lru/promote.js","webpack:///./lib/request/Subscriber.js","webpack:///./lib/request/Subscription.js","webpack:///./lib/cache/get/onValueType.js","webpack:///./lib/cache/getBoundCacheNode.js","webpack:///./lib/cache/set/setJSONGraphs.js","webpack:///./lib/cache/set/setPathMaps.js","webpack:///./lib/internal/isInternal.js","webpack:///.-path-utils/lib/flatBufferToPaths.js","webpack:///.-path-utils/lib/getHashCode.js","webpack:///.-path-utils/lib/iterateKeySet.js","webpack:///./lib/cache/get/json/index.js","webpack:///./lib/cache/get/jsonGraph/index.js","webpack:///./lib/cache/get/jsonGraph/inlineValue.js","webpack:///./lib/cache/get/onMissing.js","webpack:///./lib/cache/invalidate/invalidatePathSets.js","webpack:///./lib/cache/removeNodeAndDescendants.js","webpack:///./lib/cache/set/setPathValues.js","webpack:///./lib/cache/updateBackReferenceVersions.js","webpack:///./lib/support/getTimestamp.js","webpack:///./lib/support/isInternalKey.js","webpack:///./lib/values/expires-now.js","webpack:///(webpack)/buildin/global.js","webpack:///.-path-utils/lib/collapse.js","webpack:///.-path-utils/lib/toCollapseMap.js","webpack:///.-path-utils/lib/toCollapseTrees.js","webpack:///.-path-utils/lib/toPaths.js","webpack:///./lib/cache/get/json/getJSON.js","webpack:///./lib/cache/get/json/getReferenceTarget.js","webpack:///./lib/cache/get/json/onValue.js","webpack:///./lib/cache/get/jsonGraph/getJSONGraph.js","webpack:///./lib/cache/get/onMaterialize.js","webpack:///./lib/cache/groupCacheArguments.js","webpack:///./lib/cache/insertNode.js","webpack:///./lib/cache/invalidate/invalidatePathMaps.js","webpack:///./lib/cache/mergeValueOrInsertBranch.js","webpack:///./lib/cache/reconstructPath.js","webpack:///./lib/cache/replaceNode.js","webpack:///./lib/cache/wrapNode.js","webpack:///./lib/errors/CircularReferenceError.js","webpack:///./lib/errors/InvalidSourceError.js","webpack:///./lib/lru/splice.js","webpack:///./lib/request/Source.js","webpack:///./lib/schedulers/ImmediateScheduler.js","webpack:///./lib/support/isJSONEnvelope.js","webpack:///./lib/support/isJSONGraphEnvelope.js","webpack:///./lib/support/now.js","webpack:///./lib/values/expires-never.js","webpack:///./lib/index.js","webpack:///.-path-utils/lib/computeFlatBufferHash.js","webpack:///.-path-utils/lib/hasIntersection.js","webpack:///.-path-utils/lib/toFlatBuffer.js","webpack:///.-path-utils/lib/toTree.js","webpack:///./lib/Model.js","webpack:///./lib/ModelDataSourceAdapter.js","webpack:///./lib/ModelRoot.js","webpack:///./lib/cache/call/index.js","webpack:///./lib/cache/get/index.js","webpack:///./lib/cache/get/json/onError.js","webpack:///./lib/cache/get/json/walkFlatBuffer.js","webpack:///./lib/cache/get/json/walkPath.js","webpack:///./lib/cache/get/jsonGraph/getReferenceTarget.js","webpack:///./lib/cache/get/jsonGraph/onValue.js","webpack:///./lib/cache/get/jsonGraph/walkPath.js","webpack:///./lib/cache/get/onMaterializeFlatBuffer.js","webpack:///./lib/cache/getCache.js","webpack:///./lib/cache/getVersion.js","webpack:///./lib/cache/invalidate/index.js","webpack:///./lib/cache/mergeJSONGraphNode.js","webpack:///./lib/cache/set/index.js","webpack:///./lib/cache/transferBackReferences.js","webpack:///./lib/cache/unlinkBackReferences.js","webpack:///./lib/cache/unlinkForwardReference.js","webpack:///./lib/deref/hasValidParentReference.js","webpack:///./lib/deref/index.js","webpack:///./lib/errors/BoundJSONGraphModelError.js","webpack:///./lib/errors/InvalidDerefInputError.js","webpack:///./lib/errors/InvalidModelError.js","webpack:///./lib/errors/MaxRetryExceededError.js","webpack:///./lib/internal/f_.js","webpack:///./lib/lru/collect.js","webpack:///./lib/request/Call.js","webpack:///./lib/request/Queue.js","webpack:///./lib/request/Request.js","webpack:///./lib/request/Subject.js","webpack:///./lib/schedulers/TimeoutScheduler.js","webpack:///./lib/support/clone.js","webpack:///./lib/support/getExpires.js","webpack:///./lib/support/getType.js","webpack:///./lib/support/isPathValue.js","webpack:///./~/symbol-observable/index.js","webpack:///./~/symbol-observable/lib/index.js","webpack:///./~/symbol-observable/lib/ponyfill.js","webpack:///(webpack)/buildin/module.js"],"names":["now","require","$now","$never","module","exports","isExpired","node","expireImmediate","exp","$expires","undefined","isInternal","clone","key","keys","Object","json","index","length","splice","expireNode","expired","lru","push","FalcorJSON","f_meta","protoBlacklist","toString","constructor","toLocaleString","protoDescriptors","toJSON","enumerable","value","toProps","$__hash","get","$__path","$__status","$__version","defineProperties","prototype","getOwnPropertyNames","Array","reduce","descriptors","name","hasOwnProperty","fn","bindArrayMethod","writable","atom","type","$type","RangeError","apply","arguments","isArray","getInst","x","inst","typeofInst","argsLen","global","serialize","includeMetadata","includeStatus","JSON","stringify","call","f_meta_inst","f_meta_json","version","serializer","createWithProto","count","total","xs","ys","__proto__","$code","status","abs_path","deref_to","deref_from","createErrorClass","MESSAGE","message","init","E","Error","captureStackTrace","stack","create","is","isObject","createHardlink","from","to","backRefs","f_ref","getSize","$size","getCachePosition","cache","path","depth","maxDepth","removeNodeAndDescendants","updateBackReferenceVersions","updateNodeAncestors","offset","curr","next","keysOrRanges","mesage","EXPIRES_NEVER","lruPromote","head","prev","Subscription","Subscriber","destination","parent","onCompleted","error","onError","onNext","complete","dest","signaled","dispose","unsubscribe","subscriptions","add","subscription","remove","indexOf","pop","onValueType","seed","results","requestedPath","requestedLength","optimizedPath","optimizedLength","fromReference","modelRoot","branchSelector","boxValues","materialized","reportMissing","treatErrorsAsValues","onValue","onMissing","onMaterialize","_reportMissing","reportMaterialized","hasValue","getBoundCacheNode","model","_path","_node","_root","arr","mergeJSONGraphNode","NullInPathError","iterateKeySet","setJSONGraphs","jsonGraphEnvelopes","errorSelector","comparator","requestedPaths","optimizedPaths","jsonGraphEnvelopeIndex","jsonGraphEnvelopeCount","jsonGraphEnvelope","paths","jsonGraph","pathIndex","pathCount","setJSONGraphPathSet","root","messageRoot","messageParent","note","branch","keySet","optimizedIndex","setNode","nextNode","nextParent","nextOptimizedPath","slice","done","setReference","nodeArg","optimizedPathArg","reference","container","parentArg","messageParentArg","messageArg","isInternalKey","mergeValueOrInsertBranch","setPathMaps","pathMapEnvelopes","bound","pathMapIndex","pathMapCount","pathMapEnvelope","setPathMap","pathMap","getKeys","keyIndex","keyCount","child","itr","f_","regexp","RegExp","test","bind","flatBufferToPaths","leaf","keysLen","keysIndex","len","keyset","concat","getHashCode","str","hash","i","charCodeAt","initializeNote","nextValue","loaded","rangeOffset","arrayOffset","idx","el","initializeRange","empty","memo","inlineJSONGraphValue","restPathIndex","restPathCount","restPath","isEmptyKeySet","mPath","lastKeyIsNull","isRequestedPath","missDepth","missTotal","missingPath","missingPaths","Number","requested","missing","rangeEnd","invalidatePathSets","invalidatePathSet","invalidateNode","invalidateReference","lruSplice","unlinkBackReferences","unlinkForwardReference","key2","setPathValues","pathValues","pathValueIndex","pathValueCount","pathValue","setPathSet","ref","n","getTimestamp","$timestamp","toPaths","toCollapseMap","toCollapseTrees","collapse","pathsArg","collapseMapArg","collapseMap","$keys","partitionPathsByLength","toTree","pathsByLength","treesByPathLengthArg","pathLengths","pathLength","pathLengthsIndex","pathLengthsCount","treesByPathLength","typeOfObject","typeOfString","typeOfNumber","MAX_SAFE_INTEGER","MAX_SAFE_INTEGER_DIGITS","MIN_SAFE_INTEGER_DIGITS","abs","Math","safeNumberRegEx","materializedAtom","lengths","pathmap","allPaths","allPathsLength","isSafeNumber","collapsePathMap","parseInt","sets","pathsIndex","pathsCount","collapsePathSetIndexes","subs","code","codes","codesIndex","codesCount","pathsets","pathsetsCount","subPath","subCode","subKeys","subKeysIndex","subKeysCount","subSets","subSetsIndex","subSetsCount","pathset","pathsetIndex","pathsetCount","firstSubKey","pathsetClone","getSortedKeys","keysetIndex","keysetCount","collapseIndex","isSparseRange","sort","sortListAscending","a","b","map","val","num","_isSafeNumber","walkPathAndBuildOutput","walkFlatBufferAndBuildOutput","InvalidModelError","toFlatBuffer","computeFlatBufferHash","getJSON","progressive","referenceContainer","boundPath","_referenceContainer","isFlatBuffer","_boxed","recycleJSON","_recycleJSON","hasDataSource","Boolean","_source","_materialized","_treatErrorsAsValues","allowFromWhenceYouCame","_allowFromWhenceYouCame","args","data","relative","boundRequested","promote","CircularReferenceError","getReferenceTarget","refArg","context","copy","onJSONValue","$error","BoundJSONGraphModelError","getJSONGraph","InvalidKeySetError","jsonArg","refTarget","nextKey","keyIsRange","nextDepth","keysetLength","iteratingKeyset","isPathValue","isJSONEnvelope","isJSONGraphEnvelope","groupCacheArguments","groups","argIndex","argCount","group","groupType","arg","argType","inputType","insertNode","invalidatePathMaps","_comparator","invalidatePathMap","getType","wrapNode","replaceNode","reconstructPath","cType","isDistinct","mType","sizeOffset","currentPath","transferBackReferences","replacement","getExpires","expiresNow","atomSize","typeArg","size","modelCreated","expires","referencePath","$$observable","default","Source","subscribe","source","operator","y","then","_promise","resolve","reject","values","rejected","errors","ImmediateScheduler","schedule","action","envelope","jsong","Date","Model","falcor","opts","keysLength","hasIntersection","tree","intersects","nullBuffer","pathToFlatBuffer","keysMap","pathToTree","Call","ModelRoot","ModelDataSourceAdapter","TimeoutScheduler","setCache","getCache","options","_scheduler","scheduler","_seed","boxed","_toJSON","set","preload","invalidate","deref","_hasValidParentReference","getValue","lift","subscriber","setValue","modelSetCache","cacheOrJSONGraphEnvelope","rootOnChangeHandler","onChange","topLevelModel","_getCache","env","getVersion","_getVersion","_clone","cloneModel","batch","schedulerOrDelay","round","scheudle","unbatch","asDataSource","_materialize","materialize","_dematerialize","dematerialize","unboxValues","withoutDataSource","inspect","join","getPath","_fromWhenceYouCame","fromWhenceYouCame","allow","_optimizePath","_getPathValuesAsPathMap","_getPathValuesAsJSONG","_setPathValues","_setPathMaps","_setJSONGs","_setCache","_invalidatePathValues","_invalidatePathMaps","_model","pathSets","_toJSONG","jsongResponse","suffixes","functionTypeof","Requests","o","syncRefCount","maxRetryCount","requests","collectRatio","maxSize","pow","onChangesCompleted","defaultCompare","_args","thisPaths","fragments","errorPath","errorValue","originalOnMissing","fromReferenceArg","f_old_keys","f_new_keys","f_code","nodeAbsPath","jsonAbsPath","nextJSON","nextReferenceContainer","nextOptimizedLength","optimizedLengthNext","refContainerAbsPath","refContainerRefPath","arrayEqual","nextPath","nextPathKey","hasMissingPath","tmp","rPath","forEach","inlineValue","onJSONGraphValue","$ref","isLeaf","onMaterializeFlatBuffer","getCacheInternal","invalidatePathValues","invalidateArgumentGroups","rootChangeHandler","changed","groupIndex","groupCount","groupedArgs","pluckPaths","operation","cIsObject","mIsObject","cTimestamp","mTimestamp","optimized","setGroupsIntoCache","expireImmediate_","arrayFlatMap","array","selector","array2","array3","j","k","fromNode","destNode","fromNodeRefsLength","destNodeRefsLength","hasValidParentReference","CONTAINER_DOES_NOT_EXIST","InvalidDerefInputError","cacheRoot","absolutePath","currentRefPath","originalRefPath","originalAbsPath","cacheNode","validContainer","shortedPath","absolute","printPaths","String","fromCharCode","collect","totalArg","max","ratioArg","ratio","targetSize","lruCollect","InvalidSourceError","MaxRetryExceededError","_subscribe","dataArg","CallOperator","retry","progresive","progressively","CallSubscriber","request","started","retryCount","errored","completed","operations","seedIsImmutable","tryOnError","mergeInto","tryOnNext","shouldCollectCache","rootOnChangesCompletedHandler","e","self","err","destValue","nodeValue","Request","Queue","isolateSet","isolateCall","batchAndDedupeGet","queue","connect","callArgs","Dedupe","dataSource","requestsIndex","requestsCount","Subject","invalidatePaths","trees","active","responded","disposable","invalidated","observers","observer","filterPathsBoundTo","errorPathValues","scheduledDisposable","flush","requestedComplements","optimizedComplements","requestedIntersection","optimizedIntersection","findIntersections","obs","complementIndex","reqComplementsIdx","intersectionIndex","reqIntersectionIdx","treesLength","optTotal","reqTotal","toNextPath","treesIndex","pathLen","subTree","boundLength","filtered","filteredIndex","outer","delay","TimerDisposable","id","disposed","setTimeout","clearTimeout","anyType"],"mappings":"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","file":"falcor.all.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"falcor\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"falcor\"] = factory();\n\telse\n\t\troot[\"falcor\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 107);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7ca7d74837d04b5e0637","var now = require('../support/now');\nvar $now = require('../values/expires-now');\nvar $never = require('../values/expires-never');\n\nmodule.exports = isExpired;\n\nfunction isExpired(node, expireImmediate) {\n    var exp = node.$expires;\n    if (exp === undefined || exp === null || exp === $never) {\n        return false;\n    } else if (exp === $now) {\n        return expireImmediate;\n    }\n    return exp < now();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/isExpired.js","var isInternal = require('../internal/isInternal');\n\nmodule.exports = clone;\n\nfunction clone(node) {\n\n    var key, keys = Object.keys(node),\n        json = {}, index = -1, length = keys.length;\n\n    while (++index < length) {\n        key = keys[index];\n        if (key !== '$size' && !isInternal(key)) {\n            json[key] = node[key];\n        }\n    }\n\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/clone.js","var splice = require('./../lru/splice');\n\nmodule.exports = expireNode;\n\nfunction expireNode(node, expired, lru) {\n    if (!node[f_invalidated]) {\n        node[f_invalidated] = true;\n        expired.push(node);\n        splice(lru, node);\n    }\n    return node;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/expireNode.js","function FalcorJSON(f_meta) {\n    if (!f_meta) {\n        this[f_meta_data] = {};\n    } else if (!(this[f_meta_data] = f_meta[f_meta_data])) {\n        this[f_meta_data] = f_meta;\n    }\n}\n\nvar protoBlacklist = {\n    length: true,\n    toString: true,\n    constructor: true,\n    toLocaleString: true\n};\n\nvar protoDescriptors = {\n    toJSON: { enumerable: false, value: toJSON },\n    toProps: { enumerable: false, value: toProps },\n    toString: { enumerable: false, value: toString },\n    toLocaleString: { enumerable: false, value: toString },\n    $__hash: {\n        enumerable: false,\n        get: function() {\n            var f_meta = this[f_meta_data];\n            return f_meta && f_meta['$code'] || '';\n        }\n    },\n    $__path: {\n        enumerable: false,\n        get: function() {\n            var f_meta = this[f_meta_data];\n            return f_meta && f_meta[f_meta_abs_path] || [];\n        }\n    },\n    $__status: {\n        enumerable: false,\n        get: function() {\n            var f_meta = this[f_meta_data];\n            return f_meta && f_meta[f_meta_status] || 'resolved';\n        }\n    },\n    $__version: {\n        enumerable: false,\n        get: function() {\n            var f_meta = this[f_meta_data];\n            return f_meta && f_meta[f_meta_version] || 0;\n        }\n    }\n};\n\nObject.defineProperties(FalcorJSON.prototype, Object\n    .getOwnPropertyNames(Array.prototype)\n    .reduce(function (descriptors, name) {\n        if (!protoBlacklist.hasOwnProperty(name)) {\n            var fn = Array.prototype[name];\n            if (typeof fn === 'function') {\n                descriptors[name] = {\n                    value: bindArrayMethod(fn),\n                    writable: true, enumerable: false\n                };\n            }\n        }\n        return descriptors;\n    }, protoDescriptors)\n);\n\nfunction bindArrayMethod(fn) {\n    return function() {\n        var node = this, json = node, atom = node.length, length = atom, type;\n        // If length isn't a number, an $atom with a numeric `value`, or if the\n        // unboxed length isn't a valid Array length, bail early.\n        // If we're still waiting on pending updates, return an empty Array.\n        // Otherwise, throw a RangeError.\n        if ((type = typeof atom) !== 'number' && (!atom ||\n              type !== 'object' || atom.$type !== $atom ||\n              typeof (length = atom.value) !== 'number')||\n            length < 0 || length !== (length | 0)) {\n            if (node.$__status === 'pending') {\n                return [];\n            }\n            throw new RangeError('Invalid FalcorJSON length');\n        }\n        // Temporarily set length to the unboxed length, call the bound Array\n        // method, then reset the length back to the boxed value. This is\n        // necessary because a few Array methods (like sort) operate on the\n        // Array in-place, so we can't pass a sliced copy of this instance to\n        // the bound Array method. Do this even when the length isn't boxed, so\n        // if calling the bound Array method writes to length, it's reset to the\n        // value in the cache.\n        node.length = length;\n        json = fn.apply(node, arguments);\n        node.length = atom;\n        return json;\n    }\n}\n\nvar isArray = Array.isArray;\n\nfunction getInst(x) {\n    var inst = x;\n    var typeofInst = typeof inst;\n    var argsLen = arguments.length;\n    if (argsLen === 0) {\n        inst = this;\n    } else if (typeofInst !== 'string') {\n        if (!inst || typeofInst !== 'object') {\n            return inst;\n        }\n    } else if (argsLen !== 1) {\n        return inst;\n    } else {\n        inst = this;\n    }\n    return inst === global ? undefined : inst;\n}\n\nfunction toJSON() {\n    return serialize(getInst.apply(this, arguments), toJSON);\n}\n\nfunction toString(includeMetadata, includeStatus) {\n    return JSON.stringify(serialize(\n        getInst.call(this, this),\n        serialize,\n        includeMetadata === true,\n        false, includeStatus === true\n    ));\n}\n\nfunction toProps(x) {\n\n    var inst = getInst.apply(this, arguments);\n    var f_meta_inst, f_meta_json, version = 0;\n    var json = serialize(inst, toProps, true, true);\n\n    if (inst && (f_meta_inst = inst[f_meta_data])) {\n        version = f_meta_inst[f_meta_version];\n    }\n\n    if (!(!json || typeof json !== 'object')) {\n        if (f_meta_json = json[f_meta_data]) {\n            f_meta_json[f_meta_version] = version;\n        }\n    }\n\n    return json;\n}\n\nfunction serialize(inst, serializer, includeMetadata, createWithProto, includeStatus) {\n\n    if (!inst || typeof inst !== 'object') {\n        return inst;\n    }\n\n    var count, total, f_meta, keys, key, xs, ys;\n\n    if (isArray(inst)) {\n        xs = inst;\n    } else {\n\n        count = -1;\n        keys = Object.keys(inst);\n        total = keys.length;\n        xs = {};\n\n        if (createWithProto) {\n            xs.__proto__ = FalcorJSON.prototype;\n        }\n\n        if (includeMetadata && (f_meta = inst[f_meta_data])) {\n\n            var $code = f_meta['$code'];\n            var status = f_meta[f_meta_status];\n            var abs_path = f_meta[f_meta_abs_path];\n            var deref_to = f_meta[f_meta_deref_to];\n            var deref_from = f_meta[f_meta_deref_from];\n\n            f_meta = {};\n            $code && (f_meta['$code'] = $code);\n            abs_path && (f_meta[f_meta_abs_path] = abs_path);\n            deref_to && (f_meta[f_meta_deref_to] = deref_to);\n            deref_from && (f_meta[f_meta_deref_from] = deref_from);\n            includeStatus && status && (f_meta[f_meta_status] = status);\n\n            xs[f_meta_data] = f_meta;\n\n            if (createWithProto) {\n                ys = {};\n                ys.__proto__ = xs;\n                xs = ys;\n            }\n        }\n\n        while (++count < total) {\n            if ((key = keys[count]) !== f_meta_data) {\n                xs[key] = serializer(inst[key], serializer, includeMetadata, createWithProto, includeStatus);\n            }\n        }\n    }\n\n    return xs;\n}\n\nmodule.exports = FalcorJSON;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/FalcorJSON.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = '`null` is not allowed in branch key positions.';\n\n/**\n * Do not allow null in path.\n */\nmodule.exports = createErrorClass('NullInPathError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/NullInPathError.js","module.exports = createErrorClass;\n\nfunction createErrorClass(name, init) {\n    function E(message) {\n        this.message = message;\n        init && init.apply(this, arguments);\n        if (!Error.captureStackTrace) {\n            this.stack = (new Error()).stack;\n        } else {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n    E.prototype = Object.create(Error.prototype);\n    E.prototype.name = name;\n    E.prototype.constructor = E;\n    E.is = function(x) { return x.name === name; };\n    return E;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/createErrorClass.js","module.exports = isObject;\n\nfunction isObject(value) {\n    return value !== null && typeof value === 'object';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isObject.js","module.exports = createHardlink;\n\nfunction createHardlink(from, to) {\n\n    // create a back reference\n    var backRefs = to[f_refs_length] || 0;\n    to[f_ref + backRefs] = from;\n    to[f_refs_length] = backRefs + 1;\n\n    // create a hard reference\n    from[f_ref_index] = backRefs;\n    from[f_context] = to;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/createHardlink.js","module.exports = { $type: 'atom' };\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/support/materializedAtom.js","var isObject = require('./../support/isObject');\nmodule.exports = getSize;\n\nfunction getSize(node) {\n    return isObject(node) && node.$size || 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getSize.js","/**\n * getCachePosition makes a fast walk to the bound value since all bound\n * paths are the most possible optimized path.\n *\n * @param {Model} model -\n * @param {Array} path -\n * @returns {Mixed} - undefined if there is nothing in this position.\n * @private\n */\nmodule.exports = getCachePosition;\n\nfunction getCachePosition(cache, path) {\n\n    var node = cache;\n    var type, depth = 0;\n    var maxDepth = path.length;\n\n    if (maxDepth > 0) {\n        do {\n            node = node[path[depth]];\n\n            while (node && (type = node.$type) === $ref) {\n                node = getCachePosition(cache, node.value);\n            }\n        } while (++depth < maxDepth && node && !type);\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getCachePosition.js","var removeNodeAndDescendants = require('./removeNodeAndDescendants');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = updateNodeAncestors;\n\nfunction updateNodeAncestors(node, offset, lru, version) {\n    var curr = node, next;\n    do {\n        if ((curr.$size = (curr.$size || 0) - offset) > 0) {\n            if (!(next = curr[f_parent])) {\n                curr[f_version] = version;\n            } else if (curr[f_version] !== version) {\n                updateBackReferenceVersions(curr, version);\n            }\n        } else if (next = curr[f_parent]) {\n            removeNodeAndDescendants(curr, next, curr[f_key], lru, version);\n        }\n    } while (curr = next);\n    return node;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/updateNodeAncestors.js","var createErrorClass = require('./createErrorClass');\n\n/**\n * InvalidKeySetError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidKeySetError', function(path, keysOrRanges) {\n    this.mesage = '' +\n        'The KeySet ' + JSON.stringify(keysOrRanges) +\n        ' in path ' + JSON.stringify(path) + ' contains a KeySet. ' +\n        'Keysets can only contain Keys or Ranges';\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidKeySetError.js","var EXPIRES_NEVER = require('./../values/expires-never');\n\nmodule.exports = lruPromote;\n\n// [H] -> Next -> ... -> [T]\n// [T] -> Prev -> ... -> [H]\nfunction lruPromote(lru, node) {\n    // Never promote node.$expires === 1.  They cannot expire.\n    if (node.$expires === EXPIRES_NEVER) {\n        return;\n    }\n\n    var head = lru[f_head];\n\n    // Nothing is in the cache.\n    if (!head) {\n        lru[f_head] = lru[f_tail] = node;\n        return;\n    }\n\n    if (head === node) {\n        return;\n    }\n\n    // The item always exist in the cache since to get anything in the\n    // cache it first must go through set.\n    var prev = node[f_prev];\n    var next = node[f_next];\n    if (next) {\n        next[f_prev] = prev;\n    }\n    if (prev) {\n        prev[f_next] = next;\n    }\n    node[f_prev] = undefined;\n\n    // Insert into head position\n    lru[f_head] = node;\n    node[f_next] = head;\n    head[f_prev] = node;\n\n    // If the item we promoted was the tail, then set prev to tail.\n    if (node === lru[f_tail]) {\n        lru[f_tail] = prev;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/promote.js","var Subscription = require('./Subscription');\n\nmodule.exports = Subscriber;\n\nfunction Subscriber(destination, parent, onCompleted) {\n    if (typeof destination === 'function' ||\n             typeof parent === 'function' ||\n        typeof onCompleted === 'function') {\n        Subscription.call(this, []);\n        this.destination = {\n            error: parent,\n            onError: parent,\n            next: destination,\n            onNext: destination,\n            complete: onCompleted,\n            onCompleted: onCompleted\n        }\n    } else {\n        Subscription.call(this, [], parent);\n        this.parent = parent;\n        this.destination = destination;\n    }\n}\n\nSubscriber.prototype = Object.create(Subscription.prototype);\n\nSubscriber.prototype.next =\nSubscriber.prototype.onNext = function onNext(value) {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onNext) {\n            dest.onNext(value);\n        } else if (dest.next) {\n            dest.next(value);\n        }\n    }\n}\n\nSubscriber.prototype.error =\nSubscriber.prototype.onError = function onError(error) {\n    var signaled = false;\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onError) {\n            signaled = true;\n            dest.onError(error);\n        } else if (dest.error) {\n            signaled = true;\n            dest.error(error);\n        }\n        this.dispose();\n    }\n    if (!signaled) {\n        throw error;\n    }\n}\n\nSubscriber.prototype.complete =\nSubscriber.prototype.onCompleted = function onCompleted() {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onCompleted) {\n            dest.onCompleted();\n        } else if (dest.complete) {\n            dest.complete();\n        }\n        this.dispose();\n    }\n}\n\nSubscriber.prototype.dispose =\nSubscriber.prototype.unsubscribe = function () {\n    this.destination = null;\n    Subscription.prototype.dispose.call(this);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subscriber.js","module.exports = Subscription;\n\nfunction Subscription(subscriptions, parent) {\n    this.parent = parent;\n    this.subscriptions = subscriptions || [];\n}\n\nSubscription.prototype.add = function(subscription) {\n    return this.subscriptions.push(subscription) && this || this;\n}\n\nSubscription.prototype.remove = function(subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.subscriptions.splice(index, 1);\n    }\n    return this;\n}\n\nSubscription.prototype.dispose =\nSubscription.prototype.unsubscribe = function () {\n    var subscription, subscriptions = this.subscriptions;\n    while (subscriptions.length) {\n        (subscription = subscriptions.pop()) &&\n            subscription.dispose &&\n            subscription.dispose();\n    }\n    var parent = this.parent;\n    if (parent) {\n        this.parent = null;\n        parent.remove && parent.remove(this);\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subscription.js","var isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\n\nmodule.exports = onValueType;\n\nfunction onValueType(node, type, json,\n                     path, depth, seed, results,\n                     requestedPath, requestedLength,\n                     optimizedPath, optimizedLength,\n                     fromReference, modelRoot, expired, expireImmediate,\n                     branchSelector, boxValues, materialized, reportMissing,\n                     treatErrorsAsValues, onValue, onMissing, onMaterialize) {\n\n    var _reportMissing = reportMissing;\n    var reportMaterialized = reportMissing;\n\n    if (type) {\n        if (isExpired(node, expireImmediate)) {\n            if (!node[f_invalidated]) {\n                expireNode(node, expired, modelRoot);\n            }\n        } else {\n            lruPromote(modelRoot, node);\n            if (node.value === undefined) {\n                _reportMissing = false;\n                reportMaterialized = materialized;\n            } else {\n                if (seed) {\n                    if (fromReference) {\n                        requestedPath[depth] = null;\n                    }\n                    return onValue(node, type, depth, seed, results,\n                                   requestedPath, optimizedPath, optimizedLength,\n                                   fromReference, boxValues, materialized, treatErrorsAsValues);\n                }\n                return undefined;\n            }\n        }\n    }\n\n    if (materialized) {\n        seed && (results.hasValue = true);\n    } else if (!reportMaterialized) {\n        return undefined;\n    }\n\n    return onMissing(path, depth, results,\n                     requestedPath, requestedLength, fromReference,\n                     optimizedPath, optimizedLength, _reportMissing,\n                     materialized, json, branchSelector,\n                     boxValues, onMaterialize, modelRoot);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onValueType.js","var getCachePosition = require('./getCachePosition');\n\nmodule.exports = getBoundCacheNode;\n\nfunction getBoundCacheNode(model, path) {\n    path = path || model._path;\n    var node = model._node;\n    if (!node || node[f_parent] === undefined || node[f_invalidated]) {\n        model._node = null;\n        if (path.length === 0) {\n            node = model._root.cache;\n        } else {\n            node = getCachePosition(model._root.cache, path);\n            if (path === model._path) {\n                model._node = node;\n            }\n        }\n    }\n    return node;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getBoundCacheNode.js","var arr = new Array(5);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar mergeJSONGraphNode = require('../mergeJSONGraphNode');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\n\n/**\n * Merges a list of {@link JSONGraphEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to merge the {@link JSONGraphEnvelope}s.\n * @param {Array.<PathValue>} jsonGraphEnvelopes - the {@link JSONGraphEnvelope}s to merge.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = setJSONGraphs;\n\nfunction setJSONGraphs(model, jsonGraphEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n\n    var requestedPath = [];\n    var optimizedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var jsonGraphEnvelopeIndex = -1;\n    var jsonGraphEnvelopeCount = jsonGraphEnvelopes.length;\n\n    while (++jsonGraphEnvelopeIndex < jsonGraphEnvelopeCount) {\n\n        var jsonGraphEnvelope = jsonGraphEnvelopes[jsonGraphEnvelopeIndex];\n        var paths = jsonGraphEnvelope.paths;\n        var jsonGraph = jsonGraphEnvelope.jsonGraph;\n\n        var pathIndex = -1;\n        var pathCount = paths.length;\n\n        while (++pathIndex < pathCount) {\n\n            var path = paths[pathIndex];\n            optimizedPath.index = 0;\n\n            setJSONGraphPathSet(\n                path, 0,\n                cache, cache, cache,\n                jsonGraph, jsonGraph, jsonGraph,\n                requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n                version, expired, lru, comparator, errorSelector, expireImmediate\n            );\n        }\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n    arr[3] = undefined;\n    arr[4] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n}\n\n/* eslint-disable no-constant-condition */\nfunction setJSONGraphPathSet(\n    path, depth, root, parent, node,\n    messageRoot, messageParent, message,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n\n        setNode(\n            root, parent, node, messageRoot, messageParent, message,\n            key, branch, false, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = arr[0];\n        var nextParent = arr[1];\n        var nextOptimizedPath = arr[4];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setJSONGraphPathSet(\n                    path, depth + 1, root, nextParent, nextNode,\n                    messageRoot, arr[3], arr[2],\n                    requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                    version, expired, lru, comparator, errorSelector, expireImmediate\n                );\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(\n    root, nodeArg, messageRoot, message, requestedPath, optimizedPathArg,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var messageParent;\n    var node = nodeArg;\n    var reference = node.value;\n    var optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        messageParent = messageRoot;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var index = 0;\n        var container = node;\n        var count = reference.length - 1;\n        parent = node = root;\n        messageParent = message = messageRoot;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            optimizedPath.index = index;\n\n            setNode(\n                root, parent, node, messageRoot, messageParent, message,\n                key, branch, true, requestedPath, optimizedPath, version,\n                expired, lru, comparator, errorSelector, expireImmediate\n            );\n            node = arr[0];\n            optimizedPath = arr[4];\n            if (!node || typeof node !== 'object') {\n                optimizedPath.index = index;\n                return;\n            }\n            parent = arr[1];\n            message = arr[2];\n            messageParent = arr[3];\n        } while (index++ < count);\n\n        optimizedPath.index = index;\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n}\n\nfunction setNode(\n    root, parentArg, nodeArg, messageRoot, messageParentArg, messageArg,\n    key, branch, reference, requestedPath, optimizedPathArg, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var node = nodeArg;\n    var type = node.$type;\n    var parent = parentArg;\n    var message = messageArg;\n    var optimizedPath = optimizedPathArg;\n    var messageParent = messageParentArg;\n\n    while (type === $ref) {\n\n        setReference(\n            root, node, messageRoot, message, requestedPath, optimizedPath,\n            version, expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        node = arr[0];\n\n        if (!node || typeof node !== 'object') {\n            return;\n        }\n\n        parent = arr[1];\n        message = arr[2];\n        messageParent = arr[3];\n        optimizedPath = arr[4];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            messageParent = message;\n            node = parent[key];\n            message = messageParent && messageParent[key];\n        }\n\n        node = mergeJSONGraphNode(\n            parent, node, message, key, requestedPath, optimizedPath,\n            version, expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setJSONGraphs.js","var arr = new Array(3);\nvar isArray = Array.isArray;\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar getCachePosition = require('../getCachePosition');\nvar isInternalKey = require('../../support/isInternalKey');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar mergeValueOrInsertBranch = require('../mergeValueOrInsertBranch');\n\n/**\n * Sets a list of {@link PathMapEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of {@link PathMapEnvelope}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = setPathMaps;\n\nfunction setPathMaps(model, pathMapEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[f_parent] || cache;\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathMapIndex = -1;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathMap(\n            pathMapEnvelope.json, 0, cache, parent, node,\n            requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n            version, expired, modelRoot, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n}\n\n/* eslint-disable no-constant-condition */\nfunction setPathMap(\n    pathMap, depth, root, parent, node,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var keys = getKeys(pathMap);\n\n    if (keys && keys.length) {\n\n        var keyIndex = 0;\n        var keyCount = keys.length;\n        var optimizedIndex = optimizedPath.index;\n\n        do {\n            var key = keys[keyIndex];\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n\n            requestedPath.depth = depth;\n\n            setNode(\n                root, parent, node, key, child,\n                branch, false, requestedPath, optimizedPath, version,\n                expired, lru, comparator, errorSelector, expireImmediate\n            );\n\n            requestedPath[depth] = key;\n            requestedPath.index = depth;\n\n            var nextNode = arr[0];\n            var nextParent = arr[1];\n            var nextOptimizedPath = arr[2];\n            nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n            if (nextNode) {\n                if (branch) {\n                    setPathMap(\n                        child, depth + 1,\n                        root, nextParent, nextNode,\n                        requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                        version, expired, lru, comparator, errorSelector, expireImmediate\n                    );\n                } else {\n                    requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                    optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n                }\n            }\n            if (++keyIndex >= keyCount) {\n                break;\n            }\n            optimizedPath.index = optimizedIndex;\n        } while (true);\n    }\n}\n/* eslint-enable */\n\nfunction setReference(\n    value, root, nodeArg, requestedPath, optimizedPathArg, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var node = nodeArg;\n    var reference = node.value;\n    var optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n        var container = node;\n        parent = root;\n\n        node = node[f_context];\n\n        if (node != null) {\n            parent = node[f_parent] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n            optimizedPath.index = index;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                var results = setNode(\n                    root, parent, node, key, value,\n                    branch, true, requestedPath, optimizedPath, version,\n                    expired, lru, comparator, errorSelector, expireImmediate\n                );\n                node = arr[0];\n                optimizedPath = arr[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return;\n                }\n                parent = arr[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[f_context] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n}\n\nfunction setNode(\n    root, parentArg, nodeArg, key, value,\n    branch, reference, requestedPath, optimizedPathArg, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var node = nodeArg;\n    var type = node.$type;\n    var parent = parentArg;\n    var optimizedPath = optimizedPathArg;\n\n    while (type === $ref) {\n\n        setReference(\n            value, root, node, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = arr[0];\n\n        if (!node || typeof node !== 'object') {\n            return;\n        }\n\n        parent = arr[1];\n        optimizedPath = arr[2];\n        type = node && node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(\n            parent, node, key, value,\n            branch, reference, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n}\n\nfunction getKeys(pathMap) {\n\n    if (!(!pathMap || typeof pathMap !== 'object') && !pathMap.$type) {\n        var keys = [];\n        var itr = 0;\n        if (isArray(pathMap)) {\n            keys[itr++] = 'length';\n        }\n        for (var key in pathMap) {\n            if (isInternalKey(key)) {\n                continue;\n            }\n            keys[itr++] = key;\n        }\n        return keys;\n    }\n\n    return undefined;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setPathMaps.js","/**\n * Determined if the key passed in is an f_ internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nvar f_ = require('./f_');\nvar regexp = new RegExp('^' + f_, 'i', 'g');\n\nmodule.exports = regexp.test.bind(regexp);\n\n\n\n// WEBPACK FOOTER //\n// ./lib/internal/isInternal.js","module.exports = flatBufferToPaths;\n\nfunction flatBufferToPaths(seed, paths, path) {\n\n    path = path || [];\n    paths = paths || [];\n\n    if (!seed) {\n        return paths;\n    }\n\n    var leaf = [];\n    var keys = seed['$keys'];\n    var keysLen = keys.length;\n    var keysIndex = -1, key, len;\n\n    while (++keysIndex < keysLen) {\n\n        var next = seed[keysIndex];\n        var keyset = keys[keysIndex];\n\n        if (!next || typeof next !== 'object') {\n            leaf.push(keyset);\n        } else {\n            flatBufferToPaths(next, paths, path.concat([keyset]));\n        }\n    }\n\n    if (leaf.length === 1) {\n        paths.push(path.concat(leaf));\n    } else if (leaf.length > 1) {\n        paths.push(path.concat([leaf]));\n    }\n\n    return paths;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/flatBufferToPaths.js","module.exports = getHashCode;\n\nfunction getHashCode(str) {\n    var hash = 5381, i = str.length;\n    while (i) {\n        hash = (hash * 33) ^ str.charCodeAt(--i);\n    }\n    // JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n    // integers. Since we want the results to be always positive, convert the\n    // signed int to an unsigned by doing an unsigned bitshift.\n    return hash >>> 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/getHashCode.js","var isArray = Array.isArray;\n\n/**\n * Takes in a keySet and a note attempts to iterate over it.\n * If the value is a primitive, the key will be returned and the note will\n * be marked done\n * If the value is an object, then each value of the range will be returned\n * and when finished the note will be marked done.\n * If the value is an array, each value will be iterated over, if any of the\n * inner values are ranges, those will be iterated over.  When fully done,\n * the note will be marked done.\n *\n * @param {Object|Array|String|Number} keySet -\n * @param {Object} note - The non filled note\n * @returns {String|Number|undefined} - The current iteration value.\n * If undefined, then the keySet is empty\n * @public\n */\nmodule.exports = function iterateKeySet(keySet, note) {\n    if (note.isArray === undefined) {\n        initializeNote(keySet, note);\n    }\n\n    // Array iteration\n    if (note.isArray) {\n        var nextValue;\n\n        // Cycle through the array and pluck out the next value.\n        do {\n            if (note.loaded && note.rangeOffset > note.to) {\n                ++note.arrayOffset;\n                note.loaded = false;\n            }\n\n            var idx = note.arrayOffset, length = keySet.length;\n            if (idx >= length) {\n                note.done = true;\n                break;\n            }\n\n            var el = keySet[note.arrayOffset];\n            var type = typeof el;\n\n            // Inner range iteration.\n            if (type === 'object') {\n                if (!note.loaded) {\n                    initializeRange(el, note);\n                }\n\n                // Empty to/from\n                if (note.empty) {\n                    continue;\n                }\n\n                nextValue = note.rangeOffset++;\n            }\n\n            // Primitive iteration in array.\n            else {\n                ++note.arrayOffset;\n                nextValue = el;\n            }\n        } while (nextValue === undefined);\n\n        return nextValue;\n    }\n\n    // Range iteration\n    else if (note.isObject) {\n        if (!note.loaded) {\n            initializeRange(keySet, note);\n        }\n        if (note.rangeOffset > note.to) {\n            note.done = true;\n            return undefined;\n        }\n\n        return note.rangeOffset++;\n    }\n\n    // Primitive value\n    else {\n        note.done = true;\n        return keySet;\n    }\n};\n\nfunction initializeRange(key, memo) {\n    var from = memo.from = key.from || 0;\n    var to = memo.to = key.to ||\n        (typeof key.length === 'number' &&\n        memo.from + key.length - 1 || 0);\n    memo.rangeOffset = memo.from;\n    memo.loaded = true;\n    if (from > to) {\n        memo.empty = true;\n    }\n}\n\nfunction initializeNote(key, note) {\n    note.done = false;\n    var isObject = note.isObject = !!(key && typeof key === 'object');\n    note.isArray = isObject && isArray(key);\n    note.arrayOffset = 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/iterateKeySet.js","module.exports = require('./getJSON');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/index.js","module.exports = require('./getJSONGraph');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/index.js","module.exports = inlineJSONGraphValue;\n\n/* eslint-disable no-constant-condition */\nfunction inlineJSONGraphValue(node, path, length, seed, branch) {\n\n    var key, depth = 0, prev,\n        curr = seed.jsonGraph;\n\n    if (!curr) {\n        seed.jsonGraph = curr = {};\n    }\n\n    do {\n        prev = curr;\n        key = path[depth++];\n        if (depth >= length) {\n            curr = prev[key] = branch !== true ? node : prev[key] || {};\n            break;\n        }\n        curr = prev[key] || (prev[key] = {});\n    } while (true);\n\n    return curr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/inlineValue.js","var isArray = Array.isArray;\n\nmodule.exports = onMissing;\n\n/* eslint-disable no-constant-condition */\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, json, branchSelector,\n                   boxValues, onMaterialize, modelRoot) {\n\n    if (!reportMissing && !reportMaterialized) {\n        return;\n    }\n\n    var keyset,\n        restPathIndex = -1,\n        restPathCount = requestedLength - depth,\n        restPath = restPathCount && new Array(restPathCount) || undefined;\n\n    while (++restPathIndex < restPathCount) {\n        keyset = path[restPathIndex + depth];\n        if (isEmptyKeySet(keyset)) {\n            return;\n        }\n        restPath[restPathIndex] = keyset;\n    }\n\n    var index, count, mPath;\n    var lastKeyIsNull = keyset === null;\n    var isRequestedPath = reportMissing;\n    var missDepth, missTotal, missingPath, missingPaths;\n\n    if (!reportMissing) {\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } else {\n        missDepth = depth;\n        missTotal = requestedLength;\n        missingPath = requestedPath;\n        missingPaths = results.requested || (results.requested = []);\n    }\n\n    do {\n        if (restPathCount < requestedLength || !isRequestedPath) {\n            index = -1;\n            count = missDepth;\n            mPath = new Array(missTotal);\n            while (++index < count) {\n                mPath[index] = missingPath[index];\n            }\n            restPathIndex = -1;\n            while (index < missTotal) {\n                mPath[index++] = restPath[++restPathIndex];\n            }\n        }\n\n        // break after inserting both requested and optimized missing paths\n        if (isRequestedPath = !isRequestedPath) {\n            if (reportMissing) {\n                missingPaths[missingPaths.length] = mPath;\n            }\n            break;\n        }\n\n        missingPaths[missingPaths.length] = mPath || restPath;\n\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missingPaths = results.missing || (results.missing = []);\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } while (true);\n\n    if (reportMaterialized) {\n        return onMaterialize(json, mPath, missDepth, missTotal, branchSelector, boxValues, modelRoot);\n    }\n}\n/* eslint-enable */\n\nfunction isEmptyKeySet(keyset) {\n\n    // false if the keyset is a primitive\n    if ('object' !== typeof keyset) {\n        return false;\n    } else if (keyset === null) {\n        return false;\n    }\n\n    if (isArray(keyset)) {\n        // return true if the keyset is an empty array\n        return keyset.length === 0;\n    }\n\n    var rangeEnd = keyset.to,\n        from = keyset.from || 0;\n    if ('number' !== typeof rangeEnd) {\n        rangeEnd = from + (keyset.length || 0);\n    }\n\n    // false if trying to request incorrect or empty ranges\n    // e.g. { from: 10, to: 0 } or { from: 5, length: 0 }\n    return from >= rangeEnd;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMissing.js","var arr = new Array(2);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\nvar getSize = require('../../support/getSize');\nvar createHardlink = require('../createHardlink');\nvar getBoundCacheNode = require('../getBoundCacheNode');\nvar updateNodeAncestors = require('../updateNodeAncestors');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\n\n/**\n * Invalidates a list of Paths in a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathValues.\n * @param {Array.<PathValue>} paths - the PathValues to set.\n */\n\nmodule.exports = invalidatePathSets;\n\nfunction invalidatePathSets(model, paths, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n\n    if (!node) {\n        return false;\n    }\n\n    var pathIndex = -1;\n    var pathCount = paths.length;\n    var parent = node[f_parent] || cache;\n\n    while (++pathIndex < pathCount) {\n\n        var path = paths[pathIndex];\n\n        invalidatePathSet(\n            path, 0, cache, parent, node,\n            version, expired, lru, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return true;\n    }\n\n    return false;\n}\n\nfunction invalidatePathSet(\n    path, depth, root, parent, node,\n    version, expired, lru, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n\n    do {\n        invalidateNode(\n            root, parent, node,\n            key, branch, false, version,\n            expired, lru, expireImmediate\n        );\n        var nextNode = arr[0];\n        var nextParent = arr[1];\n        if (nextNode) {\n            if (branch) {\n                invalidatePathSet(\n                    path, depth + 1,\n                    root, nextParent, nextNode,\n                    version, expired, lru, expireImmediate\n                );\n            } else {\n                updateNodeAncestors(nextNode, getSize(nextNode), lru, version);\n            }\n        }\n        key = iterateKeySet(keySet, note);\n    } while (!note.done);\n}\n\nfunction invalidateReference(root, nodeArg, version, expired, lru, expireImmediate) {\n\n    var node = nodeArg;\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[f_context];\n\n    if (node != null) {\n        parent = node[f_parent] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            invalidateNode(\n                root, parent, node,\n                key, branch, true, version,\n                expired, lru, expireImmediate\n            );\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n}\n\nfunction invalidateNode(\n    root, parentArg, nodeArg,\n    key, branch, reference, version,\n    expired, lru, expireImmediate) {\n\n    var node = nodeArg;\n    var parent = parentArg;\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        invalidateReference(root, node, version, expired, lru, expireImmediate);\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new Error('`null` is not allowed in branch key positions.');\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/invalidatePathSets.js","var lruSplice = require('../lru/splice');\nvar isInternalKey = require('../support/isInternalKey');\nvar unlinkBackReferences = require('./unlinkBackReferences');\nvar unlinkForwardReference = require('./unlinkForwardReference');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = removeNodeAndDescendants;\n\nfunction removeNodeAndDescendants(node, parent, key, lru, version) {\n    if (!(!node || typeof node !== 'object')) {\n        var type = node.$type;\n        if (type === undefined) {\n            for (var key2 in node) {\n                if (!isInternalKey(key2)) {\n                    removeNodeAndDescendants(node[key2], node, key2, lru, version);\n                }\n            }\n        } else {\n            if (type === $ref) {\n                unlinkForwardReference(node);\n            }\n            lruSplice(lru, node);\n        }\n        unlinkBackReferences(updateBackReferenceVersions(node, version));\n        parent[key] = node[f_parent] = undefined;\n        return true;\n    }\n    return false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/removeNodeAndDescendants.js","var arr = new Array(3);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar getCachePosition = require('../getCachePosition');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\nvar mergeValueOrInsertBranch = require('../mergeValueOrInsertBranch');\n\n/**\n * Sets a list of {@link PathValue}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the {@link PathValue}s.\n * @param {Array.<PathValue>} pathValues - the list of {@link PathValue}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = setPathValues;\n\nfunction setPathValues(model, pathValues, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[f_parent] || cache;\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathValueIndex = -1;\n    var pathValueCount = pathValues.length;\n\n    while (++pathValueIndex < pathValueCount) {\n\n        var pathValue = pathValues[pathValueIndex];\n        var path = pathValue.path;\n        var value = pathValue.value;\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathSet(\n            value, path, 0, cache, parent, node,\n            requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n            version, expired, modelRoot, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n}\n\n/* eslint-disable no-constant-condition */\nfunction setPathSet(\n    value, path, depth, root, parent, node,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        setNode(\n            root, parent, node, key, value,\n            branch, false, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = arr[0];\n        var nextParent = arr[1];\n        var nextOptimizedPath = arr[2];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setPathSet(\n                    value, path, depth + 1,\n                    root, nextParent, nextNode,\n                    requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                    version, expired, lru, comparator, errorSelector, expireImmediate\n                );\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(\n    value, root, nodeArg, requestedPath, optimizedPathArg, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var node = nodeArg;\n    var reference = node.value;\n    var optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var container = node;\n        parent = root;\n\n        node = node[f_context];\n\n        if (node != null) {\n            parent = node[f_parent] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                optimizedPath.index = index;\n\n                setNode(\n                    root, parent, node, key, value,\n                    branch, true, requestedPath, optimizedPath, version,\n                    expired, lru, comparator, errorSelector, expireImmediate\n                );\n                node = arr[0];\n                optimizedPath = arr[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return;\n                }\n                parent = arr[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[f_context] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n}\n\nfunction setNode(\n    root, parentArg, nodeArg, key, value,\n    branch, reference, requestedPath, optimizedPathArg, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var node = nodeArg;\n    var type = node.$type;\n    var parent = parentArg;\n    var optimizedPath = optimizedPathArg;\n\n    while (type === $ref) {\n\n        setReference(\n            value, root, node, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        node = arr[0];\n\n        if (!node || typeof node !== 'object') {\n            return;\n        }\n\n        parent = arr[1];\n        optimizedPath = arr[2];\n        type = node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(\n            parent, node, key, value,\n            branch, reference, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setPathValues.js","module.exports = updateBackReferenceVersions;\n\nfunction updateBackReferenceVersions(nodeArg, version) {\n    var node = nodeArg, stack = [], count = 0, ref, i, n;\n    do {\n        i = -1;\n        ref = node[f_parent];\n        node[f_version] = version;\n        n = node[f_refs_length] || 0;\n        do {\n            if (ref && ref[f_version] !== version) {\n                stack[count++] = ref;\n            }\n            if (++i < n) {\n                ref = node[f_ref + i];\n                continue;\n            }\n            break;\n        } while (true);\n    } while (node = stack[--count]);\n    return nodeArg;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/updateBackReferenceVersions.js","var isObject = require('./../support/isObject');\nmodule.exports = getTimestamp;\n\nfunction getTimestamp(node) {\n    return isObject(node) && node.$timestamp || undefined;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getTimestamp.js","/**\n * Determined if the key passed in is an internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nmodule.exports = isInternalKey;\n\nvar isInternal = require('../internal/isInternal');\n\nfunction isInternalKey(key) {\n    return key && key[0] === '$' || isInternal(key);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isInternalKey.js","module.exports = 0;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/values/expires-now.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 35\n// module chunks = 0","var toPaths = require('./toPaths');\nvar toCollapseMap = require('./toCollapseMap');\nvar toCollapseTrees = require('./toCollapseTrees');\n\nmodule.exports = function collapse(paths) {\n    return toPaths(toCollapseTrees(toCollapseMap(paths)));\n};\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/collapse.js","var isArray = Array.isArray;\nvar flatBufferToPaths = require('./flatBufferToPaths');\n\nmodule.exports = toCollapseMap;\n\nfunction toCollapseMap(pathsArg, collapseMapArg) {\n    var paths = pathsArg, collapseMap = collapseMapArg;\n    if (!collapseMap || typeof collapseMap !== 'object') {\n        collapseMap = {};\n    }\n    if (!paths) {\n        return collapseMap;\n    } else if (!isArray(paths) && isArray(paths.$keys)) {\n        paths = flatBufferToPaths(paths);\n    }\n    return paths.reduce(partitionPathsByLength, collapseMap);\n}\n\nfunction partitionPathsByLength(collapseMap, path) {\n    var length = path.length;\n    var paths = collapseMap[length] || (\n                collapseMap[length] = []);\n    paths[paths.length] = path;\n    return collapseMap;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toCollapseMap.js","var toTree = require('./toTree');\n\nmodule.exports = toCollapseTrees;\n\nfunction toCollapseTrees(pathsByLength, treesByPathLengthArg) {\n\n    var pathLengths = Object.keys(pathsByLength);\n    var pathLength, pathLengthsIndex = -1;\n    var pathLengthsCount = pathLengths.length;\n    var treesByPathLength = treesByPathLengthArg;\n\n    if (!treesByPathLength || typeof treesByPathLength !== 'object') {\n        treesByPathLength = {};\n    }\n\n    while (++pathLengthsIndex < pathLengthsCount) {\n        pathLength = pathLengths[pathLengthsIndex];\n        treesByPathLength[pathLength] = toTree(\n            pathsByLength[pathLength], treesByPathLength[pathLength]\n        );\n    }\n\n    return treesByPathLength;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toCollapseTrees.js","var isArray = Array.isArray;\nvar typeOfObject = 'object';\nvar typeOfString = 'string';\nvar typeOfNumber = 'number';\nvar MAX_SAFE_INTEGER = 9007199254740991; // Number.MAX_SAFE_INTEGER in es6\nvar MAX_SAFE_INTEGER_DIGITS = 16; // String(Number.MAX_SAFE_INTEGER).length\nvar MIN_SAFE_INTEGER_DIGITS = 17; // String(Number.MIN_SAFE_INTEGER).length (including sign)\nvar abs = Math.abs;\nvar safeNumberRegEx = /^(0|(\\-?[1-9][0-9]*))$/;\nvar getHashCode = require('./getHashCode');\nvar materializedAtom = require('./support/materializedAtom');\n\n/* jshint forin: false */\nmodule.exports = function toPaths(lengths) {\n    var pathmap;\n    var allPaths = [];\n    var allPathsLength = 0;\n    for (var length in lengths) {\n        if (isSafeNumber(length) && isObject(pathmap = lengths[length])) {\n            var paths = collapsePathMap(pathmap, 0, parseInt(length, 10)).sets;\n            var pathsIndex = -1;\n            var pathsCount = paths.length;\n            while (++pathsIndex < pathsCount) {\n                allPaths[allPathsLength++] = collapsePathSetIndexes(paths[pathsIndex]);\n            }\n        }\n    }\n    return allPaths;\n};\n\nfunction isObject(value) {\n    return value !== null && typeof value === typeOfObject;\n}\n\nfunction collapsePathMap(pathmap, depth, length) {\n\n    var key;\n    var subs = Object.create(null);\n    var code = '' + getHashCode('' + depth);\n\n    var codes = [];\n    var codesIndex = -1;\n    var codesCount = 0;\n\n    var pathsets = [];\n    var pathsetsCount = 0;\n\n    var subPath, subCode,\n        subKeys, subKeysIndex, subKeysCount,\n        subSets, subSetsIndex, subSetsCount,\n        pathset, pathsetIndex, pathsetCount,\n        firstSubKey, pathsetClone;\n\n    subKeys = [];\n    subKeysIndex = -1;\n\n    if (depth < length - 1) {\n\n        subKeysCount = getSortedKeys(pathmap, subKeys);\n\n        while (++subKeysIndex < subKeysCount) {\n            key = subKeys[subKeysIndex];\n            subPath = collapsePathMap(pathmap[key], depth + 1, length);\n            subCode = subPath.code;\n            if(subs[subCode]) {\n                subPath = subs[subCode];\n            } else {\n                codes[codesCount++] = subCode;\n                subPath = subs[subCode] = {\n                    keys: [],\n                    sets: subPath.sets\n                };\n            }\n            code = '' + getHashCode(code + key + subCode);\n\n            isSafeNumber(key) &&\n                subPath.keys.push(parseInt(key, 10)) ||\n                subPath.keys.push(key);\n        }\n\n        while(++codesIndex < codesCount) {\n\n            key = codes[codesIndex];\n            subPath = subs[key];\n            subKeys = subPath.keys;\n            subKeysCount = subKeys.length;\n\n            if (subKeysCount > 0) {\n\n                subSets = subPath.sets;\n                subSetsIndex = -1;\n                subSetsCount = subSets.length;\n                firstSubKey = subKeys[0];\n\n                while (++subSetsIndex < subSetsCount) {\n\n                    pathset = subSets[subSetsIndex];\n                    pathsetIndex = -1;\n                    pathsetCount = pathset.length;\n                    pathsetClone = new Array(pathsetCount + 1);\n                    pathsetClone[0] = subKeysCount > 1 && subKeys || firstSubKey;\n\n                    while (++pathsetIndex < pathsetCount) {\n                        pathsetClone[pathsetIndex + 1] = pathset[pathsetIndex];\n                    }\n\n                    pathsets[pathsetsCount++] = pathsetClone;\n                }\n            }\n        }\n    } else {\n        subKeysCount = getSortedKeys(pathmap, subKeys);\n        if (subKeysCount > 1) {\n            pathsets[pathsetsCount++] = [subKeys];\n        } else {\n            pathsets[pathsetsCount++] = subKeys;\n        }\n        while (++subKeysIndex < subKeysCount) {\n            code = '' + getHashCode(code + subKeys[subKeysIndex]);\n        }\n    }\n\n    return {\n        code: code,\n        sets: pathsets\n    };\n}\n\nfunction collapsePathSetIndexes(pathset) {\n\n    var keysetIndex = -1;\n    var keysetCount = pathset.length;\n\n    while (++keysetIndex < keysetCount) {\n        var keyset = pathset[keysetIndex];\n        if (isArray(keyset)) {\n            pathset[keysetIndex] = collapseIndex(keyset);\n        }\n    }\n\n    return pathset;\n}\n\n/**\n * Collapse range indexers, e.g. when there is a continuous\n * range in an array, turn it into an object instead:\n *\n * [1,2,3,4,5,6] => {'from':1, 'to':6}\n *\n * @private\n */\nfunction collapseIndex(keyset) {\n\n    // Do we need to dedupe an indexer keyset if they're duplicate consecutive integers?\n    // var hash = {};\n    var keyIndex = -1;\n    var keyCount = keyset.length - 1;\n    var isSparseRange = keyCount > 0;\n\n    while (++keyIndex <= keyCount) {\n\n        var key = keyset[keyIndex];\n\n        if (!isSafeNumber(key) /* || hash[key] === true*/ ) {\n            isSparseRange = false;\n            break;\n        }\n        // hash[key] = true;\n        // Cast number indexes to integers.\n        keyset[keyIndex] = parseInt(key, 10);\n    }\n\n    if (isSparseRange === true) {\n\n        keyset.sort(sortListAscending);\n\n        var from = keyset[0];\n        var to = keyset[keyCount];\n\n        // If we re-introduce deduped integer indexers, change this comparson to '==='.\n        if (to - from <= keyCount) {\n            return { from: from, to: to };\n        }\n    }\n\n    return keyset;\n}\n\nfunction sortListAscending(a, b) {\n    return a - b;\n}\n\n/* jshint forin: false */\nfunction getSortedKeys(map, keys, sort) {\n    var len = 0;\n    if (map === materializedAtom) {\n        keys[len++] = null;\n    } else {\n        for (var key in map) {\n            keys[len++] = key;\n        }\n        if (len > 1) {\n            keys.sort(sort);\n        }\n    }\n    return len;\n}\n\n/**\n * Return true if argument is a number or can be cast to a number which\n * roundtrips to the same string.\n * @private\n */\nfunction isSafeNumber(val) {\n    var num = val;\n    var type = typeof val;\n    if (type === typeOfString) {\n        var length = val.length;\n        // Number.MIN_SAFE_INTEGER is 17 digits including the sign.\n        // Anything longer cannot be safe.\n        if (length === 0 || length > MIN_SAFE_INTEGER_DIGITS) {\n            return false;\n        }\n        if (!safeNumberRegEx.test(val)) {\n            return false;\n        }\n        // Number.MAX_SAFE_INTEGER is 16 digits.\n        // Anything shorter must be safe.\n        if (length < MAX_SAFE_INTEGER_DIGITS) {\n            return true;\n        }\n        num = +val;\n    } else if (type !== typeOfNumber) {\n        return false;\n    }\n    // Number.isSafeInteger(num) in es6.\n    return num % 1 === 0 && abs(num) <= MAX_SAFE_INTEGER;\n}\n\n// export for testing\nmodule.exports._isSafeNumber = isSafeNumber;\n\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toPaths.js","var isArray = Array.isArray;\nvar walkPathAndBuildOutput = require('./walkPath');\nvar walkFlatBufferAndBuildOutput = require('./walkFlatBuffer');\nvar getBoundCacheNode = require('../../getBoundCacheNode');\nvar InvalidModelError = require('../../../errors/InvalidModelError');\nvar toFlatBuffer = require('@graphistry/falcor-path-utils/lib/toFlatBuffer');\nvar computeFlatBufferHash = require('@graphistry/falcor-path-utils/lib/computeFlatBufferHash');\n\nmodule.exports = getJSON;\n\nfunction getJSON(model, pathsArg, seed, progressive, expireImmediate) {\n\n    var node,\n        paths = pathsArg,\n        referenceContainer,\n        boundPath = model._path,\n        modelRoot = model._root,\n        cache = modelRoot.cache,\n        requestedPath, requestedLength,\n        optimizedPath, optimizedLength =\n            boundPath && boundPath.length || 0;\n\n    // If the model is bound, get the cache position.\n    if (optimizedLength) {\n        node = getBoundCacheNode(model);\n        // If there was a short, then we 'throw an error' to the outside\n        // calling function which will onError the observer.\n        if (node && node.$type) {\n            return { error: new InvalidModelError(boundPath, boundPath) };\n        }\n        // We need to get the new cache position and copy the bound path.\n        optimizedPath = [];\n        for (var i = 0; i < optimizedLength; ++i) {\n            optimizedPath[i] = boundPath[i];\n        }\n        referenceContainer = model._referenceContainer;\n    } else {\n        node = cache;\n        optimizedPath = [];\n    }\n\n    requestedPath = [];\n\n    var isFlatBuffer = false,\n        json = seed && seed.json,\n        boxValues = model._boxed,\n        expired = modelRoot.expired,\n        recycleJSON = model._recycleJSON,\n        hasDataSource = Boolean(model._source),\n        branchSelector = modelRoot.branchSelector,\n        materialized = seed && model._materialized,\n        treatErrorsAsValues = model._treatErrorsAsValues,\n        allowFromWhenceYouCame = model._allowFromWhenceYouCame,\n        results = { args: null, data: seed, hasValue: false,\n                    relative: null, requested: null, missing: null };\n\n    var arr, path, pathsIndex = 0, pathsCount = paths.length;\n\n    if (pathsCount > 0) {\n\n        if (recycleJSON) {\n            isFlatBuffer = true;\n            if ((pathsCount > 1 && expireImmediate) || isArray(paths[0])) {\n                paths = [computeFlatBufferHash(toFlatBuffer(paths, {}))];\n            }\n            pathsCount = 1;\n        }\n\n        do {\n            path = paths[pathsIndex];\n            if (isFlatBuffer) {\n                arr = walkFlatBufferAndBuildOutput(cache, node, json, paths[0], 0, seed, results,\n                                                   requestedPath, optimizedPath, optimizedLength,\n                                                   /* fromReference = */ false, referenceContainer,\n                                                   modelRoot, expired, expireImmediate, branchSelector,\n                                                   boxValues, materialized, hasDataSource,\n                                                   treatErrorsAsValues, allowFromWhenceYouCame);\n            } else {\n                requestedLength = path.length;\n                arr = walkPathAndBuildOutput(cache, node, json, path,\n                                          /* depth = */ 0, seed, results,\n                                             requestedPath, requestedLength,\n                                             optimizedPath, optimizedLength,\n                                             /* fromReference = */ false, referenceContainer,\n                                             modelRoot, expired, expireImmediate, branchSelector,\n                                             boxValues, materialized, hasDataSource,\n                                             treatErrorsAsValues, allowFromWhenceYouCame);\n            }\n            json = arr[0];\n            arr[0] = undefined;\n            arr[1] = undefined;\n        } while (++pathsIndex < pathsCount);\n    }\n\n    var requested = results.requested;\n\n    results.args = isFlatBuffer && paths || requested;\n\n    if (requested && requested.length) {\n        results.relative = results.args;\n        if (optimizedLength) {\n            var boundRequested = [];\n            for (var i = 0, len = requested.length; i < len; ++i) {\n                boundRequested[i] = boundPath.concat(requested[i]);\n            }\n            results.requested = boundRequested;\n        }\n    }\n\n    if (results.hasValue) {\n        seed.json = json;\n    }\n\n    return results;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/getJSON.js","var arr = new Array(3);\nvar promote = require('../../../lru/promote');\nvar isExpired = require('../../isExpired');\nvar createHardlink = require('../../createHardlink');\nvar CircularReferenceError = require('../../../errors/CircularReferenceError');\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, refArg, modelRoot, expireImmediate) {\n\n    promote(modelRoot, refArg);\n\n    var context,\n        ref = refArg,\n        key, type, depth = 0,\n        node = root, path = ref.value,\n        copy = path, length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[f_context])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                throw new CircularReferenceError(path);\n            }\n            // If the node we land on isn't the existing ref context,\n            // create a hard-link between the reference and the node\n            // it points to.\n            else if (node !== context) {\n                createHardlink(ref, node);\n            }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === $ref) {\n\n                promote(modelRoot, node);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n    arr[2] = ref;\n\n    return arr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/getReferenceTarget.js","var clone = require('../../clone');\nvar onError = require('./onError');\n\nmodule.exports = onJSONValue;\n\nfunction onJSONValue(node, type, depth, seed, results,\n                     requestedPath, optimizedPath, optimizedLength,\n                     fromReference, boxValues, materialized,\n                     treatErrorsAsValues) {\n\n    if ($error === type && !treatErrorsAsValues) {\n        return onError(node, depth, results, requestedPath,\n                       fromReference, boxValues);\n    }\n\n    results.hasValue = true;\n\n    // boxValues always clones the node\n    return !boxValues ? node.value : clone(node);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/onValue.js","var walkPathAndBuildOutput = require('./walkPath');\nvar BoundJSONGraphModelError = require('../../../errors/BoundJSONGraphModelError');\n\nmodule.exports = getJSONGraph;\n\nfunction getJSONGraph(model, paths, seed, progressive, expireImmediate) {\n\n    var node, cache,\n        boundPath = model._path,\n        modelRoot = model._root,\n        requestedPath, requestedLength,\n        optimizedPath, optimizedLength =\n            boundPath && boundPath.length || 0;\n\n    // If the model is bound, then get that cache position.\n    if (optimizedLength) {\n        // JSONGraph output cannot ever be bound or else it will\n        // throw an error.\n        return { error: new BoundJSONGraphModelError() };\n    } else {\n        optimizedPath = [];\n        cache = node = modelRoot.cache;\n    }\n\n    requestedPath = [];\n\n    var boxValues = model._boxed,\n        expired = modelRoot.expired,\n        materialized = model._materialized,\n        hasDataSource = Boolean(model._source),\n        pathsIndex = -1, pathsCount = paths.length,\n        treatErrorsAsValues = model._treatErrorsAsValues,\n        results = { args: null, data: seed, paths: null,\n                    relative: null, requested: null, jsonGraph: null };\n\n    while (++pathsIndex < pathsCount) {\n        var path = paths[pathsIndex];\n        requestedLength = path.length;\n        walkPathAndBuildOutput(cache, node, path,\n                            /* depth = */ 0, seed, results,\n                               requestedPath, requestedLength,\n                               optimizedPath, optimizedLength,\n              /* fromReference = */ false, modelRoot, expired, expireImmediate,\n                               boxValues, materialized, hasDataSource, treatErrorsAsValues);\n    }\n\n    results.args = results.relative = results.requested;\n\n    return results;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/getJSONGraph.js","var isArray = Array.isArray;\nvar clone = require('../clone');\nvar FalcorJSON = require('./json/FalcorJSON');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = onMaterialize;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterialize(jsonArg, path, depth, length,\n                       branchSelector, boxValues, modelRoot) {\n\n    var json = jsonArg, type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (depth === length) {\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta;\n\n    var nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        keysetIndex = -1, keysetLength = 0;\n\n    keyset = path[depth];\n\n    if (!json || 'object' !== typeof json) {\n        json = {};\n        json.__proto__ = FalcorJSON.prototype;\n        json[f_meta_data] = f_meta = {};\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[f_meta_data])) {\n        json[f_meta_data] = f_meta = {};\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n    } else {\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            // insert the materialized branch\n            json[nextKey] = onMaterialize(\n                json[nextKey], path,\n                nextDepth, length,\n                branchSelector,\n                boxValues,\n                modelRoot\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMaterialize.js","var isArray = Array.isArray;\nvar isPathValue = require('../support/isPathValue');\nvar isJSONEnvelope = require('../support/isJSONEnvelope');\nvar isJSONGraphEnvelope = require('../support/isJSONGraphEnvelope');\n\nmodule.exports = groupCacheArguments;\n\nfunction groupCacheArguments(args) {\n\n    var groups = [];\n    var argIndex = -1;\n    var argCount = args.length;\n    var group, groupType, arg, argType;\n\n    while (++argIndex < argCount) {\n        arg = args[argIndex];\n        if (isArray(arg)) {\n            arg = { path: arg };\n            argType = 'PathValues';\n        } else if (isPathValue(arg)) {\n            argType = 'PathValues';\n        } else if (isJSONGraphEnvelope(arg)) {\n            argType = 'JSONGraphs';\n        } else if (isJSONEnvelope(arg)) {\n            argType = 'PathMaps';\n        }\n\n        if (groupType !== argType) {\n            groupType = argType;\n            groups.push(group = {\n                arguments: [],\n                inputType: argType\n            });\n        }\n\n        group.arguments.push(arg);\n    }\n\n    return groups;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/groupCacheArguments.js","module.exports = insertNode;\n\nfunction insertNode(node, parent, key, version, optimizedPath) {\n    node[f_key] = key;\n    node[f_parent] = parent;\n\n    if (version !== undefined) {\n        node[f_version] = version;\n    }\n    if (!node[f_abs_path]) {\n        node[f_abs_path] = optimizedPath.slice(0, optimizedPath.index).concat(key);\n    }\n\n    parent[key] = node;\n\n    return node;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/insertNode.js","var arr = new Array(2);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\nvar getSize = require('../../support/getSize');\nvar createHardlink = require('../createHardlink');\nvar getBoundCacheNode = require('../getBoundCacheNode');\nvar isInternalKey = require('../../support/isInternalKey');\nvar updateNodeAncestors = require('../updateNodeAncestors');\n\n/**\n * Sets a list of PathMaps into a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of @PathMapEnvelopes to set.\n */\n\nmodule.exports = invalidatePathMaps;\n\nfunction invalidatePathMaps(model, pathMapEnvelopes, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var comparator = modelRoot._comparator;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n\n    if (!node) {\n        return false;\n    }\n\n    var pathMapIndex = -1;\n    var parent = node[f_parent] || cache;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n\n        invalidatePathMap(\n            pathMapEnvelope.json, 0, cache, parent, node,\n            version, expired, lru, comparator, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return true;\n    }\n\n    return false;\n}\n\nfunction invalidatePathMap(\n    pathMap, depth, root, parent, node, version,\n    expired, lru, comparator, expireImmediate) {\n\n    if (!pathMap || typeof pathMap !== 'object' || pathMap.$type) {\n        return;\n    }\n\n    for (var key in pathMap) {\n        if (!isInternalKey(key)) {\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n            invalidateNode(\n                root, parent, node,\n                key, child, branch, false, version, expired,\n                lru, comparator, expireImmediate\n            );\n            var nextNode = arr[0];\n            var nextParent = arr[1];\n            if (nextNode) {\n                if (branch) {\n                    invalidatePathMap(\n                        child, depth + 1,\n                        root, nextParent, nextNode,\n                        version, expired, lru, comparator, expireImmediate\n                    );\n                } else {\n                    updateNodeAncestors(nextNode, getSize(nextNode), lru, version);\n                }\n            }\n        }\n    }\n}\n\nfunction invalidateReference(\n    value, root, nodeArg, version,\n    expired, lru, comparator, expireImmediate) {\n\n    var node = nodeArg;\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[f_context];\n\n    if (node != null) {\n        parent = node[f_parent] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            invalidateNode(\n                root, parent, node,\n                key, value, branch, true, version,\n                expired, lru, comparator, expireImmediate\n            );\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n}\n\nfunction invalidateNode(\n    root, parentArg, nodeArg,\n    key, value, branch, reference, version,\n    expired, lru, comparator, expireImmediate) {\n\n    var node = nodeArg;\n    var parent = parentArg;\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        invalidateReference(\n            value, root, node, version, expired,\n            lru, comparator, expireImmediate\n        );\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new Error('`null` is not allowed in branch key positions.');\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/invalidatePathMaps.js","var $now = require('../values/expires-now');\nvar getType = require('../support/getType');\nvar getSize = require('../support/getSize');\nvar getTimestamp = require('../support/getTimestamp');\n\nvar wrapNode = require('./wrapNode');\nvar isExpired = require('./isExpired');\nvar expireNode = require('./expireNode');\nvar insertNode = require('./insertNode');\nvar replaceNode = require('./replaceNode');\nvar reconstructPath = require('./reconstructPath');\nvar updateNodeAncestors = require('./updateNodeAncestors');\nvar removeNodeAndDescendants = require('./removeNodeAndDescendants');\n\nmodule.exports = mergeValueOrInsertBranch;\n\nfunction mergeValueOrInsertBranch(\n    parentArg, nodeArg, key, value,\n    branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var node = nodeArg;\n    var parent = parentArg;\n    var cType = getType(node, reference);\n\n    if (branch || reference) {\n        if (cType && isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge if it expires immediately\n             */\n            true)) {\n            expireNode(node, expired, lru);\n            cType = node.$expires === $now ? cType : 'expired';\n        }\n        if ((cType && cType !== $ref) || (!node || typeof node !== 'object')) {\n            node = replaceNode(node, {}, parent, key, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    } else {\n        var message = value;\n        var isDistinct = true;\n        var mType = getType(message);\n\n        // If both the cache and message are primitives,\n        // insert the message into the cache.\n        if (!cType && !mType) {\n            isDistinct = true;\n        }\n        // Compare the current cache value with the new value. If either of\n        // them don't have a timestamp, or the message's timestamp is newer,\n        // replace the cache value with the message value. If a comparator\n        // is specified, the comparator takes precedence over timestamps.\n        else if (comparator) {\n            isDistinct = !(comparator.length < 3 ?\n                comparator(node, message) : comparator(node, message,\n                    optimizedPath.slice(0, optimizedPath.index))\n            );\n        } else {\n            // Comparing either Number or undefined to undefined always results in false.\n            isDistinct = getTimestamp(message) < getTimestamp(node) === false;\n        }\n\n        if (isDistinct) {\n\n            if (errorSelector && mType === $error) {\n                message = errorSelector(reconstructPath(requestedPath, key), message);\n            }\n\n            var sizeOffset = getSize(node) - getSize(message =\n                wrapNode(message, mType, mType ? message.value : message));\n\n            node = replaceNode(node, message, parent, key, lru, version);\n            parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/mergeValueOrInsertBranch.js","/**\n * Reconstructs the path for the current key, from currentPath (requestedPath)\n * state maintained during set/merge walk operations.\n *\n * During the walk, since the requestedPath array is updated after we attempt to\n * merge/insert nodes during a walk (it reflects the inserted node's parent branch)\n * we need to reconstitute a path from it.\n *\n * @param  {Array} currentPath The current requestedPath state, during the walk\n * @param  {String} key        The current key value, during the walk\n * @return {Array} A new array, with the path which represents the node we're about\n * to insert\n */\nmodule.exports = reconstructPath;\n\nfunction reconstructPath(currentPath, key) {\n\n    var path = currentPath.slice(0, currentPath.depth);\n    path[path.length] = key;\n\n    return path;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/reconstructPath.js","var transferBackReferences = require('./transferBackReferences');\nvar removeNodeAndDescendants = require('./removeNodeAndDescendants');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = replaceNode;\n\nfunction replaceNode(node, replacement, parent, key, lru, version) {\n    if (node === replacement) {\n        return node;\n    } else if (!(!node || typeof node !== 'object')) {\n        transferBackReferences(node, replacement);\n        removeNodeAndDescendants(node, parent, key, lru);\n        updateBackReferenceVersions(replacement, version);\n    }\n\n    parent[key] = replacement;\n    return replacement;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/replaceNode.js","var isArray = Array.isArray;\nvar now = require('../support/now');\nvar clone = require('./../support/clone');\nvar getSize = require('./../support/getSize');\nvar getExpires = require('../support/getExpires');\nvar expiresNow = require('../values/expires-now');\n\nvar atomSize = 50;\n\nmodule.exports = wrapNode;\n\nfunction wrapNode(nodeArg, typeArg, value) {\n\n    var size = 0;\n    var node = nodeArg;\n    var type = typeArg;\n\n    if (type) {\n        var modelCreated = node[f_wrapped_value];\n        node = clone(node);\n        size = getSize(node);\n        node.$type = type;\n        node[f_prev] = undefined;\n        node[f_next] = undefined;\n        node[f_wrapped_value] = modelCreated || false;\n    } else {\n        node = { $type: $atom, value: value };\n        node[f_prev] = undefined;\n        node[f_next] = undefined;\n        node[f_wrapped_value] = true;\n    }\n\n    if (value == null) {\n        size = atomSize + 1;\n    } else if (size == null || size <= 0) {\n        switch (typeof value) {\n            case 'object':\n                if (isArray(value)) {\n                    size = atomSize + value.length;\n                } else {\n                    size = atomSize + 1;\n                }\n                break;\n            case 'string':\n                size = atomSize + value.length;\n                break;\n            default:\n                size = atomSize + 1;\n                break;\n        }\n    }\n\n    var expires = getExpires(node);\n\n    if (typeof expires === 'number' && expires < expiresNow) {\n        node.$expires = now() + (expires * -1);\n    }\n\n    node.$size = size;\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/wrapNode.js","var createErrorClass = require('./createErrorClass');\n\nmodule.exports = createErrorClass('CircularReferenceError', function(referencePath) {\n    this.message = 'Encountered circular reference ' + JSON.stringify(referencePath);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/CircularReferenceError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'An exception was thrown when making a request';\n\n/**\n * InvalidSourceError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidSourceError', function(error) {\n    this.message = MESSAGE + ':\\n\\t' + error;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidSourceError.js","module.exports = lruSplice;\n\nfunction lruSplice(lru, node) {\n\n    // Its in the cache.  Splice out.\n    var prev = node[f_prev];\n    var next = node[f_next];\n    if (next) {\n        next[f_prev] = prev;\n    }\n    if (prev) {\n        prev[f_next] = next;\n    }\n    node[f_prev] = node[f_next] = undefined;\n\n    if (node === lru[f_head]) {\n        lru[f_head] = next;\n    }\n    if (node === lru[f_tail]) {\n        lru[f_tail] = prev;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/splice.js","var Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar $$observable = require('symbol-observable').default;\n\nmodule.exports = Source;\n\nfunction Source(subscribe) {\n    if (!subscribe) {\n        return;\n    }\n    switch (typeof subscribe) {\n        case 'object':\n            this.source = subscribe;\n            break;\n        case 'function':\n            this.source = { subscribe: subscribe };\n            break;\n    }\n}\n\nSource.prototype[$$observable] = function() {\n    return this;\n}\n\nSource.prototype.operator = function(destination) {\n    return this.subscribe(destination);\n}\n\n// Unused\n// Source.prototype.lift = function(operator, source) {\n//     source = new Source(source || this);\n//     source.operator = operator;\n//     source._promise = this._promise;\n//     return source;\n// }\n\nSource.prototype.subscribe = function(destination, x, y) {\n    return new Subscription([\n        this.operator.call(\n            this.source, !(destination instanceof Subscriber) ?\n                new Subscriber(destination, x, y) : destination)\n    ]);\n}\n\nSource.prototype.then = function then(onNext, onError) {\n    /* global Promise */\n    var source = this;\n    if (!this._promise) {\n        this._promise = new global['Promise'](function(resolve, reject) {\n            var values = [], rejected = false;\n            source.subscribe({\n                next: function(value) { values[values.length] = value; },\n                error: function(errors) { (rejected = true) && reject(errors); },\n                complete: function() {\n                    !rejected &&\n                    resolve(values.length <= 1 ? values[0] : values);\n                }\n            });\n        });\n    }\n    return this._promise.then(onNext, onError);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Source.js","var empty = {\n    dispose: function() {},\n    unsubscribe: function() {}\n};\n\nfunction ImmediateScheduler() {}\n\nImmediateScheduler.prototype.schedule = function schedule(action) {\n    action();\n    return empty;\n};\n\nmodule.exports = ImmediateScheduler;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/schedulers/ImmediateScheduler.js","var isObject = require('./../support/isObject');\n\nmodule.exports = isJSONEnvelope;\n\nfunction isJSONEnvelope(envelope) {\n    return isObject(envelope) && ('json' in envelope);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isJSONEnvelope.js","var isArray = Array.isArray;\nvar isObject = require('./../support/isObject');\n\nmodule.exports = isJSONGraphEnvelope;\n\nfunction isJSONGraphEnvelope(envelope) {\n    return isObject(envelope) && isArray(envelope.paths) && (\n        isObject(envelope.jsonGraph) ||\n        isObject(envelope.jsong) ||\n        isObject(envelope.json) ||\n        isObject(envelope.values) ||\n        isObject(envelope.value)\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isJSONGraphEnvelope.js","module.exports = Date.now;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/now.js","module.exports = 1;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/values/expires-never.js","var Model = require('./Model');\nvar FalcorJSON = require('./cache/get/json/FalcorJSON');\n\nfunction falcor(opts) {\n    if (!(this instanceof Model)) {\n        return new Model(opts);\n    }\n    Model.call(this, opts);\n}\n\nfalcor.prototype = Object.create(Model.prototype);\n\nfalcor['Model'] = Model;\nfalcor['FalcorJSON'] = FalcorJSON;\nfalcor['toProps'] = FalcorJSON.prototype.toProps;\n\nmodule.exports = falcor;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/index.js","var isArray = Array.isArray;\nvar getHashCode = require('./getHashCode');\n\nmodule.exports = computeFlatBufferHash;\n\nfunction computeFlatBufferHash(seed) {\n\n    if (seed === undefined) {\n        return undefined;\n    }\n\n    var code = '';\n    var keys = seed['$keys'];\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    while (++keysIndex < keysLength) {\n\n        var key = keys[keysIndex];\n\n        if (key === null) {\n            code = '' + getHashCode('' + code + 'null');\n            continue;\n        } else if (typeof key === 'object') {\n            key = '[' + key.from + '..' + (key.from + key.length - 1) + ']';\n        }\n\n        var next = computeFlatBufferHash(seed[keysIndex]);\n        if (next === undefined) {\n            code = '' + getHashCode('' + code + key);\n        } else {\n            code = '' + getHashCode('' + code + key + next['$code']);\n        }\n    }\n\n    seed['$code'] = code;\n\n    return seed;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/computeFlatBufferHash.js","var isArray = Array.isArray;\nvar materializedAtom = require('./support/materializedAtom');\n\nmodule.exports = hasIntersection\n\n/**\n * Tests to see if the intersection should be stripped from the\n * total paths.  The only way this happens currently is if the entirety\n * of the path is contained in the tree.\n * @private\n */\n\nfunction hasIntersection(tree, path, depth, length) {\n\n    if (depth === length) {\n        return true;\n    }\n\n    var intersects = true;\n    var keyset, keysetIndex = -1, keysetLength = 0;\n    var next, nextKey, nextDepth = depth + 1,\n        keyIsRange, rangeEnd, keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return tree === materializedAtom;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                break iteratingKeyset;\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        do {\n            if (nextDepth === length) {\n                if (tree[nextKey] !== null) {\n                    return false;\n                }\n            } else {\n                next = tree[nextKey];\n                if (next === null || next === undefined) {\n                    return false;\n                } else if (hasIntersection(next, path, nextDepth, length) === false) {\n                    return false;\n                }\n            }\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/hasIntersection.js","var isArray = Array.isArray;\nvar nullBuffer = { '$keys': [null], '$keysMap': { 'null': 0 } };\nvar flatBufferToPaths = require('./flatBufferToPaths');\n\nmodule.exports = toFlatBuffer;\n\nfunction toFlatBuffer(paths, seed) {\n    return paths.reduce(function(seed, path) {\n        if (isArray(path)) {\n            return pathToFlatBuffer(seed, path, 0, path.length);\n        } else if (isArray(path.$keys)) {\n            return toFlatBuffer(flatBufferToPaths(path), seed);\n        }\n        return seed;\n    }, seed || {});\n}\n\nfunction pathToFlatBuffer(seed, path, depth, length) {\n\n    if (depth === length) {\n        return undefined;\n    }\n\n    seed = seed || {};\n    var keys = seed['$keys'] || (seed['$keys'] = []);\n    var keysMap = seed['$keysMap'] || (seed['$keysMap'] = {});\n    var keysIndex = -1;\n\n    var keyset, keysetIndex = -1, keysetLength = 0;\n    var node, next, nextKey, nextDepth = depth + 1,\n        rangeEnd, keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return nullBuffer;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            if ('undefined' === typeof (keysIndex = keysMap[nextKey])) {\n                keysIndex = keys.length;\n            }\n            keys[keysIndex] = nextKey;\n            keysMap[nextKey] = keysIndex;\n            next = pathToFlatBuffer(seed[keysIndex], path, nextDepth, length);\n            if (next !== undefined) {\n                seed[keysIndex] = next;\n            }\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                break iteratingKeyset;\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyset = { from: nextKey, length: rangeEnd - nextKey + 1 };\n            nextKey = '[' + nextKey + '..' + rangeEnd + ']';\n            if ('undefined' === typeof (keysIndex = keysMap[nextKey])) {\n                keysIndex = keys.length;\n            }\n            keys[keysIndex] = keyset;\n            keysMap[nextKey] = keysIndex;\n            next = pathToFlatBuffer(seed[keysIndex], path, nextDepth, length);\n            if (next !== undefined) {\n                seed[keysIndex] = next;\n            }\n        }\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return seed;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toFlatBuffer.js","var isArray = Array.isArray;\nvar materializedAtom = require('./support/materializedAtom');\n\nmodule.exports = toTree;\n\n/**\n * @param {Array} paths -\n * @returns {Object} -\n */\n\nfunction toTree(paths, seed) {\n    return paths.reduce(function(seed, path) {\n        return pathToTree(seed, path, 0, path.length, null);\n    }, seed || {});\n};\n\nfunction pathToTree(seed, path, depth, length, value) {\n\n    if (depth === length) {\n        return true;\n    }\n\n    seed = seed || {};\n\n    var keyset, keysetIndex = -1, keysetLength = 0;\n    var node, next, nextKey, nextDepth = depth + 1,\n        keyIsRange, rangeEnd, keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return materializedAtom;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                break iteratingKeyset;\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        do {\n            if (nextDepth === length) {\n                seed[nextKey] = value;\n            } else {\n                node = seed[nextKey];\n                next = pathToTree(node, path, nextDepth, length, value);\n                if (!next) {\n                    seed[nextKey] = value;\n                } else if (!node) {\n                    seed[nextKey] = next;\n                }\n            }\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return seed;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toTree.js","var Call = require('./request/Call');\nvar ModelRoot = require('./ModelRoot');\nvar FalcorJSON = require('./cache/get/json/FalcorJSON');\nvar ModelDataSourceAdapter = require('./ModelDataSourceAdapter');\nvar TimeoutScheduler = require('./schedulers/TimeoutScheduler');\nvar ImmediateScheduler = require('./schedulers/ImmediateScheduler');\nvar collapse = require('@graphistry/falcor-path-utils/lib/collapse');\n\nvar getSize = require('./support/getSize');\nvar isObject = require('./support/isObject');\nvar isJSONEnvelope = require('./support/isJSONEnvelope');\nvar getCachePosition = require('./cache/getCachePosition');\nvar isJSONGraphEnvelope = require('./support/isJSONGraphEnvelope');\n\nvar setCache = require('./cache/set/setPathMaps');\nvar setJSONGraphs = require('./cache/set/setJSONGraphs');\n\nvar getJSON = require('./cache/get/json');\nvar getCache = require('./cache/getCache');\nvar getJSONGraph = require('./cache/get/jsonGraph');\n\nmodule.exports = Model;\n\n/**\n * This callback is invoked when the Model's cache is changed.\n * @callback Model~onChange\n */\n\n /**\n * This function is invoked on every JSONGraph Error retrieved from the DataSource. This function allows Error objects to be transformed before being stored in the Model's cache.\n * @callback Model~errorSelector\n * @param {Object} jsonGraphError - the JSONGraph Error object to transform before it is stored in the Model's cache.\n * @returns {Object} the JSONGraph Error object to store in the Model cache.\n */\n\n /**\n * This function is invoked every time a value in the Model cache is about to be replaced with a new value. If the function returns true, the existing value is replaced with a new value and the version flag on all of the value's ancestors in the tree are incremented.\n * @callback Model~comparator\n * @param {Object} existingValue - the current value in the Model cache.\n * @param {Object} newValue - the value about to be set into the Model cache.\n * @returns {Boolean} the Boolean value indicating whether the new value and the existing value are equal.\n */\n\n/**\n * A Model object is used to execute commands against a {@link JSONGraph} object. {@link Model}s can work with a local JSONGraph cache, or it can work with a remote {@link JSONGraph} object through a {@link DataSource}.\n * @constructor\n * @param {?Object} options - a set of options to customize behavior\n * @param {?DataSource} options.source - a data source to retrieve and manage the {@link JSONGraph}\n * @param {?JSONGraph} options.cache - initial state of the {@link JSONGraph}\n * @param {?number} options.maxSize - the maximum size of the cache. This value roughly correlates to item count (where itemCount = maxSize / 50). Each item by default is given a metadata `$size` of 50 (or its length when it's an array or string). You can get better control of falcor's memory usage by tweaking `$size`\n * @param {?number} options.collectRatio - the ratio of the maximum size to collect when the maxSize is exceeded\n * @param {?Model~errorSelector} options.errorSelector - a function used to translate errors before they are returned\n * @param {?Model~onChange} options.onChange - a function called whenever the Model's cache is changed\n * @param {?Model~comparator} options.comparator - a function called whenever a value in the Model's cache is about to be replaced with a new value.\n */\nfunction Model(opts) {\n\n    var options = opts || {};\n\n    this._node = options._node;\n    this._path = options._path || [];\n    this._source = options.source || options._source;\n    this._root = options._root || new ModelRoot(options, this);\n    this._recycleJSON = options.recycleJSON === true || options._recycleJSON;\n    this._scheduler = options.scheduler || options._scheduler || new ImmediateScheduler();\n\n    if (options._seed) {\n        this._recycleJSON = true;\n        this._seed = options._seed;\n        this._treatErrorsAsValues = true;\n    } else if (this._recycleJSON) {\n        this._treatErrorsAsValues = true;\n        this._seed = {};\n        this._seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    this._boxed = options.boxed === true || options._boxed || false;\n    this._materialized = options.materialized === true || options._materialized || false;\n    this._treatErrorsAsValues = options.treatErrorsAsValues === true || options._treatErrorsAsValues || false;\n    this._allowFromWhenceYouCame = options.allowFromWhenceYouCame === true || options._allowFromWhenceYouCame || false;\n\n    if (options.cache) {\n        this.setCache(options.cache);\n    }\n}\n\nModel.prototype.constructor = Model;\n\n/**\n * The get method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model}. The get method loads each value into a JSON object and returns in a ModelResponse.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - the requested data as JSON\n */\nModel.prototype.get = function get(...args) {\n    var seed = this._seed;\n    if (!seed) {\n        seed = {};\n        seed.__proto__ = FalcorJSON.prototype;\n    }\n    return new Call('get', this, args)._toJSON(seed, []);\n}\n\n/**\n * Sets the value at one or more places in the JSONGraph model. The set method accepts one or more {@link PathValue}s, each of which is a combination of a location in the document and the value to place there.  In addition to accepting  {@link PathValue}s, the set method also returns the values after the set operation is complete.\n * @function\n * @return {ModelResponse.<JSONEnvelope>} - an {@link Observable} stream containing the values in the JSONGraph model after the set was attempted\n */\nModel.prototype.set = function set(...args) {\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n    return new Call('set', this, args)._toJSON(seed, []);\n}\n\n/**\n * The preload method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model} and loads them into the Model cache.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - a ModelResponse that completes when the data has been loaded into the cache.\n */\nModel.prototype.preload = function preload(...args) {\n    return new Call('get', this, args)._toJSON(null, []);\n}\n\n/**\n * Invokes a function in the JSON Graph.\n * @function\n * @param {Path} functionPath - the path to the function to invoke\n * @param {Array.<Object>} args - the arguments to pass to the function\n * @param {Array.<PathSet>} refPaths - the paths to retrieve from the JSON Graph References in the message returned from the function\n * @param {Array.<PathSet>} thisPaths - the paths to retrieve from function's this object after successful function execution\n * @return {ModelResponse.<JSONEnvelope> - a JSONEnvelope contains the values returned from the function\n */\n\nModel.prototype.call = function call(...args) {\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n    return new Call('call', this, args)._toJSON(seed, []);\n}\n\n/**\n * The invalidate method synchronously removes several {@link Path}s or {@link PathSet}s from a {@link Model} cache.\n * @function\n * @param {...PathSet} path - the  paths to remove from the {@link Model}'s cache.\n */\nModel.prototype.invalidate = function invalidate(...args) {\n    return new Call('invalidate', this, args)._toJSON(null, null).then();\n}\n\n/**\n * Returns a new {@link Model} bound to a location within the {@link\n * JSONGraph}. The bound location is never a {@link Reference}: any {@link\n * Reference}s encountered while resolving the bound {@link Path} are always\n * replaced with the {@link Reference}s target value. For subsequent operations\n * on the {@link Model}, all paths will be evaluated relative to the bound\n * path. Deref allows you to:\n * - Expose only a fragment of the {@link JSONGraph} to components, rather than\n *   the entire graph\n * - Hide the location of a {@link JSONGraph} fragment from components\n * - Optimize for executing multiple operations and path looksup at/below the\n *   same location in the {@link JSONGraph}\n * @method\n * @param {Object} responseObject - an object previously retrieved from the\n * Model\n * @return {Model} - the dereferenced {@link Model}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.deref = require('./deref');\n\n/**\n * A dereferenced model can become invalid when the reference from which it was\n * built has been removed/collected/expired/etc etc.  To fix the issue, a request\n * from the parent should be made (no parent, then from the root) for a valid\n * path and re-dereference performed to update where the model is bound.\n *\n * @method\n * @private\n * @return {Boolean} - If the currently deref'd model is still considered a\n * valid deref.\n */\nModel.prototype._hasValidParentReference = require('./deref/hasValidParentReference');\n\n/**\n * Get data for a single {@link Path}.\n * @param {Path} path - the path to retrieve\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     getValue('user.name').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.getValue = function getValue(path) {\n    return new Call('get', this, [path])\n        ._toJSON({}, [])\n        .lift(function(subscriber) {\n            return this.subscribe({\n                onNext: function(data) {\n                    var depth = -1;\n                    var x = data.json;\n                    var length = path.length;\n                    while (x && !x.$type && ++depth < length) {\n                        x = x[path[depth]];\n                    }\n                    subscriber.onNext(x);\n                },\n                onError: subscriber.onError.bind(subscriber),\n                onCompleted: subscriber.onCompleted.bind(subscriber)\n            })\n        });\n}\n\n/**\n * Set value for a single {@link Path}.\n * @param {Path} path - the path to set\n * @param {Object} value - the value to set\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     setValue('user.name', 'Jim').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.setValue = function setValue(path, value) {\n    path = arguments.length === 1 ? path.path : path;\n    value = arguments.length === 1 ? path : {path:path,value:value};\n    return new Call('set', this, [value])\n        ._toJSON({}, [])\n        .lift(function(subscriber) {\n            return this.subscribe({\n                onNext: function(data) {\n                    var depth = -1;\n                    var x = data.json;\n                    var length = path.length;\n                    while (x && !x.$type && ++depth < length) {\n                        x = x[path[depth]];\n                    }\n                    subscriber.onNext(x);\n                },\n                onError: subscriber.onError.bind(subscriber),\n                onCompleted: subscriber.onCompleted.bind(subscriber)\n            })\n        });\n}\n\n/**\n * Set the local cache to a {@link JSONGraph} fragment. This method can be a useful way of mocking a remote document, or restoring the local cache from a previously stored state.\n * @param {JSONGraph} jsonGraph - the {@link JSONGraph} fragment to use as the local cache\n */\nModel.prototype.setCache = function modelSetCache(cacheOrJSONGraphEnvelope) {\n\n    var modelRoot = this._root;\n    var cache = modelRoot.cache;\n\n    if (cacheOrJSONGraphEnvelope !== cache) {\n\n        var options = {\n            _path: [],\n            _boxed: false,\n            _root: modelRoot,\n            _materialized: false,\n            _treatErrorsAsValues: false\n        };\n\n        modelRoot.cache = this._node = {};\n\n        if (typeof cache !== 'undefined') {\n            modelRoot.expired = [];\n            modelRoot[f_head] = undefined;\n            modelRoot[f_tail] = undefined;\n            if (this._recycleJSON) {\n                this._seed = {};\n                this._seed.__proto__ = FalcorJSON.prototype;\n            }\n        }\n\n        var results, rootOnChangeHandler;\n        if (isJSONGraphEnvelope(cacheOrJSONGraphEnvelope)) {\n            results = setJSONGraphs(options, [cacheOrJSONGraphEnvelope]);\n        } else if (isJSONEnvelope(cacheOrJSONGraphEnvelope)) {\n            results = setCache(options, [cacheOrJSONGraphEnvelope]);\n        } else if (isObject(cacheOrJSONGraphEnvelope)) {\n            results = setCache(options, [{ json: cacheOrJSONGraphEnvelope }]);\n        }\n\n        if (results) {\n            // performs promotion without producing output.\n            if (results[0].length) {\n                getJSON(options, results[0], null, false, false);\n            }\n            if (results[2] && (rootOnChangeHandler = modelRoot.onChange)) {\n                rootOnChangeHandler.call(modelRoot.topLevelModel);\n            }\n        }\n    } else if (typeof cache === 'undefined') {\n        this._root.cache = {};\n    }\n    return this;\n};\n\n/**\n * Get the local {@link JSONGraph} cache. This method can be a useful to store the state of the cache.\n * @param {...Array.<PathSet>} [pathSets] - The path(s) to retrieve. If no paths are specified, the entire {@link JSONGraph} is returned.\n * @return {JSONGraph} all of the {@link JSONGraph} data in the {@link Model} cache.\n * @example\n // Storing the boxshot of the first 10 titles in the first 10 genreLists to local storage.\n localStorage.setItem('cache', JSON.stringify(model.getCache('genreLists[0...10][0...10].boxshot')));\n */\nModel.prototype.getCache = function _getCache(...paths) {\n\n    if (paths.length === 0) {\n        return getCache(this, this._root.cache);\n    }\n\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n\n    var env = getJSONGraph({\n        _path: [],\n        _root: this._root,\n        _boxed: this._boxed,\n        _materialized: this._materialized,\n        _treatErrorsAsValues: this._treatErrorsAsValues\n    }, paths, seed).data;\n\n    env.paths = collapse(paths);\n\n    return env;\n};\n\n/**\n * Retrieves a number which is incremented every single time a value is changed underneath the Model or the object at an optionally-provided Path beneath the Model.\n * @param {Path?} path - a path at which to retrieve the version number\n * @return {Number} a version number which changes whenever a value is changed underneath the Model or provided Path\n */\nModel.prototype.getVersion = function getVersion(path) {\n    path = path || [];\n    if (Array.isArray(path) === false) {\n        throw new Error('Model#getVersion must be called with an Array path.');\n    }\n    if (this._path.length) {\n        path = this._path.concat(path);\n    }\n    return this._getVersion(this, path);\n};\n\n/* eslint-disable guard-for-in */\nModel.prototype._clone = function cloneModel(opts) {\n    var clone = new Model(this);\n    if (opts) {\n        for (var key in opts) {\n            var value = opts[key];\n            if (value === 'delete') {\n                delete clone[key];\n            } else if (key === '_path') {\n                clone[key] = value;\n                if (false === opts.hasOwnProperty('_node')) {\n                    delete clone['_node'];\n                }\n            } else {\n                clone[key] = value;\n            }\n        }\n    }\n    if (clone._path.length > 0) {\n        clone.setCache = void 0;\n    }\n    return clone;\n};\n/* eslint-enable */\n\n/**\n * Returns a clone of the {@link Model} that enables batching. Within the configured time period, paths for get operations are collected and sent to the {@link DataSource} in a batch. Batching can be more efficient if the {@link DataSource} access the network, potentially reducing the number of HTTP requests to the server.\n * @param {?Scheduler|number} schedulerOrDelay - Either a {@link Scheduler} that determines when to send a batch to the {@link DataSource}, or the number in milliseconds to collect a batch before sending to the {@link DataSource}. If this parameter is omitted, then batch collection ends at the end of the next tick.\n * @return {Model} a Model which schedules a batch of get requests to the DataSource.\n */\nModel.prototype.batch = function batch(schedulerOrDelay) {\n\n    var scheduler;\n\n    if (typeof schedulerOrDelay === 'number') {\n        scheduler = new TimeoutScheduler(Math.round(Math.abs(schedulerOrDelay)));\n    } else if (!schedulerOrDelay) {\n        scheduler = new TimeoutScheduler(1);\n    } else if (typeof schedulerOrDelay.schedule === 'function') {\n        scheduler = schedulerOrDelay;\n    } else if (typeof schedulerOrDelay === 'function') {\n        scheduler = { scheudle: schedulerOrDelay };\n    }\n\n    return this._clone({ _scheduler: scheduler });\n};\n\n/**\n * Returns a clone of the {@link Model} that disables batching. This is the default mode. Each get operation will be executed on the {@link DataSource} separately.\n * @name unbatch\n * @memberof Model.prototype\n * @function\n * @return {Model} a {@link Model} that batches requests of the same type and sends them to the data source together\n */\nModel.prototype.unbatch = function unbatch() {\n    return this._clone({ _scheduler: new ImmediateScheduler() });\n};\n\n/**\n * Returns a clone of the {@link Model} that treats errors as values. Errors will be reported in the same callback used to report data. Errors will appear as objects in responses, rather than being sent to the {@link Observable~onErrorCallback} callback of the {@link ModelResponse}.\n * @return {Model}\n */\nModel.prototype.treatErrorsAsValues = function treatErrorsAsValues() {\n    return this._clone({ _treatErrorsAsValues: true });\n};\n\n/**\n * Adapts a Model to the {@link DataSource} interface.\n * @return {DataSource}\n * @example\nvar model =\n    new falcor.Model({\n        cache: {\n            user: {\n                name: 'Steve',\n                surname: 'McGuire'\n            }\n        }\n    }),\n    proxyModel = new falcor.Model({ source: model.asDataSource() });\n\n// Prints 'Steve'\nproxyModel.getValue('user.name').\n    then(function(name) {\n        console.log(name);\n    });\n */\nModel.prototype.asDataSource = function asDataSource() {\n    return new ModelDataSourceAdapter(this);\n};\n\nModel.prototype._materialize = function materialize() {\n    return this._clone({\n        _materialized: true\n    });\n};\n\nModel.prototype._dematerialize = function dematerialize() {\n    return this._clone({\n        _materialized: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that boxes values returning the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the value inside it. This allows any metadata attached to the wrapper to be inspected.\n * @return {Model}\n */\nModel.prototype.boxValues = function boxValues() {\n    return this._clone({\n        _boxed: true\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that unboxes values, returning the value inside of the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the wrapper itself. This is the default mode.\n * @return {Model}\n */\nModel.prototype.unboxValues = function unboxValues() {\n    return this._clone({\n        _boxed: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that only uses the local {@link JSONGraph} and never uses a {@link DataSource} to retrieve missing paths.\n * @return {Model}\n */\nModel.prototype.withoutDataSource = function withoutDataSource() {\n    return this._clone({\n        _source: 'delete'\n    });\n};\n\n/* implement inspect method for node's inspect utility */\nModel.prototype.inspect = function inspect() {\n    return '{ v: ' + this.getVersion() + ' p: [' + this._path.join(', ') + '] }';\n}\n\nModel.prototype.toJSON = function toJSON() {\n    return {\n        $type: 'ref',\n        value: this.getPath()\n    };\n};\n\n/**\n * Returns the {@link Path} to the object within the JSON Graph that this Model references.\n * @return {Path}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.getPath = function getPath() {\n    return this._path.slice(0);\n};\n\n/**\n * This one is actually private.  I would not use this without talking to\n * jhusain, sdesai, or michaelbpaulson (github).\n * @private\n */\nModel.prototype._fromWhenceYouCame = function fromWhenceYouCame(allow) {\n    return this._clone({\n        _allowFromWhenceYouCame: allow === undefined ? true : allow\n    });\n};\n\nModel.prototype._optimizePath = function _optimizePath(path) {\n    var node = getCachePosition(this._root.cache, path);\n    var abs_path = node && node[f_abs_path] || [];\n    return abs_path.slice(0);\n};\n\nModel.prototype._getVersion = require('./cache/getVersion');\nModel.prototype._getPathValuesAsPathMap = getJSON;\nModel.prototype._getPathValuesAsJSONG = getJSONGraph;\n\nModel.prototype._setPathValues = require('./cache/set/setPathValues');\nModel.prototype._setPathMaps = require('./cache/set/setPathMaps');\nModel.prototype._setJSONGs = require('./cache/set/setJSONGraphs');\nModel.prototype._setCache = require('./cache/set/setPathMaps');\n\nModel.prototype._invalidatePathValues = require('./cache/invalidate/invalidatePathSets');\nModel.prototype._invalidatePathMaps = require('./cache/invalidate/invalidatePathMaps');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Model.js","function ModelDataSourceAdapter(model) {\n    this._model = model\n        // .boxValues()\n        ._materialize().treatErrorsAsValues();\n}\n\nModelDataSourceAdapter.prototype.get = function get(pathSets) {\n    return this._model.get.apply(this._model, pathSets)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.set = function set(jsongResponse) {\n    return this._model.set(jsongResponse)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.call = function call(path, args, suffixes, paths) {\n    return this._model.call.apply(this._model, [\n        path, args, suffixes\n    ].concat(paths))._toJSONG();\n};\n\nmodule.exports = ModelDataSourceAdapter;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ModelDataSourceAdapter.js","var functionTypeof = 'function';\nvar Requests = require('./request/Queue');\nvar getTimestamp = require('./support/getTimestamp');\n\nfunction ModelRoot(o, model) {\n\n    var options = o || {};\n\n    this.cache = {};\n    this.version = -1;\n    this.syncRefCount = 0;\n    this.maxRetryCount = 10;\n    this.topLevelModel = model;\n    this.requests = new Requests(this);\n    this.expired = options.expired || [];\n\n    this.collectRatio = 0.75;\n    this.maxSize = Math.pow(2, 53) - 1;\n\n    if (typeof options.collectRatio === 'number') {\n        this.collectRatio = options.collectRatio;\n    }\n\n    if (typeof options.maxSize === 'number') {\n        this.maxSize = options.maxSize;\n    }\n\n    if (typeof options.comparator === functionTypeof) {\n        this.comparator = options.comparator;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.errorSelector === functionTypeof) {\n        this.errorSelector = options.errorSelector;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.onChange === functionTypeof) {\n        this.onChange = options.onChange;\n    }\n\n    if (typeof options.onChangesCompleted === functionTypeof) {\n        this.onChangesCompleted = options.onChangesCompleted;\n    }\n}\n\nfunction defaultCompare(node, message) {\n    var cType = node && node.$type;\n    var mType = message && message.$type;\n    if (cType) {\n        // If the cache has a type, but the message is a primitive,\n        // the message might be the primitive response from the datasource.\n        // If so, return true, so we don't update the back-reference versions.\n        if (!mType) {\n            return node.value === message;\n        }\n        // If the message is older than the cache node, then isDistinct = false\n        else if (getTimestamp(message) < getTimestamp(node) === true) {\n            return true; // isDistinct = false\n        }\n        // Otherwise they are the same if all the following fields are the same.\n        return !(\n            cType !== mType ||\n            node.value !== message.value ||\n            node.$expires !== message.$expires\n        );\n    }\n    // If cache doesn't have a type but the message\n    // does, they must be different.\n    else if (mType) {\n        return false;\n    }\n    return node === message;\n}\n\nModelRoot.comparator = ModelRoot.prototype.comparator = defaultCompare;\n\nmodule.exports = ModelRoot;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ModelRoot.js","var getJSON = require('../get/json');\nvar getJSONGraph = require('../get/jsonGraph');\n\nmodule.exports = { json: json, jsonGraph: jsonGraph };\n\nfunction json(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue =  getJSON(model, thisPaths, data, progressive, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [\n            path, args, suffixes, thisPaths\n        ]\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed,\n            _materialized: model._materialized,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, thisPaths, data, true, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [\n            path, args, suffixes, thisPaths\n        ]\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/call/index.js","module.exports = {\n    json: require('./json/getJSON'),\n    jsonGraph: require('./jsonGraph/getJSONGraph')\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/index.js","var clone = require('../../clone');\n\nmodule.exports = onError;\n\nfunction onError(node, depth, results,\n                 requestedPath, fromReference, boxValues) {\n\n    var index = -1;\n    var length = depth + !!fromReference; // depth + 1 if fromReference === true\n    var errorPath = new Array(length);\n    var errorValue = !boxValues ? node.value : clone(node);\n\n    while (++index < length) {\n        errorPath[index] = requestedPath[index];\n    }\n\n    (results.errors || (results.errors = [])).push({\n        path: errorPath,\n        value: errorValue\n    });\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/onError.js","var arr = new Array(2);\nvar onValue = require('./onValue');\nvar FalcorJSON = require('./FalcorJSON');\nvar isExpired = require('../../isExpired');\nvar onValueType = require('../onValueType');\nvar originalOnMissing = require('../onMissing');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar onMaterialize = require('../onMaterializeFlatBuffer');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar getHashCode = require('@graphistry/falcor-path-utils/lib/getHashCode');\nvar flatBufferToPaths = require('@graphistry/falcor-path-utils/lib/flatBufferToPaths');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, jsonArg, path,\n                                depth, seed, results, requestedPath,\n                                optimizedPath, optimizedLength,\n                                fromReferenceArg, referenceContainer,\n                                modelRoot, expired, expireImmediate,\n                                branchSelector, boxValues, materialized,\n                                hasDataSource, treatErrorsAsValues,\n                                allowFromWhenceYouCame) {\n\n    var json = jsonArg, type, refTarget;\n    var fromReference = fromReferenceArg;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === node ||\n        undefined !== (type = node.$type) ||\n        undefined === path) {\n        arr[1] = hasDataSource && node === undefined;\n        arr[0] = onValueType(node, type, json,\n                             path, depth, seed, results,\n                             requestedPath, depth,\n                             optimizedPath, optimizedLength,\n                             fromReference, modelRoot, expired, expireImmediate,\n                             branchSelector, boxValues, materialized, hasDataSource,\n                             treatErrorsAsValues, onValue, onMissing, onMaterialize);\n        return arr;\n    }\n\n    var f_meta, f_old_keys, f_new_keys, f_code = '';\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        keys = path['$keys'],\n        nodeAbsPath, jsonAbsPath,\n        nextDepth = depth + 1, rangeEnd,\n        nextJSON, nextReferenceContainer,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath, refContainerRefPath;\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[f_abs_path];\n    }\n\n    if (!json || 'object' !== typeof json) {\n        json = undefined;\n    } else if (f_meta = json[f_meta_data]) {\n\n        nodeAbsPath = node[f_abs_path];\n        jsonAbsPath = f_meta[f_meta_abs_path];\n\n        if (!branchSelector && !(json instanceof FalcorJSON)) {\n            json.__proto__ = {};\n            json.__proto__[f_meta_data] = f_meta;\n            json.__proto__.__proto__ = FalcorJSON.prototype;\n        }\n\n        if (!arrayEqual(nodeAbsPath, jsonAbsPath)) {\n            f_meta['$code'] = '';\n            f_meta[f_meta_status] = 'pending';\n            f_meta[f_meta_abs_path] = nodeAbsPath;\n            f_meta[f_meta_version] = node[f_version];\n            refContainerRefPath && (f_meta[f_meta_deref_to] = refContainerRefPath);\n            refContainerAbsPath && (f_meta[f_meta_deref_from] = refContainerAbsPath);\n            if (f_old_keys = f_meta[f_meta_keys]) {\n                f_meta[f_meta_keys] = Object.create(null);\n                for (nextKey in f_old_keys) {\n                    if (f_old_keys[nextKey]) {\n                        delete json[nextKey];\n                    }\n                }\n            }\n            arr[0] = json;\n            arr[1] = true;\n            return arr;\n        } else if (!(\n            f_meta[f_meta_version]  !== node[f_version]  ||\n            f_meta['$code']         !== path['$code'])) {\n            results.hasValue = true;\n            arr[0] = json;\n            arr[1] = false;\n            return arr;\n        }\n\n        f_old_keys = f_meta[f_meta_keys];\n        f_meta[f_meta_abs_path] = nodeAbsPath;\n        f_meta[f_meta_version] = node[f_version];\n        refContainerRefPath && (f_meta[f_meta_deref_to] = refContainerRefPath);\n        refContainerAbsPath && (f_meta[f_meta_deref_from] = refContainerAbsPath);\n    }\n\n    f_new_keys = Object.create(null);\n\n    var keysIndex = -1;\n    var keysLength = keys.length;\n    var nextPath, nextPathKey,\n        hasMissingPath = false;\n\n    iteratingKeyset:\n    while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            f_code = '' + getHashCode('' + f_code + 'null');\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n            nextPathKey = nextKey;\n        }\n        // If the Keyset isn't null or primitive, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n            nextPathKey = '[' + nextKey + '..' + rangeEnd + ']';\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextPath === undefined) {\n\n                walkPathAndBuildOutput(\n                    root, next, nextJSON, nextPath, nextDepth, seed,\n                    results, requestedPath, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined && !materialized) {\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n            else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                    // If the reference is expired, it will be invalidated and\n                    // reported as missing in the next call to walkPath below.\n                    next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                walkPathAndBuildOutput(\n                    root, next, nextJSON, nextPath, nextDepth, seed,\n                    results, requestedPath, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined) {\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = {};\n                f_meta[f_meta_version] = node[f_version];\n                f_meta[f_meta_abs_path] = node[f_abs_path];\n                refContainerRefPath && (f_meta[f_meta_deref_to] = refContainerRefPath);\n                refContainerAbsPath && (f_meta[f_meta_deref_from] = refContainerAbsPath);\n                json = {};\n                json[f_meta_data] = f_meta;\n                json.__proto__ = FalcorJSON.prototype;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                // node creation to them.\n                if (branchSelector) {\n                    json = branchSelector(json);\n                } else {\n                    var tmp = json;\n                    json = {};\n                    json.__proto__ = tmp;\n                    tmp = undefined;\n                }\n            }\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && (nextKey in f_old_keys)) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        f_code = '' + getHashCode('' + f_code +\n                                 ( !hasMissingPath ? nextPathKey : '') +\n                                 (  nextPath ? nextPath['$code'] : ''));\n    }\n\n    if (f_meta) {\n        f_meta['$code'] = f_code;\n        f_meta[f_meta_keys] = f_new_keys;\n        f_meta[f_meta_status] = hasMissingPath && 'pending' || 'resolved';\n        if (f_old_keys) {\n            for (nextKey in f_old_keys) {\n                if (f_old_keys[nextKey]) {\n                    delete json[nextKey];\n                }\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n\n    arr[0] = json;\n    arr[1] = hasMissingPath;\n\n    return arr;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, json, branchSelector,\n                   boxValues, onMaterialize, modelRoot) {\n\n    if (reportMaterialized) {\n        return onMaterialize(json, path, depth, depth, branchSelector,\n                             boxValues, modelRoot, results, requestedPath, optimizedPath,\n                             optimizedLength, fromReference, reportMissing, onMissing);\n    }\n\n    var paths = path ? flatBufferToPaths(path) : [[]];\n    var rPath = requestedPath.slice(0, requestedLength);\n\n    return paths.forEach(function(restPath) {\n        requestedLength = depth + restPath.length;\n        return originalOnMissing(rPath.concat(restPath), depth, results,\n                                 requestedPath, requestedLength, fromReference,\n                                 optimizedPath, optimizedLength, reportMissing,\n                                 false, json, branchSelector,\n                                 boxValues, onMaterialize, modelRoot);\n    });\n}\n\nfunction arrayEqual(xs, ys) {\n    if (xs === ys) {\n        return true;\n    }\n    var len = xs.length;\n    if (len !== ys.length) {\n        return false;\n    }\n    while (~--len) {\n        if (xs[len] !== ys[len]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/walkFlatBuffer.js","var arr = new Array(2);\nvar isArray = Array.isArray;\nvar onValue = require('./onValue');\nvar onMissing = require('../onMissing');\nvar FalcorJSON = require('./FalcorJSON');\nvar onValueType = require('../onValueType');\nvar isExpired = require('../../isExpired');\nvar onMaterialize = require('../onMaterialize');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, jsonArg, path,\n                                depth, seed, results,\n                                requestedPath, requestedLength,\n                                optimizedPath, optimizedLength,\n                                fromReferenceArg, referenceContainer,\n                                modelRoot, expired, expireImmediate,\n                                branchSelector, boxValues, materialized,\n                                hasDataSource, treatErrorsAsValues,\n                                allowFromWhenceYouCame) {\n\n    var json = jsonArg, type, refTarget;\n    var fromReference = fromReferenceArg;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (\n        type = node.$type) || (\n        depth === requestedLength)) {\n        arr[1] = hasDataSource && node === undefined;\n        arr[0] = onValueType(node, type, json,\n                             path, depth, seed, results,\n                             requestedPath, requestedLength,\n                             optimizedPath, optimizedLength,\n                             fromReference, modelRoot, expired, expireImmediate,\n                             branchSelector, boxValues, materialized, hasDataSource,\n                             treatErrorsAsValues, onValue, onMissing, onMaterialize);\n        return arr;\n    }\n\n    var f_meta;\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        nextJSON, nextReferenceContainer,\n        keysetIndex = -1, keysetLength = 0,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath, refContainerRefPath;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        arr[0] = json;\n        arr[1] = false;\n        return arr;\n    }\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[f_abs_path];\n    }\n\n    if (!json || 'object' !== typeof json) {\n        json = undefined;\n    } else if (f_meta = json[f_meta_data]) {\n        f_meta[f_meta_version] = node[f_version];\n        f_meta[f_meta_abs_path] = node[f_abs_path];\n        refContainerRefPath && (f_meta[f_meta_deref_to] = refContainerRefPath);\n        refContainerAbsPath && (f_meta[f_meta_deref_from] = refContainerAbsPath);\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    var hasMissingPath = false;\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextDepth === requestedLength) {\n\n                walkPathAndBuildOutput(\n                    root, next, nextJSON, path, nextDepth, seed,\n                    results, requestedPath, requestedLength, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined && !materialized) {\n                    continue;\n                }\n            }\n            else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                    // If the reference is expired, it will be invalidated and\n                    // reported as missing in the next call to walkPath below.\n                    next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                walkPathAndBuildOutput(\n                    root, next, nextJSON, path, nextDepth, seed,\n                    results, requestedPath, requestedLength, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined) {\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = {};\n                f_meta[f_meta_version] = node[f_version];\n                f_meta[f_meta_abs_path] = node[f_abs_path];\n                refContainerRefPath && (f_meta[f_meta_deref_to] = refContainerRefPath);\n                refContainerAbsPath && (f_meta[f_meta_deref_from] = refContainerAbsPath);\n                json = {};\n                json[f_meta_data] = f_meta;\n                json.__proto__ = FalcorJSON.prototype;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                // node creation to them.\n                if (branchSelector) {\n                    json = branchSelector(json);\n                }\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    if (f_meta) {\n        f_meta[f_meta_status] = hasMissingPath && 'pending' || 'resolved';\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    arr[0] = json;\n    arr[1] = hasMissingPath;\n\n    return arr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/walkPath.js","var arr = new Array(2);\nvar clone = require('../../clone');\nvar inlineValue = require('./inlineValue');\nvar promote = require('../../../lru/promote');\nvar isExpired = require('../../isExpired');\nvar createHardlink = require('../../createHardlink');\nvar CircularReferenceError = require('../../../errors/CircularReferenceError');\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, refArg, modelRoot, seed, expireImmediate) {\n\n    promote(modelRoot, refArg);\n\n    var context,\n        ref = refArg,\n        key, type, depth = 0,\n        node = root, path = ref.value,\n        copy = path, length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[f_context])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                throw new CircularReferenceError(path);\n            }\n            // If the node we land on isn't the existing ref context,\n            // create a hard-link between the reference and the node\n            // it points to.\n            else if (node !== context) {\n                createHardlink(ref, node);\n            }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === $ref) {\n\n                promote(modelRoot, node);\n\n                seed && inlineValue(clone(node), path, length, seed);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n\n    return arr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/getReferenceTarget.js","var clone = require('../../clone');\nvar inlineValue = require('./inlineValue');\n\nmodule.exports = onJSONGraphValue;\n\nfunction onJSONGraphValue(node, type, depth, seed, results,\n                          requestedPath, optimizedPath, optimizedLength,\n                          fromReference, boxValues, materialized) {\n\n    var value = node.value;\n\n    // boxValues always clones the node\n    if (boxValues || !(\n        /**\n         * JSON Graph should always clone:\n         * - refs\n         * - errors\n         * - atoms we didn't create\n         * - atoms we created to wrap Objects\n         **/\n        $ref !== type &&\n        $error !== type &&\n        node[f_wrapped_value] &&\n        'object' !== typeof value)) {\n        value = clone(node);\n    }\n\n    results.hasValue = true;\n    inlineValue(value, optimizedPath, optimizedLength, seed);\n    (seed.paths || (seed.paths = [])).push(\n        requestedPath.slice(0, depth + !!fromReference) // depth + 1 if fromReference === true\n    );\n\n    return value;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/onValue.js","var isArray = Array.isArray;\nvar clone = require('../../clone');\nvar onValue = require('./onValue');\nvar inlineValue = require('./inlineValue');\nvar isExpired = require('../../isExpired');\nvar onValueType = require('../onValueType');\nvar onMaterialize = require('../onMaterialize');\nvar originalOnMissing = require('../onMissing');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, path,\n                                depth, seed, results,\n                                requestedPath, requestedLength,\n                                optimizedPath, optimizedLength,\n                                fromReferenceArg, modelRoot, expired, expireImmediate,\n                                boxValues, materialized, hasDataSource, treatErrorsAsValues) {\n\n    var type, refTarget;\n    var fromReference = fromReferenceArg;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (\n        type = node.$type) || (\n        depth === requestedLength)) {\n        return onValueType(node, type, seed,\n                           path, depth, seed, results,\n                           requestedPath, requestedLength,\n                           optimizedPath, optimizedLength,\n                           fromReference, modelRoot, expired, expireImmediate,\n                           undefined, boxValues, materialized, hasDataSource,\n                           treatErrorsAsValues, onValue, onMissing, onMaterialize);\n    }\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        keysetIndex = -1, keysetLength = 0,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        return undefined;\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            keyset = keysOrRanges[keysetIndex];\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            // If we encounter a ref, inline the reference target and continue\n            // evaluating the path.\n            if (next &&\n                nextDepth < requestedLength &&\n                // If the reference is expired, it will be invalidated and\n                // reported as missing in the next call to walkPath below.\n                next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                // Write the cloned ref value into the jsonGraph at the\n                // optimized path. JSONGraph must always clone references.\n                seed && inlineValue(clone(next), optimizedPath, nextOptimizedLength, seed);\n\n                // Retrieve the reference target and next referenceContainer (if\n                // this reference points to other references) and continue\n                // following the path. If the reference resolves to a missing\n                // path or leaf node, it will be handled in the next call to\n                // walkPath.\n                refTarget = getReferenceTarget(root, next, modelRoot, seed, expireImmediate);\n\n                next = refTarget[0];\n                fromReference = true;\n                nextOptimizedPath = refTarget[1];\n                nextOptimizedLength = nextOptimizedPath.length;\n                refTarget[0] = refTarget[1] = undefined;\n            }\n\n            walkPathAndBuildOutput(\n                root, next, path, nextDepth, seed,\n                results, requestedPath, requestedLength, nextOptimizedPath,\n                nextOptimizedLength, fromReference, modelRoot, expired, expireImmediate,\n                boxValues, materialized, hasDataSource, treatErrorsAsValues\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return undefined;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, seed, branchSelector,\n                   boxValues, onMaterialize, modelRoot) {\n\n    var json, isLeaf;\n\n    if (seed && reportMaterialized) {\n\n        (seed.paths || (seed.paths = [])).push(\n            (isLeaf = 0 === requestedLength - depth) &&\n                                 // depth + 1 if fromReference === true\n                requestedPath.slice(0, depth + !!fromReference) ||\n                requestedPath.slice(0, depth).concat(path\n                    .slice(depth, requestedLength + !!fromReference))\n        );\n\n        json = inlineValue(isLeaf && clone(materializedAtom) || undefined,\n                           optimizedPath, optimizedLength, seed, !isLeaf);\n    }\n\n    return originalOnMissing(path, depth, results,\n                             requestedPath, requestedLength, fromReference,\n                             optimizedPath, optimizedLength, reportMissing,\n                             !isLeaf && reportMaterialized, json,\n                             branchSelector, true, onMaterialize, modelRoot);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/walkPath.js","var clone = require('../clone');\nvar onValueType = require('./onValueType');\nvar FalcorJSON = require('./json/FalcorJSON');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = onMaterializeFlatBuffer;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterializeFlatBuffer(jsonArg, path, depth, length,\n                                 branchSelector, boxValues, modelRoot, results,\n                                 requestedPath, optimizedPath, optimizedLength,\n                                 fromReference, reportMissing, onMissing) {\n\n    var json = jsonArg, type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === path) {\n        onValueType(undefined, undefined, json,\n                    path, depth, undefined, results,\n                    requestedPath, depth, optimizedPath,\n                    optimizedLength, fromReference, modelRoot, undefined,\n                    false, branchSelector, boxValues, false, reportMissing,\n                    false, undefined, onMissing, undefined);\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta, f_old_keys, f_new_keys;\n\n    var nextKey,\n        keyset, keyIsRange,\n        keys = path['$keys'],\n        nextDepth = depth + 1, rangeEnd,\n        nextOptimizedLength = optimizedLength + 1;\n\n    if (!json || 'object' !== typeof json) {\n        json = {};\n        json.__proto__ = FalcorJSON.prototype;\n        json[f_meta_data] = f_meta = {};\n        f_meta['$code'] = '';\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[f_meta_data])) {\n        json[f_meta_data] = f_meta = {};\n        f_meta['$code'] = '';\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n    } else {\n        f_old_keys = f_meta[f_meta_keys];\n        f_meta['$code'] = '';\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n    }\n\n    f_new_keys = Object.create(null);\n\n    var nextPath;\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    iteratingKeyset:\n    while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If the Keyset isn't null or primitive, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && (nextKey in f_old_keys)) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // insert the materialized branch\n            json[nextKey] = onMaterializeFlatBuffer(\n                json[nextKey], nextPath, nextDepth,\n                nextDepth, branchSelector, boxValues, modelRoot, results,\n                requestedPath, optimizedPath, nextOptimizedLength,\n                fromReference, reportMissing, onMissing\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n    }\n\n    f_meta[f_meta_keys] = f_new_keys;\n    if (f_old_keys) {\n        for (nextKey in f_old_keys) {\n            if (f_old_keys[nextKey]) {\n                delete json[nextKey];\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMaterializeFlatBuffer.js","var clone = require('./clone');\nvar isInternal = require('../internal/isInternal');\n\nmodule.exports = getCache;\n\nfunction getCache(model, cache) {\n    return getCacheInternal(cache, {}, model._boxed, model._materialized);\n}\n\nfunction getCacheInternal(node, jsonArg, boxValues, materialized) {\n\n    var json = jsonArg, type, value;\n\n    if (!node || typeof node !== 'object') {\n        return node;\n    } else if (type = node.$type) {\n\n        if (undefined === (value = node.value)) {\n            if (materialized) {\n                value = { $type: $atom };\n            } else if (node[f_wrapped_value]) {\n                value = clone(node);\n            }\n        }\n        // boxValues always clones the node\n        else if (boxValues || !(\n            /**\n             * getCache should always clone:\n             * - refs\n             * - errors\n             * - atoms we didn't create\n             * - atoms we created to wrap Objects\n             **/\n            $ref !== type &&\n            $error !== type &&\n            node[f_wrapped_value] &&\n            typeof value !== 'object')) {\n            value = clone(node);\n        }\n        return value;\n    }\n\n    var keys = Object.keys(node);\n    var keysLen = keys.length, keyIndex = -1;\n\n    while (++keyIndex < keysLen) {\n        var key = keys[keyIndex];\n        if (key !== '$size' && !isInternal(key) && undefined !== (value =\n            getCacheInternal(node[key], json && json[key], boxValues, materialized))) {\n            if (json === undefined) {\n                json = {};\n            }\n            json[key] = value;\n        }\n    }\n\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getCache.js","var getBoundCacheNode = require('./getBoundCacheNode');\n\nmodule.exports = getVersion;\n\nfunction getVersion(model, path) {\n    var node = getBoundCacheNode(model, path);\n    var version = node && node[f_version];\n    return (version == null) ? -1 : version;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getVersion.js","var groupCacheArguments = require('../groupCacheArguments');\n\nmodule.exports = {\n    json: invalidate,\n    jsonGraph: invalidate,\n    invalidatePathMaps: require('./invalidatePathMaps'),\n    invalidatePathValues: require('./invalidatePathSets')\n};\n\nfunction invalidate(model, args, seed, progressive, expireImmediate) {\n    if (invalidateArgumentGroups(model, groupCacheArguments(args), expireImmediate)) {\n        var rootChangeHandler = model._root.onChange;\n        rootChangeHandler && rootChangeHandler.call(model._root.topLevelModel);\n    }\n    return {};\n}\n\nfunction invalidateArgumentGroups(model, xs, expireImmediate) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            if (inputType === 'PathValues') {\n                groupedArgs = groupedArgs.map(pluckPaths);\n            }\n            var operation = module.exports['invalidate' + inputType];\n            if (operation(model, groupedArgs, expireImmediate)) {\n                changed = true;\n            }\n        }\n    }\n    return changed;\n}\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/index.js","var wrapNode = require('./wrapNode');\nvar isExpired = require('./isExpired');\nvar insertNode = require('./insertNode');\nvar expireNode = require('./expireNode');\nvar replaceNode = require('./replaceNode');\nvar getSize = require('../support/getSize');\nvar reconstructPath = require('./reconstructPath');\nvar getTimestamp = require('../support/getTimestamp');\nvar updateNodeAncestors = require('./updateNodeAncestors');\n\nmodule.exports = mergeJSONGraphNode;\n\nfunction mergeJSONGraphNode(\n    parentArg, nodeArg, messageArg, key, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var sizeOffset;\n    var node = nodeArg;\n    var parent = parentArg;\n    var message = messageArg;\n\n    var cType, mType,\n        cIsObject, mIsObject,\n        cTimestamp, mTimestamp;\n\n    // If the cache and message are the same, we can probably return early:\n    // - If they're both nullsy,\n    //   - If null then the node needs to be wrapped in an atom and inserted.\n    //     This happens from whole branch merging when a leaf is just a null value\n    //     instead of being wrapped in an atom.\n    //   - If undefined then return null (previous behavior).\n    // - If they're both branches, return the branch.\n    // - If they're both edges, continue below.\n    if (node === message) {\n\n        // The message and cache are both undefined, return undefined.\n        if (message === undefined) {\n            return message;\n        }\n        // There should not be undefined values. Those should always be\n        // wrapped in an $atom\n        else if (message === null) {\n            node = wrapNode(message, undefined, message);\n            parent = updateNodeAncestors(parent, -node.$size, lru, version);\n            node = insertNode(node, parent, key, undefined, optimizedPath);\n            return node;\n        }\n        // Is the cache node a branch? If so, return the cache branch.\n        else if ((\n            cIsObject = !(!node || typeof node !== 'object')) && (\n            cType = node.$type) === undefined) {\n            // Has the branch been introduced to the cache yet? If not,\n            // give it a parent, key, and absolute path.\n            if (node[f_parent] === undefined) {\n                insertNode(node, parent, key, version, optimizedPath);\n            }\n            return node;\n        }\n    } else if (cIsObject = !(!node || typeof node !== 'object')) {\n        cType = node.$type;\n    }\n\n    // If the cache isn't a reference, we might be able to return early.\n    if (cType !== $ref) {\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n        }\n        if (cIsObject && !cType) {\n            // If the cache is a branch and the message is empty or\n            // also a branch, continue with the cache branch.\n            if (message == null || (mIsObject && !mType)) {\n                return node;\n            }\n        }\n    }\n    // If the cache is a reference, we might not need to replace it.\n    else {\n        // If the cache is a reference, but the message is empty,\n        // leave the cache alone...\n        if (message == null) {\n            // ...unless the cache is an expired reference. In that case, expire\n            // the cache node and return undefined.\n            if (isExpired(node, expireImmediate)) {\n                expireNode(node, expired, lru);\n                return void 0;\n            }\n            return node;\n        }\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n            // If the cache and the message are both references,\n            // check if we need to replace the cache reference.\n            if (mType === $ref) {\n                if (node === message) {\n                    // If the cache and message are the same reference,\n                    // we performed a whole-branch merge of one of the\n                    // grandparents. If we've previously graphed this\n                    // reference, break early. Otherwise, continue to\n                    // leaf insertion below.\n                    if (node[f_parent] != null) {\n                        return node;\n                    }\n                } else {\n\n                    cTimestamp = node.$timestamp;\n                    mTimestamp = message.$timestamp;\n\n                    // - If either the cache or message reference is expired,\n                    //   replace the cache reference with the message.\n                    // - If neither of the references are expired, compare their\n                    //   timestamps. If either of them don't have a timestamp,\n                    //   or the message's timestamp is newer, replace the cache\n                    //   reference with the message reference.\n                    // - If the message reference is older than the cache\n                    //   reference, short-circuit.\n                    if (!isExpired(node, expireImmediate) &&\n                        !isExpired(message, expireImmediate) &&\n                        mTimestamp < cTimestamp) {\n                        return void 0;\n                    }\n                }\n            }\n        }\n    }\n\n    // If the cache is a leaf but the message is a branch,\n    // merge the branch over the leaf.\n    if (cType && mIsObject && !mType) {\n        return insertNode(replaceNode(\n                node, message, parent, key, lru, version),\n            parent, key, undefined, optimizedPath\n        );\n    }\n    // If the message is a sentinel or primitive, insert it into the cache.\n    else if (mType || !mIsObject) {\n\n        if (mType === $error && errorSelector) {\n            message = errorSelector(reconstructPath(requestedPath, key), message);\n        }\n\n        // If the cache and the message are the same value, we branch-merged one\n        // of the message's ancestors. If this is the first time we've seen this\n        // leaf, give the message a $size and $type, attach its graph pointers,\n        // and update the cache sizes and versions.\n        if (mType && node === message) {\n            if (!node[f_parent]) {\n                node = wrapNode(node, cType, node.value);\n                parent = updateNodeAncestors(parent, -node.$size, lru, version);\n                node = insertNode(node, parent, key, version, optimizedPath);\n            }\n        }\n        // If the cache and message are different, the cache value is expired,\n        // or the message is a primitive, replace the cache with the message value.\n        // If the message is a sentinel, clone and maintain its type.\n        // If the message is a primitive value, wrap it in an atom.\n        else {\n            var isDistinct = true;\n            // If both the cache and message are primitives, we branch-merged\n            // one of the message's ancestors. Insert the value into the cache.\n            if (!cType && !mType) {\n                isDistinct = true;\n            }\n            // If the cache is a branch, but the message is a leaf, replace the\n            // cache branch with the message leaf.\n            else if (!cIsObject || !isExpired(node, expireImmediate)) {\n                // Compare the current cache value with the new value. If either of\n                // them don't have a timestamp, or the message's timestamp is newer,\n                // replace the cache value with the message value. If a comparator\n                // is specified, the comparator takes precedence over timestamps.\n                if (comparator) {\n                    isDistinct = !(comparator.length < 3 ?\n                        comparator(node, message) : comparator(node, message,\n                            optimizedPath.slice(0, optimizedPath.index))\n                    );\n                } else {\n                    // Comparing either Number or undefined to undefined always results in false.\n                    isDistinct = getTimestamp(message) < getTimestamp(node) === false;\n                }\n            }\n            if (isDistinct) {\n                sizeOffset = getSize(node) - getSize(message =\n                    wrapNode(message, mType, mType ? message.value : message));\n                node = replaceNode(node, message, parent, key, lru, version);\n                parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n                node = insertNode(node, parent, key, version, optimizedPath);\n            }\n        }\n\n        // Promote the message edge in the LRU.\n        if (isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge.\n             */\n            true)) {\n            expireNode(node, expired, lru);\n        }\n    }\n    else if (node == null) {\n        node = insertNode(message, parent, key, undefined, optimizedPath);\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/mergeJSONGraphNode.js","var getJSON = require('../get/json');\nvar getJSONGraph = require('../get/jsonGraph');\nvar groupCacheArguments = require('../groupCacheArguments');\n\nmodule.exports = {\n    json: json,\n    jsonGraph: jsonGraph,\n    setPathMaps: require('./setPathMaps'),\n    setPathValues: require('./setPathValues'),\n    setJSONGraphs: require('./setJSONGraphs')\n};\n\nfunction json(model, _args, data, progressive, expireImmediate) {\n\n    var set, get, jsong,\n        changed, relative, optimized,\n        missing, fragments, requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args, expireImmediate);\n\n    if ((relative = set.requested).length) {\n\n        if (!(changed = set.changed) || progressive) {\n            get = getJSON(model, relative, data, progressive, expireImmediate);\n        }\n\n        if (changed) {\n\n            jsong = getJSONGraph({\n                _root: model._root,\n                _boxed: model._boxed, _materialized: true,\n                _treatErrorsAsValues: model._treatErrorsAsValues\n            }, set.optimized, {}, progressive, expireImmediate);\n\n            fragments = jsong.data;\n            missing = fragments.paths;\n            requested = jsong.requested;\n\n            var rootChangeHandler = model._root.onChange;\n            rootChangeHandler && rootChangeHandler.call(model._root.topLevelModel);\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: get && get.error,\n        errors: get && get.errors,\n        hasValue: get && get.hasValue\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive, expireImmediate) {\n\n    var set, jsong,\n        changed, relative, optimized,\n        missing, fragments, requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args, expireImmediate);\n\n    if ((relative = set.requested).length && (\n         progressive || (changed = set.changed))) {\n\n        jsong = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed, _materialized: true,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, set.optimized, data, progressive, expireImmediate);\n\n        fragments = jsong.data;\n        missing = fragments.paths;\n        requested = jsong.requested;\n\n        if (changed) {\n            var rootChangeHandler = model._root.onChange;\n            rootChangeHandler && rootChangeHandler.call(model._root.topLevelModel);\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: jsong && jsong.error,\n        hasValue: jsong && jsong.hasValue\n    };\n}\n\nfunction setGroupsIntoCache(model, xs, expireImmediate_) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var modelRoot = model._root;\n    var errorSelector = modelRoot.errorSelector;\n\n    var expireImmediate = expireImmediate_ && !Boolean(model._source);\n    var comparator = Boolean(model._source) ? null : modelRoot.comparator;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            var operation = module.exports['set' + inputType];\n            var results = operation(model, groupedArgs, errorSelector, comparator, expireImmediate);\n            changed = changed || results[2];\n            optimizedPaths.push.apply(optimizedPaths, results[1]);\n            if (inputType === 'PathValues') {\n                requestedPaths.push.apply(requestedPaths, groupedArgs.map(pluckPaths));\n            } else if (inputType === 'JSONGraphs') {\n                requestedPaths.push.apply(requestedPaths, arrayFlatMap(groupedArgs, pluckPaths));\n            } else {\n                requestedPaths.push.apply(requestedPaths, results[0]);\n            }\n        }\n    }\n\n    return {\n        changed: changed,\n        requested: requestedPaths,\n        optimized: optimizedPaths\n    };\n}\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\nfunction arrayFlatMap(array, selector) {\n    var index = -1;\n    var i = -1;\n    var n = array.length;\n    var array2 = [];\n    while (++i < n) {\n        var array3 = selector(array[i], i, array);\n        var j = -1;\n        var k = array3.length;\n        while (++j < k) {\n            array2[++index] = array3[j];\n        }\n    }\n    return array2;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/index.js","module.exports = transferBackReferences;\n\nfunction transferBackReferences(fromNode, destNode) {\n    var fromNodeRefsLength = fromNode[f_refs_length] || 0,\n        destNodeRefsLength = destNode[f_refs_length] || 0,\n        i = -1;\n    while (++i < fromNodeRefsLength) {\n        var ref = fromNode[f_ref + i];\n        if (ref !== undefined) {\n            ref[f_context] = destNode;\n            destNode[f_ref + (destNodeRefsLength + i)] = ref;\n            fromNode[f_ref + i] = undefined;\n        }\n    }\n    destNode[f_refs_length] = fromNodeRefsLength + destNodeRefsLength;\n    fromNode[f_refs_length] = undefined;\n    return destNode;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/transferBackReferences.js","module.exports = unlinkBackReferences;\n\nfunction unlinkBackReferences(node) {\n    var i = -1, n = node[f_refs_length] || 0;\n    while (++i < n) {\n        var ref = node[f_ref + i];\n        if (ref != null) {\n            ref[f_context] = ref[f_ref_index] = node[f_ref + i] = void 0;\n        }\n    }\n    node[f_refs_length] = void 0;\n    return node;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/unlinkBackReferences.js","module.exports = unlinkForwardReference;\n\nfunction unlinkForwardReference(reference) {\n    var destination = reference[f_context];\n    if (destination) {\n        var i = (reference[f_ref_index] || 0) - 1,\n            n = (destination[f_refs_length] || 0) - 1;\n        while (++i <= n) {\n            destination[f_ref + i] = destination[f_ref + (i + 1)];\n        }\n        destination[f_refs_length] = n;\n        reference[f_ref_index] = reference[f_context] = destination = void 0;\n    }\n    return reference;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/unlinkForwardReference.js","module.exports = hasValidParentReference;\n\nfunction hasValidParentReference() {\n    var reference = this._referenceContainer;\n\n    // Always true when this mode is false.\n    if (!this._allowFromWhenceYouCame) {\n        return true;\n    }\n\n    // If fromWhenceYouCame is true and the first set of keys did not have\n    // a reference, this case can happen.  They are always valid.\n    if (reference === true) {\n        return true;\n    }\n\n    // was invalid before even derefing.\n    if (reference === false) {\n        return false;\n    }\n\n    // Its been disconnected (set over or collected) from the graph.\n    if (reference && reference[f_parent] === undefined) {\n        return false;\n    }\n\n    // The reference has expired but has not been collected from the graph.\n    if (reference && reference[f_invalidated]) {\n        return false;\n    }\n\n    return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/deref/hasValidParentReference.js","var CONTAINER_DOES_NOT_EXIST = 'e';\nvar FalcorJSON = require('../cache/get/json/FalcorJSON');\nvar getCachePosition = require('../cache/getCachePosition');\nvar InvalidDerefInputError = require('../errors/InvalidDerefInputError');\n\nmodule.exports = deref;\n\nfunction deref(json) {\n\n    var seed, f_meta;\n\n    if (!json || 'object' !== typeof json || !(\n        f_meta = json[f_meta_data]) || 'object' !== typeof f_meta) {\n        return null;\n    }\n\n    var cacheRoot = this._root.cache;\n    var recycleJSON = this._recycleJSON;\n    var absolutePath = f_meta[f_meta_abs_path];\n    var referenceContainer, currentRefPath, i, len;\n\n    if (!absolutePath) {\n        if (recycleJSON) {\n            seed = { json: json };\n            seed.__proto__ = FalcorJSON.prototype;\n        }\n        return this._clone({\n            _node: undefined,\n            _seed: seed\n        });\n    } else if (absolutePath.length === 0) {\n        if (recycleJSON) {\n            seed = { json: json };\n            seed.__proto__ = FalcorJSON.prototype;\n        }\n        return this._clone({\n            _node: cacheRoot,\n            _path: absolutePath,\n            _referenceContainer: true,\n            _seed: seed\n        });\n    }\n\n    var originalRefPath = f_meta[f_meta_deref_to];\n    var originalAbsPath = f_meta[f_meta_deref_from];\n\n    // We deref and then ensure that the reference container is attached to\n    // the model.\n    var cacheNode = getCachePosition(cacheRoot, absolutePath);\n    var validContainer = CONTAINER_DOES_NOT_EXIST;\n\n    if (originalAbsPath) {\n\n        validContainer = false;\n\n        i = -1;\n        len = originalAbsPath.length;\n        referenceContainer = cacheRoot;\n        while (++i < len) {\n            referenceContainer = referenceContainer[originalAbsPath[i]];\n            if (!referenceContainer || referenceContainer.$type) {\n                break;\n            }\n        }\n\n        // If the reference container is still a sentinel value then compare\n        // the reference value with refPath.  If they are the same, then the\n        // model is still valid.\n        if (originalRefPath && referenceContainer && referenceContainer.$type === $ref) {\n            validContainer = true;\n            len = originalRefPath.length;\n            currentRefPath = referenceContainer.value;\n            for (i = 0; i < len; ++i) {\n                if (currentRefPath[i] !== originalRefPath[i]) {\n                    cacheNode = undefined;\n                    validContainer = false;\n                    break;\n                }\n            }\n        }\n    }\n\n    // Signal to the deref'd model that it has been disconnected from the\n    // graph or there is no _fromWhenceYouCame\n    if (!validContainer) {\n        referenceContainer = false;\n    }\n\n    // The container did not exist, therefore there is no reference\n    // container and fromWhenceYouCame should always return true.\n    else if (validContainer === CONTAINER_DOES_NOT_EXIST) {\n        referenceContainer = true;\n    }\n\n    if (recycleJSON) {\n        seed = { json: json };\n        seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    return this._clone({\n        _seed: seed,\n        _node: cacheNode,\n        _path: absolutePath,\n        _referenceContainer: referenceContainer\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/deref/index.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'It is not legal to use the JSON Graph ' +\n    'format from a bound Model. JSON Graph format' +\n    ' can only be used from a root model.';\n\n/**\n * When a bound model attempts to retrieve JSONGraph it should throw an\n * error.\n *\n * @private\n */\nmodule.exports = createErrorClass('BoundJSONGraphModelError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/BoundJSONGraphModelError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'Deref can only be used with a non-primitive object from get, set, or call.';\n\n/**\n * An invalid deref input is when deref is used with input that is not generated\n * from a get, set, or a call.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidDerefInputError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidDerefInputError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'The boundPath of the model is not valid since a value or error was found before the path end.';\n\n/**\n * An InvalidModelError can only happen when a user binds, whether sync\n * or async to shorted value.  See the unit tests for examples.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidModelError', function(boundPath, shortedPath) {\n    this.message = MESSAGE;\n    this.boundPath = boundPath;\n    this.shortedPath = shortedPath;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidModelError.js","var createErrorClass = require('./createErrorClass');\n\n/**\n * A request can only be retried up to a specified limit.  Once that\n * limit is exceeded, then an error will be thrown.\n *\n * @private\n */\nmodule.exports = createErrorClass('MaxRetryExceededError', function(maxRetryCount, absolute, relative, optimized) {\n    this.message = '' +\n        'Exceeded the max retry count (' + maxRetryCount + ') for these paths: \\n' +\n        (absolute &&\n        'absolute: [\\n\\t' + printPaths(absolute) + '\\n]\\n' || '') +\n        (relative &&\n        'relative: [\\n\\t' + printPaths(relative) + '\\n]\\n' || '') +\n        (optimized &&\n        'optimized: [\\n\\t' + printPaths(optimized) + '\\n]\\n' || '');\n});\n\nfunction printPaths(paths) {\n    return paths.map(function(path) {\n        return JSON.stringify(path);\n    }).join(',\\n\\t');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/MaxRetryExceededError.js","module.exports = String.fromCharCode(30) + 'f_';\n\n\n\n// WEBPACK FOOTER //\n// ./lib/internal/f_.js","var updateNodeAncestors = require('../cache/updateNodeAncestors');\n\nmodule.exports = collect;\n\nfunction collect(lru, expired, totalArg, max, ratioArg, version) {\n\n    var total = totalArg;\n    var ratio = ratioArg;\n\n    if (typeof ratio !== 'number') {\n        ratio = 0.75;\n    }\n\n    var node, size, targetSize = max * ratio;\n\n    while (node = expired.pop()) {\n        total -= (size = node.$size || 0);\n        updateNodeAncestors(node, size, lru, version);\n    }\n\n    if (total >= max) {\n        var prev = lru[f_tail];\n        while ((total >= targetSize) && (node = prev)) {\n            prev = prev[f_prev];\n            total -= (size = node.$size || 0);\n            updateNodeAncestors(node, size, lru, version);\n        }\n\n        lru[f_tail] = node;\n        if (node == null) {\n            lru[f_head] = undefined;\n        } else {\n            node[f_next] = undefined;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/collect.js","var Source = require('./Source');\nvar Subscriber = require('./Subscriber');\nvar lruCollect = require('../lru/collect');\nvar FalcorJSON = require('../cache/get/json/FalcorJSON');\nvar collapse = require('@graphistry/falcor-path-utils/lib/collapse');\nvar InvalidSourceError = require('../errors/InvalidSourceError');\nvar MaxRetryExceededError = require('../errors/MaxRetryExceededError');\n\nmodule.exports = Call;\n\nfunction Call(type, model, _args) {\n    Source.call(this, type);\n    if (model && _args) {\n        this.type = type;\n        this.source = this;\n        this.model = model;\n        this._args = _args;\n    }\n}\n\nCall.prototype = Object.create(Source.prototype);\n\nCall.prototype.lift = function(operator, source) {\n    source = new Call(source || this);\n    source.type = this.type;\n    source.model = this.model;\n    source._args = this._args;\n    source.operator = operator;\n    operator.data = operator.data || this.operator.data;\n    operator.errors = operator.errors || this.operator.errors;\n    operator.operation = operator.operation || this.operator.operation;\n    operator.progressive = operator.progressive || this.operator.progressive;\n    operator.maxRetryCount = operator.maxRetryCount || this.operator.maxRetryCount;\n    return source;\n}\n\nCall.prototype.operator = function(subscriber) {\n    return this._subscribe(subscriber);\n}\n\nCall.prototype._subscribe = function(subscriber) {\n    subscriber.onNext({\n        type: this.type,\n        args: this._args,\n        model: this.model,\n        version: this.model._root.version\n    });\n    subscriber.onCompleted();\n    return subscriber;\n}\n\nCall.prototype._toJSON = function(dataArg, errors) {\n    var data = dataArg;\n    if (data === undefined) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    return this.lift(new CallOperator(\n        data, errors || this.operator.errors, 'json',\n        this.operator.progressive, this.operator.maxRetryCount\n    ), this.source);\n}\n\nCall.prototype._toJSONG = function(dataArg, errors) {\n    var data = dataArg;\n    if (data === undefined) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    return this.lift(new CallOperator(\n        data, errors || this.operator.errors, 'jsonGraph',\n        this.operator.progressive, this.operator.maxRetryCount\n    ), this.source);\n}\n\nCall.prototype.retry = function(maxRetryCount) {\n    return this.lift(new CallOperator(\n        this.operator.data,\n        this.operator.errors,\n        this.operator.operation,\n        this.operator.progresive,\n        maxRetryCount\n    ), this.source);\n}\n\nCall.prototype.progressively = function() {\n    return this.lift(new CallOperator(\n        this.operator.data,\n        this.operator.errors,\n        this.operator.operation,\n        true,\n        this.operator.maxRetryCount\n    ), this.source);\n}\n\nfunction CallOperator(data, errors, operation, progressive, maxRetryCount) {\n    this.data = data;\n    this.errors = errors;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallOperator.prototype.call = function(source, destination) {\n    return source.subscribe(new CallSubscriber(\n        destination, this.data, this.errors, this.operation, this.progressive\n    ));\n}\n\nfunction CallSubscriber(destination, data, errors, operation, progressive, maxRetryCount) {\n    Subscriber.call(this, destination);\n    this.data = data;\n    this.missing = null;\n    this.request = null;\n    this.started = false;\n    this.retryCount = -1;\n    this.errors = errors;\n    this.errored = false;\n    this.relative = null;\n    this.hasValue = false;\n    this.fragments = null;\n    this.requested = null;\n    this.completed = false;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallSubscriber.prototype = Object.create(Subscriber.prototype);\nCallSubscriber.prototype.operations = {\n    get: require('../cache/get'),\n    set: require('../cache/set'),\n    call: require('../cache/call'),\n    invalidate: require('../cache/invalidate')\n};\n\nCallSubscriber.prototype.next =\nCallSubscriber.prototype.onNext = function(seed) {\n\n    if (!this.started) {\n        this.args = seed.args;\n        this.type = seed.type;\n        this.model = seed.model;\n        this.version = seed.version;\n        this.maxRetryCount = this.maxRetryCount || this.model._root.maxRetryCount;\n        return;\n    } else if (!this.destination) {\n        return;\n    }\n\n    var missing, fragments;\n    var type = seed.type;\n    var args = seed.args || seed.paths;\n\n    var data = this.data;\n    var model = this.model;\n    var errors = this.errors;\n    var results = this.results;\n    var version = this.version;\n    var hasValue = this.hasValue;\n    var operation = this.operation;\n    var progressive = this.progressive;\n    var seedIsImmutable = progressive && data;\n\n    if (model._recycleJSON && this.type === 'get') {\n        seedIsImmutable = false;\n    }\n\n    // If we request paths as JSON in progressive mode, ensure each progressive\n    // valueNode is immutable. If not in progressive mode, we can write into the\n    // same JSON tree until the request is completed.\n    if (seedIsImmutable) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n\n    if (args && args.length) {\n\n        results = this.operations[type]\n            [operation](model, args, data,\n                        progressive || !model._source,\n                        this.retryCount === -1);\n\n        // We must communicate critical errors from get, such as bound path is\n        // broken or this is a JSONGraph request with a bound path.\n        if (results.error) {\n            return tryOnError(this, results.error);\n        }\n\n        errors && results.errors &&\n            errors.push.apply(errors, results.errors);\n\n        if (fragments = results.fragments) {\n            args = results.args;\n            this.fragments = fragments;\n        }\n\n        this.relative = results.relative;\n        this.requested = results.requested;\n        this.missing = missing = results.missing;\n        this.hasValue = hasValue || (hasValue = results.hasValue);\n    }\n\n    // We are done when there are no missing paths or\n    // the model does not have a dataSource to fetch from.\n    this.completed = !missing || !model._source;\n\n    if (type !== 'set') {\n        this.args = args;\n        if (seedIsImmutable) {\n            this.data = mergeInto(data, this.data);\n        }\n    }\n\n    if (progressive && hasValue && data && (data.json || data.jsonGraph)) {\n        tryOnNext(data, operation, model._root, this.destination);\n    }\n}\n\nCallSubscriber.prototype.error =\nCallSubscriber.prototype.onError = function(error) {\n    if (error instanceof InvalidSourceError) {\n        return Subscriber.prototype.onError.call(this, error);\n    }\n    this.errored = true;\n    this.onCompleted(error);\n}\n\nCallSubscriber.prototype.complete =\nCallSubscriber.prototype.onCompleted = function(error) {\n\n    if (!this.destination) {\n        return;\n    }\n\n    var data, type, errors, errored;\n\n    if (!this.started && (this.started = true)) {\n        this.onNext(this);\n    } else if (errored = this.errored) {\n        this.onNext({ type: 'get', paths: this.relative });\n    }\n\n    if (errored || this.completed) {\n        if (!this.progressive && this.hasValue && (\n            (data = this.data) && data.json || data.jsonGraph)) {\n            tryOnNext(data, this.operation, this.model._root, this.destination);\n        }\n        errors = this.errors;\n        if (errored || error || errors && errors.length) {\n            return tryOnError(this, errors.length && errors || error);\n        }\n\n        return Subscriber.prototype.onCompleted.call(this);\n    }\n\n    if (++this.retryCount >= this.maxRetryCount) {\n        return tryOnError(this, new MaxRetryExceededError(\n            this.retryCount,\n            this.requested,\n            this.relative,\n            this.missing\n        ));\n    }\n\n    this.request = this.model._root.requests[this.type](\n        this.model, this.missing, this.relative, this.fragments\n    ).subscribe(this);\n}\n\nCallSubscriber.prototype.dispose =\nCallSubscriber.prototype.unsubscribe = function() {\n\n    var model = this.model;\n    var version = this.version;\n    var request = this.request;\n\n    this.args = null;\n    this.data = null;\n    this.model = null;\n    this.errors = null;\n    this.errored = false;\n    this.started = false;\n    this.hasValue = false;\n    this.completed = false;\n\n    Subscriber.prototype.dispose.call(this);\n\n    if (request) {\n        this.request = null;\n        request.dispose();\n    }\n\n    if (model) {\n\n        var modelRoot = model._root;\n        var cache = modelRoot.cache;\n        var shouldCollectCache = modelRoot.syncRefCount <= 0 &&\n                                 version !== modelRoot.version;\n\n        // Prune the cache via the LRU if this is the last request.\n        if (shouldCollectCache) {\n\n            if (cache) {\n                lruCollect(modelRoot,\n                           modelRoot.expired,\n                           cache.$size || 0,\n                           modelRoot.maxSize,\n                           modelRoot.collectRatio,\n                           modelRoot.version);\n            }\n\n            var rootOnChangesCompletedHandler = modelRoot.onChangesCompleted;\n\n            if (rootOnChangesCompletedHandler) {\n                rootOnChangesCompletedHandler.call(modelRoot.topLevelModel);\n            }\n        }\n    }\n}\n\nfunction tryOnNext(data, operation, modelRoot, destination) {\n    if (operation === 'jsonGraph' && data.paths) {\n        data.paths = collapse(data.paths);\n    }\n    try {\n        ++modelRoot.syncRefCount;\n        destination.onNext(data);\n    } catch(e) {\n        throw e;\n    } finally {\n        --modelRoot.syncRefCount;\n    }\n}\n\nfunction tryOnError(self, error) {\n    try {\n        throw error;\n    } catch (err) {\n        Subscriber.prototype.onError.call(self, err);\n    }\n}\n\nfunction mergeInto(dest, node) {\n\n    var destValue, nodeValue,\n        key, keys = Object.keys(node),\n        index = -1, length = keys.length;\n\n    while (++index < length) {\n\n        key = keys[index];\n\n        if (key === f_meta_data) {\n            dest[f_meta_data] = node[f_meta_data];\n        } else {\n\n            nodeValue = node[key];\n            destValue = dest[key];\n\n            if (destValue !== nodeValue) {\n                if (!nodeValue || typeof nodeValue !== 'object') {\n                    if (destValue === undefined) {\n                        dest[key] = nodeValue;\n                    }\n                } else if (destValue === undefined) {\n                    dest[key] = nodeValue;\n                } else {\n                    mergeInto(destValue, nodeValue);\n                }\n            }\n        }\n    }\n\n    return dest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Call.js","var Source = require('./Source');\nvar Request = require('./Request');\nvar Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar ImmediateScheduler = require('../schedulers/ImmediateScheduler');\n\nmodule.exports = Queue;\n\nfunction Queue(modelRoot) {\n    Subscription.call(this, []);\n    this.modelRoot = modelRoot;\n}\n\nQueue.prototype = Object.create(Subscription.prototype);\n\nQueue.prototype.set = isolateSet;\nQueue.prototype.call = isolateCall;\nQueue.prototype.get = batchAndDedupeGet;\n\nfunction isolateSet(model, optimized, requested, env) {\n    var queue = this;\n    return new Source(function(destination) {\n\n        var request = new Request('set', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = env.jsonGraph;\n        request.requested.push(requested);\n        request.optimized.push(optimized);\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction isolateCall(model, optimized, requested, callArgs) {\n    var queue = this;\n    return new Source(function(destination) {\n\n        var request = new Request('call', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = callArgs;\n        request.boundPath = model._path;\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction batchAndDedupeGet(model, optimized, requested) {\n    return new Dedupe(\n        this, model._source, model._scheduler, requested, optimized\n    );\n}\n\nfunction Dedupe(queue, source, scheduler, requested, optimized) {\n    this.queue = queue;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n    this.requested = requested;\n    this.optimized = optimized;\n}\n\nDedupe.prototype.subscribe = function(destination) {\n\n    var queue = this.queue;\n    var source = this.dataSource;\n    var requested = this.requested;\n    var optimized = this.optimized;\n    var scheduler = this.scheduler;\n\n    var requestsIndex = -1;\n    var requests  = queue.subscriptions;\n    var requestsCount = requests.length;\n    var subscription = new Subscription([], destination);\n\n    while (++requestsIndex < requestsCount) {\n\n        var request = requests[requestsIndex];\n\n        if (request.type !== 'get') {\n            continue;\n        }\n\n        if (request = request.batch(requested, optimized, requested = [], optimized = [])) {\n            subscription.add(request.subscribe(new Subscriber(destination, request)));\n        }\n\n        if (!optimized.length) {\n            break;\n        }\n    }\n\n    if (optimized.length) {\n        request = requests[requestsIndex] =\n            new Request('get', queue, source, scheduler).batch(requested, optimized);\n        subscription.add(request.subscribe(new Subscriber(destination, request)));\n        request.connect();\n    }\n\n    return subscription;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Queue.js","var isArray = Array.isArray;\nvar Subject = require('./Subject');\nvar Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar InvalidSourceError = require('../errors/InvalidSourceError');\n\nvar setJSONGraphs = require('../cache/set/setJSONGraphs');\nvar setPathValues = require('../cache/set/setPathValues');\nvar invalidatePaths = require('../cache/invalidate/invalidatePathSets');\n\nvar toPaths = require('@graphistry/falcor-path-utils/lib/toPaths');\nvar toCollapseMap = require('@graphistry/falcor-path-utils/lib/toCollapseMap');\nvar toCollapseTrees = require('@graphistry/falcor-path-utils/lib/toCollapseTrees');\nvar hasIntersection = require('@graphistry/falcor-path-utils/lib/hasIntersection');\n\nmodule.exports = Request;\n\nfunction Request(type, queue, source, scheduler) {\n    Subject.call(this, [], queue);\n    this.trees = [];\n    this.type = type;\n    this.data = null;\n    this.active = false;\n    this.responded = false;\n    this.paths = null;\n    this.requested = [];\n    this.optimized = [];\n    this.disposable = null;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n}\n\nRequest.prototype = Object.create(Subject.prototype);\n\nRequest.prototype.next =\nRequest.prototype.onNext = function(env) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    this.responded = true;\n    /*\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n    */\n\n    var changed = false;\n    var jsonGraph = env.jsonGraph;\n    var boundPath = this.boundPath;\n    var modelRoot = queue.modelRoot;\n    var invalidated = env.invalidated;\n    var paths = env.paths || this.paths;\n    var requested = this.requested.slice(0);\n    var observers = this.observers.slice(0);\n    var rootChangeHandler = modelRoot.onChange;\n\n    // Run invalidations first.\n    if (invalidated && invalidated.length) {\n        changed = invalidatePaths({ _root: modelRoot, _path: [] }, invalidated, false);\n    }\n\n    if (paths && paths.length && !(!jsonGraph || typeof jsonGraph !== 'object')) {\n        var results = setJSONGraphs(\n            { _root: modelRoot },\n            [{ paths: paths, jsonGraph: jsonGraph }],\n            modelRoot.errorSelector, modelRoot.comparator, false\n        );\n        paths = results[0];\n        changed = changed || results[2];\n    }\n\n    if (changed && rootChangeHandler) {\n        rootChangeHandler.call(modelRoot.topLevelModel);\n    }\n\n    observers.forEach(function(observer, index) {\n        observer.onNext({\n            type: 'get', paths: requested[index] ||\n                filterPathsBoundTo(boundPath, paths)\n        });\n    });\n}\n\nRequest.prototype.error =\nRequest.prototype.onError = function(error) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    error = error || {};\n\n    // Converts errors to object we can insert into the cache.\n    error = !(error instanceof Error) ?\n        // if it's $type error, use it raw\n        error.$type === $error && error ||\n        // Otherwise make it an error\n        { $type: $error, value: error } :\n        // If it's instanceof Error, pluck error.message\n        { $type: $error, value: { message: error.message }};\n\n    var modelRoot = queue.modelRoot;\n\n    var errorPathValues = toPaths(toCollapseTrees(\n        this.requested.reduce(function(collapseMap, paths) {\n            return toCollapseMap(paths, collapseMap);\n        }, {})\n    ))\n    .map(function(path) { return { path: path, value: error }; });\n\n    if (errorPathValues.length) {\n        setPathValues(\n            { _root: modelRoot, _path: [] },\n            errorPathValues,\n            modelRoot.errorSelector,\n            modelRoot.comparator,\n            false\n        );\n    }\n\n    Subject.prototype.onError.call(this, error);\n}\n\nRequest.prototype.complete =\nRequest.prototype.onCompleted = function() {\n    if (this.responded === false) {\n        this.onNext({});\n    }\n    Subject.prototype.onCompleted.call(this);\n}\n\nRequest.prototype.remove = function(subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.trees.splice(index, 1);\n        this.requested.splice(index, 1);\n        this.optimized.splice(index, 1);\n        this.observers.splice(index, 1);\n        this.subscriptions.splice(index, 1);\n    }\n    if (this.subscriptions.length === 0) {\n        this.dispose();\n    }\n    return this;\n}\n\nRequest.prototype.dispose =\nRequest.prototype.unsubscribe = function () {\n    this.trees = [];\n    this.data = null;\n    this.paths = null;\n    this.active = false;\n    this.boundPath = null;\n    this.requested = [];\n    this.optimized = [];\n    var queue = this.parent;\n    if (queue) {\n        this.parent = null;\n        queue.remove(this);\n    }\n    var disposable = this.disposable;\n    if (disposable) {\n        this.disposable = null;\n        if (disposable.dispose) {\n            disposable.dispose();\n        } else if (disposable.unsubscribe) {\n            disposable.unsubscribe();\n        }\n    }\n    Subject.prototype.dispose.call(this);\n}\n\nRequest.prototype.connect = function() {\n    if (!this.active && !this.disposable) {\n        var scheduledDisposable = this.scheduler.schedule(flush.bind(this));\n        if (!this.disposable) {\n            this.disposable = scheduledDisposable;\n        }\n    }\n    return this;\n}\n\nRequest.prototype.batch = function(requested, optimized,\n                                   requestedComplements,\n                                   optimizedComplements) {\n    if (this.active) {\n        var requestedIntersection = [];\n        var optimizedIntersection = [];\n        if (findIntersections(this.trees,\n                              requested, optimized,\n                              requestedComplements,\n                              optimizedComplements,\n                              requestedIntersection,\n                              optimizedIntersection)) {\n            this.requested.push(requestedIntersection);\n            this.optimized.push(optimizedIntersection);\n            this.trees.push(toCollapseTrees(toCollapseMap(\n                optimizedIntersection\n            )));\n            return this;\n        }\n        return null;\n    }\n    this.trees.push({});\n    this.requested.push(requested);\n    this.optimized.push(optimized);\n    return this;\n}\n\nfunction flush() {\n\n    var obs, paths = this.paths = toPaths(toCollapseTrees(\n        this.optimized.reduce(function(collapseMap, paths) {\n            return toCollapseMap(paths, collapseMap);\n        }, {})\n    ));\n\n    this.trees = this.optimized.map(function(paths) {\n        return toCollapseTrees(toCollapseMap(paths));\n    });\n\n    this.active = true;\n\n    try {\n        switch (this.type) {\n            case 'get':\n                obs = this.dataSource.get(paths);\n                break;\n            case 'set':\n                obs = this.dataSource.set({ paths: paths, jsonGraph: this.data });\n                break;\n            case 'call':\n                obs = this.dataSource.call.apply(this.dataSource, this.data);\n                break;\n        }\n        this.disposable = obs.subscribe(this);\n    } catch (e) {\n        this.disposable = {};\n        Subject.prototype.onError.call(this, new InvalidSourceError(e));\n    }\n}\nfunction findIntersections(trees,\n                           requested, optimized,\n                           requestedComplements,\n                           optimizedComplements,\n                           requestedIntersection,\n                           optimizedIntersection) {\n\n    var index = -1;\n    var complementIndex = -1;\n    var reqComplementsIdx = -1;\n    var intersectionIndex = -1;\n    var reqIntersectionIdx = -1;\n    var treesLength = trees.length;\n    var optTotal = optimized.length;\n    var reqTotal = requested.length - 1;\n\n    toNextPath:\n    while (++index < optTotal) {\n\n        var treesIndex = -1;\n        var path = optimized[index];\n        var pathLen = path.length;\n\n        while (++treesIndex < treesLength) {\n            var tree = trees[treesIndex];\n            var subTree = tree[pathLen];\n            if (subTree && hasIntersection(subTree, path, 0, pathLen)) {\n                optimizedIntersection[++intersectionIndex] = path;\n                if (reqIntersectionIdx < reqTotal) {\n                    requestedIntersection[++reqIntersectionIdx] = requested[\n                        index < reqTotal ? index : reqTotal\n                    ];\n                }\n                continue toNextPath;\n            }\n        }\n\n        optimizedComplements[++complementIndex] = path;\n        if (reqComplementsIdx < reqTotal) {\n            requestedComplements[++reqComplementsIdx] = requested[\n                index < reqTotal ? index : reqTotal\n            ];\n        }\n    }\n\n    return ~intersectionIndex;\n}\n\nfunction filterPathsBoundTo(boundPath, paths) {\n\n    var boundLength;\n\n    if (!boundPath || (boundLength = boundPath.length) === 0) {\n        return paths;\n    }\n\n    var filtered = [], filteredIndex = -1, keyIndex;\n    var path, pathsIndex = -1, pathsCount = paths.length;\n\n    outer: while (++pathsIndex < pathsCount) {\n        path = paths[pathsIndex];\n        if (path.length > boundLength) {\n            keyIndex = 0;\n            do {\n                if (path[keyIndex] !== boundPath[keyIndex]) {\n                    continue outer;\n                }\n            } while (++keyIndex < boundLength);\n            filtered[++filteredIndex] = path.slice(boundLength);\n        }\n    }\n\n    return filtered;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Request.js","var Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\n\nmodule.exports = Subject;\n\nfunction Subject(observers, parent) {\n    Subscriber.call(this, null, parent);\n    this.observers = observers || [];\n}\n\nSubject.prototype = Object.create(Subscriber.prototype);\n\n// Unused\n// Subject.prototype.onNext = function(value) {\n//     this.observers.slice(0).forEach(function(observer) {\n//         observer.onNext(value);\n//     });\n// }\n\nSubject.prototype.onError = function(error) {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function(observer) {\n        observer.onError(error);\n    });\n}\n\nSubject.prototype.onCompleted = function() {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function(observer) {\n        observer.onCompleted();\n    });\n}\n\nSubject.prototype.subscribe = function(subscriber) {\n    this.observers.push(subscriber);\n    this.subscriptions.push(subscriber = new Subscription([subscriber], this));\n    return subscriber;\n}\n\nSubject.prototype.dispose =\nSubject.prototype.unsubscribe = function () {\n    this.observers = [];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subject.js","function TimeoutScheduler(delay) {\n    this.delay = delay;\n}\n\nvar TimerDisposable = function TimerDisposable(id) {\n    this.id = id;\n    this.disposed = false;\n};\n\nTimeoutScheduler.prototype.schedule = function schedule(action) {\n    return new TimerDisposable(setTimeout(action, this.delay));\n};\n\nTimerDisposable.prototype.dispose =\nTimerDisposable.prototype.unsubscribe = function() {\n    if (!this.disposed) {\n        clearTimeout(this.id);\n        this.id = null;\n        this.disposed = true;\n    }\n};\n\nmodule.exports = TimeoutScheduler;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/schedulers/TimeoutScheduler.js","var isArray = Array.isArray;\nvar isInternal = require('../internal/isInternal');\n\nmodule.exports = clone;\n\nfunction clone(source) {\n    var dest = source;\n    if (!(!dest || typeof dest !== 'object')) {\n        dest = isArray(source) ? [] : {};\n        for (var key in source) {\n            if (isInternal(key)) {\n                continue;\n            }\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/clone.js","var isObject = require('./isObject');\nmodule.exports = getSize;\n\nfunction getSize(node) {\n    return isObject(node) && node.$expires || undefined;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getExpires.js","var isObject = require('./../support/isObject');\n\nmodule.exports = getType;\n\nfunction getType(node, anyType) {\n    var type = isObject(node) && node.$type || void 0;\n    if (anyType && type) {\n        return 'branch';\n    }\n    return type;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getType.js","var isArray = Array.isArray;\nvar isObject = require('./../support/isObject');\n\nmodule.exports = isPathValue;\n\nfunction isPathValue(pathValue) {\n    return isObject(pathValue) && (\n        isArray(pathValue.path) || (\n            typeof pathValue.path === 'string'\n        ));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isPathValue.js","module.exports = require('./lib/index');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/index.js\n// module id = 103\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = require('./ponyfill');\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/lib/index.js\n// module id = 104\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/lib/ponyfill.js\n// module id = 105\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 106\n// module chunks = 0"],"sourceRoot":""}