{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///falcor.all.min.js","webpack:///webpack/bootstrap 30d81e45ba2ce06308db","webpack:///./lib/cache/isExpired.js","webpack:///./lib/cache/expireNode.js","webpack:///./lib/cache/get/json/FalcorJSON.js","webpack:///./lib/errors/NullInPathError.js","webpack:///./lib/errors/createErrorClass.js","webpack:///./lib/support/isObject.js","webpack:///.-path-utils/lib/support/materializedAtom.js","webpack:///./lib/cache/clone.js","webpack:///./lib/cache/createHardlink.js","webpack:///./lib/support/getSize.js","webpack:///./lib/cache/getCachePosition.js","webpack:///./lib/cache/updateNodeAncestors.js","webpack:///./lib/errors/InvalidKeySetError.js","webpack:///./lib/lru/promote.js","webpack:///./lib/request/Subscriber.js","webpack:///./lib/request/Subscription.js","webpack:///./lib/cache/get/onValueType.js","webpack:///./lib/cache/getBoundCacheNode.js","webpack:///./lib/cache/removeNodeAndDescendants.js","webpack:///./lib/cache/set/setJSONGraphs.js","webpack:///./lib/cache/set/setPathMaps.js","webpack:///./lib/support/isInternalKey.js","webpack:///.-path-utils/lib/flatBufferToPaths.js","webpack:///.-path-utils/lib/getHashCode.js","webpack:///.-path-utils/lib/iterateKeySet.js","webpack:///./lib/cache/get/json/index.js","webpack:///./lib/cache/get/jsonGraph/index.js","webpack:///./lib/cache/get/jsonGraph/inlineValue.js","webpack:///./lib/cache/get/onMissing.js","webpack:///./lib/cache/invalidate/invalidatePathSets.js","webpack:///./lib/cache/removeNode.js","webpack:///./lib/cache/set/setPathValues.js","webpack:///./lib/internal/isInternal.js","webpack:///./lib/values/expires-now.js","webpack:///(webpack)/buildin/global.js","webpack:///.-path-utils/lib/collapse.js","webpack:///.-path-utils/lib/toCollapseMap.js","webpack:///.-path-utils/lib/toCollapseTrees.js","webpack:///.-path-utils/lib/toPaths.js","webpack:///./lib/cache/get/json/getJSON.js","webpack:///./lib/cache/get/json/getReferenceTarget.js","webpack:///./lib/cache/get/json/onValue.js","webpack:///./lib/cache/get/jsonGraph/getJSONGraph.js","webpack:///./lib/cache/get/onMaterialize.js","webpack:///./lib/cache/insertNode.js","webpack:///./lib/cache/invalidate/invalidatePathMaps.js","webpack:///./lib/cache/mergeValueOrInsertBranch.js","webpack:///./lib/cache/reconstructPath.js","webpack:///./lib/cache/replaceNode.js","webpack:///./lib/cache/updateBackReferenceVersions.js","webpack:///./lib/cache/wrapNode.js","webpack:///./lib/errors/CircularReferenceError.js","webpack:///./lib/errors/InvalidSourceError.js","webpack:///./lib/lru/collect.js","webpack:///./lib/lru/splice.js","webpack:///./lib/request/Source.js","webpack:///./lib/schedulers/ImmediateScheduler.js","webpack:///./lib/support/getTimestamp.js","webpack:///./lib/support/isJSONEnvelope.js","webpack:///./lib/support/isJSONGraphEnvelope.js","webpack:///./lib/support/now.js","webpack:///./lib/values/expires-never.js","webpack:///./lib/index.js","webpack:///.-path-utils/lib/computeFlatBufferHash.js","webpack:///.-path-utils/lib/hasIntersection.js","webpack:///.-path-utils/lib/toFlatBuffer.js","webpack:///.-path-utils/lib/toTree.js","webpack:///./lib/Model.js","webpack:///./lib/ModelDataSourceAdapter.js","webpack:///./lib/ModelRoot.js","webpack:///./lib/cache/call/index.js","webpack:///./lib/cache/get/index.js","webpack:///./lib/cache/get/json/onError.js","webpack:///./lib/cache/get/json/walkFlatBuffer.js","webpack:///./lib/cache/get/json/walkPath.js","webpack:///./lib/cache/get/jsonGraph/getReferenceTarget.js","webpack:///./lib/cache/get/jsonGraph/onValue.js","webpack:///./lib/cache/get/jsonGraph/walkPath.js","webpack:///./lib/cache/get/onMaterializeFlatBuffer.js","webpack:///./lib/cache/getCache.js","webpack:///./lib/cache/getVersion.js","webpack:///./lib/cache/groupCacheArguments.js","webpack:///./lib/cache/invalidate/index.js","webpack:///./lib/cache/mergeJSONGraphNode.js","webpack:///./lib/cache/set/index.js","webpack:///./lib/cache/transferBackReferences.js","webpack:///./lib/cache/unlinkBackReferences.js","webpack:///./lib/cache/unlinkForwardReference.js","webpack:///./lib/deref/hasValidParentReference.js","webpack:///./lib/deref/index.js","webpack:///./lib/errors/BoundJSONGraphModelError.js","webpack:///./lib/errors/InvalidDerefInputError.js","webpack:///./lib/errors/InvalidModelError.js","webpack:///./lib/errors/MaxRetryExceededError.js","webpack:///./lib/internal/f_.js","webpack:///./lib/request/Call.js","webpack:///./lib/request/Queue.js","webpack:///./lib/request/Request.js","webpack:///./lib/request/Subject.js","webpack:///./lib/schedulers/TimeoutScheduler.js","webpack:///./lib/support/array-flat-map.js","webpack:///./lib/support/clone.js","webpack:///./lib/support/getExpires.js","webpack:///./lib/support/getType.js","webpack:///./lib/support/isPathValue.js","webpack:///./~/symbol-observable/index.js","webpack:///./~/symbol-observable/lib/index.js","webpack:///./~/symbol-observable/lib/ponyfill.js","webpack:///(webpack)/buildin/module.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","__webpack_require__.i","value","d","__webpack_require__.d","name","getter","Object","defineProperty","configurable","enumerable","get","n","__webpack_require__.n","__esModule","getDefault","getModuleExports","o","__webpack_require__.o","object","property","prototype","hasOwnProperty","p","s","now","$now","$never","module.exports","node","expireImmediate","exp","undefined","splice","expired","lru","global","FalcorJSON","f_meta","bindArrayMethod","fn","bound","arguments","getInst","inst","typeofInst","argsLen","typeofString","typeofObject","toJSON","serialize","toProps","f_meta_inst","f_meta_json","version","json","serializer","includeMetadata","createWithProto","count","total","keys","key","xs","isArray","__proto__","$code","abs_path","deref_to","deref_from","toString","JSON","reduce","descriptors","writable","Array","$__hash","$__version","createErrorClass","message","MESSAGE","init","E","Error","constructor","stack","E.is","x","objTypeof","$type","isInternal","clone","index","length","from","to","backRefs","isObject","getCachePosition","cache","path","type","depth","maxDepth","removeNode","updateBackReferenceVersions","nodeArg","offset","child","keysOrRanges","mesage","EXPIRES_NEVER","head","prev","next","Subscriber","destination","parent","onCompleted","Subscription","error","onError","onNext","complete","Subscriber.prototype.onNext","dest","Subscriber.prototype.onError","signaled","dispose","Subscriber.prototype.onCompleted","Subscriber.prototype.unsubscribe","subscriptions","Subscription.prototype.add","subscription","push","Subscription.prototype.remove","indexOf","Subscription.prototype.unsubscribe","isExpired","expireNode","lruPromote","onValueType","seed","results","requestedPath","requestedLength","optimizedPath","optimizedLength","fromReference","modelRoot","branchSelector","boxValues","materialized","reportMissing","treatErrorsAsValues","onValue","onMissing","onMaterialize","reportMaterialized","getBoundCacheNode","model","isInternalKey","removeNodeAndDescendants","key2","setJSONGraphPathSet","messageRoot","messageParent","requestedPaths","optimizedPaths","comparator","errorSelector","note","branch","keySet","iterateKeySet","optimizedIndex","setNode","nextNode","nextParent","nextOptimizedPath","reference","container","createHardlink","arr","NullInPathError","mergeJSONGraphNode","jsonGraphEnvelopes","initialVersion","jsonGraphEnvelopeIndex","jsonGraphEnvelopeCount","jsonGraphEnvelope","paths","jsonGraph","pathIndex","pathCount","newVersion","rootChangeHandler","setPathMap","pathMap","itr","keyIndex","keyCount","mergeValueOrInsertBranch","pathMapEnvelopes","pathMapIndex","pathMapCount","pathMapEnvelope","flatBufferToPaths","flatBuf","leaf","keysLen","keysIndex","rest","keyset","getHashCode","str","hash","initializeRange","memo","nextValue","el","inlineJSONGraphValue","curr","restPathIndex","restPath","restPathCount","isEmptyKeySet","rangeEnd","mPath","lastKeyIsNull","isRequestedPath","missingPaths","missTotal","missingPath","missDepth","Number","invalidatePathSet","invalidateNode","updateNodeAncestors","getSize","lruSplice","unlinkBackReferences","unlinkForwardReference","setPathSet","pathValues","pathValueIndex","pathValueCount","pathValue","f_","regexp","RegExp","g","Function","eval","e","window","toPaths","toCollapseMap","toCollapseTrees","collapseMap","acc","len","toTree","collapseTrees","collapseKey","collapsePathMap","pathmap","subs","code","codes","codesIndex","codesCount","pathsets","pathsetsCount","subPath","subCode","subKeys","subKeysIndex","subKeysCount","pathsetClone","getSortedKeys","isSafeNumber","sets","parseInt","subSets","firstSubKey","subSetsIndex","subSetsCount","pathset","pathsetIndex","pathsetCount","sortListAscending","a","b","map","sort","materializedAtom","val","num","typeOfString","MIN_SAFE_INTEGER_DIGITS","safeNumberRegEx","MAX_SAFE_INTEGER_DIGITS","typeOfNumber","MAX_SAFE_INTEGER","abs","Math","lengths","allPaths","allPathsLength","typeOfObject","pathsIndex","pathsCount","keysetIndex","keysetCount","isSparseRange","collapseIndex","walkPathAndBuildOutput","walkFlatBufferAndBuildOutput","InvalidModelError","toFlatBuffer","computeFlatBufferHash","getJSON","progressive","referenceContainer","boundPath","isFlatBuffer","data","recycleJSON","hasDataSource","Boolean","allowFromWhenceYouCame","requested","boundRequested","promote","CircularReferenceError","getReferenceTarget","ref","context","copy","onJSONValue","BoundJSONGraphModelError","getJSONGraph","nextDepth","keysetLength","iteratingKeyset","nextKey","keyIsRange","InvalidKeySetError","typeofNumber","invalidatePathMap","getType","getTimestamp","wrapNode","insertNode","replaceNode","reconstructPath","mType","isDistinct","sizeOffset","currentPath","transferBackReferences","replacement","getExpires","expiresNow","typeArg","size","modelCreated","atomSize","expires","referencePath","totalArg","max","ratioArg","ratio","shouldUpdate","targetSize","Source","subscribe","source","$$observable","default","Source.prototype.operator","Source.prototype.subscribe","y","operator","Source.prototype.then","_promise","resolve","reject","values","rejected","errors","then","ImmediateScheduler","empty","unsubscribe","ImmediateScheduler.prototype.schedule","action","envelope","Date","falcor","opts","Model","keysLength","hasIntersection","tree","pathToFlatBuffer","keysMap","nullBuffer","pathToTree","seedKeySet","options","_node","_path","_source","_root","ModelRoot","_recycleJSON","_scheduler","_seed","_treatErrorsAsValues","_boxed","_materialized","_allowFromWhenceYouCame","setCache","Call","ModelDataSourceAdapter","TimeoutScheduler","collapse","lruCollect","isJSONEnvelope","isJSONGraphEnvelope","setJSONGraphs","getCache","Model.prototype.get","_toJSON","Model.prototype.set","Model.prototype.preload","Model.prototype.call","Model.prototype.invalidate","Model.prototype.getValue","lift","subscriber","Model.prototype.setValue","Model.prototype.setCache","cacheOrJSONGraphEnvelope","Model.prototype.getCache","env","Model.prototype.getVersion","concat","_getVersion","Model.prototype._clone","Model.prototype.batch","schedulerOrDelay","scheduler","scheudle","_clone","Model.prototype.unbatch","Model.prototype.treatErrorsAsValues","Model.prototype.asDataSource","Model.prototype._materialize","Model.prototype._dematerialize","Model.prototype.boxValues","Model.prototype.unboxValues","Model.prototype.withoutDataSource","Model.prototype.toJSON","getPath","Model.prototype.getPath","slice","Model.prototype._fromWhenceYouCame","allow","Model.prototype._optimizePath","_model","ModelDataSourceAdapter.prototype.get","pathSets","apply","_toJSONG","ModelDataSourceAdapter.prototype.set","jsongResponse","set","ModelDataSourceAdapter.prototype.call","args","suffixes","syncRefCount","maxRetryCount","topLevelModel","requests","Requests","collectRatio","maxSize","functionTypeof","onChange","onChangesCompleted","ModelRoot.comparator","cacheNode","messageNode","cType","_args","hasValue","missing","thisPaths","fragments","errorPath","errorValue","refTarget","f_old_keys","f_code","nextJSON","nextReferenceContainer","nextOptimizedLength","optimizedLengthNext","refContainerAbsPath","refContainerRefPath","f_new_keys","nextPath","nextPathKey","hasMissingPath","rPath","originalOnMissing","inlineValue","onJSONGraphValue","isLeaf","onMaterializeFlatBuffer","_copyCache","out","fromKey","cacheNext","outNext","isUserCreatedcacheNext","clonedValue","boxedValue","isPathValue","groupCacheArguments","groups","argIndex","argCount","group","groupType","arg","argType","inputType","invalidate","invalidatePathSets","cIsObject","mIsObject","cTimestamp","mTimestamp","setGroupsIntoCache","changed","groupIndex","groupCount","selector","groupedArgs","operation","pluckPaths","arrayFlatMap","optimized","relative","jsong","setPathMaps","setPathValues","fromNode","destNode","fromNodeRefsLength","destNodeRefsLength","hasValidParentReference","_referenceContainer","cacheRoot","absolutePath","originalRefPath","originalAbsPath","validContainer","CONTAINER_DOES_NOT_EXIST","currentRefPath","shortedPath","printPaths","absolute","String","CallOperator","CallSubscriber","retryCount","completed","tryOnNext","tryOnError","self","err","mergeInto","destValue","nodeValue","InvalidSourceError","MaxRetryExceededError","Call.prototype.lift","Call.prototype.operator","_subscribe","Call.prototype._subscribe","Call.prototype._toJSON","Call.prototype._toJSONG","Call.prototype.retry","progresive","Call.prototype.progressively","CallOperator.prototype.call","CallSubscriber.prototype.onNext","started","seedIsImmutable","operations","CallSubscriber.prototype.onError","errored","CallSubscriber.prototype.onCompleted","request","CallSubscriber.prototype.unsubscribe","rootOnChangesCompletedHandler","Queue","Dedupe","queue","dataSource","Request","isolateSet","isolateCall","callArgs","batchAndDedupeGet","Dedupe.prototype.subscribe","requestsIndex","requestsCount","batch","Subject","responded","active","disposable","flush","obs","filterPathsBoundTo","boundLength","filtered","filteredIndex","outer","invalidatePaths","Request.prototype.onNext","envelopes","envelopeIndex","envelopeCount","invalidated","observers","forEach","observer","Request.prototype.onError","errorPathValues","Request.prototype.onCompleted","Request.prototype.remove","Request.prototype.unsubscribe","Request.prototype.connect","scheduledDisposable","schedule","Request.prototype.batch","requestedComplements","optimizedComplements","requestedIntersection","optimizedIntersection","complementIndex","intersectionIndex","optTotal","reqTotal","pathLen","subTree","Subject.prototype.onError","Subject.prototype.onCompleted","Subject.prototype.subscribe","Subject.prototype.unsubscribe","delay","TimerDisposable","id","disposed","TimeoutScheduler.prototype.schedule","setTimeout","TimerDisposable.prototype.unsubscribe","clearTimeout","array","array2","array3","j","k","anyType","_ponyfill","_ponyfill2","result","symbolObservablePonyfill","_Symbol","Symbol","observable","webpackPolyfill","deprecate","module.deprecate","children"],"mappings":"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","file":"falcor.all.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"falcor\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"falcor\"] = factory();\n\telse\n\t\troot[\"falcor\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"falcor\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"falcor\"] = factory();\n\telse\n\t\troot[\"falcor\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmory imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmory exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tObject.defineProperty(exports, name, {\n/******/ \t\t\tconfigurable: false,\n/******/ \t\t\tenumerable: true,\n/******/ \t\t\tget: getter\n/******/ \t\t});\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 109);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar now = __webpack_require__(60);\nvar $now = __webpack_require__(33);\nvar $never = __webpack_require__(61);\n\nmodule.exports = function isExpired(node, expireImmediate) {\n    var exp = node.$expires;\n    if (exp === undefined || exp === null || exp === $never) {\n        return false;\n    } else if (exp === $now) {\n        return expireImmediate;\n    }\n    return exp < now();\n};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar splice = __webpack_require__(54);\n\nmodule.exports = function expireNode(node, expired, lru) {\n    if (!node[\"\u001eƒ_invalidated\"]) {\n        node[\"\u001eƒ_invalidated\"] = true;\n        expired.push(node);\n        splice(lru, node);\n    }\n    return node;\n};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {function FalcorJSON(f_meta) {\n    if (!f_meta) {\n        this[\"\u001eƒ_meta\"] = {};\n    } else if (!(this[\"\u001eƒ_meta\"] = f_meta[\"\u001eƒ_meta\"])) {\n        this[\"\u001eƒ_meta\"] = f_meta;\n    }\n}\n\nFalcorJSON.prototype.toJSON = toJSON;\nFalcorJSON.prototype.toProps = toProps;\nFalcorJSON.prototype.toString = toString;\nFalcorJSON.prototype.constructor = FalcorJSON;\n\nObject.defineProperties(FalcorJSON.prototype, ['concat', 'copyWithin', 'entries', 'every', 'fill', 'filter', 'find', 'findIndex', 'forEach', 'includes', 'indexOf', 'join', 'keys', 'lastIndexOf', 'map', 'pop', 'push', 'reduce', 'reduceRight', 'reverse', 'shift', 'slice', 'some', 'sort', 'splice', 'unshift', 'values'].reduce(function (descriptors, name) {\n    descriptors[name] = {\n        writable: true, enumerable: false,\n        value: bindArrayMethod(Array.prototype[name])\n    };\n    return descriptors;\n}, {\n    $__hash: {\n        enumerable: false,\n        get: function () {\n            var f_meta = this[\"\u001eƒ_meta\"];\n            return f_meta && f_meta['$code'] || '';\n        }\n    },\n    $__version: {\n        enumerable: false,\n        get: function () {\n            var f_meta = this[\"\u001eƒ_meta\"];\n            return f_meta && f_meta[\"version\"] || 0;\n        }\n    }\n}));\n\nfunction bindArrayMethod(fn) {\n    return (bound.fn = fn) && bound;\n    function bound() {\n        return bound.fn.apply(this, arguments);\n    }\n}\n\nvar isArray = Array.isArray;\nvar typeofObject = 'object';\nvar typeofString = 'string';\n\nfunction getInst(inst) {\n    var typeofInst = typeof inst;\n    var argsLen = arguments.length;\n    if (argsLen === 0) {\n        inst = this;\n    } else if (typeofInst !== typeofString) {\n        if (!inst || typeofInst !== typeofObject) {\n            return inst;\n        }\n    } else if (argsLen !== 1) {\n        return inst;\n    } else {\n        inst = this;\n    }\n    return inst === global ? undefined : inst;\n}\n\nfunction toJSON() {\n    return serialize(getInst.apply(this, arguments), toJSON);\n}\n\nfunction toString(includeMetadata) {\n    return JSON.stringify(serialize(getInst.call(this, this), serialize, includeMetadata === true));\n}\n\nfunction toProps(inst) {\n\n    inst = getInst.apply(this, arguments);\n\n    var f_meta_inst,\n        f_meta_json,\n        version = 0;\n    var json = serialize(inst, toProps, true, true);\n\n    if (inst && (f_meta_inst = inst[\"\u001eƒ_meta\"])) {\n        version = f_meta_inst[\"version\"];\n    }\n\n    if (!(!json || typeof json !== typeofObject)) {\n        if (f_meta_json = json[\"\u001eƒ_meta\"]) {\n            f_meta_json[\"version\"] = version;\n        }\n    }\n\n    return json;\n}\n\nfunction serialize(inst, serializer, includeMetadata, createWithProto) {\n\n    if (!inst || typeof inst !== typeofObject) {\n        return inst;\n    }\n\n    var count, total, f_meta, keys, key, xs;\n\n    if (isArray(inst)) {\n        xs = inst;\n    } else {\n\n        count = -1;\n        keys = Object.keys(inst);\n        total = keys.length;\n        xs = !createWithProto && {} || {\n            __proto__: FalcorJSON.prototype\n        };\n\n        if (includeMetadata && (f_meta = inst[\"\u001eƒ_meta\"])) {\n\n            var $code = f_meta['$code'];\n            var abs_path = f_meta[\"abs_path\"];\n            var deref_to = f_meta[\"deref_to\"];\n            var deref_from = f_meta[\"deref_from\"];\n\n            f_meta = { __proto__: null };\n            $code && (f_meta['$code'] = $code);\n            abs_path && (f_meta[\"abs_path\"] = abs_path);\n            deref_to && (f_meta[\"deref_to\"] = deref_to);\n            deref_from && (f_meta[\"deref_from\"] = deref_from);\n\n            xs[\"\u001eƒ_meta\"] = f_meta;\n\n            if (createWithProto) {\n                xs = { __proto__: xs };\n            }\n        }\n\n        while (++count < total) {\n            if ((key = keys[count]) !== \"\u001eƒ_meta\") {\n                xs[key] = serializer(inst[key], serializer, includeMetadata);\n            }\n        }\n    }\n\n    return xs;\n}\n\nmodule.exports = FalcorJSON;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(34)))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\nvar MESSAGE = '`null` is not allowed in branch key positions.';\n\n/**\n * Do not allow null in path.\n */\nmodule.exports = createErrorClass('NullInPathError', function () {\n  this.message = MESSAGE;\n});\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\nmodule.exports = createErrorClass;\n\nfunction createErrorClass(name, init) {\n    function E(message) {\n        this.message = message;\n        init && init.apply(this, arguments);\n        if (!Error.captureStackTrace) {\n            this.stack = new Error().stack;\n        } else {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n    E.prototype = new Error();\n    E.prototype.name = name;\n    E.prototype.constructor = E;\n    E.is = function (x) {\n        return x.name === name;\n    };\n    return E;\n}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\nvar objTypeof = 'object';\nmodule.exports = function isObject(value) {\n    return value !== null && typeof value === objTypeof;\n};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\nmodule.exports = { $type: 'atom' };\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isInternal = __webpack_require__(32);\n\nmodule.exports = clone;\n\nfunction clone(node) {\n\n    var key,\n        keys = Object.keys(node),\n        json = {},\n        index = -1,\n        length = keys.length;\n\n    while (++index < length) {\n        key = keys[index];\n        if (isInternal(key)) {\n            continue;\n        }\n        json[key] = node[key];\n    }\n\n    return json;\n}\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function createHardlink(from, to) {\n\n    // create a back reference\n    var backRefs = to[\"\u001eƒ_refs_length\"] || 0;\n    to[\"\u001eƒ_ref\" + backRefs] = from;\n    to[\"\u001eƒ_refs_length\"] = backRefs + 1;\n\n    // create a hard reference\n    from[\"\u001eƒ_ref_index\"] = backRefs;\n    from[\"\u001eƒ_context\"] = to;\n};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(5);\nmodule.exports = function getSize(node) {\n    return isObject(node) && node.$size || 0;\n};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * getCachePosition makes a fast walk to the bound value since all bound\n * paths are the most possible optimized path.\n *\n * @param {Model} model -\n * @param {Array} path -\n * @returns {Mixed} - undefined if there is nothing in this position.\n * @private\n */\nmodule.exports = getCachePosition;\n\nfunction getCachePosition(cache, path) {\n\n    var node = cache;\n    var type,\n        depth = 0;\n    var maxDepth = path.length;\n\n    if (maxDepth > 0) {\n        do {\n            node = node[path[depth]];\n\n            while (node && (type = node.$type) === \"ref\") {\n                node = getCachePosition(cache, node.value);\n            }\n        } while (++depth < maxDepth && node && !type);\n    }\n\n    return node;\n};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar removeNode = __webpack_require__(30);\nvar updateBackReferenceVersions = __webpack_require__(49);\n\nmodule.exports = function updateNodeAncestors(nodeArg, offset, lru, version) {\n    var child = nodeArg;\n    do {\n        var node = child[\"\u001eƒ_parent\"];\n        var size = child.$size = (child.$size || 0) - offset;\n        if (size <= 0 && node != null) {\n            removeNode(child, node, child[\"\u001eƒ_key\"], lru);\n        } else if (child[\"\u001eƒ_version\"] !== version) {\n            updateBackReferenceVersions(child, version);\n        }\n        child = node;\n    } while (child);\n    return nodeArg;\n};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\n\n/**\n * InvalidKeySetError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidKeySetError', function (path, keysOrRanges) {\n  this.mesage = '' + 'The KeySet ' + JSON.stringify(keysOrRanges) + ' in path ' + JSON.stringify(path) + ' contains a KeySet. ' + 'Keysets can only contain Keys or Ranges';\n});\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar EXPIRES_NEVER = __webpack_require__(61);\n\n// [H] -> Next -> ... -> [T]\n// [T] -> Prev -> ... -> [H]\nmodule.exports = function lruPromote(root, object) {\n    // Never promote node.$expires === 1.  They cannot expire.\n    if (object.$expires === EXPIRES_NEVER) {\n        return;\n    }\n\n    var head = root[\"\u001eƒ_head\"];\n\n    // Nothing is in the cache.\n    if (!head) {\n        root[\"\u001eƒ_head\"] = root[\"\u001eƒ_tail\"] = object;\n        return;\n    }\n\n    if (head === object) {\n        return;\n    }\n\n    // The item always exist in the cache since to get anything in the\n    // cache it first must go through set.\n    var prev = object[\"\u001eƒ_prev\"];\n    var next = object[\"\u001eƒ_next\"];\n    if (next) {\n        next[\"\u001eƒ_prev\"] = prev;\n    }\n    if (prev) {\n        prev[\"\u001eƒ_next\"] = next;\n    }\n    object[\"\u001eƒ_prev\"] = undefined;\n\n    // Insert into head position\n    root[\"\u001eƒ_head\"] = object;\n    object[\"\u001eƒ_next\"] = head;\n    head[\"\u001eƒ_prev\"] = object;\n\n    // If the item we promoted was the tail, then set prev to tail.\n    if (object === root[\"\u001eƒ_tail\"]) {\n        root[\"\u001eƒ_tail\"] = prev;\n    }\n};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Subscription = __webpack_require__(15);\n\nmodule.exports = Subscriber;\n\nfunction Subscriber(destination, parent, onCompleted) {\n    if (typeof destination === 'function' || typeof parent === 'function' || typeof onCompleted === 'function') {\n        Subscription.call(this, []);\n        this.destination = {\n            error: parent,\n            onError: parent,\n            next: destination,\n            onNext: destination,\n            complete: onCompleted,\n            onCompleted: onCompleted\n        };\n    } else {\n        Subscription.call(this, [], parent);\n        this.parent = parent;\n        this.destination = destination;\n    }\n}\n\nSubscriber.prototype = Object.create(Subscription.prototype);\n\nSubscriber.prototype.next = Subscriber.prototype.onNext = function onNext(value) {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onNext) {\n            dest.onNext(value);\n        } else if (dest.next) {\n            dest.next(value);\n        }\n    }\n};\n\nSubscriber.prototype.error = Subscriber.prototype.onError = function onError(error) {\n    var signaled = false;\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onError) {\n            signaled = true;\n            dest.onError(error);\n        } else if (dest.error) {\n            signaled = true;\n            dest.error(error);\n        }\n        this.dispose();\n    }\n    if (!signaled) {\n        throw error;\n    }\n};\n\nSubscriber.prototype.complete = Subscriber.prototype.onCompleted = function onCompleted() {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onCompleted) {\n            dest.onCompleted();\n        } else if (dest.complete) {\n            dest.complete();\n        }\n        this.dispose();\n    }\n};\n\nSubscriber.prototype.dispose = Subscriber.prototype.unsubscribe = function () {\n    this.destination = null;\n    Subscription.prototype.dispose.call(this);\n};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\nmodule.exports = Subscription;\n\nfunction Subscription(subscriptions, parent) {\n    this.parent = parent;\n    this.subscriptions = subscriptions || [];\n}\n\nSubscription.prototype.add = function (subscription) {\n    return this.subscriptions.push(subscription) && this || this;\n};\n\nSubscription.prototype.remove = function (subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.subscriptions.splice(index, 1);\n    }\n    return this;\n};\n\nSubscription.prototype.dispose = Subscription.prototype.unsubscribe = function () {\n    var subscription,\n        subscriptions = this.subscriptions;\n    while (subscriptions.length) {\n        (subscription = subscriptions.pop()) && subscription.dispose && subscription.dispose();\n    }\n    var parent = this.parent;\n    if (parent) {\n        this.parent = null;\n        parent.remove && parent.remove(this);\n    }\n};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar lruPromote = __webpack_require__(13);\n\nmodule.exports = onValueType;\n\nfunction onValueType(node, type, json, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, reportMissing, treatErrorsAsValues, onValue, onMissing, onMaterialize) {\n\n    var reportMaterialized = reportMissing;\n\n    if (type) {\n        if (isExpired(node, expireImmediate)) {\n            if (!node[\"\u001eƒ_invalidated\"]) {\n                expireNode(node, expired, modelRoot);\n            }\n        } else {\n            lruPromote(modelRoot, node);\n            if (node.value === undefined) {\n                reportMissing = false;\n                reportMaterialized = materialized;\n            } else {\n                if (seed) {\n                    if (fromReference) {\n                        requestedPath[depth] = null;\n                    }\n                    return onValue(node, type, depth, seed, results, requestedPath, optimizedPath, optimizedLength, fromReference, boxValues, materialized, treatErrorsAsValues);\n                }\n                return undefined;\n            }\n        }\n    }\n\n    if (materialized) {\n        seed && (results.hasValue = true);\n    } else if (!reportMaterialized) {\n        return undefined;\n    }\n\n    return onMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, materialized, json, branchSelector, boxValues, onMaterialize);\n}\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar getCachePosition = __webpack_require__(10);\n\nmodule.exports = getBoundCacheNode;\n\nfunction getBoundCacheNode(model, path) {\n    path = path || model._path;\n    var node = model._node;\n    if (!node || node[\"\u001eƒ_parent\"] === undefined || node[\"\u001eƒ_invalidated\"]) {\n        model._node = null;\n        if (path.length === 0) {\n            node = model._root.cache;\n        } else {\n            node = getCachePosition(model._root.cache, path);\n            if (path === model._path) {\n                model._node = node;\n            }\n        }\n    }\n    return node;\n}\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar removeNode = __webpack_require__(30);\nvar isInternalKey = __webpack_require__(21);\n\nmodule.exports = function removeNodeAndDescendants(node, parent, key, lru) {\n    if (removeNode(node, parent, key, lru)) {\n        if (node.$type == null) {\n            for (var key2 in node) {\n                if (!isInternalKey(key2)) {\n                    removeNodeAndDescendants(node[key2], node, key2, lru);\n                }\n            }\n        }\n        return true;\n    }\n    return false;\n};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(5);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar createHardlink = __webpack_require__(8);\nvar mergeJSONGraphNode = __webpack_require__(83);\nvar NullInPathError = __webpack_require__(3);\nvar iterateKeySet = __webpack_require__(24);\n\n/**\n * Merges a list of {@link JSONGraphEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to merge the {@link JSONGraphEnvelope}s.\n * @param {Array.<PathValue>} jsonGraphEnvelopes - the {@link JSONGraphEnvelope}s to merge.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setJSONGraphs(model, jsonGraphEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n    var initialVersion = cache[\"\u001eƒ_version\"];\n\n    var requestedPath = [];\n    var optimizedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var jsonGraphEnvelopeIndex = -1;\n    var jsonGraphEnvelopeCount = jsonGraphEnvelopes.length;\n\n    while (++jsonGraphEnvelopeIndex < jsonGraphEnvelopeCount) {\n\n        var jsonGraphEnvelope = jsonGraphEnvelopes[jsonGraphEnvelopeIndex];\n        var paths = jsonGraphEnvelope.paths;\n        var jsonGraph = jsonGraphEnvelope.jsonGraph;\n\n        var pathIndex = -1;\n        var pathCount = paths.length;\n\n        while (++pathIndex < pathCount) {\n\n            var path = paths[pathIndex];\n            optimizedPath.index = 0;\n\n            setJSONGraphPathSet(path, 0, cache, cache, cache, jsonGraph, jsonGraph, jsonGraph, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n        }\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n    arr[3] = undefined;\n    arr[4] = undefined;\n\n    var newVersion = cache[\"\u001eƒ_version\"];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (initialVersion !== newVersion) {\n        modelRoot.version = version;\n        rootChangeHandler && rootChangeHandler();\n    }\n\n    return [requestedPaths, optimizedPaths, initialVersion !== newVersion];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setJSONGraphPathSet(path, depth, root, parent, node, messageRoot, messageParent, message, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n\n        var results = setNode(root, parent, node, messageRoot, messageParent, message, key, branch, false, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = results[0];\n        var nextParent = results[1];\n        var nextOptimizedPath = results[4];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setJSONGraphPathSet(path, depth + 1, root, nextParent, nextNode, messageRoot, results[3], results[2], requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(root, node, messageRoot, message, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var messageParent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        messageParent = messageRoot;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var index = 0;\n        var container = node;\n        var count = reference.length - 1;\n        parent = node = root;\n        messageParent = message = messageRoot;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            optimizedPath.index = index;\n\n            var results = setNode(root, parent, node, messageRoot, messageParent, message, key, branch, true, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n            node = results[0];\n            optimizedPath = results[4];\n            if (!node || typeof node !== 'object') {\n                optimizedPath.index = index;\n                return results;\n            }\n            parent = results[1];\n            message = results[2];\n            messageParent = results[3];\n        } while (index++ < count);\n\n        optimizedPath.index = index;\n\n        if (container[\"\u001eƒ_context\"] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(root, parent, node, messageRoot, messageParent, message, key, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        var results = setReference(root, node, messageRoot, message, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        message = results[2];\n        messageParent = results[3];\n        optimizedPath = results[4];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[\"\u001eƒ_key\"];\n            }\n        } else {\n            parent = node;\n            messageParent = message;\n            node = parent[key];\n            message = messageParent && messageParent[key];\n        }\n\n        node = mergeJSONGraphNode(parent, node, message, key, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n\n    return arr;\n}\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(3);\nvar isArray = Array.isArray;\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar createHardlink = __webpack_require__(8);\nvar getCachePosition = __webpack_require__(10);\nvar isInternalKey = __webpack_require__(21);\nvar NullInPathError = __webpack_require__(3);\nvar mergeValueOrInsertBranch = __webpack_require__(46);\n\n/**\n * Sets a list of {@link PathMapEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of {@link PathMapEnvelope}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setPathMaps(model, pathMapEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n    var parent = node[\"\u001eƒ_parent\"] || cache;\n    var initialVersion = cache[\"\u001eƒ_version\"];\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathMapIndex = -1;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathMap(pathMapEnvelope.json, 0, cache, parent, node, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, modelRoot, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    var newVersion = cache[\"\u001eƒ_version\"];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (initialVersion !== newVersion) {\n        modelRoot.version = version;\n        rootChangeHandler && rootChangeHandler();\n    }\n\n    return [requestedPaths, optimizedPaths, initialVersion !== newVersion];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setPathMap(pathMap, depth, root, parent, node, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var keys = getKeys(pathMap);\n\n    if (keys && keys.length) {\n\n        var keyIndex = 0;\n        var keyCount = keys.length;\n        var optimizedIndex = optimizedPath.index;\n\n        do {\n            var key = keys[keyIndex];\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n\n            requestedPath.depth = depth;\n\n            var results = setNode(root, parent, node, key, child, branch, false, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n            requestedPath[depth] = key;\n            requestedPath.index = depth;\n\n            var nextNode = results[0];\n            var nextParent = results[1];\n            var nextOptimizedPath = results[2];\n            nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n            if (nextNode) {\n                if (branch) {\n                    setPathMap(child, depth + 1, root, nextParent, nextNode, requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n                } else {\n                    requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                    optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n                }\n            }\n            if (++keyIndex >= keyCount) {\n                break;\n            }\n            optimizedPath.index = optimizedIndex;\n        } while (true);\n    }\n}\n/* eslint-enable */\n\nfunction setReference(value, root, node, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n        var container = node;\n        parent = root;\n\n        node = node[\"\u001eƒ_context\"];\n\n        if (node != null) {\n            parent = node[\"\u001eƒ_parent\"] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n            optimizedPath.index = index;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                var results = setNode(root, parent, node, key, value, branch, true, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n                node = results[0];\n                optimizedPath = results[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return results;\n                }\n                parent = results[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[\"\u001eƒ_context\"] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(root, parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        var results = setReference(value, root, node, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        optimizedPath = results[2];\n        type = node && node.$type;\n    }\n\n    if (type === void 0) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[\"\u001eƒ_key\"];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction getKeys(pathMap) {\n\n    if (!(!pathMap || typeof pathMap !== 'object') && !pathMap.$type) {\n        var keys = [];\n        var itr = 0;\n        if (isArray(pathMap)) {\n            keys[itr++] = 'length';\n        }\n        for (var key in pathMap) {\n            if (isInternalKey(key)) {\n                continue;\n            }\n            keys[itr++] = key;\n        }\n        return keys;\n    }\n\n    return void 0;\n}\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Determined if the key passed in is an internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nmodule.exports = isInternalKey;\n\nvar isInternal = __webpack_require__(32);\n\nfunction isInternalKey(key) {\n  return key && key[0] === '$' || isInternal(key);\n}\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\nmodule.exports = flatBufferToPaths;\n\nfunction flatBufferToPaths(flatBuf, paths, path) {\n\n    path = path || [];\n    paths = paths || [];\n\n    var leaf = [];\n    var keys = flatBuf['$keys'];\n    var keysLen = keys.length;\n    var keysIndex = -1,\n        key,\n        len;\n\n    while (++keysIndex < keysLen) {\n\n        var rest = flatBuf[keysIndex];\n        var keyset = keys[keysIndex];\n\n        if (!rest) {\n            leaf.push(keyset);\n        } else {\n            flatBufferToPaths(rest, paths, path.concat([keyset]));\n        }\n    }\n\n    if (leaf.length === 1) {\n        paths.push(path.concat(leaf));\n    } else if (leaf.length > 1) {\n        paths.push(path.concat([leaf]));\n    }\n\n    return paths;\n}\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\nmodule.exports = getHashCode;\n\nfunction getHashCode(str) {\n    var hash = 5381,\n        i = str.length;\n    while (i) {\n        hash = hash * 33 ^ str.charCodeAt(--i);\n    }\n    // JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n    // integers. Since we want the results to be always positive, convert the\n    // signed int to an unsigned by doing an unsigned bitshift.\n    return hash >>> 0;\n}\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\nvar isArray = Array.isArray;\n\n/**\n * Takes in a keySet and a note attempts to iterate over it.\n * If the value is a primitive, the key will be returned and the note will\n * be marked done\n * If the value is an object, then each value of the range will be returned\n * and when finished the note will be marked done.\n * If the value is an array, each value will be iterated over, if any of the\n * inner values are ranges, those will be iterated over.  When fully done,\n * the note will be marked done.\n *\n * @param {Object|Array|String|Number} keySet -\n * @param {Object} note - The non filled note\n * @returns {String|Number|undefined} - The current iteration value.\n * If undefined, then the keySet is empty\n * @public\n */\nmodule.exports = function iterateKeySet(keySet, note) {\n    if (note.isArray === undefined) {\n        initializeNote(keySet, note);\n    }\n\n    // Array iteration\n    if (note.isArray) {\n        var nextValue;\n\n        // Cycle through the array and pluck out the next value.\n        do {\n            if (note.loaded && note.rangeOffset > note.to) {\n                ++note.arrayOffset;\n                note.loaded = false;\n            }\n\n            var idx = note.arrayOffset,\n                length = keySet.length;\n            if (idx >= length) {\n                note.done = true;\n                break;\n            }\n\n            var el = keySet[note.arrayOffset];\n            var type = typeof el;\n\n            // Inner range iteration.\n            if (type === 'object') {\n                if (!note.loaded) {\n                    initializeRange(el, note);\n                }\n\n                // Empty to/from\n                if (note.empty) {\n                    continue;\n                }\n\n                nextValue = note.rangeOffset++;\n            }\n\n            // Primitive iteration in array.\n            else {\n                    ++note.arrayOffset;\n                    nextValue = el;\n                }\n        } while (nextValue === undefined);\n\n        return nextValue;\n    }\n\n    // Range iteration\n    else if (note.isObject) {\n            if (!note.loaded) {\n                initializeRange(keySet, note);\n            }\n            if (note.rangeOffset > note.to) {\n                note.done = true;\n                return undefined;\n            }\n\n            return note.rangeOffset++;\n        }\n\n        // Primitive value\n        else {\n                note.done = true;\n                return keySet;\n            }\n};\n\nfunction initializeRange(key, memo) {\n    var from = memo.from = key.from || 0;\n    var to = memo.to = key.to || typeof key.length === 'number' && memo.from + key.length - 1 || 0;\n    memo.rangeOffset = memo.from;\n    memo.loaded = true;\n    if (from > to) {\n        memo.empty = true;\n    }\n}\n\nfunction initializeNote(key, note) {\n    note.done = false;\n    var isObject = note.isObject = !!(key && typeof key === 'object');\n    note.isArray = isObject && isArray(key);\n    note.arrayOffset = 0;\n}\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(39);\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(42);\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\nmodule.exports = inlineJSONGraphValue;\n\n/* eslint-disable no-constant-condition */\nfunction inlineJSONGraphValue(node, path, length, seed, branch) {\n\n    var key,\n        depth = 0,\n        prev,\n        curr = seed.jsonGraph;\n\n    if (!curr) {\n        seed.jsonGraph = curr = {};\n    }\n\n    do {\n        prev = curr;\n        key = path[depth++];\n        if (depth >= length) {\n            curr = prev[key] = branch !== true ? node : prev[key] || {};\n            break;\n        }\n        curr = prev[key] || (prev[key] = {});\n    } while (true);\n\n    return curr;\n}\n/* eslint-enable */\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\nvar isArray = Array.isArray;\n\nmodule.exports = onMissing;\n\n/* eslint-disable no-constant-condition */\nfunction onMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, reportMaterialized, json, branchSelector, boxValues, onMaterialize) {\n\n    if (!reportMissing && !reportMaterialized) {\n        return;\n    }\n\n    var keyset,\n        restPathIndex = -1,\n        restPathCount = requestedLength - depth,\n        restPath = restPathCount && new Array(restPathCount) || undefined;\n\n    while (++restPathIndex < restPathCount) {\n        keyset = path[restPathIndex + depth];\n        if (isEmptyKeySet(keyset)) {\n            return;\n        }\n        restPath[restPathIndex] = keyset;\n    }\n\n    var index, count, mPath;\n    var lastKeyIsNull = keyset === null;\n    var isRequestedPath = reportMissing;\n    var missDepth, missTotal, missingPath, missingPaths;\n\n    if (!reportMissing) {\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } else {\n        missDepth = depth;\n        missTotal = requestedLength;\n        missingPath = requestedPath;\n        missingPaths = results.requested || (results.requested = []);\n    }\n\n    do {\n        if (restPathCount < requestedLength || !isRequestedPath) {\n            index = -1;\n            count = missDepth;\n            mPath = new Array(missTotal);\n            while (++index < count) {\n                mPath[index] = missingPath[index];\n            }\n            restPathIndex = -1;\n            while (index < missTotal) {\n                mPath[index++] = restPath[++restPathIndex];\n            }\n        }\n\n        // break after inserting both requested and optimized missing paths\n        if (isRequestedPath = !isRequestedPath) {\n            if (reportMissing) {\n                missingPaths[missingPaths.length] = mPath;\n            }\n            break;\n        }\n\n        missingPaths[missingPaths.length] = mPath || restPath;\n\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missingPaths = results.missing || (results.missing = []);\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } while (true);\n\n    if (reportMaterialized) {\n        return onMaterialize(json, mPath, missDepth, missTotal, branchSelector, boxValues);\n    }\n}\n/* eslint-enable */\n\nfunction isEmptyKeySet(keyset) {\n\n    // false if the keyset is a primitive\n    if ('object' !== typeof keyset) {\n        return false;\n    } else if (keyset === null) {\n        return false;\n    }\n\n    if (isArray(keyset)) {\n        // return true if the keyset is an empty array\n        return keyset.length === 0;\n    }\n\n    var rangeEnd = keyset.to,\n        from = keyset.from || 0;\n    if ('number' !== typeof rangeEnd) {\n        rangeEnd = from + (keyset.length || 0);\n    }\n\n    // false if trying to request incorrect or empty ranges\n    // e.g. { from: 10, to: 0 } or { from: 5, length: 0 }\n    return from >= rangeEnd;\n}\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(2);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar lruPromote = __webpack_require__(13);\nvar getSize = __webpack_require__(9);\nvar createHardlink = __webpack_require__(8);\nvar getBoundCacheNode = __webpack_require__(17);\nvar updateNodeAncestors = __webpack_require__(11);\nvar removeNodeAndDescendants = __webpack_require__(18);\nvar iterateKeySet = __webpack_require__(24);\n\n/**\n * Invalidates a list of Paths in a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathValues.\n * @param {Array.<PathValue>} paths - the PathValues to set.\n */\n\nmodule.exports = function invalidatePathSets(model, paths, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version++;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n    var parent = node[\"\u001eƒ_parent\"] || cache;\n    var initialVersion = cache[\"\u001eƒ_version\"];\n\n    var pathIndex = -1;\n    var pathCount = paths.length;\n\n    while (++pathIndex < pathCount) {\n\n        var path = paths[pathIndex];\n\n        invalidatePathSet(path, 0, cache, parent, node, version, expired, lru, expireImmediate);\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    var newVersion = cache[\"\u001eƒ_version\"];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (rootChangeHandler && initialVersion !== newVersion) {\n        rootChangeHandler();\n    }\n};\n\nfunction invalidatePathSet(path, depth, root, parent, node, version, expired, lru, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n\n    do {\n        arr = invalidateNode(root, parent, node, key, branch, false, version, expired, lru, expireImmediate);\n        var nextNode = arr[0];\n        var nextParent = arr[1];\n        if (nextNode) {\n            if (branch) {\n                invalidatePathSet(path, depth + 1, root, nextParent, nextNode, version, expired, lru, expireImmediate);\n            } else if (removeNodeAndDescendants(nextNode, nextParent, key, lru)) {\n                updateNodeAncestors(nextParent, getSize(nextNode), lru, version);\n            }\n        }\n        key = iterateKeySet(keySet, note);\n    } while (!note.done);\n}\n\nfunction invalidateReference(root, node, version, expired, lru, expireImmediate) {\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return arr;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[\"\u001eƒ_context\"];\n\n    if (node != null) {\n        parent = node[\"\u001eƒ_parent\"] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            arr = invalidateNode(root, parent, node, key, branch, true, version, expired, lru, expireImmediate);\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return arr;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[\"\u001eƒ_context\"] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\nfunction invalidateNode(root, parent, node, key, branch, reference, version, expired, lru, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        arr = invalidateReference(root, node, version, expired, lru, expireImmediate);\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return arr;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type !== void 0) {\n        return [node, parent];\n    }\n\n    if (key == null) {\n        if (branch) {\n            throw new Error('`null` is not allowed in branch key positions.');\n        } else if (node) {\n            key = node[\"\u001eƒ_key\"];\n        }\n    } else {\n        parent = node;\n        node = parent[key];\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar lruSplice = __webpack_require__(54);\nvar unlinkBackReferences = __webpack_require__(86);\nvar unlinkForwardReference = __webpack_require__(87);\n\nmodule.exports = function removeNode(node, parent, key, lru) {\n    if (!(!node || typeof node !== 'object')) {\n        var type = node.$type;\n        if (type) {\n            if (type === \"ref\") {\n                unlinkForwardReference(node);\n            }\n            lruSplice(lru, node);\n        }\n        unlinkBackReferences(node);\n        parent[key] = node[\"\u001eƒ_parent\"] = void 0;\n        return true;\n    }\n    return false;\n};\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(3);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar createHardlink = __webpack_require__(8);\nvar getCachePosition = __webpack_require__(10);\nvar NullInPathError = __webpack_require__(3);\nvar iterateKeySet = __webpack_require__(24);\nvar mergeValueOrInsertBranch = __webpack_require__(46);\n\n/**\n * Sets a list of {@link PathValue}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the {@link PathValue}s.\n * @param {Array.<PathValue>} pathValues - the list of {@link PathValue}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setPathValues(model, pathValues, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n    var parent = node[\"\u001eƒ_parent\"] || cache;\n    var initialVersion = cache[\"\u001eƒ_version\"];\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathValueIndex = -1;\n    var pathValueCount = pathValues.length;\n\n    while (++pathValueIndex < pathValueCount) {\n\n        var pathValue = pathValues[pathValueIndex];\n        var path = pathValue.path;\n        var value = pathValue.value;\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathSet(value, path, 0, cache, parent, node, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, modelRoot, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    var newVersion = cache[\"\u001eƒ_version\"];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (initialVersion !== newVersion) {\n        modelRoot.version = version;\n        rootChangeHandler && rootChangeHandler();\n    }\n\n    return [requestedPaths, optimizedPaths, initialVersion !== newVersion];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setPathSet(value, path, depth, root, parent, node, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var results = setNode(root, parent, node, key, value, branch, false, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = results[0];\n        var nextParent = results[1];\n        var nextOptimizedPath = results[2];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setPathSet(value, path, depth + 1, root, nextParent, nextNode, requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(value, root, node, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var container = node;\n        parent = root;\n\n        node = node[\"\u001eƒ_context\"];\n\n        if (node != null) {\n            parent = node[\"\u001eƒ_parent\"] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                optimizedPath.index = index;\n\n                var results = setNode(root, parent, node, key, value, branch, true, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n                node = results[0];\n                optimizedPath = results[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return results;\n                }\n                parent = results[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[\"\u001eƒ_context\"] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(root, parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        var results = setReference(value, root, node, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        optimizedPath = results[2];\n        type = node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[\"\u001eƒ_key\"];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Determined if the key passed in is an f_ internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nvar f_ = __webpack_require__(94);\nvar regexp = new RegExp('^' + f_, 'i', 'g');\n\nmodule.exports = regexp.test.bind(regexp);\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\nmodule.exports = 0;\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() { return this; })();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar toPaths = __webpack_require__(38);\nvar toCollapseMap = __webpack_require__(36);\nvar toCollapseTrees = __webpack_require__(37);\n\nmodule.exports = function collapse(paths) {\n    return toPaths(toCollapseTrees(toCollapseMap(paths)));\n};\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar flatBufferToPaths = __webpack_require__(22);\n\nmodule.exports = toCollapseMap;\n\nfunction toCollapseMap(paths, collapseMap) {\n    if (!paths) {\n        return collapseMap;\n    } else if (!isArray(paths)) {\n        if (isArray(paths.$keys)) {\n            paths = flatBufferToPaths(paths);\n        }\n    }\n    return paths.reduce(function (acc, path) {\n        var len = path.length;\n        if (!acc[len]) {\n            acc[len] = [];\n        }\n        acc[len].push(path);\n        return acc;\n    }, collapseMap || {});\n}\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar toTree = __webpack_require__(66);\n\nmodule.exports = toCollapseTrees;\n\nfunction toCollapseTrees(collapseMap, collapseTrees) {\n    return Object.keys(collapseMap).reduce(function (collapseTrees, collapseKey) {\n        collapseTrees[collapseKey] = toTree(collapseMap[collapseKey], collapseTrees[collapseKey]);\n        return collapseTrees;\n    }, collapseTrees || {});\n}\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar typeOfObject = 'object';\nvar typeOfString = 'string';\nvar typeOfNumber = 'number';\nvar MAX_SAFE_INTEGER = 9007199254740991; // Number.MAX_SAFE_INTEGER in es6\nvar MAX_SAFE_INTEGER_DIGITS = 16; // String(Number.MAX_SAFE_INTEGER).length\nvar MIN_SAFE_INTEGER_DIGITS = 17; // String(Number.MIN_SAFE_INTEGER).length (including sign)\nvar abs = Math.abs;\nvar safeNumberRegEx = /^(0|(\\-?[1-9][0-9]*))$/;\nvar getHashCode = __webpack_require__(23);\nvar materializedAtom = __webpack_require__(6);\n\n/* jshint forin: false */\nmodule.exports = function toPaths(lengths) {\n    var pathmap;\n    var allPaths = [];\n    var allPathsLength = 0;\n    for (var length in lengths) {\n        if (isSafeNumber(length) && isObject(pathmap = lengths[length])) {\n            var paths = collapsePathMap(pathmap, 0, parseInt(length, 10)).sets;\n            var pathsIndex = -1;\n            var pathsCount = paths.length;\n            while (++pathsIndex < pathsCount) {\n                allPaths[allPathsLength++] = collapsePathSetIndexes(paths[pathsIndex]);\n            }\n        }\n    }\n    return allPaths;\n};\n\nfunction isObject(value) {\n    return value !== null && typeof value === typeOfObject;\n}\n\nfunction collapsePathMap(pathmap, depth, length) {\n\n    var key;\n    var subs = Object.create(null);\n    var code = '' + getHashCode('' + depth);\n\n    var codes = [];\n    var codesIndex = -1;\n    var codesCount = 0;\n\n    var pathsets = [];\n    var pathsetsCount = 0;\n\n    var subPath, subCode, subKeys, subKeysIndex, subKeysCount, subSets, subSetsIndex, subSetsCount, pathset, pathsetIndex, pathsetCount, firstSubKey, pathsetClone;\n\n    subKeys = [];\n    subKeysIndex = -1;\n\n    if (depth < length - 1) {\n\n        subKeysCount = getSortedKeys(pathmap, subKeys);\n\n        while (++subKeysIndex < subKeysCount) {\n            key = subKeys[subKeysIndex];\n            subPath = collapsePathMap(pathmap[key], depth + 1, length);\n            subCode = subPath.code;\n            if (subs[subCode]) {\n                subPath = subs[subCode];\n            } else {\n                codes[codesCount++] = subCode;\n                subPath = subs[subCode] = {\n                    keys: [],\n                    sets: subPath.sets\n                };\n            }\n            code = '' + getHashCode(code + key + subCode);\n\n            isSafeNumber(key) && subPath.keys.push(parseInt(key, 10)) || subPath.keys.push(key);\n        }\n\n        while (++codesIndex < codesCount) {\n\n            key = codes[codesIndex];\n            subPath = subs[key];\n            subKeys = subPath.keys;\n            subKeysCount = subKeys.length;\n\n            if (subKeysCount > 0) {\n\n                subSets = subPath.sets;\n                subSetsIndex = -1;\n                subSetsCount = subSets.length;\n                firstSubKey = subKeys[0];\n\n                while (++subSetsIndex < subSetsCount) {\n\n                    pathset = subSets[subSetsIndex];\n                    pathsetIndex = -1;\n                    pathsetCount = pathset.length;\n                    pathsetClone = new Array(pathsetCount + 1);\n                    pathsetClone[0] = subKeysCount > 1 && subKeys || firstSubKey;\n\n                    while (++pathsetIndex < pathsetCount) {\n                        pathsetClone[pathsetIndex + 1] = pathset[pathsetIndex];\n                    }\n\n                    pathsets[pathsetsCount++] = pathsetClone;\n                }\n            }\n        }\n    } else {\n        subKeysCount = getSortedKeys(pathmap, subKeys);\n        if (subKeysCount > 1) {\n            pathsets[pathsetsCount++] = [subKeys];\n        } else {\n            pathsets[pathsetsCount++] = subKeys;\n        }\n        while (++subKeysIndex < subKeysCount) {\n            code = '' + getHashCode(code + subKeys[subKeysIndex]);\n        }\n    }\n\n    return {\n        code: code,\n        sets: pathsets\n    };\n}\n\nfunction collapsePathSetIndexes(pathset) {\n\n    var keysetIndex = -1;\n    var keysetCount = pathset.length;\n\n    while (++keysetIndex < keysetCount) {\n        var keyset = pathset[keysetIndex];\n        if (isArray(keyset)) {\n            pathset[keysetIndex] = collapseIndex(keyset);\n        }\n    }\n\n    return pathset;\n}\n\n/**\n * Collapse range indexers, e.g. when there is a continuous\n * range in an array, turn it into an object instead:\n *\n * [1,2,3,4,5,6] => {'from':1, 'to':6}\n *\n * @private\n */\nfunction collapseIndex(keyset) {\n\n    // Do we need to dedupe an indexer keyset if they're duplicate consecutive integers?\n    // var hash = {};\n    var keyIndex = -1;\n    var keyCount = keyset.length - 1;\n    var isSparseRange = keyCount > 0;\n\n    while (++keyIndex <= keyCount) {\n\n        var key = keyset[keyIndex];\n\n        if (!isSafeNumber(key) /* || hash[key] === true*/) {\n                isSparseRange = false;\n                break;\n            }\n        // hash[key] = true;\n        // Cast number indexes to integers.\n        keyset[keyIndex] = parseInt(key, 10);\n    }\n\n    if (isSparseRange === true) {\n\n        keyset.sort(sortListAscending);\n\n        var from = keyset[0];\n        var to = keyset[keyCount];\n\n        // If we re-introduce deduped integer indexers, change this comparson to '==='.\n        if (to - from <= keyCount) {\n            return { from: from, to: to };\n        }\n    }\n\n    return keyset;\n}\n\nfunction sortListAscending(a, b) {\n    return a - b;\n}\n\n/* jshint forin: false */\nfunction getSortedKeys(map, keys, sort) {\n    var len = 0;\n    if (map === materializedAtom) {\n        keys[len++] = null;\n    } else {\n        for (var key in map) {\n            keys[len++] = key;\n        }\n        if (len > 1) {\n            keys.sort(sort);\n        }\n    }\n    return len;\n}\n\n// function getHashCode(key) {\n//     var code = 5381;\n//     var index = -1;\n//     var count = key.length;\n//     while (++index < count) {\n//         code = (code << 5) + code + key.charCodeAt(index);\n//     }\n//     return String(code);\n// }\n\n/**\n * Return true if argument is a number or can be cast to a number which\n * roundtrips to the same string.\n * @private\n */\nfunction isSafeNumber(val) {\n    var num = val;\n    var type = typeof val;\n    if (type === typeOfString) {\n        var length = val.length;\n        // Number.MIN_SAFE_INTEGER is 17 digits including the sign.\n        // Anything longer cannot be safe.\n        if (length === 0 || length > MIN_SAFE_INTEGER_DIGITS) {\n            return false;\n        }\n        if (!safeNumberRegEx.test(val)) {\n            return false;\n        }\n        // Number.MAX_SAFE_INTEGER is 16 digits.\n        // Anything shorter must be safe.\n        if (length < MAX_SAFE_INTEGER_DIGITS) {\n            return true;\n        }\n        num = +val;\n    } else if (type !== typeOfNumber) {\n        return false;\n    }\n    // Number.isSafeInteger(num) in es6.\n    return num % 1 === 0 && abs(num) <= MAX_SAFE_INTEGER;\n}\n\n// export for testing\nmodule.exports._isSafeNumber = isSafeNumber;\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar walkPathAndBuildOutput = __webpack_require__(74);\nvar walkFlatBufferAndBuildOutput = __webpack_require__(73);\nvar getBoundCacheNode = __webpack_require__(17);\nvar InvalidModelError = __webpack_require__(92);\nvar toFlatBuffer = __webpack_require__(65);\nvar computeFlatBufferHash = __webpack_require__(63);\n\nmodule.exports = getJSON;\n\nfunction getJSON(model, paths, seed, progressive, expireImmediate) {\n\n    var node,\n        referenceContainer,\n        boundPath = model._path,\n        modelRoot = model._root,\n        cache = modelRoot.cache,\n        requestedPath,\n        requestedLength,\n        optimizedPath,\n        optimizedLength = boundPath && boundPath.length || 0;\n\n    // If the model is bound, get the cache position.\n    if (optimizedLength) {\n        node = getBoundCacheNode(model);\n        // If there was a short, then we 'throw an error' to the outside\n        // calling function which will onError the observer.\n        if (node && node.$type) {\n            return { error: new InvalidModelError(boundPath, boundPath) };\n        }\n        // We need to get the new cache position and copy the bound path.\n        optimizedPath = [];\n        for (var i = 0; i < optimizedLength; ++i) {\n            optimizedPath[i] = boundPath[i];\n        }\n        referenceContainer = model._referenceContainer;\n    } else {\n        node = cache;\n        optimizedPath = [];\n    }\n\n    requestedPath = [];\n\n    var isFlatBuffer = false,\n        json = seed && seed.json,\n        results = { data: seed },\n        boxValues = model._boxed,\n        expired = modelRoot.expired,\n        recycleJSON = model._recycleJSON,\n        materialized = model._materialized,\n        hasDataSource = Boolean(model._source),\n        branchSelector = modelRoot.branchSelector,\n        treatErrorsAsValues = model._treatErrorsAsValues,\n        allowFromWhenceYouCame = model._allowFromWhenceYouCame;\n\n    var arr,\n        path,\n        pathsIndex = 0,\n        pathsCount = paths.length;\n\n    if (pathsCount > 0) {\n        if (recycleJSON) {\n            pathsCount = 1;\n            isFlatBuffer = true;\n            if (!paths[0].$keys) {\n                paths = [computeFlatBufferHash(toFlatBuffer(paths, {}))];\n            }\n            arr = walkFlatBufferAndBuildOutput(cache, node, json, paths[0], 0, seed, results, requestedPath, optimizedPath, optimizedLength,\n            /* fromReference = */false, referenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n            json = arr[0];\n            arr[0] = undefined;\n            arr[1] = undefined;\n        } else {\n            do {\n                path = paths[pathsIndex];\n                requestedLength = path.length;\n                json = walkPathAndBuildOutput(cache, node, json, path,\n                /* depth = */0, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength,\n                /* fromReference = */false, referenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n            } while (++pathsIndex < pathsCount);\n        }\n    }\n\n    var requested = results.requested;\n\n    results.args = isFlatBuffer && paths || requested;\n\n    if (requested && requested.length) {\n        results.relative = results.args;\n        if (optimizedLength) {\n            var boundRequested = [];\n            for (var i = 0, len = requested.length; i < len; ++i) {\n                boundRequested[i] = boundPath.concat(requested[i]);\n            }\n            results.requested = boundRequested;\n        }\n    }\n\n    if (results.hasValue) {\n        seed.json = json;\n    }\n\n    return results;\n}\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(3);\nvar promote = __webpack_require__(13);\nvar isExpired = __webpack_require__(0);\nvar createHardlink = __webpack_require__(8);\nvar CircularReferenceError = __webpack_require__(51);\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, ref, modelRoot, expireImmediate) {\n\n    promote(modelRoot, ref);\n\n    var context,\n        key,\n        type,\n        depth = 0,\n        node = root,\n        path = ref.value,\n        copy = path,\n        length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[\"\u001eƒ_context\"])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                    throw new CircularReferenceError(path);\n                }\n                // If the node we land on isn't the existing ref context,\n                // create a hard-link between the reference and the node\n                // it points to.\n                else if (node !== context) {\n                        createHardlink(ref, node);\n                    }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === \"ref\") {\n\n                promote(modelRoot, node);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n    arr[2] = ref;\n\n    return arr;\n}\n/* eslint-enable */\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar clone = __webpack_require__(7);\nvar onError = __webpack_require__(72);\n\nmodule.exports = onJSONValue;\n\nfunction onJSONValue(node, type, depth, seed, results, requestedPath, optimizedPath, optimizedLength, fromReference, boxValues, materialized, treatErrorsAsValues) {\n\n    if (\"error\" === type && !treatErrorsAsValues) {\n        return onError(node, depth, results, requestedPath, fromReference, boxValues);\n    }\n\n    results.hasValue = true;\n\n    // boxValues always clones the node\n    return !boxValues ? node.value : clone(node);\n}\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar walkPathAndBuildOutput = __webpack_require__(77);\nvar BoundJSONGraphModelError = __webpack_require__(90);\n\nmodule.exports = getJSONGraph;\n\nfunction getJSONGraph(model, paths, seed, progressive, expireImmediate) {\n\n    var node,\n        cache,\n        boundPath = model._path,\n        modelRoot = model._root,\n        requestedPath,\n        requestedLength,\n        optimizedPath,\n        optimizedLength = boundPath && boundPath.length || 0;\n\n    // If the model is bound, then get that cache position.\n    if (optimizedLength) {\n        // JSONGraph output cannot ever be bound or else it will\n        // throw an error.\n        return { error: new BoundJSONGraphModelError() };\n    } else {\n        optimizedPath = [];\n        cache = node = modelRoot.cache;\n    }\n\n    requestedPath = [];\n\n    var boxValues = model._boxed,\n        expired = modelRoot.expired,\n        materialized = model._materialized,\n        hasDataSource = Boolean(model._source),\n        treatErrorsAsValues = model._treatErrorsAsValues,\n        results = { data: seed },\n        pathsIndex = -1,\n        pathsCount = paths.length;\n\n    while (++pathsIndex < pathsCount) {\n        var path = paths[pathsIndex];\n        requestedLength = path.length;\n        walkPathAndBuildOutput(cache, node, path,\n        /* depth = */0, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength,\n        /* fromReference = */false, modelRoot, expired, expireImmediate, boxValues, materialized, hasDataSource, treatErrorsAsValues);\n    }\n\n    results.args = results.relative = results.requested;\n\n    return results;\n}\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar clone = __webpack_require__(7);\nvar FalcorJSON = __webpack_require__(2);\nvar NullInPathError = __webpack_require__(3);\nvar InvalidKeySetError = __webpack_require__(12);\nvar materializedAtom = __webpack_require__(6);\n\nmodule.exports = onMaterialize;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterialize(json, path, depth, length, branchSelector, boxValues) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (depth === length) {\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta;\n\n    var nextKey,\n        keyset,\n        keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd,\n        keysOrRanges,\n        keysetIndex = -1,\n        keysetLength = 0;\n\n    keyset = path[depth];\n\n    if (!json || typeofObject !== typeof json) {\n        json = { __proto__: FalcorJSON.prototype };\n        json[\"\u001eƒ_meta\"] = f_meta = { __proto__: null };\n        f_meta[\"version\"] = 0;\n        f_meta[\"abs_path\"] = path.slice(0, depth);\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[\"\u001eƒ_meta\"])) {\n        json[\"\u001eƒ_meta\"] = f_meta = { __proto__: null };\n        f_meta[\"version\"] = 0;\n        f_meta[\"abs_path\"] = path.slice(0, depth);\n    } else {\n        f_meta[\"version\"] = 0;\n        f_meta[\"abs_path\"] = path.slice(0, depth);\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    throw new InvalidKeySetError(path, keysOrRanges);\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                keyset = keysOrRanges[keysetIndex];\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if (typeofNumber !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            // insert the materialized branch\n            json[nextKey] = onMaterialize(json[nextKey], path, nextDepth, length, branchSelector, boxValues);\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function insertNode(node, parent, key, version, optimizedPath) {\n    node[\"\u001eƒ_key\"] = key;\n    node[\"\u001eƒ_parent\"] = parent;\n\n    if (version !== undefined) {\n        node[\"\u001eƒ_version\"] = version;\n    }\n    if (!node[\"\u001eƒ_abs_path\"]) {\n        node[\"\u001eƒ_abs_path\"] = optimizedPath.slice(0, optimizedPath.index).concat(key);\n    }\n\n    parent[key] = node;\n\n    return node;\n};\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar lruPromote = __webpack_require__(13);\nvar getSize = __webpack_require__(9);\nvar createHardlink = __webpack_require__(8);\nvar getBoundCacheNode = __webpack_require__(17);\nvar isInternalKey = __webpack_require__(21);\nvar updateNodeAncestors = __webpack_require__(11);\nvar removeNodeAndDescendants = __webpack_require__(18);\n\n/**\n * Sets a list of PathMaps into a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of @PathMapEnvelopes to set.\n */\n\nmodule.exports = function invalidatePathMaps(model, pathMapEnvelopes, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version++;\n    var comparator = modelRoot._comparator;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n    var parent = node[\"\u001eƒ_parent\"] || cache;\n    var initialVersion = cache[\"\u001eƒ_version\"];\n\n    var pathMapIndex = -1;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n\n        invalidatePathMap(pathMapEnvelope.json, 0, cache, parent, node, version, expired, lru, comparator, expireImmediate);\n    }\n\n    var newVersion = cache[\"\u001eƒ_version\"];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (rootChangeHandler && initialVersion !== newVersion) {\n        rootChangeHandler();\n    }\n};\n\nfunction invalidatePathMap(pathMap, depth, root, parent, node, version, expired, lru, comparator, expireImmediate) {\n\n    if (!pathMap || typeof pathMap !== 'object' || pathMap.$type) {\n        return;\n    }\n\n    for (var key in pathMap) {\n        if (!isInternalKey(key)) {\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n            var results = invalidateNode(root, parent, node, key, child, branch, false, version, expired, lru, comparator, expireImmediate);\n            var nextNode = results[0];\n            var nextParent = results[1];\n            if (nextNode) {\n                if (branch) {\n                    invalidatePathMap(child, depth + 1, root, nextParent, nextNode, version, expired, lru, comparator, expireImmediate);\n                } else if (removeNodeAndDescendants(nextNode, nextParent, key, lru)) {\n                    updateNodeAncestors(nextParent, getSize(nextNode), lru, version);\n                }\n            }\n        }\n    }\n}\n\nfunction invalidateReference(value, root, node, version, expired, lru, comparator, expireImmediate) {\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        return [undefined, root];\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[\"\u001eƒ_context\"];\n\n    if (node != null) {\n        parent = node[\"\u001eƒ_parent\"] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            var results = invalidateNode(root, parent, node, key, value, branch, true, version, expired, lru, comparator, expireImmediate);\n            node = results[0];\n            if (!node || typeof node !== 'object') {\n                return results;\n            }\n            parent = results[1];\n        } while (index++ < count);\n\n        if (container[\"\u001eƒ_context\"] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    return [node, parent];\n}\n\nfunction invalidateNode(root, parent, node, key, value, branch, reference, version, expired, lru, comparator, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        var results = invalidateReference(value, root, node, version, expired, lru, comparator, expireImmediate);\n\n        node = results[0];\n\n        if (!node && typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        type = node && node.$type;\n    }\n\n    if (type !== void 0) {\n        return [node, parent];\n    }\n\n    if (key == null) {\n        if (branch) {\n            throw new Error('`null` is not allowed in branch key positions.');\n        } else if (node) {\n            key = node[\"\u001eƒ_key\"];\n        }\n    } else {\n        parent = node;\n        node = parent[key];\n    }\n\n    return [node, parent];\n}\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar $now = __webpack_require__(33);\nvar getType = __webpack_require__(103);\nvar getSize = __webpack_require__(9);\nvar getTimestamp = __webpack_require__(57);\n\nvar wrapNode = __webpack_require__(50);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar insertNode = __webpack_require__(44);\nvar replaceNode = __webpack_require__(48);\nvar reconstructPath = __webpack_require__(47);\nvar updateNodeAncestors = __webpack_require__(11);\nvar removeNodeAndDescendants = __webpack_require__(18);\n\nmodule.exports = function mergeValueOrInsertBranch(parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = getType(node, reference);\n\n    if (branch || reference) {\n        if (type && isExpired(node,\n        /* expireImmediate:\n         * force true so the node is marked as\n         * expired but keep using it for the merge if it expires immediately\n         */\n        true)) {\n            expireNode(node, expired, lru);\n            type = node.$expires === $now ? type : 'expired';\n        }\n        if (type && type !== \"ref\" || !node || typeof node !== 'object') {\n            node = replaceNode(node, {}, parent, key, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    } else {\n        var message = value;\n        var isDistinct = true;\n        var mType = getType(message);\n\n        // Compare the current cache value with the new value. If either of\n        // them don't have a timestamp, or the message's timestamp is newer,\n        // replace the cache value with the message value. If a comparator\n        // is specified, the comparator takes precedence over timestamps.\n        if (comparator) {\n            isDistinct = !comparator(node, message, optimizedPath.slice(0, optimizedPath.index));\n        } else if (!mType) {\n            isDistinct = !node || node.value !== message;\n        } else {\n            isDistinct = !type ||\n            // Comparing either Number or undefined to undefined always results in false.\n            getTimestamp(message) < getTimestamp(node) === false || !(\n            // They're the same if the following fields are the same.\n            type !== mType || node.value !== message.value || node.$expires !== message.$expires);\n        }\n\n        if (isDistinct) {\n\n            if (errorSelector && mType === \"error\") {\n                message = errorSelector(reconstructPath(requestedPath, key), message);\n            }\n\n            var sizeOffset = getSize(node) - getSize(message = wrapNode(message, mType, mType ? message.value : message));\n\n            node = replaceNode(node, message, parent, key, lru, version);\n            parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    }\n\n    return node;\n};\n\n/***/ },\n/* 47 */\n/***/ function(module, exports) {\n\n/**\n * Reconstructs the path for the current key, from currentPath (requestedPath)\n * state maintained during set/merge walk operations.\n *\n * During the walk, since the requestedPath array is updated after we attempt to\n * merge/insert nodes during a walk (it reflects the inserted node's parent branch)\n * we need to reconstitute a path from it.\n *\n * @param  {Array} currentPath The current requestedPath state, during the walk\n * @param  {String} key        The current key value, during the walk\n * @return {Array} A new array, with the path which represents the node we're about\n * to insert\n */\nmodule.exports = function reconstructPath(currentPath, key) {\n\n  var path = currentPath.slice(0, currentPath.depth);\n  path[path.length] = key;\n\n  return path;\n};\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar transferBackReferences = __webpack_require__(85);\nvar removeNodeAndDescendants = __webpack_require__(18);\nvar updateBackReferenceVersions = __webpack_require__(49);\n\nmodule.exports = function replaceNode(node, replacement, parent, key, lru, version) {\n    if (node === replacement) {\n        return node;\n    } else if (!(!node || typeof node !== 'object')) {\n        transferBackReferences(node, replacement);\n        removeNodeAndDescendants(node, parent, key, lru);\n        updateBackReferenceVersions(replacement, version);\n    }\n\n    parent[key] = replacement;\n    return replacement;\n};\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function updateBackReferenceVersions(nodeArg, version) {\n    var stack = [nodeArg];\n    var count = 0;\n    do {\n        var node = stack[count];\n        if (node && node[\"\u001eƒ_version\"] !== version) {\n            node[\"\u001eƒ_version\"] = version;\n            stack[count++] = node[\"\u001eƒ_parent\"];\n            var i = -1;\n            var n = node[\"\u001eƒ_refs_length\"] || 0;\n            while (++i < n) {\n                stack[count++] = node[\"\u001eƒ_ref\" + i];\n            }\n        }\n    } while (--count > -1);\n    return nodeArg;\n};\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar now = __webpack_require__(60);\nvar clone = __webpack_require__(101);\nvar getSize = __webpack_require__(9);\nvar getExpires = __webpack_require__(102);\nvar expiresNow = __webpack_require__(33);\n\nvar atomSize = 50;\n\nmodule.exports = function wrapNode(nodeArg, typeArg, value) {\n\n    var size = 0;\n    var node = nodeArg;\n    var type = typeArg;\n\n    if (type) {\n        var modelCreated = node[\"\u001eƒ_wrapped_value\"];\n        node = clone(node);\n        size = getSize(node);\n        node.$type = type;\n        node[\"\u001eƒ_prev\"] = undefined;\n        node[\"\u001eƒ_next\"] = undefined;\n        node[\"\u001eƒ_wrapped_value\"] = modelCreated || false;\n    } else {\n        node = { $type: \"atom\", value: value };\n        node[\"\u001eƒ_prev\"] = undefined;\n        node[\"\u001eƒ_next\"] = undefined;\n        node[\"\u001eƒ_wrapped_value\"] = true;\n    }\n\n    if (value == null) {\n        size = atomSize + 1;\n    } else if (size == null || size <= 0) {\n        switch (typeof value) {\n            case 'object':\n                if (isArray(value)) {\n                    size = atomSize + value.length;\n                } else {\n                    size = atomSize + 1;\n                }\n                break;\n            case 'string':\n                size = atomSize + value.length;\n                break;\n            default:\n                size = atomSize + 1;\n                break;\n        }\n    }\n\n    var expires = getExpires(node);\n\n    if (typeof expires === 'number' && expires < expiresNow) {\n        node.$expires = now() + expires * -1;\n    }\n\n    node.$size = size;\n\n    return node;\n};\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\n\nmodule.exports = createErrorClass('CircularReferenceError', function (referencePath) {\n    this.message = 'Encountered circular reference ' + JSON.stringify(referencePath);\n});\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\nvar MESSAGE = 'An exception was thrown when making a request';\n\n/**\n * InvalidSourceError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidSourceError', function (error) {\n  this.message = MESSAGE + ':\\n\\t' + error;\n});\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar removeNode = __webpack_require__(30);\nvar updateNodeAncestors = __webpack_require__(11);\n\nmodule.exports = function collect(lru, expired, totalArg, max, ratioArg, version) {\n\n    var total = totalArg;\n    var ratio = ratioArg;\n\n    if (typeof ratio !== 'number') {\n        ratio = 0.75;\n    }\n\n    var shouldUpdate = typeof version === 'number';\n    var targetSize = max * ratio;\n    var parent, node, size;\n\n    node = expired.pop();\n\n    while (node) {\n        size = node.$size || 0;\n        total -= size;\n        if (shouldUpdate === true) {\n            updateNodeAncestors(node, size, lru, version);\n        } else if (parent = node[\"\u001eƒ_parent\"]) {\n            // eslint-disable-line no-cond-assign\n            removeNode(node, parent, node[\"\u001eƒ_key\"], lru);\n        }\n        node = expired.pop();\n    }\n\n    if (total >= max) {\n        var prev = lru[\"\u001eƒ_tail\"];\n        node = prev;\n        while (total >= targetSize && node) {\n            prev = prev[\"\u001eƒ_prev\"];\n            size = node.$size || 0;\n            total -= size;\n            if (shouldUpdate === true) {\n                updateNodeAncestors(node, size, lru, version);\n            }\n            node = prev;\n        }\n\n        lru[\"\u001eƒ_tail\"] = lru[\"\u001eƒ_prev\"] = node;\n        if (node == null) {\n            lru[\"\u001eƒ_head\"] = lru[\"\u001eƒ_next\"] = undefined;\n        } else {\n            node[\"\u001eƒ_next\"] = undefined;\n        }\n    }\n};\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function lruSplice(root, object) {\n\n    // Its in the cache.  Splice out.\n    var prev = object[\"\u001eƒ_prev\"];\n    var next = object[\"\u001eƒ_next\"];\n    if (next) {\n        next[\"\u001eƒ_prev\"] = prev;\n    }\n    if (prev) {\n        prev[\"\u001eƒ_next\"] = next;\n    }\n    object[\"\u001eƒ_prev\"] = object[\"\u001eƒ_next\"] = undefined;\n\n    if (object === root[\"\u001eƒ_head\"]) {\n        root[\"\u001eƒ_head\"] = next;\n    }\n    if (object === root[\"\u001eƒ_tail\"]) {\n        root[\"\u001eƒ_tail\"] = prev;\n    }\n};\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var Subscriber = __webpack_require__(14);\nvar Subscription = __webpack_require__(15);\nvar $$observable = __webpack_require__(105).default;\n\nmodule.exports = Source;\n\nfunction Source(subscribe) {\n    if (!subscribe) {\n        return;\n    }\n    switch (typeof subscribe) {\n        case 'object':\n            this.source = subscribe;\n            break;\n        case 'function':\n            this.source = { subscribe: subscribe };\n            break;\n    }\n}\n\nSource.prototype[$$observable] = function () {\n    return this;\n};\n\nSource.prototype.operator = function (destination) {\n    return this.subscribe(destination);\n};\n\n// Unused\n// Source.prototype.lift = function(operator, source) {\n//     source = new Source(source || this);\n//     source.operator = operator;\n//     source._promise = this._promise;\n//     return source;\n// }\n\nSource.prototype.subscribe = function (destination, x, y) {\n    return new Subscription([this.operator.call(this.source, !(destination instanceof Subscriber) ? new Subscriber(destination, x, y) : destination)]);\n};\n\nSource.prototype.then = function then(onNext, onError) {\n    /* global Promise */\n    var source = this;\n    if (!this._promise) {\n        this._promise = new global['Promise'](function (resolve, reject) {\n            var values = [],\n                rejected = false;\n            source.subscribe({\n                next: function (value) {\n                    values[values.length] = value;\n                },\n                error: function (errors) {\n                    (rejected = true) && reject(errors);\n                },\n                complete: function () {\n                    !rejected && resolve(values.length <= 1 ? values[0] : values);\n                }\n            });\n        });\n    }\n    return this._promise.then(onNext, onError);\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(34)))\n\n/***/ },\n/* 56 */\n/***/ function(module, exports) {\n\nvar empty = {\n    dispose: function () {},\n    unsubscribe: function () {}\n};\n\nfunction ImmediateScheduler() {}\n\nImmediateScheduler.prototype.schedule = function schedule(action) {\n    action();\n    return empty;\n};\n\nmodule.exports = ImmediateScheduler;\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(5);\nmodule.exports = function getTimestamp(node) {\n    return isObject(node) && node.$timestamp || undefined;\n};\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(5);\n\nmodule.exports = function isJSONEnvelope(envelope) {\n    return isObject(envelope) && 'json' in envelope;\n};\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar isObject = __webpack_require__(5);\n\nmodule.exports = function isJSONGraphEnvelope(envelope) {\n    return isObject(envelope) && isArray(envelope.paths) && (isObject(envelope.jsonGraph) || isObject(envelope.jsong) || isObject(envelope.json) || isObject(envelope.values) || isObject(envelope.value));\n};\n\n/***/ },\n/* 60 */\n/***/ function(module, exports) {\n\nmodule.exports = Date.now;\n\n/***/ },\n/* 61 */\n/***/ function(module, exports) {\n\nmodule.exports = 1;\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Model = __webpack_require__(67);\nvar FalcorJSON = __webpack_require__(2);\n\nfunction falcor(opts) {\n    if (!(this instanceof Model)) {\n        return new Model(opts);\n    }\n    Model.call(this, opts);\n}\n\nfalcor.prototype = Object.create(Model.prototype);\n\nfalcor['Model'] = Model;\nfalcor['FalcorJSON'] = FalcorJSON;\nfalcor['toProps'] = FalcorJSON.prototype.toProps;\n\nmodule.exports = falcor;\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar getHashCode = __webpack_require__(23);\n\nmodule.exports = computeFlatBufferHash;\n\nfunction computeFlatBufferHash(seed) {\n\n    if (seed === undefined) {\n        return undefined;\n    }\n\n    var code = '';\n    var keys = seed['$keys'];\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    while (++keysIndex < keysLength) {\n\n        var key = keys[keysIndex];\n\n        if (key === null) {\n            code = '' + getHashCode('' + code + 'null');\n            continue;\n        } else if (typeof key === 'object') {\n            key = '{from:' + key.from + ',length:' + key.length + '}';\n        }\n\n        var next = computeFlatBufferHash(seed[keysIndex]);\n        if (next === undefined) {\n            code = '' + getHashCode('' + code + key);\n        } else {\n            code = '' + getHashCode('' + code + key + next['$code']);\n        }\n    }\n\n    seed['$code'] = code;\n\n    return seed;\n}\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar materializedAtom = __webpack_require__(6);\n\nmodule.exports = hasIntersection;\n\n/**\n * Tests to see if the intersection should be stripped from the\n * total paths.  The only way this happens currently is if the entirety\n * of the path is contained in the tree.\n * @private\n */\n\nfunction hasIntersection(tree, path, depth, length) {\n\n    if (depth === length) {\n        return true;\n    }\n\n    var intersects = true;\n    var keyset,\n        keysetIndex = -1,\n        keysetLength = 0;\n    var next,\n        nextKey,\n        nextDepth = depth + 1,\n        keyIsRange,\n        rangeEnd,\n        keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return tree === materializedAtom;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    break iteratingKeyset;\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                keyset = keysOrRanges[keysetIndex];\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if ('number' !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        do {\n            if (nextDepth === length) {\n                if (tree[nextKey] !== null) {\n                    return false;\n                }\n            } else {\n                next = tree[nextKey];\n                if (next === null || next === undefined) {\n                    return false;\n                } else if (hasIntersection(next, path, nextDepth, length) === false) {\n                    return false;\n                }\n            }\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return true;\n}\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar nullBuffer = { '$keys': [null], '$keysMap': { 'null': 0 } };\nvar flatBufferToPaths = __webpack_require__(22);\n\nmodule.exports = toFlatBuffer;\n\nfunction toFlatBuffer(paths, seed) {\n    return paths.reduce(function (seed, path) {\n        if (isArray(path)) {\n            return pathToFlatBuffer(seed, path, 0, path.length);\n        }\n        return toFlatBuffer(flatBufferToPaths(path), seed);\n    }, seed || {});\n}\n\nfunction pathToFlatBuffer(seed, path, depth, length) {\n\n    if (depth === length) {\n        return undefined;\n    }\n\n    seed = seed || {};\n    var keys = seed['$keys'] || (seed['$keys'] = []);\n    var keysMap = seed['$keysMap'] || (seed['$keysMap'] = {});\n    var keysIndex = -1;\n\n    var keyset,\n        keysetIndex = -1,\n        keysetLength = 0;\n    var node,\n        next,\n        nextKey,\n        nextDepth = depth + 1,\n        rangeEnd,\n        keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return nullBuffer;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            if ('undefined' === typeof (keysIndex = keysMap[nextKey])) {\n                keysIndex = keys.length;\n            }\n            keys[keysIndex] = nextKey;\n            keysMap[nextKey] = keysIndex;\n            next = pathToFlatBuffer(seed[keysIndex], path, nextDepth, length);\n            if (next !== undefined) {\n                seed[keysIndex] = next;\n            }\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    break iteratingKeyset;\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                keyset = keysOrRanges[keysetIndex];\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if ('number' !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyset = { from: nextKey, length: rangeEnd - nextKey + 1 };\n                    nextKey = '{from:' + nextKey + ',length:' + (rangeEnd - nextKey + 1) + '}';\n                    if ('undefined' === typeof (keysIndex = keysMap[nextKey])) {\n                        keysIndex = keys.length;\n                    }\n                    keys[keysIndex] = keyset;\n                    keysMap[nextKey] = keysIndex;\n                    next = pathToFlatBuffer(seed[keysIndex], path, nextDepth, length);\n                    if (next !== undefined) {\n                        seed[keysIndex] = next;\n                    }\n                }\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return seed;\n}\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar materializedAtom = __webpack_require__(6);\n\nmodule.exports = toTree;\nmodule.exports.pathToTree = pathToTree;\n\n/**\n * @param {Array} paths -\n * @returns {Object} -\n */\n\nfunction toTree(paths, seed) {\n    return paths.reduce(function (seed, path) {\n        return pathToTree(seed, path, 0, path.length, null);\n    }, seed || {});\n};\n\nfunction pathToTree(seed, path, depth, length, value, branch) {\n\n    if (depth === length) {\n        return true;\n    }\n\n    var seedKeySet,\n        keyset,\n        keysetIndex = -1,\n        keysetLength = 0;\n    var node,\n        next,\n        nextKey,\n        nextDepth = depth + 1,\n        keyIsRange,\n        rangeEnd,\n        keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return materializedAtom;\n    }\n\n    seedKeySet = keyset;\n    seed = seed ? seed : branch ? branch(path, depth, seed) : {};\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    break iteratingKeyset;\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                keyset = keysOrRanges[keysetIndex];\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if ('number' !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        do {\n            if (nextDepth === length) {\n                seed[nextKey] = value;\n            } else {\n                node = seed[path[depth] = nextKey];\n                next = pathToTree(node, path, nextDepth, length, value);\n                if (!next) {\n                    seed[nextKey] = value;\n                } else if (!node) {\n                    seed[nextKey] = next;\n                }\n            }\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    path[depth] = seedKeySet;\n\n    return seed;\n}\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Call = __webpack_require__(95);\nvar ModelRoot = __webpack_require__(69);\nvar FalcorJSON = __webpack_require__(2);\nvar ModelDataSourceAdapter = __webpack_require__(68);\nvar TimeoutScheduler = __webpack_require__(99);\nvar ImmediateScheduler = __webpack_require__(56);\nvar collapse = __webpack_require__(35);\n\nvar lruCollect = __webpack_require__(53);\nvar getSize = __webpack_require__(9);\nvar isObject = __webpack_require__(5);\nvar isJSONEnvelope = __webpack_require__(58);\nvar getCachePosition = __webpack_require__(10);\nvar isJSONGraphEnvelope = __webpack_require__(59);\n\nvar setCache = __webpack_require__(20);\nvar setJSONGraphs = __webpack_require__(19);\n\nvar getJSON = __webpack_require__(25);\nvar getCache = __webpack_require__(79);\nvar getJSONGraph = __webpack_require__(26);\n\nmodule.exports = Model;\n\n/**\n * This callback is invoked when the Model's cache is changed.\n * @callback Model~onChange\n */\n\n/**\n* This function is invoked on every JSONGraph Error retrieved from the DataSource. This function allows Error objects to be transformed before being stored in the Model's cache.\n* @callback Model~errorSelector\n* @param {Object} jsonGraphError - the JSONGraph Error object to transform before it is stored in the Model's cache.\n* @returns {Object} the JSONGraph Error object to store in the Model cache.\n*/\n\n/**\n* This function is invoked every time a value in the Model cache is about to be replaced with a new value. If the function returns true, the existing value is replaced with a new value and the version flag on all of the value's ancestors in the tree are incremented.\n* @callback Model~comparator\n* @param {Object} existingValue - the current value in the Model cache.\n* @param {Object} newValue - the value about to be set into the Model cache.\n* @returns {Boolean} the Boolean value indicating whether the new value and the existing value are equal.\n*/\n\n/**\n * A Model object is used to execute commands against a {@link JSONGraph} object. {@link Model}s can work with a local JSONGraph cache, or it can work with a remote {@link JSONGraph} object through a {@link DataSource}.\n * @constructor\n * @param {?Object} options - a set of options to customize behavior\n * @param {?DataSource} options.source - a data source to retrieve and manage the {@link JSONGraph}\n * @param {?JSONGraph} options.cache - initial state of the {@link JSONGraph}\n * @param {?number} options.maxSize - the maximum size of the cache. This value roughly correlates to item count (where itemCount = maxSize / 50). Each item by default is given a metadata `$size` of 50 (or its length when it's an array or string). You can get better control of falcor's memory usage by tweaking `$size`\n * @param {?number} options.collectRatio - the ratio of the maximum size to collect when the maxSize is exceeded\n * @param {?Model~errorSelector} options.errorSelector - a function used to translate errors before they are returned\n * @param {?Model~onChange} options.onChange - a function called whenever the Model's cache is changed\n * @param {?Model~comparator} options.comparator - a function called whenever a value in the Model's cache is about to be replaced with a new value.\n */\nfunction Model(opts) {\n\n    var options = opts || {};\n\n    this._node = options._node;\n    this._path = options._path || [];\n    this._source = options.source || options._source;\n    this._root = options._root || new ModelRoot(options, this);\n    this._recycleJSON = options.recycleJSON === true || options._recycleJSON;\n    this._scheduler = options.scheduler || options._scheduler || new ImmediateScheduler();\n\n    if (options._seed) {\n        this._recycleJSON = true;\n        this._seed = options._seed;\n        this._treatErrorsAsValues = true;\n    } else if (this._recycleJSON) {\n        this._treatErrorsAsValues = true;\n        this._seed = { __proto__: FalcorJSON.prototype };\n    }\n\n    this._boxed = options.boxed === true || options._boxed || false;\n    this._materialized = options.materialized === true || options._materialized || false;\n    this._treatErrorsAsValues = options.treatErrorsAsValues === true || options._treatErrorsAsValues || false;\n    this._allowFromWhenceYouCame = options.allowFromWhenceYouCame === true || options._allowFromWhenceYouCame || false;\n\n    if (options.cache) {\n        this.setCache(options.cache);\n    }\n}\n\nModel.prototype.constructor = Model;\n\n/**\n * The get method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model}. The get method loads each value into a JSON object and returns in a ModelResponse.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - the requested data as JSON\n */\nModel.prototype.get = function get() {\n    return new Call('get', this, Array.prototype.slice.call(arguments, 0))._toJSON(this._seed || { __proto__: FalcorJSON.prototype }, []);\n};\n\n/**\n * Sets the value at one or more places in the JSONGraph model. The set method accepts one or more {@link PathValue}s, each of which is a combination of a location in the document and the value to place there.  In addition to accepting  {@link PathValue}s, the set method also returns the values after the set operation is complete.\n * @function\n * @return {ModelResponse.<JSONEnvelope>} - an {@link Observable} stream containing the values in the JSONGraph model after the set was attempted\n */\nModel.prototype.set = function set() {\n    return new Call('set', this, Array.prototype.slice.call(arguments, 0))._toJSON({ __proto__: FalcorJSON.prototype }, []);\n};\n\n/**\n * The preload method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model} and loads them into the Model cache.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - a ModelResponse that completes when the data has been loaded into the cache.\n */\nModel.prototype.preload = function preload() {\n    return new Call('get', this, Array.prototype.slice.call(arguments, 0))._toJSON(null, []);\n};\n\n/**\n * Invokes a function in the JSON Graph.\n * @function\n * @param {Path} functionPath - the path to the function to invoke\n * @param {Array.<Object>} args - the arguments to pass to the function\n * @param {Array.<PathSet>} refPaths - the paths to retrieve from the JSON Graph References in the message returned from the function\n * @param {Array.<PathSet>} thisPaths - the paths to retrieve from function's this object after successful function execution\n * @return {ModelResponse.<JSONEnvelope> - a JSONEnvelope contains the values returned from the function\n */\n\nModel.prototype.call = function call() {\n    return new Call('call', this, Array.prototype.slice.call(arguments, 0))._toJSON({ __proto__: FalcorJSON.prototype }, []);\n};\n\n/**\n * The invalidate method synchronously removes several {@link Path}s or {@link PathSet}s from a {@link Model} cache.\n * @function\n * @param {...PathSet} path - the  paths to remove from the {@link Model}'s cache.\n */\nModel.prototype.invalidate = function invalidate() {\n    return new Call('invalidate', this, Array.prototype.slice.call(arguments, 0))._toJSON(null, null).then();\n};\n\n/**\n * Returns a new {@link Model} bound to a location within the {@link\n * JSONGraph}. The bound location is never a {@link Reference}: any {@link\n * Reference}s encountered while resolving the bound {@link Path} are always\n * replaced with the {@link Reference}s target value. For subsequent operations\n * on the {@link Model}, all paths will be evaluated relative to the bound\n * path. Deref allows you to:\n * - Expose only a fragment of the {@link JSONGraph} to components, rather than\n *   the entire graph\n * - Hide the location of a {@link JSONGraph} fragment from components\n * - Optimize for executing multiple operations and path looksup at/below the\n *   same location in the {@link JSONGraph}\n * @method\n * @param {Object} responseObject - an object previously retrieved from the\n * Model\n * @return {Model} - the dereferenced {@link Model}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.deref = __webpack_require__(89);\n\n/**\n * A dereferenced model can become invalid when the reference from which it was\n * built has been removed/collected/expired/etc etc.  To fix the issue, a from\n * the parent request should be made (no parent, then from the root) for a valid\n * path and re-dereference performed to update what the model is bound too.\n *\n * @method\n * @private\n * @return {Boolean} - If the currently deref'd model is still considered a\n * valid deref.\n */\nModel.prototype._hasValidParentReference = __webpack_require__(88);\n\n/**\n * Get data for a single {@link Path}.\n * @param {Path} path - the path to retrieve\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     getValue('user.name').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.getValue = function getValue(path) {\n    return new Call('get', this, [path])._toJSON({ __proto__: FalcorJSON.prototype }, []).lift(function (subscriber) {\n        return this.subscribe({\n            onNext: function (data) {\n                var depth = -1;\n                var x = data.json;\n                var length = path.length;\n                while (x && !x.$type && ++depth < length) {\n                    x = x[path[depth]];\n                }\n                subscriber.onNext(x);\n            },\n            onError: subscriber.onError.bind(subscriber),\n            onCompleted: subscriber.onCompleted.bind(subscriber)\n        });\n    });\n};\n\n/**\n * Set value for a single {@link Path}.\n * @param {Path} path - the path to set\n * @param {Object} value - the value to set\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     setValue('user.name', 'Jim').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.setValue = function setValue(path, value) {\n    path = arguments.length === 1 ? path.path : path;\n    value = arguments.length === 1 ? path : { path: path, value: value };\n    return new Call('set', this, [value])._toJSON({ __proto__: FalcorJSON.prototype }, []).lift(function (subscriber) {\n        return this.subscribe({\n            onNext: function (data) {\n                var depth = -1;\n                var x = data.json;\n                var length = path.length;\n                while (x && !x.$type && ++depth < length) {\n                    x = x[path[depth]];\n                }\n                subscriber.onNext(x);\n            },\n            onError: subscriber.onError.bind(subscriber),\n            onCompleted: subscriber.onCompleted.bind(subscriber)\n        });\n    });\n};\n\n/**\n * Set the local cache to a {@link JSONGraph} fragment. This method can be a useful way of mocking a remote document, or restoring the local cache from a previously stored state.\n * @param {JSONGraph} jsonGraph - the {@link JSONGraph} fragment to use as the local cache\n */\nModel.prototype.setCache = function modelSetCache(cacheOrJSONGraphEnvelope) {\n\n    var modelRoot = this._root;\n    var cache = modelRoot.cache;\n\n    if (cacheOrJSONGraphEnvelope !== cache) {\n\n        var options = {\n            _path: [],\n            _boxed: false,\n            _root: modelRoot,\n            _materialized: false,\n            _treatErrorsAsValues: false\n        };\n\n        modelRoot.cache = this._node = {};\n\n        if (typeof cache !== 'undefined') {\n            lruCollect(modelRoot, modelRoot.expired, getSize(cache), 0);\n            if (this._recycleJSON) {\n                this._seed = { __proto__: FalcorJSON.prototype };\n            }\n        }\n\n        var paths;\n        if (isJSONGraphEnvelope(cacheOrJSONGraphEnvelope)) {\n            paths = setJSONGraphs(options, [cacheOrJSONGraphEnvelope])[0];\n        } else if (isJSONEnvelope(cacheOrJSONGraphEnvelope)) {\n            paths = setCache(options, [cacheOrJSONGraphEnvelope])[0];\n        } else if (isObject(cacheOrJSONGraphEnvelope)) {\n            paths = setCache(options, [{ json: cacheOrJSONGraphEnvelope }])[0];\n        }\n\n        // performs promotion without producing output.\n        if (paths) {\n            getJSON(options, paths, null, false, false);\n        }\n    } else if (typeof cache === 'undefined') {\n        this._root.cache = {};\n    }\n    return this;\n};\n\n/**\n * Get the local {@link JSONGraph} cache. This method can be a useful to store the state of the cache.\n * @param {...Array.<PathSet>} [pathSets] - The path(s) to retrieve. If no paths are specified, the entire {@link JSONGraph} is returned.\n * @return {JSONGraph} all of the {@link JSONGraph} data in the {@link Model} cache.\n * @example\n // Storing the boxshot of the first 10 titles in the first 10 genreLists to local storage.\n localStorage.setItem('cache', JSON.stringify(model.getCache('genreLists[0...10][0...10].boxshot')));\n */\nModel.prototype.getCache = function _getCache() {\n\n    var paths = Array.prototype.slice.call(arguments, 0);\n\n    if (paths.length === 0) {\n        return getCache(this._root.cache);\n    }\n\n    var env = getJSONGraph({\n        _path: [],\n        _root: this._root,\n        _boxed: this._boxed,\n        _materialized: this._materialized,\n        _treatErrorsAsValues: this._treatErrorsAsValues\n    }, paths, { __proto__: FalcorJSON.prototype }).data;\n\n    env.paths = collapse(paths);\n\n    return env;\n};\n\n/**\n * Retrieves a number which is incremented every single time a value is changed underneath the Model or the object at an optionally-provided Path beneath the Model.\n * @param {Path?} path - a path at which to retrieve the version number\n * @return {Number} a version number which changes whenever a value is changed underneath the Model or provided Path\n */\nModel.prototype.getVersion = function getVersion(path) {\n    path = path || [];\n    if (Array.isArray(path) === false) {\n        throw new Error('Model#getVersion must be called with an Array path.');\n    }\n    if (this._path.length) {\n        path = this._path.concat(path);\n    }\n    return this._getVersion(this, path);\n};\n\n/* eslint-disable guard-for-in */\nModel.prototype._clone = function cloneModel(opts) {\n    var clone = new Model(this);\n    if (opts) {\n        for (var key in opts) {\n            var value = opts[key];\n            if (value === 'delete') {\n                delete clone[key];\n            } else if (key === '_path') {\n                clone[key] = value;\n                if (false === opts.hasOwnProperty('_node')) {\n                    delete clone['_node'];\n                }\n            } else {\n                clone[key] = value;\n            }\n        }\n    }\n    if (clone._path.length > 0) {\n        clone.setCache = void 0;\n    }\n    return clone;\n};\n/* eslint-enable */\n\n/**\n * Returns a clone of the {@link Model} that enables batching. Within the configured time period, paths for get operations are collected and sent to the {@link DataSource} in a batch. Batching can be more efficient if the {@link DataSource} access the network, potentially reducing the number of HTTP requests to the server.\n * @param {?Scheduler|number} schedulerOrDelay - Either a {@link Scheduler} that determines when to send a batch to the {@link DataSource}, or the number in milliseconds to collect a batch before sending to the {@link DataSource}. If this parameter is omitted, then batch collection ends at the end of the next tick.\n * @return {Model} a Model which schedules a batch of get requests to the DataSource.\n */\nModel.prototype.batch = function batch(schedulerOrDelay) {\n\n    var scheduler;\n\n    if (typeof schedulerOrDelay === 'number') {\n        scheduler = new TimeoutScheduler(Math.round(Math.abs(schedulerOrDelay)));\n    } else if (!schedulerOrDelay) {\n        scheduler = new TimeoutScheduler(1);\n    } else if (typeof schedulerOrDelay.schedule === 'function') {\n        scheduler = schedulerOrDelay;\n    } else if (typeof schedulerOrDelay === 'function') {\n        scheduler = { scheudle: schedulerOrDelay };\n    }\n\n    return this._clone({ _scheduler: scheduler });\n};\n\n/**\n * Returns a clone of the {@link Model} that disables batching. This is the default mode. Each get operation will be executed on the {@link DataSource} separately.\n * @name unbatch\n * @memberof Model.prototype\n * @function\n * @return {Model} a {@link Model} that batches requests of the same type and sends them to the data source together\n */\nModel.prototype.unbatch = function unbatch() {\n    return this._clone({ _scheduler: new ImmediateScheduler() });\n};\n\n/**\n * Returns a clone of the {@link Model} that treats errors as values. Errors will be reported in the same callback used to report data. Errors will appear as objects in responses, rather than being sent to the {@link Observable~onErrorCallback} callback of the {@link ModelResponse}.\n * @return {Model}\n */\nModel.prototype.treatErrorsAsValues = function treatErrorsAsValues() {\n    return this._clone({ _treatErrorsAsValues: true });\n};\n\n/**\n * Adapts a Model to the {@link DataSource} interface.\n * @return {DataSource}\n * @example\nvar model =\n    new falcor.Model({\n        cache: {\n            user: {\n                name: 'Steve',\n                surname: 'McGuire'\n            }\n        }\n    }),\n    proxyModel = new falcor.Model({ source: model.asDataSource() });\n\n// Prints 'Steve'\nproxyModel.getValue('user.name').\n    then(function(name) {\n        console.log(name);\n    });\n */\nModel.prototype.asDataSource = function asDataSource() {\n    return new ModelDataSourceAdapter(this);\n};\n\nModel.prototype._materialize = function materialize() {\n    return this._clone({\n        _materialized: true\n    });\n};\n\nModel.prototype._dematerialize = function dematerialize() {\n    return this._clone({\n        _materialized: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that boxes values returning the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the value inside it. This allows any metadata attached to the wrapper to be inspected.\n * @return {Model}\n */\nModel.prototype.boxValues = function boxValues() {\n    return this._clone({\n        _boxed: true\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that unboxes values, returning the value inside of the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the wrapper itself. This is the default mode.\n * @return {Model}\n */\nModel.prototype.unboxValues = function unboxValues() {\n    return this._clone({\n        _boxed: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that only uses the local {@link JSONGraph} and never uses a {@link DataSource} to retrieve missing paths.\n * @return {Model}\n */\nModel.prototype.withoutDataSource = function withoutDataSource() {\n    return this._clone({\n        _source: 'delete'\n    });\n};\n\nModel.prototype.toJSON = function toJSON() {\n    return {\n        $type: 'ref',\n        value: this.getPath()\n    };\n};\n\n/**\n * Returns the {@link Path} to the object within the JSON Graph that this Model references.\n * @return {Path}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.getPath = function getPath() {\n    return this._path.slice(0);\n};\n\n/**\n * This one is actually private.  I would not use this without talking to\n * jhusain, sdesai, or michaelbpaulson (github).\n * @private\n */\nModel.prototype._fromWhenceYouCame = function fromWhenceYouCame(allow) {\n    return this._clone({\n        _allowFromWhenceYouCame: allow === undefined ? true : allow\n    });\n};\n\nModel.prototype._optimizePath = function _optimizePath(path) {\n    var node = getCachePosition(this._root.cache, path);\n    var abs_path = node && node[\"\u001eƒ_abs_path\"] || [];\n    return abs_path.slice(0);\n};\n\nModel.prototype._getVersion = __webpack_require__(80);\nModel.prototype._getPathValuesAsPathMap = getJSON;\nModel.prototype._getPathValuesAsJSONG = getJSONGraph;\n\nModel.prototype._setPathValues = __webpack_require__(31);\nModel.prototype._setPathMaps = __webpack_require__(20);\nModel.prototype._setJSONGs = __webpack_require__(19);\nModel.prototype._setCache = __webpack_require__(20);\n\nModel.prototype._invalidatePathValues = __webpack_require__(29);\nModel.prototype._invalidatePathMaps = __webpack_require__(45);\n\n/***/ },\n/* 68 */\n/***/ function(module, exports) {\n\nfunction ModelDataSourceAdapter(model) {\n    this._model = model\n    // .boxValues()\n    ._materialize().treatErrorsAsValues();\n}\n\nModelDataSourceAdapter.prototype.get = function get(pathSets) {\n    return this._model.get.apply(this._model, pathSets)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.set = function set(jsongResponse) {\n    return this._model.set(jsongResponse)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.call = function call(path, args, suffixes, paths) {\n    return this._model.call.apply(this._model, [path, args, suffixes].concat(paths))._toJSONG();\n};\n\nmodule.exports = ModelDataSourceAdapter;\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar functionTypeof = 'function';\nvar Requests = __webpack_require__(96);\n\nfunction ModelRoot(o, model) {\n\n    var options = o || {};\n\n    this.cache = {};\n    this.version = -1;\n    this.syncRefCount = 0;\n    this.maxRetryCount = 10;\n    this.topLevelModel = model;\n    this.requests = new Requests(this);\n    this.expired = options.expired || [];\n\n    this.collectRatio = 0.75;\n    this.maxSize = Math.pow(2, 53) - 1;\n\n    if (typeof options.collectRatio === 'number') {\n        this.collectRatio = options.collectRatio;\n    }\n\n    if (typeof options.maxSize === 'number') {\n        this.maxSize = options.maxSize;\n    }\n\n    if (typeof options.comparator === functionTypeof) {\n        this.comparator = options.comparator;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.errorSelector === functionTypeof) {\n        this.errorSelector = options.errorSelector;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.onChange === functionTypeof) {\n        this.onChange = options.onChange;\n    }\n\n    if (typeof options.onChangesCompleted === functionTypeof) {\n        this.onChangesCompleted = options.onChangesCompleted;\n    }\n}\n\nModelRoot.comparator = function comparator(cacheNode, messageNode) {\n    var cType = cacheNode && cacheNode.$type;\n    var mType = messageNode && messageNode.$type;\n    if (cType) {\n        if (!mType) {\n            return cacheNode.value === messageNode;\n        } else {\n            // They are the same only if the following fields are the same.\n            return !(cType !== mType || cacheNode.value !== messageNode.value || cacheNode.$expires !== messageNode.$expires);\n        }\n    } else if (mType) {\n        return false;\n    }\n    return cacheNode === messageNode;\n};\n\nmodule.exports = ModelRoot;\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar getJSON = __webpack_require__(25);\nvar getJSONGraph = __webpack_require__(26);\n\nmodule.exports = { json: json, jsonGraph: jsonGraph };\n\nfunction json(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue = getJSON(model, thisPaths, data, progressive, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [path, args, suffixes, thisPaths]\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed,\n            _materialized: model._materialized,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, thisPaths, data, true, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [path, args, suffixes, thisPaths]\n    };\n}\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n    json: __webpack_require__(39),\n    jsonGraph: __webpack_require__(42)\n};\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar clone = __webpack_require__(7);\n\nmodule.exports = onError;\n\nfunction onError(node, depth, results, requestedPath, fromReference, boxValues) {\n\n    var index = -1;\n    var length = depth + !!fromReference; // depth + 1 if fromReference === true\n    var errorPath = new Array(length);\n    var errorValue = !boxValues ? node.value : clone(node);\n\n    while (++index < length) {\n        errorPath[index] = requestedPath[index];\n    }\n\n    (results.errors || (results.errors = [])).push({\n        path: errorPath,\n        value: errorValue\n    });\n}\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(2);\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar onValue = __webpack_require__(41);\nvar FalcorJSON = __webpack_require__(2);\nvar isExpired = __webpack_require__(0);\nvar onValueType = __webpack_require__(16);\nvar originalOnMissing = __webpack_require__(28);\nvar getReferenceTarget = __webpack_require__(40);\nvar onMaterialize = __webpack_require__(78);\nvar NullInPathError = __webpack_require__(3);\nvar InvalidKeySetError = __webpack_require__(12);\nvar getHashCode = __webpack_require__(23);\nvar flatBufferToPaths = __webpack_require__(22);\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, json, path, depth, seed, results, requestedPath, optimizedPath, optimizedLength, fromReference, referenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === node || undefined !== (type = node.$type) || undefined === path) {\n        arr[1] = hasDataSource && node === undefined;\n        arr[0] = onValueType(node, type, json, path, depth, seed, results, requestedPath, depth, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, onValue, onMissing, onMaterialize);\n        return arr;\n    }\n\n    var f_meta,\n        f_old_keys,\n        f_new_keys,\n        f_code = '';\n\n    var next,\n        nextKey,\n        keyset,\n        keyIsRange,\n        keys = path['$keys'],\n        nextDepth = depth + 1,\n        rangeEnd,\n        nextJSON,\n        nextReferenceContainer,\n        nextOptimizedLength,\n        nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath,\n        refContainerRefPath;\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[\"\u001eƒ_abs_path\"];\n    }\n\n    if (json) {\n        if (typeofObject !== typeof json) {\n            json = undefined;\n        } else if (f_meta = json[\"\u001eƒ_meta\"]) {\n            if (!branchSelector && !(json instanceof FalcorJSON)) {\n                json.__proto__ = { __proto__: FalcorJSON.prototype };\n                json.__proto__[\"\u001eƒ_meta\"] = f_meta;\n            } else if (f_meta[\"version\"] === node[\"\u001eƒ_version\"] && f_meta['$code'] === path['$code'] && f_meta[\"abs_path\"] === node[\"\u001eƒ_abs_path\"]) {\n                results.hasValue = true;\n                arr[0] = json;\n                arr[1] = false;\n                return arr;\n            }\n            f_old_keys = f_meta[\"keys\"];\n            f_meta[\"version\"] = node[\"\u001eƒ_version\"];\n            f_meta[\"abs_path\"] = node[\"\u001eƒ_abs_path\"];\n            f_meta[\"deref_to\"] = refContainerRefPath;\n            f_meta[\"deref_from\"] = refContainerAbsPath;\n        }\n    }\n\n    f_new_keys = { __proto__: null };\n\n    var keysIndex = -1;\n    var keysLength = keys.length;\n    var nextPath,\n        nextPathKey,\n        hasMissingPath = false;\n\n    iteratingKeyset: while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            f_code = '' + getHashCode('' + f_code + 'null');\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if (typeofObject !== typeof keyset) {\n                nextKey = keyset;\n                rangeEnd = undefined;\n                keyIsRange = false;\n                nextPathKey = nextKey;\n            }\n            // If the Keyset isn't null or primitive, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if (typeofNumber !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                    nextPathKey = '{from:' + nextKey + ',length:' + (rangeEnd - nextKey + 1) + '}';\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextPath === undefined) {\n\n                arr = walkPathAndBuildOutput(root, next, nextJSON, nextPath, nextDepth, seed, results, requestedPath, nextOptimizedPath, nextOptimizedLength, fromReference, nextReferenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n\n                nextJSON = arr[0];\n                hasMissingPath = hasMissingPath || arr[1];\n\n                if (nextJSON === undefined && !materialized) {\n                    hasMissingPath = true;\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            } else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                // If the reference is expired, it will be invalidated and\n                // reported as missing in the next call to walkPath below.\n                next.$type === \"ref\" && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                arr = walkPathAndBuildOutput(root, next, nextJSON, nextPath, nextDepth, seed, results, requestedPath, nextOptimizedPath, nextOptimizedLength, fromReference, nextReferenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n\n                nextJSON = arr[0];\n                hasMissingPath = hasMissingPath || arr[1];\n\n                if (nextJSON === undefined) {\n                    hasMissingPath = true;\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = { __proto__: null };\n                f_meta[\"version\"] = node[\"\u001eƒ_version\"];\n                f_meta[\"abs_path\"] = node[\"\u001eƒ_abs_path\"];\n                f_meta[\"deref_to\"] = refContainerRefPath;\n                f_meta[\"deref_from\"] = refContainerAbsPath;\n                json = { __proto__: FalcorJSON.prototype };\n                json[\"\u001eƒ_meta\"] = f_meta;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                // node creation to them.\n                json = !branchSelector && { __proto__: json } || branchSelector(json);\n            }\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && nextKey in f_old_keys) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        if (!hasMissingPath) {\n            if (undefined === nextPath) {\n                f_code = '' + getHashCode('' + f_code + nextPathKey);\n            } else {\n                f_code = '' + getHashCode('' + f_code + nextPathKey + nextPath['$code']);\n            }\n        }\n    }\n\n    if (hasMissingPath) {\n        f_code = '__incomplete__';\n    }\n\n    if (f_meta) {\n        f_meta['$code'] = f_code;\n        f_meta[\"keys\"] = f_new_keys;\n        if (f_old_keys) {\n            for (nextKey in f_old_keys) {\n                if (f_old_keys[nextKey]) {\n                    delete json[nextKey];\n                }\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n\n    arr[0] = json;\n    arr[1] = hasMissingPath;\n\n    return arr;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, reportMaterialized, json, branchSelector, boxValues, onMaterialize) {\n\n    if (reportMaterialized) {\n        return onMaterialize(json, path, depth, depth, branchSelector, boxValues, results, requestedPath, optimizedPath, optimizedLength, fromReference, reportMissing, onMissing);\n    }\n\n    var paths = path ? flatBufferToPaths(path) : [[]];\n    var rPath = requestedPath.slice(0, requestedLength);\n\n    return paths.forEach(function (restPath) {\n        requestedLength = depth + restPath.length;\n        return originalOnMissing(rPath.concat(restPath), depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, false, json, branchSelector, boxValues, onMaterialize);\n    });\n}\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar onValue = __webpack_require__(41);\nvar onMissing = __webpack_require__(28);\nvar FalcorJSON = __webpack_require__(2);\nvar onValueType = __webpack_require__(16);\nvar isExpired = __webpack_require__(0);\nvar onMaterialize = __webpack_require__(43);\nvar getReferenceTarget = __webpack_require__(40);\nvar NullInPathError = __webpack_require__(3);\nvar InvalidKeySetError = __webpack_require__(12);\nvar materializedAtom = __webpack_require__(6);\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, json, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, referenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (type = node.$type) || depth === requestedLength) {\n        return onValueType(node, type, json, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, onValue, onMissing, onMaterialize);\n    }\n\n    var f_meta;\n\n    var next,\n        nextKey,\n        keyset,\n        keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd,\n        keysOrRanges,\n        nextJSON,\n        nextReferenceContainer,\n        keysetIndex = -1,\n        keysetLength = 0,\n        nextOptimizedLength,\n        nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath,\n        refContainerRefPath;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        return json;\n    }\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[\"\u001eƒ_abs_path\"];\n    }\n\n    if (json) {\n        if (typeofObject !== typeof json) {\n            json = undefined;\n        } else if (f_meta = json[\"\u001eƒ_meta\"]) {\n            f_meta[\"version\"] = node[\"\u001eƒ_version\"];\n            f_meta[\"abs_path\"] = node[\"\u001eƒ_abs_path\"];\n            f_meta[\"deref_to\"] = refContainerRefPath;\n            f_meta[\"deref_from\"] = refContainerAbsPath;\n        }\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    throw new InvalidKeySetError(path, keysOrRanges);\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                keyset = keysOrRanges[keysetIndex];\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if (typeofNumber !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextDepth === requestedLength) {\n                nextJSON = walkPathAndBuildOutput(root, next, nextJSON, path, nextDepth, seed, results, requestedPath, requestedLength, nextOptimizedPath, nextOptimizedLength, fromReference, nextReferenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n                if (nextJSON === undefined && !materialized) {\n                    continue;\n                }\n            } else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                // If the reference is expired, it will be invalidated and\n                // reported as missing in the next call to walkPath below.\n                next.$type === \"ref\" && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                if (undefined === (nextJSON = walkPathAndBuildOutput(root, next, nextJSON, path, nextDepth, seed, results, requestedPath, requestedLength, nextOptimizedPath, nextOptimizedLength, fromReference, nextReferenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame))) {\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = { __proto__: null };\n                f_meta[\"version\"] = node[\"\u001eƒ_version\"];\n                f_meta[\"abs_path\"] = node[\"\u001eƒ_abs_path\"];\n                f_meta[\"deref_to\"] = refContainerRefPath;\n                f_meta[\"deref_from\"] = refContainerAbsPath;\n                json = { __proto__: FalcorJSON.prototype };\n                json[\"\u001eƒ_meta\"] = f_meta;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                if (branchSelector) {\n                    json = branchSelector(json);\n                }\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n/* eslint-enable */\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(2);\nvar clone = __webpack_require__(7);\nvar inlineValue = __webpack_require__(27);\nvar promote = __webpack_require__(13);\nvar isExpired = __webpack_require__(0);\nvar createHardlink = __webpack_require__(8);\nvar CircularReferenceError = __webpack_require__(51);\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, ref, modelRoot, seed, expireImmediate) {\n\n    promote(modelRoot, ref);\n\n    var context,\n        key,\n        type,\n        depth = 0,\n        node = root,\n        path = ref.value,\n        copy = path,\n        length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[\"\u001eƒ_context\"])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                    throw new CircularReferenceError(path);\n                }\n                // If the node we land on isn't the existing ref context,\n                // create a hard-link between the reference and the node\n                // it points to.\n                else if (node !== context) {\n                        createHardlink(ref, node);\n                    }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === \"ref\") {\n\n                promote(modelRoot, node);\n\n                seed && inlineValue(clone(node), path, length, seed);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n\n    return arr;\n}\n/* eslint-enable */\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar typeofObject = 'object';\nvar clone = __webpack_require__(7);\nvar inlineValue = __webpack_require__(27);\n\nmodule.exports = onJSONGraphValue;\n\nfunction onJSONGraphValue(node, type, depth, seed, results, requestedPath, optimizedPath, optimizedLength, fromReference, boxValues, materialized) {\n\n    var value = node.value;\n\n    // boxValues always clones the node\n    if (boxValues || !(\n    /**\n     * JSON Graph should always clone:\n     * - refs\n     * - errors\n     * - atoms we didn't create\n     * - atoms we created to wrap Objects\n     **/\n    \"ref\" !== type && \"error\" !== type && node[\"\u001eƒ_wrapped_value\"] && typeofObject !== typeof value)) {\n        value = clone(node);\n    }\n\n    if (seed) {\n        results.hasValue = true;\n        inlineValue(value, optimizedPath, optimizedLength, seed);\n        (seed.paths || (seed.paths = [])).push(requestedPath.slice(0, depth + !!fromReference) // depth + 1 if fromReference === true\n        );\n    }\n\n    return value;\n}\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar clone = __webpack_require__(7);\nvar onValue = __webpack_require__(76);\nvar inlineValue = __webpack_require__(27);\nvar isExpired = __webpack_require__(0);\nvar onValueType = __webpack_require__(16);\nvar onMaterialize = __webpack_require__(43);\nvar originalOnMissing = __webpack_require__(28);\nvar getReferenceTarget = __webpack_require__(75);\nvar NullInPathError = __webpack_require__(3);\nvar InvalidKeySetError = __webpack_require__(12);\nvar materializedAtom = __webpack_require__(6);\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, boxValues, materialized, hasDataSource, treatErrorsAsValues) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (type = node.$type) || depth === requestedLength) {\n        return onValueType(node, type, seed, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, undefined, boxValues, materialized, hasDataSource, treatErrorsAsValues, onValue, onMissing, onMaterialize);\n    }\n\n    var next,\n        nextKey,\n        keyset,\n        keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd,\n        keysOrRanges,\n        keysetIndex = -1,\n        keysetLength = 0,\n        nextOptimizedLength,\n        nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        return undefined;\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    throw new InvalidKeySetError(path, keysOrRanges);\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                keyset = keysOrRanges[keysetIndex];\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if ('number' !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            // If we encounter a ref, inline the reference target and continue\n            // evaluating the path.\n            if (next && nextDepth < requestedLength &&\n            // If the reference is expired, it will be invalidated and\n            // reported as missing in the next call to walkPath below.\n            next.$type === \"ref\" && !isExpired(next, expireImmediate)) {\n\n                // Write the cloned ref value into the jsonGraph at the\n                // optimized path. JSONGraph must always clone references.\n                seed && inlineValue(clone(next), optimizedPath, nextOptimizedLength, seed);\n\n                // Retrieve the reference target and next referenceContainer (if\n                // this reference points to other references) and continue\n                // following the path. If the reference resolves to a missing\n                // path or leaf node, it will be handled in the next call to\n                // walkPath.\n                refTarget = getReferenceTarget(root, next, modelRoot, seed, expireImmediate);\n\n                next = refTarget[0];\n                fromReference = true;\n                nextOptimizedPath = refTarget[1];\n                nextOptimizedLength = nextOptimizedPath.length;\n                refTarget[0] = refTarget[1] = undefined;\n            }\n\n            walkPathAndBuildOutput(root, next, path, nextDepth, seed, results, requestedPath, requestedLength, nextOptimizedPath, nextOptimizedLength, fromReference, modelRoot, expired, expireImmediate, boxValues, materialized, hasDataSource, treatErrorsAsValues);\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return undefined;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, reportMaterialized, seed, branchSelector, boxValues, onMaterialize) {\n\n    var json, isLeaf;\n\n    if (seed && reportMaterialized) {\n\n        (seed.paths || (seed.paths = [])).push((isLeaf = 0 === requestedLength - depth) &&\n        // depth + 1 if fromReference === true\n        requestedPath.slice(0, depth + !!fromReference) || requestedPath.slice(0, depth).concat(path.slice(depth, requestedLength + !!fromReference)));\n\n        json = inlineValue(isLeaf && clone(materializedAtom) || undefined, optimizedPath, optimizedLength, seed, !isLeaf);\n    }\n\n    return originalOnMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, !isLeaf && reportMaterialized, json, branchSelector, true, onMaterialize);\n}\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar clone = __webpack_require__(7);\nvar onValueType = __webpack_require__(16);\nvar FalcorJSON = __webpack_require__(2);\nvar NullInPathError = __webpack_require__(3);\nvar InvalidKeySetError = __webpack_require__(12);\nvar materializedAtom = __webpack_require__(6);\n\nmodule.exports = onMaterializeFlatBuffer;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterializeFlatBuffer(json, path, depth, length, branchSelector, boxValues, results, requestedPath, optimizedPath, optimizedLength, fromReference, reportMissing, onMissing) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === path) {\n        onValueType(undefined, undefined, json, path, depth, undefined, results, requestedPath, depth, optimizedPath, optimizedLength, fromReference, undefined, undefined, false, branchSelector, boxValues, false, reportMissing, false, undefined, onMissing, undefined);\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta, f_old_keys, f_new_keys;\n\n    var nextKey,\n        keyset,\n        keyIsRange,\n        keys = path['$keys'],\n        nextDepth = depth + 1,\n        rangeEnd,\n        nextOptimizedLength = optimizedLength + 1;\n\n    if (!json || typeofObject !== typeof json) {\n        json = { __proto__: FalcorJSON.prototype };\n        json[\"\u001eƒ_meta\"] = f_meta = { __proto__: null };\n        f_meta[\"version\"] = 0;\n        f_meta[\"abs_path\"] = optimizedPath.slice(0, optimizedLength);\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[\"\u001eƒ_meta\"])) {\n        json[\"\u001eƒ_meta\"] = f_meta = { __proto__: null };\n        f_meta[\"version\"] = 0;\n        f_meta[\"abs_path\"] = optimizedPath.slice(0, optimizedLength);\n    } else {\n        f_old_keys = f_meta[\"keys\"];\n        f_meta[\"abs_path\"] = optimizedPath.slice(0, optimizedLength);\n    }\n\n    f_new_keys = { __proto__: null };\n\n    var nextPath;\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    iteratingKeyset: while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if (typeofObject !== typeof keyset) {\n                nextKey = keyset;\n                rangeEnd = undefined;\n                keyIsRange = false;\n            }\n            // If the Keyset isn't null or primitive, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if (typeofNumber !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && nextKey in f_old_keys) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // insert the materialized branch\n            json[nextKey] = onMaterializeFlatBuffer(json[nextKey], nextPath, nextDepth, nextDepth, branchSelector, boxValues, results, requestedPath, optimizedPath, nextOptimizedLength, fromReference, reportMissing, onMissing);\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n    }\n\n    f_meta['$code'] = '__incomplete__';\n    f_meta[\"keys\"] = f_new_keys;\n    if (f_old_keys) {\n        for (nextKey in f_old_keys) {\n            if (f_old_keys[nextKey]) {\n                delete json[nextKey];\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isInternalKey = __webpack_require__(21);\n\n/**\n * decends and copies the cache.\n */\nmodule.exports = function getCache(cache) {\n    var out = {};\n    _copyCache(cache, out);\n\n    return out;\n};\n\nfunction cloneBoxedValue(boxedValue) {\n    var clonedValue = {};\n\n    var keys = Object.keys(boxedValue);\n    var key;\n    var i;\n    var l;\n\n    for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n\n        if (key === '$type' || !isInternalKey(key)) {\n            clonedValue[key] = boxedValue[key];\n        }\n    }\n\n    return clonedValue;\n}\n\nfunction _copyCache(node, out, fromKey) {\n    // copy and return\n\n    // only copy objects\n    if (!node || typeof node !== 'object') {\n        return;\n    }\n\n    Object.keys(node).filter(function (key) {\n        // Its not an internal key and the node has a value.  In the cache\n        // there are 3 possibilities for values.\n        // 1: A branch node.\n        // 2: A $type-value node.\n        // 3: undefined\n        // We will strip out 3\n        return (key === '$type' || !isInternalKey(key)) && node[key] !== undefined;\n    }).forEach(function (key) {\n        var cacheNext = node[key];\n        var outNext = out[key];\n\n        if (!outNext) {\n            outNext = out[key] = {};\n        }\n\n        // Paste the node into the out cache.\n        if (cacheNext.$type) {\n            var isObject = cacheNext.value && typeof cacheNext.value === 'object';\n            var isUserCreatedcacheNext = !cacheNext[\"\u001eƒ_wrapped_value\"];\n            var value;\n            if (isObject || isUserCreatedcacheNext) {\n                value = cloneBoxedValue(cacheNext);\n            } else {\n                value = cacheNext.value;\n            }\n\n            out[key] = value;\n            return;\n        }\n\n        _copyCache(cacheNext, outNext, key);\n    });\n}\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar getBoundCacheNode = __webpack_require__(17);\n\nmodule.exports = function _getVersion(model, path) {\n    var node = getBoundCacheNode(model, path);\n    var version = node && node[\"\u001eƒ_version\"];\n    return version == null ? -1 : version;\n};\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar isPathValue = __webpack_require__(104);\nvar isJSONEnvelope = __webpack_require__(58);\nvar isJSONGraphEnvelope = __webpack_require__(59);\n\nmodule.exports = groupCacheArguments;\n\nfunction groupCacheArguments(args) {\n\n    var groups = [];\n    var argIndex = -1;\n    var argCount = args.length;\n    var group, groupType, arg, argType;\n\n    while (++argIndex < argCount) {\n        arg = args[argIndex];\n        if (isArray(arg)) {\n            arg = { path: arg };\n            argType = 'PathValues';\n        } else if (isPathValue(arg)) {\n            argType = 'PathValues';\n        } else if (isJSONGraphEnvelope(arg)) {\n            argType = 'JSONGraphs';\n        } else if (isJSONEnvelope(arg)) {\n            argType = 'PathMaps';\n        }\n\n        if (groupType !== argType) {\n            groupType = argType;\n            groups.push(group = {\n                arguments: [],\n                inputType: argType\n            });\n        }\n\n        group.arguments.push(arg);\n    }\n\n    return groups;\n}\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar invalidatePathSets = __webpack_require__(29);\nvar invalidatePathMaps = __webpack_require__(45);\n\nmodule.exports = {\n    json: invalidate,\n    jsonGraph: invalidate\n};\n\nfunction invalidate(model, args, seed, progressive, expireImmediate) {\n    invalidatePathSets(model, args, expireImmediate);\n    return {};\n}\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar wrapNode = __webpack_require__(50);\nvar isExpired = __webpack_require__(0);\nvar insertNode = __webpack_require__(44);\nvar expireNode = __webpack_require__(1);\nvar replaceNode = __webpack_require__(48);\nvar getSize = __webpack_require__(9);\nvar reconstructPath = __webpack_require__(47);\nvar getTimestamp = __webpack_require__(57);\nvar updateNodeAncestors = __webpack_require__(11);\n\nmodule.exports = function mergeJSONGraphNode(parent, node, message, key, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var sizeOffset;\n\n    var cType, mType, cIsObject, mIsObject, cTimestamp, mTimestamp;\n\n    // If the cache and message are the same, we can probably return early:\n    // - If they're both nullsy,\n    //   - If null then the node needs to be wrapped in an atom and inserted.\n    //     This happens from whole branch merging when a leaf is just a null value\n    //     instead of being wrapped in an atom.\n    //   - If undefined then return null (previous behavior).\n    // - If they're both branches, return the branch.\n    // - If they're both edges, continue below.\n    if (node === message) {\n\n        // The message and cache are both undefined, return undefined.\n        if (message === undefined) {\n            return message;\n        }\n        // There should not be undefined values. Those should always be\n        // wrapped in an $atom\n        else if (message === null) {\n                node = wrapNode(message, undefined, message);\n                parent = updateNodeAncestors(parent, -node.$size, lru, version);\n                node = insertNode(node, parent, key, undefined, optimizedPath);\n                return node;\n            }\n            // Is the cache node a branch? If so, return the cache branch.\n            else if ((cIsObject = !(!node || typeof node !== 'object')) && (cType = node.$type) === undefined) {\n                    // Has the branch been introduced to the cache yet? If not,\n                    // give it a parent, key, and absolute path.\n                    if (node[\"\u001eƒ_parent\"] === undefined) {\n                        insertNode(node, parent, key, version, optimizedPath);\n                    }\n                    return node;\n                }\n    } else if (cIsObject = !(!node || typeof node !== 'object')) {\n        cType = node.$type;\n    }\n\n    // If the cache isn't a reference, we might be able to return early.\n    if (cType !== \"ref\") {\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n        }\n        if (cIsObject && !cType) {\n            // If the cache is a branch and the message is empty or\n            // also a branch, continue with the cache branch.\n            if (message == null || mIsObject && !mType) {\n                return node;\n            }\n        }\n    }\n    // If the cache is a reference, we might not need to replace it.\n    else {\n            // If the cache is a reference, but the message is empty, leave the cache alone...\n            if (message == null) {\n                // ...unless the cache is an expired reference. In that case, expire\n                // the cache node and return undefined.\n                if (isExpired(node, expireImmediate)) {\n                    expireNode(node, expired, lru);\n                    return void 0;\n                }\n                return node;\n            }\n            mIsObject = !(!message || typeof message !== 'object');\n            if (mIsObject) {\n                mType = message.$type;\n                // If the cache and the message are both references,\n                // check if we need to replace the cache reference.\n                if (mType === \"ref\") {\n                    if (node === message) {\n                        // If the cache and message are the same reference,\n                        // we performed a whole-branch merge of one of the\n                        // grandparents. If we've previously graphed this\n                        // reference, break early. Otherwise, continue to\n                        // leaf insertion below.\n                        if (node[\"\u001eƒ_parent\"] != null) {\n                            return node;\n                        }\n                    } else {\n\n                        cTimestamp = node.$timestamp;\n                        mTimestamp = message.$timestamp;\n\n                        // - If either the cache or message reference is expired,\n                        //   replace the cache reference with the message.\n                        // - If neither of the references are expired, compare their\n                        //   timestamps. If either of them don't have a timestamp,\n                        //   or the message's timestamp is newer, replace the cache\n                        //   reference with the message reference.\n                        // - If the message reference is older than the cache\n                        //   reference, short-circuit.\n                        if (!isExpired(node, expireImmediate) && !isExpired(message, expireImmediate) && mTimestamp < cTimestamp) {\n                            return void 0;\n                        }\n                    }\n                }\n            }\n        }\n\n    // If the cache is a leaf but the message is a branch, merge the branch over the leaf.\n    if (cType && mIsObject && !mType) {\n        return insertNode(replaceNode(node, message, parent, key, lru, version), parent, key, undefined, optimizedPath);\n    }\n    // If the message is a sentinel or primitive, insert it into the cache.\n    else if (mType || !mIsObject) {\n            // If the cache and the message are the same value, we branch-merged one\n            // of the message's ancestors. If this is the first time we've seen this\n            // leaf, give the message a $size and $type, attach its graph pointers,\n            // and update the cache sizes and versions.\n\n            if (mType === \"error\" && errorSelector) {\n                message = errorSelector(reconstructPath(requestedPath, key), message);\n            }\n\n            if (mType && node === message) {\n                if (node[\"\u001eƒ_parent\"] == null) {\n                    node = wrapNode(node, cType, node.value);\n                    parent = updateNodeAncestors(parent, -node.$size, lru, version);\n                    node = insertNode(node, parent, key, version, optimizedPath);\n                }\n            }\n            // If the cache and message are different, the cache value is expired,\n            // or the message is a primitive, replace the cache with the message value.\n            // If the message is a sentinel, clone and maintain its type.\n            // If the message is a primitive value, wrap it in an atom.\n            else {\n                    var isDistinct = true;\n                    // If the cache is a branch, but the message is a leaf, replace the\n                    // cache branch with the message leaf.\n                    if (!cIsObject || cType && !isExpired(node, expireImmediate)) {\n\n                        // Compare the current cache value with the new value. If either of\n                        // them don't have a timestamp, or the message's timestamp is newer,\n                        // replace the cache value with the message value. If a comparator\n                        // is specified, the comparator takes precedence over timestamps.\n                        if (comparator) {\n                            isDistinct = !comparator(node, message, optimizedPath.slice(0, optimizedPath.index));\n                        } else if (!mType) {\n                            isDistinct = !node || node.value !== message;\n                        } else {\n                            isDistinct = !cType ||\n                            // Comparing either Number or undefined to undefined always results in false.\n                            getTimestamp(message) < getTimestamp(node) === false || !(\n                            // They're the same if the following fields are the same.\n                            cType !== mType || node.value !== message.value || node.$expires !== message.$expires);\n                        }\n                    }\n                    if (isDistinct) {\n                        message = wrapNode(message, mType, mType ? message.value : message);\n                        sizeOffset = getSize(node) - getSize(message);\n                        node = replaceNode(node, message, parent, key, lru, version);\n                        parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n                        node = insertNode(node, parent, key, version, optimizedPath);\n                    }\n                }\n\n            // Promote the message edge in the LRU.\n            if (isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge.\n             */\n            true)) {\n                expireNode(node, expired, lru);\n            }\n        } else if (node == null) {\n            node = insertNode(message, parent, key, undefined, optimizedPath);\n        }\n\n    return node;\n};\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar getJSON = __webpack_require__(25);\nvar getJSONGraph = __webpack_require__(26);\nvar arrayFlatMap = __webpack_require__(100);\nvar groupCacheArguments = __webpack_require__(81);\n\nmodule.exports = {\n    json: json,\n    jsonGraph: jsonGraph,\n    setPathMaps: __webpack_require__(20),\n    setPathValues: __webpack_require__(31),\n    setJSONGraphs: __webpack_require__(19)\n};\n\nfunction json(model, _args, data, progressive, expireImmediate) {\n\n    var set,\n        get,\n        jsong,\n        changed,\n        relative,\n        optimized,\n        missing,\n        fragments,\n        requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args /*, expireImmediate */);\n\n    if ((relative = set.requested).length) {\n\n        if (!(changed = set.changed) || progressive) {\n            get = getJSON(model, relative, data, progressive, expireImmediate);\n        }\n\n        if (changed) {\n\n            jsong = getJSONGraph({\n                _root: model._root,\n                _boxed: model._boxed, _materialized: true,\n                _treatErrorsAsValues: model._treatErrorsAsValues\n            }, set.optimized, {}, progressive, expireImmediate);\n\n            fragments = jsong.data;\n            missing = fragments.paths;\n            requested = jsong.requested;\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: get && get.error,\n        errors: get && get.errors,\n        hasValue: get && get.hasValue\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive, expireImmediate) {\n\n    var set,\n        jsong,\n        changed,\n        relative,\n        optimized,\n        missing,\n        fragments,\n        requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args /*, expireImmediate */);\n\n    if ((relative = set.requested).length && (progressive || set.changed)) {\n\n        jsong = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed, _materialized: true,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, set.optimized, data, progressive, expireImmediate);\n\n        fragments = jsong.data;\n        missing = fragments.paths;\n        requested = jsong.requested;\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: jsong && jsong.error,\n        hasValue: jsong && jsong.hasValue\n    };\n}\n\nfunction setGroupsIntoCache(model, xs /*, expireImmediate */) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var modelRoot = model._root;\n    var selector = modelRoot.errorSelector;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            var operation = module.exports['set' + inputType];\n            var results = operation(model, groupedArgs, selector, null, false);\n            changed = changed || results[2];\n            optimizedPaths.push.apply(optimizedPaths, results[1]);\n            if (inputType === 'PathValues') {\n                requestedPaths.push.apply(requestedPaths, groupedArgs.map(pluckPaths));\n            } else if (inputType === 'JSONGraphs') {\n                requestedPaths.push.apply(requestedPaths, arrayFlatMap(groupedArgs, pluckPaths));\n            } else {\n                requestedPaths.push.apply(requestedPaths, results[0]);\n            }\n        }\n    }\n\n    return {\n        changed: changed,\n        requested: requestedPaths,\n        optimized: optimizedPaths\n    };\n};\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function transferBackReferences(fromNode, destNode) {\n    var fromNodeRefsLength = fromNode[\"\u001eƒ_refs_length\"] || 0,\n        destNodeRefsLength = destNode[\"\u001eƒ_refs_length\"] || 0,\n        i = -1;\n    while (++i < fromNodeRefsLength) {\n        var ref = fromNode[\"\u001eƒ_ref\" + i];\n        if (ref !== void 0) {\n            ref[\"\u001eƒ_context\"] = destNode;\n            destNode[\"\u001eƒ_ref\" + (destNodeRefsLength + i)] = ref;\n            fromNode[\"\u001eƒ_ref\" + i] = void 0;\n        }\n    }\n    destNode[\"\u001eƒ_refs_length\"] = fromNodeRefsLength + destNodeRefsLength;\n    fromNode[\"\u001eƒ_refs_length\"] = void 0;\n    return destNode;\n};\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function unlinkBackReferences(node) {\n    var i = -1,\n        n = node[\"\u001eƒ_refs_length\"] || 0;\n    while (++i < n) {\n        var ref = node[\"\u001eƒ_ref\" + i];\n        if (ref != null) {\n            ref[\"\u001eƒ_context\"] = ref[\"\u001eƒ_ref_index\"] = node[\"\u001eƒ_ref\" + i] = void 0;\n        }\n    }\n    node[\"\u001eƒ_refs_length\"] = void 0;\n    return node;\n};\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function unlinkForwardReference(reference) {\n    var destination = reference[\"\u001eƒ_context\"];\n    if (destination) {\n        var i = (reference[\"\u001eƒ_ref_index\"] || 0) - 1,\n            n = (destination[\"\u001eƒ_refs_length\"] || 0) - 1;\n        while (++i <= n) {\n            destination[\"\u001eƒ_ref\" + i] = destination[\"\u001eƒ_ref\" + (i + 1)];\n        }\n        destination[\"\u001eƒ_refs_length\"] = n;\n        reference[\"\u001eƒ_ref_index\"] = reference[\"\u001eƒ_context\"] = destination = void 0;\n    }\n    return reference;\n};\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = hasValidParentReference;\n\nfunction hasValidParentReference() {\n    var reference = this._referenceContainer;\n\n    // Always true when this mode is false.\n    if (!this._allowFromWhenceYouCame) {\n        return true;\n    }\n\n    // If fromWhenceYouCame is true and the first set of keys did not have\n    // a reference, this case can happen.  They are always valid.\n    if (reference === true) {\n        return true;\n    }\n\n    // was invalid before even derefing.\n    if (reference === false) {\n        return false;\n    }\n\n    // Its been disconnected (set over or collected) from the graph.\n    if (reference && reference[\"\u001eƒ_parent\"] === undefined) {\n        return false;\n    }\n\n    // The reference has expired but has not been collected from the graph.\n    if (reference && reference[\"\u001eƒ_invalidated\"]) {\n        return false;\n    }\n\n    return true;\n}\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar typeofObject = 'object';\nvar CONTAINER_DOES_NOT_EXIST = 'e';\nvar FalcorJSON = __webpack_require__(2);\nvar getCachePosition = __webpack_require__(10);\nvar InvalidDerefInputError = __webpack_require__(91);\n\nmodule.exports = function deref(json) {\n\n    var f_meta;\n\n    if (!json || typeofObject !== typeof json || !(f_meta = json[\"\u001eƒ_meta\"]) || typeofObject !== typeof f_meta) {\n        return null;\n    }\n\n    var cacheRoot = this._root.cache;\n    var recycleJSON = this._recycleJSON;\n    var absolutePath = f_meta[\"abs_path\"];\n    var referenceContainer, currentRefPath, i, len;\n\n    if (!absolutePath) {\n        return this._clone({\n            _node: undefined,\n            _seed: recycleJSON && {\n                json: json, __proto__: FalcorJSON.prototype\n            } || undefined\n        });\n    } else if (absolutePath.length === 0) {\n        return this._clone({\n            _node: cacheRoot,\n            _path: absolutePath,\n            _referenceContainer: true,\n            _seed: recycleJSON && {\n                json: json, __proto__: FalcorJSON.prototype\n            } || undefined\n        });\n    }\n\n    var originalRefPath = f_meta[\"deref_to\"];\n    var originalAbsPath = f_meta[\"deref_from\"];\n\n    // We deref and then ensure that the reference container is attached to\n    // the model.\n    var cacheNode = getCachePosition(cacheRoot, absolutePath);\n    var validContainer = CONTAINER_DOES_NOT_EXIST;\n\n    if (originalAbsPath) {\n\n        validContainer = false;\n\n        i = -1;\n        len = originalAbsPath.length;\n        referenceContainer = cacheRoot;\n        while (++i < len) {\n            referenceContainer = referenceContainer[originalAbsPath[i]];\n            if (!referenceContainer || referenceContainer.$type) {\n                break;\n            }\n        }\n\n        // If the reference container is still a sentinel value then compare\n        // the reference value with refPath.  If they are the same, then the\n        // model is still valid.\n        if (originalRefPath && referenceContainer && referenceContainer.$type === \"ref\") {\n            validContainer = true;\n            len = originalRefPath.length;\n            currentRefPath = referenceContainer.value;\n            for (i = 0; i < len; ++i) {\n                if (currentRefPath[i] !== originalRefPath[i]) {\n                    cacheNode = undefined;\n                    validContainer = false;\n                    break;\n                }\n            }\n        }\n    }\n\n    // Signal to the deref'd model that it has been disconnected from the\n    // graph or there is no _fromWhenceYouCame\n    if (!validContainer) {\n        referenceContainer = false;\n    }\n\n    // The container did not exist, therefore there is no reference\n    // container and fromWhenceYouCame should always return true.\n    else if (validContainer === CONTAINER_DOES_NOT_EXIST) {\n            referenceContainer = true;\n        }\n\n    return this._clone({\n        _node: cacheNode,\n        _path: absolutePath,\n        _referenceContainer: referenceContainer,\n        _seed: recycleJSON && {\n            json: json, __proto__: FalcorJSON.prototype\n        } || undefined\n    });\n};\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\nvar MESSAGE = 'It is not legal to use the JSON Graph ' + 'format from a bound Model. JSON Graph format' + ' can only be used from a root model.';\n\n/**\n * When a bound model attempts to retrieve JSONGraph it should throw an\n * error.\n *\n * @private\n */\nmodule.exports = createErrorClass('BoundJSONGraphModelError', function () {\n    this.message = MESSAGE;\n});\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\nvar MESSAGE = 'Deref can only be used with a non-primitive object from get, set, or call.';\n\n/**\n * An invalid deref input is when deref is used with input that is not generated\n * from a get, set, or a call.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidDerefInputError', function () {\n  this.message = MESSAGE;\n});\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\nvar MESSAGE = 'The boundPath of the model is not valid since a value or error was found before the path end.';\n\n/**\n * An InvalidModelError can only happen when a user binds, whether sync\n * or async to shorted value.  See the unit tests for examples.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidModelError', function (boundPath, shortedPath) {\n  this.message = MESSAGE;\n  this.boundPath = boundPath;\n  this.shortedPath = shortedPath;\n});\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\n\n/**\n * A request can only be retried up to a specified limit.  Once that\n * limit is exceeded, then an error will be thrown.\n *\n * @private\n */\nmodule.exports = createErrorClass('MaxRetryExceededError', function (maxRetryCount, absolute, relative, optimized) {\n    this.message = '' + 'Exceeded the max retry count (' + maxRetryCount + ') for these paths: \\n' + (absolute && 'absolute: [\\n\\t' + printPaths(absolute) + '\\n]\\n' || '') + (relative && 'relative: [\\n\\t' + printPaths(relative) + '\\n]\\n' || '') + (optimized && 'optimized: [\\n\\t' + printPaths(optimized) + '\\n]\\n' || '');\n});\n\nfunction printPaths(paths) {\n    return paths.map(function (path) {\n        return JSON.stringify(path);\n    }).join(',\\n\\t');\n}\n\n/***/ },\n/* 94 */\n/***/ function(module, exports) {\n\nmodule.exports = String.fromCharCode(30) + 'ƒ_';\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Source = __webpack_require__(55);\nvar Subscriber = __webpack_require__(14);\nvar lruCollect = __webpack_require__(53);\nvar FalcorJSON = __webpack_require__(2);\nvar collapse = __webpack_require__(35);\nvar InvalidSourceError = __webpack_require__(52);\nvar MaxRetryExceededError = __webpack_require__(93);\n\nmodule.exports = Call;\n\nfunction Call(type, model, _args) {\n    Source.call(this, type);\n    if (model && _args) {\n        this.type = type;\n        this.source = this;\n        this.model = model;\n        this._args = _args;\n    }\n}\n\nCall.prototype = Object.create(Source.prototype);\n\nCall.prototype.lift = function (operator, source) {\n    source = new Call(source || this);\n    source.type = this.type;\n    source.model = this.model;\n    source._args = this._args;\n    source.operator = operator;\n    operator.data = operator.data || this.operator.data;\n    operator.errors = operator.errors || this.operator.errors;\n    operator.operation = operator.operation || this.operator.operation;\n    operator.progressive = operator.progressive || this.operator.progressive;\n    operator.maxRetryCount = operator.maxRetryCount || this.operator.maxRetryCount;\n    return source;\n};\n\nCall.prototype.operator = function (subscriber) {\n    return this._subscribe(subscriber);\n};\n\nCall.prototype._subscribe = function (subscriber) {\n    subscriber.onNext({\n        type: this.type,\n        args: this._args,\n        model: this.model,\n        version: this.model._root.version\n    });\n    subscriber.onCompleted();\n    return subscriber;\n};\n\nCall.prototype._toJSON = function (data, errors) {\n    if (data === undefined) {\n        data = { __proto__: FalcorJSON.prototype };\n    }\n    return this.lift(new CallOperator(data, errors || this.operator.errors, 'json', this.operator.progressive, this.operator.maxRetryCount), this.source);\n};\n\nCall.prototype._toJSONG = function (data, errors) {\n    if (data === undefined) {\n        data = { __proto__: FalcorJSON.prototype };\n    }\n    return this.lift(new CallOperator(data, errors || this.operator.errors, 'jsonGraph', this.operator.progressive, this.operator.maxRetryCount), this.source);\n};\n\nCall.prototype.retry = function (maxRetryCount) {\n    return this.lift(new CallOperator(this.operator.data, this.operator.errors, this.operator.operation, this.operator.progresive, maxRetryCount), this.source);\n};\n\nCall.prototype.progressively = function () {\n    return this.lift(new CallOperator(this.operator.data, this.operator.errors, this.operator.operation, true, this.operator.maxRetryCount), this.source);\n};\n\nfunction CallOperator(data, errors, operation, progressive, maxRetryCount) {\n    this.data = data;\n    this.errors = errors;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallOperator.prototype.call = function (source, destination) {\n    return source.subscribe(new CallSubscriber(destination, this.data, this.errors, this.operation, this.progressive));\n};\n\nfunction CallSubscriber(destination, data, errors, operation, progressive, maxRetryCount) {\n    Subscriber.call(this, destination);\n    this.data = data;\n    this.retryCount = -1;\n    this.errors = errors;\n    this.hasValue = false;\n    this.completed = false;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallSubscriber.prototype = Object.create(Subscriber.prototype);\nCallSubscriber.prototype.operations = {\n    get: __webpack_require__(71),\n    set: __webpack_require__(84),\n    call: __webpack_require__(70),\n    invalidate: __webpack_require__(82)\n};\n\nCallSubscriber.prototype.next = CallSubscriber.prototype.onNext = function (seed) {\n\n    if (!this.started) {\n        this.args = seed.args;\n        this.type = seed.type;\n        this.model = seed.model;\n        this.version = seed.version;\n        this.maxRetryCount = this.maxRetryCount || this.model._root.maxRetryCount;\n        return;\n    }\n\n    var missing, fragments;\n    var type = seed.type;\n    var args = seed.args || seed.paths;\n\n    var data = this.data;\n    var model = this.model;\n    var errors = this.errors;\n    var results = this.results;\n    var version = this.version;\n    var hasValue = this.hasValue;\n    var operation = this.operation;\n    var progressive = this.progressive;\n\n    var seedIsImmutable = progressive && data;\n\n    // If we request paths as JSON in progressive mode, ensure each progressive\n    // valueNode is immutable. If not in progressive mode, we can write into the\n    // same JSON tree until the request is completed.\n    if (seedIsImmutable) {\n        data = { __proto__: FalcorJSON.prototype };\n    }\n\n    if (args && args.length) {\n\n        results = this.operations[type][operation](model, args, data, progressive || !model._source, this.retryCount === -1);\n\n        // We must communicate critical errors from get, such as bound path is\n        // broken or this is a JSONGraph request with a bound path.\n        if (results.error) {\n            return tryOnError(this, results.error);\n        }\n\n        errors && results.errors && errors.push.apply(errors, results.errors);\n\n        if (fragments = results.fragments) {\n            args = results.args;\n            this.fragments = fragments;\n        }\n\n        this.relative = results.relative;\n        this.requested = results.requested;\n        this.missing = missing = results.missing;\n        this.hasValue = hasValue || (hasValue = results.hasValue);\n    }\n\n    // We are done when there are no missing paths or\n    // the model does not have a dataSource to fetch from.\n    this.completed = !missing || !model._source;\n\n    if (type !== 'set') {\n        this.args = args;\n        if (seedIsImmutable) {\n            this.data = mergeInto(data, this.data);\n        }\n    }\n\n    if (progressive && hasValue && data && (data.json || data.jsonGraph)) {\n        tryOnNext(data, operation, model._root, this.destination);\n    }\n};\n\nCallSubscriber.prototype.error = CallSubscriber.prototype.onError = function (error) {\n    if (error instanceof InvalidSourceError) {\n        return Subscriber.prototype.onError.call(this, error);\n    }\n    this.errored = true;\n    this.onCompleted(error);\n};\n\nCallSubscriber.prototype.complete = CallSubscriber.prototype.onCompleted = function (error) {\n\n    var data, type, errors, errored;\n\n    if (!this.started && (this.started = true)) {\n        this.onNext(this);\n    } else if (errored = this.errored) {\n        this.onNext({ type: 'get', paths: this.relative });\n    }\n\n    if (errored || this.completed) {\n        if (!this.progressive && this.hasValue && ((data = this.data) && data.json || data.jsonGraph)) {\n            tryOnNext(data, this.operation, this.model._root, this.destination);\n        }\n        errors = this.errors;\n        if (errored || error || errors && errors.length) {\n            return tryOnError(this, errors.length && errors || error);\n        }\n\n        return Subscriber.prototype.onCompleted.call(this);\n    }\n\n    if (++this.retryCount >= this.maxRetryCount) {\n        return tryOnError(this, new MaxRetryExceededError(this.retryCount, this.requested, this.relative, this.missing));\n    }\n\n    this.request = this.model._root.requests[this.type](this.model, this.missing, this.relative, this.fragments).subscribe(this);\n};\n\nCallSubscriber.prototype.dispose = CallSubscriber.prototype.unsubscribe = function () {\n\n    var model = this.model;\n    var version = this.version;\n    var request = this.request;\n\n    this.args = null;\n    this.data = null;\n    this.model = null;\n    this.errors = null;\n    this.errored = false;\n    this.started = false;\n    this.hasValue = false;\n    this.completed = false;\n\n    Subscriber.prototype.dispose.call(this);\n\n    if (request) {\n        this.request = null;\n        request.dispose();\n    }\n\n    if (model) {\n\n        var modelRoot = model._root;\n        var cache = modelRoot.cache;\n        var shouldCollectCache = modelRoot.syncRefCount <= 0 && version !== modelRoot.version;\n\n        // Prune the cache via the LRU if this is the last request.\n        if (shouldCollectCache) {\n\n            if (cache) {\n                lruCollect(modelRoot, modelRoot.expired, cache.$size || 0, modelRoot.maxSize, modelRoot.collectRatio, modelRoot.version);\n            }\n\n            var rootOnChangesCompletedHandler = modelRoot.onChangesCompleted;\n\n            if (rootOnChangesCompletedHandler) {\n                rootOnChangesCompletedHandler.call(modelRoot.topLevelModel);\n            }\n        }\n    }\n};\n\nfunction tryOnNext(data, operation, modelRoot, destination) {\n    if (operation === 'jsonGraph' && data.paths) {\n        data.paths = collapse(data.paths);\n    }\n    try {\n        ++modelRoot.syncRefCount;\n        destination.onNext(data);\n    } catch (e) {\n        throw e;\n    } finally {\n        --modelRoot.syncRefCount;\n    }\n}\n\nfunction tryOnError(self, error) {\n    try {\n        throw error;\n    } catch (err) {\n        Subscriber.prototype.onError.call(self, err);\n    }\n}\n\nfunction mergeInto(dest, node) {\n\n    var destValue,\n        nodeValue,\n        key,\n        keys = Object.keys(node),\n        index = -1,\n        length = keys.length;\n\n    while (++index < length) {\n\n        key = keys[index];\n\n        if (key === \"\u001eƒ_meta\") {\n            dest[\"\u001eƒ_meta\"] = node[\"\u001eƒ_meta\"];\n        } else {\n\n            nodeValue = node[key];\n            destValue = dest[key];\n\n            if (destValue !== nodeValue) {\n                if (!nodeValue || typeof nodeValue !== 'object') {\n                    if (destValue === undefined) {\n                        dest[key] = nodeValue;\n                    }\n                } else if (destValue === undefined) {\n                    dest[key] = nodeValue;\n                } else {\n                    mergeInto(destValue, nodeValue);\n                }\n            }\n        }\n    }\n\n    return dest;\n}\n\n/***/ },\n/* 96 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Source = __webpack_require__(55);\nvar Request = __webpack_require__(97);\nvar Subscriber = __webpack_require__(14);\nvar Subscription = __webpack_require__(15);\nvar ImmediateScheduler = __webpack_require__(56);\n\nmodule.exports = Queue;\n\nfunction Queue(modelRoot) {\n    Subscription.call(this, []);\n    this.modelRoot = modelRoot;\n}\n\nQueue.prototype = Object.create(Subscription.prototype);\n\nQueue.prototype.set = isolateSet;\nQueue.prototype.call = isolateCall;\nQueue.prototype.get = batchAndDedupeGet;\n\nfunction isolateSet(model, optimized, requested, env) {\n    var queue = this;\n    return new Source(function (destination) {\n\n        var request = new Request('set', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = env.jsonGraph;\n        request.requested.push(requested);\n        request.optimized.push(optimized);\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction isolateCall(model, optimized, requested, callArgs) {\n    var queue = this;\n    return new Source(function (destination) {\n\n        var request = new Request('call', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = callArgs;\n        request.boundPath = model._path;\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction batchAndDedupeGet(model, optimized, requested) {\n    return new Dedupe(this, model._source, model._scheduler, requested, optimized);\n}\n\nfunction Dedupe(queue, source, scheduler, requested, optimized) {\n    this.queue = queue;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n    this.requested = requested;\n    this.optimized = optimized;\n}\n\nDedupe.prototype.subscribe = function (destination) {\n\n    var queue = this.queue;\n    var source = this.dataSource;\n    var requested = this.requested;\n    var optimized = this.optimized;\n    var scheduler = this.scheduler;\n\n    var requestsIndex = -1;\n    var requests = queue.subscriptions;\n    var requestsCount = requests.length;\n    var subscription = new Subscription([], destination);\n\n    while (++requestsIndex < requestsCount) {\n\n        var request = requests[requestsIndex];\n\n        if (request.type !== 'get') {\n            continue;\n        }\n\n        if (request = request.batch(requested, optimized, requested = [], optimized = [])) {\n            subscription.add(request.subscribe(new Subscriber(destination, request)));\n        }\n\n        if (!optimized.length) {\n            break;\n        }\n    }\n\n    if (optimized.length) {\n        request = requests[requestsIndex] = new Request('get', queue, source, scheduler).batch(requested, optimized);\n        subscription.add(request.subscribe(new Subscriber(destination, request)));\n        request.connect();\n    }\n\n    return subscription;\n};\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar Subject = __webpack_require__(98);\nvar Subscriber = __webpack_require__(14);\nvar Subscription = __webpack_require__(15);\nvar InvalidSourceError = __webpack_require__(52);\n\nvar setJSONGraphs = __webpack_require__(19);\nvar setPathValues = __webpack_require__(31);\nvar invalidatePaths = __webpack_require__(29);\n\nvar toPaths = __webpack_require__(38);\nvar toCollapseMap = __webpack_require__(36);\nvar toCollapseTrees = __webpack_require__(37);\nvar hasIntersection = __webpack_require__(64);\n\nmodule.exports = Request;\n\nfunction Request(type, queue, source, scheduler) {\n    Subject.call(this, [], queue);\n    this.tree = {};\n    this.paths = [];\n    this.type = type;\n    this.data = null;\n    this.active = false;\n    this.responded = false;\n    this.requested = [];\n    this.optimized = [];\n    this.disposable = null;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n}\n\nRequest.prototype = Object.create(Subject.prototype);\n\nRequest.prototype.next = Request.prototype.onNext = function (envelopes) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    var env = envelopes,\n        envelopeIndex = 0,\n        envelopeCount = 0;\n\n    if (isArray(envelopes)) {\n        if ((envelopeCount = envelopes.length) <= 0) {\n            return;\n        }\n        env = envelopes[0];\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    var boundPath = this.boundPath;\n\n    do {\n\n        var jsonGraph = env.jsonGraph;\n        var requested = this.requested;\n        var modelRoot = queue.modelRoot;\n        var invalidated = env.invalidated;\n        var paths = env.paths || this.paths;\n\n        // Run invalidations first.\n        if (invalidated && invalidated.length) {\n            invalidatePaths({ _root: modelRoot, _path: [] }, invalidated, false);\n        }\n\n        if (paths && paths.length && !(!jsonGraph || typeof jsonGraph !== 'object')) {\n            paths = setJSONGraphs({ _root: modelRoot }, [{ paths: paths, jsonGraph: jsonGraph }], modelRoot.errorSelector, modelRoot.comparator, false)[0];\n        }\n    } while (++envelopeIndex < envelopeCount && (env = envelopes[envelopeIndex]));\n\n    this.observers.slice(0).forEach(function (observer, index) {\n        observer.onNext({\n            type: 'get', paths: requested[index] || filterPathsBoundTo(boundPath, paths)\n        });\n    });\n};\n\nRequest.prototype.error = Request.prototype.onError = function (error) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    error = error || {};\n\n    // Converts errors to object we can insert into the cache.\n    error = !(error instanceof Error) ?\n    // if it's $type error, use it raw\n    error.$type === \"error\" && error ||\n    // Otherwise make it an error\n    { $type: \"error\", value: error } :\n    // If it's instanceof Error, pluck error.message\n    { $type: \"error\", value: { message: error.message } };\n\n    var modelRoot = queue.modelRoot;\n\n    var errorPathValues = toPaths(toCollapseTrees(this.requested.reduce(function (collapseMap, paths) {\n        return toCollapseMap(paths, collapseMap);\n    }, {}))).map(function (path) {\n        return { path: path, value: error };\n    });\n\n    if (errorPathValues.length) {\n        setPathValues({ _root: modelRoot, _path: [] }, errorPathValues, modelRoot.errorSelector, modelRoot.comparator, false);\n    }\n\n    Subject.prototype.onError.call(this, error);\n};\n\nRequest.prototype.complete = Request.prototype.onCompleted = function () {\n    if (this.responded === false) {\n        this.onNext({});\n    }\n    Subject.prototype.onCompleted.call(this);\n};\n\nRequest.prototype.remove = function (subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.requested.splice(index, 1);\n        this.optimized.splice(index, 1);\n        this.observers.splice(index, 1);\n        this.subscriptions.splice(index, 1);\n    }\n    if (this.subscriptions.length === 0) {\n        this.dispose();\n    }\n    return this;\n};\n\nRequest.prototype.dispose = Request.prototype.unsubscribe = function () {\n    this.tree = {};\n    this.data = null;\n    this.paths = null;\n    this.active = false;\n    this.boundPath = null;\n    this.requested = [];\n    this.optimized = [];\n    var queue = this.parent;\n    if (queue) {\n        this.parent = null;\n        queue.remove(this);\n    }\n    var disposable = this.disposable;\n    if (disposable) {\n        this.disposable = null;\n        if (disposable.dispose) {\n            disposable.dispose();\n        } else if (disposable.unsubscribe) {\n            disposable.unsubscribe();\n        }\n    }\n    Subject.prototype.dispose.call(this);\n};\n\nRequest.prototype.connect = function () {\n    if (!this.active && !this.disposable) {\n        var scheduledDisposable = this.scheduler.schedule(flush.bind(this));\n        if (!this.disposable) {\n            this.disposable = scheduledDisposable;\n        }\n    }\n    return this;\n};\n\nRequest.prototype.batch = function (requested, optimized, requestedComplements, optimizedComplements) {\n    if (this.active) {\n        var requestedIntersection = [];\n        var optimizedIntersection = [];\n        if (findIntersections(this.tree, requested, optimized, requestedComplements, optimizedComplements, requestedIntersection, optimizedIntersection)) {\n            this.requested.push(requestedIntersection);\n            this.optimized.push(optimizedIntersection);\n            return this;\n        }\n        return null;\n    }\n    this.requested.push(requested);\n    this.optimized.push(optimized);\n    return this;\n};\n\nfunction flush() {\n\n    this.active = true;\n\n    var obs,\n        paths = this.paths = toPaths(this.tree = toCollapseTrees(this.optimized.reduce(function (collapseMap, paths) {\n        return toCollapseMap(paths, collapseMap);\n    }, {})));\n\n    try {\n        switch (this.type) {\n            case 'get':\n                obs = this.dataSource.get(paths);\n                break;\n            case 'set':\n                obs = this.dataSource.set({ paths: paths, jsonGraph: this.data });\n                break;\n            case 'call':\n                obs = this.dataSource.call.apply(this.dataSource, this.data);\n                break;\n        }\n        this.disposable = obs.subscribe(this);\n    } catch (e) {\n        this.disposable = {};\n        Subject.prototype.onError.call(this, new InvalidSourceError(e));\n    }\n}\n\nfunction findIntersections(tree, requested, optimized, requestedComplements, optimizedComplements, requestedIntersection, optimizedIntersection) {\n\n    var index = -1;\n    var complementIndex = -1;\n    var intersectionIndex = -1;\n    var optTotal = optimized.length;\n    var reqTotal = requested.length - 1;\n\n    while (++index < optTotal) {\n        var path = optimized[index];\n        var pathLen = path.length;\n        var subTree = tree[pathLen];\n        if (subTree && hasIntersection(subTree, path, 0, pathLen)) {\n            optimizedIntersection[++intersectionIndex] = path;\n            requestedIntersection[intersectionIndex] = requested[index < reqTotal ? index : reqTotal];\n        } else {\n            optimizedComplements[++complementIndex] = path;\n            requestedComplements[complementIndex] = requested[index < reqTotal ? index : reqTotal];\n        }\n    }\n\n    return ~intersectionIndex;\n}\n\nfunction filterPathsBoundTo(boundPath, paths) {\n\n    var boundLength;\n\n    if (!boundPath || (boundLength = boundPath.length) === 0) {\n        return paths;\n    }\n\n    var filtered = [],\n        filteredIndex = -1,\n        keyIndex;\n    var path,\n        pathsIndex = -1,\n        pathsCount = paths.length;\n\n    outer: while (++pathsIndex < pathsCount) {\n        path = paths[pathsIndex];\n        if (path.length > boundLength) {\n            keyIndex = 0;\n            do {\n                if (path[keyIndex] !== boundPath[keyIndex]) {\n                    continue outer;\n                }\n            } while (++keyIndex < boundLength);\n            filtered[++filteredIndex] = path.slice(boundLength);\n        }\n    }\n\n    return filtered;\n}\n\n/***/ },\n/* 98 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Subscriber = __webpack_require__(14);\nvar Subscription = __webpack_require__(15);\n\nmodule.exports = Subject;\n\nfunction Subject(observers, parent) {\n    Subscriber.call(this, null, parent);\n    this.observers = observers || [];\n}\n\nSubject.prototype = Object.create(Subscriber.prototype);\n\n// Unused\n// Subject.prototype.onNext = function(value) {\n//     this.observers.slice(0).forEach(function(observer) {\n//         observer.onNext(value);\n//     });\n// }\n\nSubject.prototype.onError = function (error) {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function (observer) {\n        observer.onError(error);\n    });\n};\n\nSubject.prototype.onCompleted = function () {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function (observer) {\n        observer.onCompleted();\n    });\n};\n\nSubject.prototype.subscribe = function (subscriber) {\n    this.observers.push(subscriber);\n    this.subscriptions.push(subscriber = new Subscription([subscriber], this));\n    return subscriber;\n};\n\nSubject.prototype.dispose = Subject.prototype.unsubscribe = function () {\n    this.observers = [];\n};\n\n/***/ },\n/* 99 */\n/***/ function(module, exports) {\n\nfunction TimeoutScheduler(delay) {\n    this.delay = delay;\n}\n\nvar TimerDisposable = function TimerDisposable(id) {\n    this.id = id;\n    this.disposed = false;\n};\n\nTimeoutScheduler.prototype.schedule = function schedule(action) {\n    return new TimerDisposable(setTimeout(action, this.delay));\n};\n\nTimerDisposable.prototype.dispose = TimerDisposable.prototype.unsubscribe = function () {\n    if (!this.disposed) {\n        clearTimeout(this.id);\n        this.id = null;\n        this.disposed = true;\n    }\n};\n\nmodule.exports = TimeoutScheduler;\n\n/***/ },\n/* 100 */\n/***/ function(module, exports) {\n\nmodule.exports = function arrayFlatMap(array, selector) {\n    var index = -1;\n    var i = -1;\n    var n = array.length;\n    var array2 = [];\n    while (++i < n) {\n        var array3 = selector(array[i], i, array);\n        var j = -1;\n        var k = array3.length;\n        while (++j < k) {\n            array2[++index] = array3[j];\n        }\n    }\n    return array2;\n};\n\n/***/ },\n/* 101 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar isInternal = __webpack_require__(32);\n\nmodule.exports = clone;\n\nfunction clone(source) {\n    var dest = source;\n    if (!(!dest || typeof dest !== 'object')) {\n        dest = isArray(source) ? [] : {};\n        for (var key in source) {\n            if (isInternal(key)) {\n                continue;\n            }\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(5);\nmodule.exports = function getSize(node) {\n    return isObject(node) && node.$expires || undefined;\n};\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(5);\n\nmodule.exports = function getType(node, anyType) {\n    var type = isObject(node) && node.$type || void 0;\n    if (anyType && type) {\n        return 'branch';\n    }\n    return type;\n};\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar isObject = __webpack_require__(5);\n\nmodule.exports = function isPathValue(pathValue) {\n    return isObject(pathValue) && (isArray(pathValue.path) || typeof pathValue.path === 'string');\n};\n\n/***/ },\n/* 105 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(106);\n\n\n/***/ },\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global, module) {'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = __webpack_require__(107);\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (true) {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(34), __webpack_require__(108)(module)))\n\n/***/ },\n/* 107 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n/***/ },\n/* 108 */\n/***/ function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.l; }\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.i; }\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n/***/ },\n/* 109 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(62);\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// falcor.all.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 109);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 30d81e45ba2ce06308db","var now = require('../support/now');\nvar $now = require('../values/expires-now');\nvar $never = require('../values/expires-never');\n\nmodule.exports = function isExpired(node, expireImmediate) {\n    var exp = node.$expires;\n    if (exp === undefined || exp === null || exp === $never) {\n        return false;\n    } else if (exp === $now) {\n        return expireImmediate;\n    }\n    return exp < now();\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/isExpired.js","var splice = require('./../lru/splice');\n\nmodule.exports = function expireNode(node, expired, lru) {\n    if (!node[f_invalidated]) {\n        node[f_invalidated] = true;\n        expired.push(node);\n        splice(lru, node);\n    }\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/expireNode.js","function FalcorJSON(f_meta) {\n    if (!f_meta) {\n        this[f_meta_data] = {};\n    } else if (!(this[f_meta_data] = f_meta[f_meta_data])) {\n        this[f_meta_data] = f_meta;\n    }\n}\n\nFalcorJSON.prototype.toJSON = toJSON;\nFalcorJSON.prototype.toProps = toProps;\nFalcorJSON.prototype.toString = toString;\nFalcorJSON.prototype.constructor = FalcorJSON;\n\nObject.defineProperties(FalcorJSON.prototype, [\n        'concat', 'copyWithin', 'entries', 'every', 'fill', 'filter',\n        'find', 'findIndex', 'forEach', 'includes', 'indexOf', 'join',\n        'keys', 'lastIndexOf', 'map', 'pop', 'push', 'reduce', 'reduceRight',\n        'reverse', 'shift', 'slice', 'some', 'sort', 'splice', 'unshift', 'values'\n    ]\n    .reduce(function (descriptors, name) {\n        descriptors[name] = {\n            writable: true, enumerable: false,\n            value: bindArrayMethod(Array.prototype[name])\n        };\n        return descriptors;\n    }, {\n        $__hash: {\n            enumerable: false,\n            get: function() {\n                var f_meta = this[f_meta_data];\n                return f_meta && f_meta['$code'] || '';\n            }\n        },\n        $__version: {\n            enumerable: false,\n            get: function() {\n                var f_meta = this[f_meta_data];\n                return f_meta && f_meta[f_meta_version] || 0;\n            }\n        }\n    })\n);\n\nfunction bindArrayMethod(fn) {\n    return (bound.fn = fn) && bound;\n    function bound() {\n        return bound.fn.apply(this, arguments);\n    }\n}\n\nvar isArray = Array.isArray;\nvar typeofObject = 'object';\nvar typeofString = 'string';\n\nfunction getInst(inst) {\n    var typeofInst = typeof inst;\n    var argsLen = arguments.length;\n    if (argsLen === 0) {\n        inst = this;\n    } else if (typeofInst !== typeofString) {\n        if (!inst || typeofInst !== typeofObject) {\n            return inst;\n        }\n    } else if (argsLen !== 1) {\n        return inst;\n    } else {\n        inst = this;\n    }\n    return inst === global ? undefined : inst;\n}\n\nfunction toJSON() {\n    return serialize(getInst.apply(this, arguments), toJSON);\n}\n\nfunction toString(includeMetadata) {\n    return JSON.stringify(serialize(\n        getInst.call(this, this),\n        serialize, includeMetadata === true\n    ));\n}\n\nfunction toProps(inst) {\n\n    inst = getInst.apply(this, arguments);\n\n    var f_meta_inst, f_meta_json, version = 0;\n    var json = serialize(inst, toProps, true, true);\n\n    if (inst && (f_meta_inst = inst[f_meta_data])) {\n        version = f_meta_inst[f_meta_version];\n    }\n\n    if (!(!json || typeof json !== typeofObject)) {\n        if (f_meta_json = json[f_meta_data]) {\n            f_meta_json[f_meta_version] = version;\n        }\n    }\n\n    return json;\n}\n\nfunction serialize(inst, serializer, includeMetadata, createWithProto) {\n\n    if (!inst || typeof inst !== typeofObject) {\n        return inst;\n    }\n\n    var count, total, f_meta, keys, key, xs;\n\n    if (isArray(inst)) {\n        xs = inst;\n    } else {\n\n        count = -1;\n        keys = Object.keys(inst);\n        total = keys.length;\n        xs = !createWithProto && {} || {\n            __proto__: FalcorJSON.prototype\n        };\n\n        if (includeMetadata && (f_meta = inst[f_meta_data])) {\n\n            var $code = f_meta['$code'];\n            var abs_path = f_meta[f_meta_abs_path];\n            var deref_to = f_meta[f_meta_deref_to];\n            var deref_from = f_meta[f_meta_deref_from];\n\n            f_meta = { __proto__: null };\n            $code && (f_meta['$code'] = $code);\n            abs_path && (f_meta[f_meta_abs_path] = abs_path);\n            deref_to && (f_meta[f_meta_deref_to] = deref_to);\n            deref_from && (f_meta[f_meta_deref_from] = deref_from);\n\n            xs[f_meta_data] = f_meta;\n\n            if (createWithProto) {\n                xs = { __proto__: xs };\n            }\n        }\n\n        while (++count < total) {\n            if ((key = keys[count]) !== f_meta_data) {\n                xs[key] = serializer(inst[key], serializer, includeMetadata);\n            }\n        }\n    }\n\n    return xs;\n}\n\nmodule.exports = FalcorJSON;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/FalcorJSON.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = '`null` is not allowed in branch key positions.';\n\n/**\n * Do not allow null in path.\n */\nmodule.exports = createErrorClass('NullInPathError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/NullInPathError.js","module.exports = createErrorClass;\n\nfunction createErrorClass(name, init) {\n    function E(message) {\n        this.message = message;\n        init && init.apply(this, arguments);\n        if (!Error.captureStackTrace) {\n            this.stack = (new Error()).stack;\n        } else {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n    E.prototype = new Error();\n    E.prototype.name = name;\n    E.prototype.constructor = E;\n    E.is = function(x) { return x.name === name; };\n    return E;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/createErrorClass.js","var objTypeof = 'object';\nmodule.exports = function isObject(value) {\n    return value !== null && typeof value === objTypeof;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isObject.js","module.exports = { $type: 'atom' };\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/support/materializedAtom.js","var isInternal = require('../internal/isInternal');\n\nmodule.exports = clone;\n\nfunction clone(node) {\n\n    var key, keys = Object.keys(node),\n        json = {}, index = -1, length = keys.length;\n\n    while (++index < length) {\n        key = keys[index];\n        if (isInternal(key)) {\n            continue;\n        }\n        json[key] = node[key];\n    }\n\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/clone.js","module.exports = function createHardlink(from, to) {\n\n    // create a back reference\n    var backRefs = to[f_refs_length] || 0;\n    to[f_ref + backRefs] = from;\n    to[f_refs_length] = backRefs + 1;\n\n    // create a hard reference\n    from[f_ref_index] = backRefs;\n    from[f_context] = to;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/createHardlink.js","var isObject = require('./../support/isObject');\nmodule.exports = function getSize(node) {\n    return isObject(node) && node.$size || 0;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getSize.js","/**\n * getCachePosition makes a fast walk to the bound value since all bound\n * paths are the most possible optimized path.\n *\n * @param {Model} model -\n * @param {Array} path -\n * @returns {Mixed} - undefined if there is nothing in this position.\n * @private\n */\nmodule.exports = getCachePosition;\n\nfunction getCachePosition(cache, path) {\n\n    var node = cache;\n    var type, depth = 0;\n    var maxDepth = path.length;\n\n    if (maxDepth > 0) {\n        do {\n            node = node[path[depth]];\n\n            while (node && (type = node.$type) === $ref) {\n                node = getCachePosition(cache, node.value);\n            }\n        } while (++depth < maxDepth && node && !type);\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getCachePosition.js","var removeNode = require('./removeNode');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = function updateNodeAncestors(nodeArg, offset, lru, version) {\n    var child = nodeArg;\n    do {\n        var node = child[f_parent];\n        var size = child.$size = (child.$size || 0) - offset;\n        if (size <= 0 && node != null) {\n            removeNode(child, node, child[f_key], lru);\n        } else if (child[f_version] !== version) {\n            updateBackReferenceVersions(child, version);\n        }\n        child = node;\n    } while (child);\n    return nodeArg;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/updateNodeAncestors.js","var createErrorClass = require('./createErrorClass');\n\n/**\n * InvalidKeySetError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidKeySetError', function(path, keysOrRanges) {\n    this.mesage = '' +\n        'The KeySet ' + JSON.stringify(keysOrRanges) +\n        ' in path ' + JSON.stringify(path) + ' contains a KeySet. ' +\n        'Keysets can only contain Keys or Ranges';\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidKeySetError.js","var EXPIRES_NEVER = require('./../values/expires-never');\n\n// [H] -> Next -> ... -> [T]\n// [T] -> Prev -> ... -> [H]\nmodule.exports = function lruPromote(root, object) {\n    // Never promote node.$expires === 1.  They cannot expire.\n    if (object.$expires === EXPIRES_NEVER) {\n        return;\n    }\n\n    var head = root[f_head];\n\n    // Nothing is in the cache.\n    if (!head) {\n        root[f_head] = root[f_tail] = object;\n        return;\n    }\n\n    if (head === object) {\n        return;\n    }\n\n    // The item always exist in the cache since to get anything in the\n    // cache it first must go through set.\n    var prev = object[f_prev];\n    var next = object[f_next];\n    if (next) {\n        next[f_prev] = prev;\n    }\n    if (prev) {\n        prev[f_next] = next;\n    }\n    object[f_prev] = undefined;\n\n    // Insert into head position\n    root[f_head] = object;\n    object[f_next] = head;\n    head[f_prev] = object;\n\n    // If the item we promoted was the tail, then set prev to tail.\n    if (object === root[f_tail]) {\n        root[f_tail] = prev;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/promote.js","var Subscription = require('./Subscription');\n\nmodule.exports = Subscriber;\n\nfunction Subscriber(destination, parent, onCompleted) {\n    if (typeof destination === 'function' ||\n             typeof parent === 'function' ||\n        typeof onCompleted === 'function') {\n        Subscription.call(this, []);\n        this.destination = {\n            error: parent,\n            onError: parent,\n            next: destination,\n            onNext: destination,\n            complete: onCompleted,\n            onCompleted: onCompleted\n        }\n    } else {\n        Subscription.call(this, [], parent);\n        this.parent = parent;\n        this.destination = destination;\n    }\n}\n\nSubscriber.prototype = Object.create(Subscription.prototype);\n\nSubscriber.prototype.next =\nSubscriber.prototype.onNext = function onNext(value) {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onNext) {\n            dest.onNext(value);\n        } else if (dest.next) {\n            dest.next(value);\n        }\n    }\n}\n\nSubscriber.prototype.error =\nSubscriber.prototype.onError = function onError(error) {\n    var signaled = false;\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onError) {\n            signaled = true;\n            dest.onError(error);\n        } else if (dest.error) {\n            signaled = true;\n            dest.error(error);\n        }\n        this.dispose();\n    }\n    if (!signaled) {\n        throw error;\n    }\n}\n\nSubscriber.prototype.complete =\nSubscriber.prototype.onCompleted = function onCompleted() {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onCompleted) {\n            dest.onCompleted();\n        } else if (dest.complete) {\n            dest.complete();\n        }\n        this.dispose();\n    }\n}\n\nSubscriber.prototype.dispose =\nSubscriber.prototype.unsubscribe = function () {\n    this.destination = null;\n    Subscription.prototype.dispose.call(this);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subscriber.js","module.exports = Subscription;\n\nfunction Subscription(subscriptions, parent) {\n    this.parent = parent;\n    this.subscriptions = subscriptions || [];\n}\n\nSubscription.prototype.add = function(subscription) {\n    return this.subscriptions.push(subscription) && this || this;\n}\n\nSubscription.prototype.remove = function(subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.subscriptions.splice(index, 1);\n    }\n    return this;\n}\n\nSubscription.prototype.dispose =\nSubscription.prototype.unsubscribe = function () {\n    var subscription, subscriptions = this.subscriptions;\n    while (subscriptions.length) {\n        (subscription = subscriptions.pop()) &&\n            subscription.dispose &&\n            subscription.dispose();\n    }\n    var parent = this.parent;\n    if (parent) {\n        this.parent = null;\n        parent.remove && parent.remove(this);\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subscription.js","var isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\n\nmodule.exports = onValueType;\n\nfunction onValueType(node, type, json,\n                     path, depth, seed, results,\n                     requestedPath, requestedLength,\n                     optimizedPath, optimizedLength,\n                     fromReference, modelRoot, expired, expireImmediate,\n                     branchSelector, boxValues, materialized, reportMissing,\n                     treatErrorsAsValues, onValue, onMissing, onMaterialize) {\n\n    var reportMaterialized = reportMissing;\n\n    if (type) {\n        if (isExpired(node, expireImmediate)) {\n            if (!node[f_invalidated]) {\n                expireNode(node, expired, modelRoot);\n            }\n        } else {\n            lruPromote(modelRoot, node);\n            if (node.value === undefined) {\n                reportMissing = false;\n                reportMaterialized = materialized;\n            } else {\n                if (seed) {\n                    if (fromReference) {\n                        requestedPath[depth] = null;\n                    }\n                    return onValue(node, type, depth, seed, results,\n                                   requestedPath, optimizedPath, optimizedLength,\n                                   fromReference, boxValues, materialized, treatErrorsAsValues);\n                }\n                return undefined;\n            }\n        }\n    }\n\n    if (materialized) {\n        seed && (results.hasValue = true);\n    } else if (!reportMaterialized) {\n        return undefined;\n    }\n\n    return onMissing(path, depth, results,\n                     requestedPath, requestedLength, fromReference,\n                     optimizedPath, optimizedLength, reportMissing,\n                     materialized, json, branchSelector,\n                     boxValues, onMaterialize);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onValueType.js","var getCachePosition = require('./getCachePosition');\n\nmodule.exports = getBoundCacheNode;\n\nfunction getBoundCacheNode(model, path) {\n    path = path || model._path;\n    var node = model._node;\n    if (!node || node[f_parent] === undefined || node[f_invalidated]) {\n        model._node = null;\n        if (path.length === 0) {\n            node = model._root.cache;\n        } else {\n            node = getCachePosition(model._root.cache, path);\n            if (path === model._path) {\n                model._node = node;\n            }\n        }\n    }\n    return node;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getBoundCacheNode.js","var removeNode = require('./removeNode');\nvar isInternalKey = require('../support/isInternalKey');\n\nmodule.exports = function removeNodeAndDescendants(node, parent, key, lru) {\n    if (removeNode(node, parent, key, lru)) {\n        if (node.$type == null) {\n            for (var key2 in node) {\n                if (!isInternalKey(key2)) {\n                    removeNodeAndDescendants(node[key2], node, key2, lru);\n                }\n            }\n        }\n        return true;\n    }\n    return false;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/removeNodeAndDescendants.js","var arr = new Array(5);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar mergeJSONGraphNode = require('../mergeJSONGraphNode');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\n\n/**\n * Merges a list of {@link JSONGraphEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to merge the {@link JSONGraphEnvelope}s.\n * @param {Array.<PathValue>} jsonGraphEnvelopes - the {@link JSONGraphEnvelope}s to merge.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setJSONGraphs(model, jsonGraphEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n    var initialVersion = cache[f_version];\n\n    var requestedPath = [];\n    var optimizedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var jsonGraphEnvelopeIndex = -1;\n    var jsonGraphEnvelopeCount = jsonGraphEnvelopes.length;\n\n    while (++jsonGraphEnvelopeIndex < jsonGraphEnvelopeCount) {\n\n        var jsonGraphEnvelope = jsonGraphEnvelopes[jsonGraphEnvelopeIndex];\n        var paths = jsonGraphEnvelope.paths;\n        var jsonGraph = jsonGraphEnvelope.jsonGraph;\n\n        var pathIndex = -1;\n        var pathCount = paths.length;\n\n        while (++pathIndex < pathCount) {\n\n            var path = paths[pathIndex];\n            optimizedPath.index = 0;\n\n            setJSONGraphPathSet(\n                path, 0,\n                cache, cache, cache,\n                jsonGraph, jsonGraph, jsonGraph,\n                requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n                version, expired, lru, comparator, errorSelector, expireImmediate\n            );\n        }\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n    arr[3] = undefined;\n    arr[4] = undefined;\n\n    var newVersion = cache[f_version];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (initialVersion !== newVersion) {\n        modelRoot.version = version;\n        rootChangeHandler && rootChangeHandler();\n    }\n\n    return [requestedPaths, optimizedPaths, initialVersion !== newVersion];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setJSONGraphPathSet(\n    path, depth, root, parent, node,\n    messageRoot, messageParent, message,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n\n        var results = setNode(\n            root, parent, node, messageRoot, messageParent, message,\n            key, branch, false, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = results[0];\n        var nextParent = results[1];\n        var nextOptimizedPath = results[4];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setJSONGraphPathSet(\n                    path, depth + 1, root, nextParent, nextNode,\n                    messageRoot, results[3], results[2],\n                    requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                    version, expired, lru, comparator, errorSelector, expireImmediate\n                );\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(\n    root, node, messageRoot, message, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var messageParent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        messageParent = messageRoot;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var index = 0;\n        var container = node;\n        var count = reference.length - 1;\n        parent = node = root;\n        messageParent = message = messageRoot;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            optimizedPath.index = index;\n\n            var results = setNode(\n                root, parent, node, messageRoot, messageParent, message,\n                key, branch, true, requestedPath, optimizedPath, version,\n                expired, lru, comparator, errorSelector, expireImmediate\n            );\n            node = results[0];\n            optimizedPath = results[4];\n            if (!node || typeof node !== 'object') {\n                optimizedPath.index = index;\n                return results;\n            }\n            parent = results[1];\n            message = results[2];\n            messageParent = results[3];\n        } while (index++ < count);\n\n        optimizedPath.index = index;\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(\n    root, parent, node, messageRoot, messageParent, message,\n    key, branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = setReference(\n            root, node, messageRoot, message, requestedPath, optimizedPath,\n            version, expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        message = results[2];\n        messageParent = results[3];\n        optimizedPath = results[4];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            messageParent = message;\n            node = parent[key];\n            message = messageParent && messageParent[key];\n        }\n\n        node = mergeJSONGraphNode(\n            parent, node, message, key, requestedPath, optimizedPath,\n            version, expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setJSONGraphs.js","var arr = new Array(3);\nvar isArray = Array.isArray;\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar getCachePosition = require('../getCachePosition');\nvar isInternalKey = require('../../support/isInternalKey');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar mergeValueOrInsertBranch = require('../mergeValueOrInsertBranch');\n\n/**\n * Sets a list of {@link PathMapEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of {@link PathMapEnvelope}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setPathMaps(model, pathMapEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n    var parent = node[f_parent] || cache;\n    var initialVersion = cache[f_version];\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathMapIndex = -1;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathMap(\n            pathMapEnvelope.json, 0, cache, parent, node,\n            requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n            version, expired, modelRoot, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    var newVersion = cache[f_version];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (initialVersion !== newVersion) {\n        modelRoot.version = version;\n        rootChangeHandler && rootChangeHandler();\n    }\n\n    return [requestedPaths, optimizedPaths, initialVersion !== newVersion];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setPathMap(\n    pathMap, depth, root, parent, node,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var keys = getKeys(pathMap);\n\n    if (keys && keys.length) {\n\n        var keyIndex = 0;\n        var keyCount = keys.length;\n        var optimizedIndex = optimizedPath.index;\n\n        do {\n            var key = keys[keyIndex];\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n\n            requestedPath.depth = depth;\n\n            var results = setNode(\n                root, parent, node, key, child,\n                branch, false, requestedPath, optimizedPath, version,\n                expired, lru, comparator, errorSelector, expireImmediate\n            );\n\n            requestedPath[depth] = key;\n            requestedPath.index = depth;\n\n            var nextNode = results[0];\n            var nextParent = results[1];\n            var nextOptimizedPath = results[2];\n            nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n            if (nextNode) {\n                if (branch) {\n                    setPathMap(\n                        child, depth + 1,\n                        root, nextParent, nextNode,\n                        requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                        version, expired, lru, comparator, errorSelector, expireImmediate\n                    );\n                } else {\n                    requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                    optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n                }\n            }\n            if (++keyIndex >= keyCount) {\n                break;\n            }\n            optimizedPath.index = optimizedIndex;\n        } while (true);\n    }\n}\n/* eslint-enable */\n\nfunction setReference(\n    value, root, node, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n        var container = node;\n        parent = root;\n\n        node = node[f_context];\n\n        if (node != null) {\n            parent = node[f_parent] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n            optimizedPath.index = index;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                var results = setNode(\n                    root, parent, node, key, value,\n                    branch, true, requestedPath, optimizedPath, version,\n                    expired, lru, comparator, errorSelector, expireImmediate\n                );\n                node = results[0];\n                optimizedPath = results[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return results;\n                }\n                parent = results[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[f_context] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(\n    root, parent, node, key, value,\n    branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = setReference(\n            value, root, node, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        optimizedPath = results[2];\n        type = node && node.$type;\n    }\n\n    if (type === void 0) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(\n            parent, node, key, value,\n            branch, reference, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction getKeys(pathMap) {\n\n    if (!(!pathMap || typeof pathMap !== 'object') && !pathMap.$type) {\n        var keys = [];\n        var itr = 0;\n        if (isArray(pathMap)) {\n            keys[itr++] = 'length';\n        }\n        for (var key in pathMap) {\n            if (isInternalKey(key)) {\n                continue;\n            }\n            keys[itr++] = key;\n        }\n        return keys;\n    }\n\n    return void 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setPathMaps.js","/**\n * Determined if the key passed in is an internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nmodule.exports = isInternalKey;\n\nvar isInternal = require('../internal/isInternal');\n\nfunction isInternalKey(key) {\n    return key && key[0] === '$' || isInternal(key);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isInternalKey.js","module.exports = flatBufferToPaths;\n\nfunction flatBufferToPaths(flatBuf, paths, path) {\n\n    path = path || [];\n    paths = paths || [];\n\n    var leaf = [];\n    var keys = flatBuf['$keys'];\n    var keysLen = keys.length;\n    var keysIndex = -1, key, len;\n\n    while (++keysIndex < keysLen) {\n\n        var rest = flatBuf[keysIndex];\n        var keyset = keys[keysIndex];\n\n        if (!rest) {\n            leaf.push(keyset);\n        } else {\n            flatBufferToPaths(rest, paths, path.concat([keyset]));\n        }\n    }\n\n    if (leaf.length === 1) {\n        paths.push(path.concat(leaf));\n    } else if (leaf.length > 1) {\n        paths.push(path.concat([leaf]));\n    }\n\n    return paths;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/flatBufferToPaths.js","module.exports = getHashCode;\n\nfunction getHashCode(str) {\n    var hash = 5381, i = str.length;\n    while (i) {\n        hash = (hash * 33) ^ str.charCodeAt(--i);\n    }\n    // JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n    // integers. Since we want the results to be always positive, convert the\n    // signed int to an unsigned by doing an unsigned bitshift.\n    return hash >>> 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/getHashCode.js","var isArray = Array.isArray;\n\n/**\n * Takes in a keySet and a note attempts to iterate over it.\n * If the value is a primitive, the key will be returned and the note will\n * be marked done\n * If the value is an object, then each value of the range will be returned\n * and when finished the note will be marked done.\n * If the value is an array, each value will be iterated over, if any of the\n * inner values are ranges, those will be iterated over.  When fully done,\n * the note will be marked done.\n *\n * @param {Object|Array|String|Number} keySet -\n * @param {Object} note - The non filled note\n * @returns {String|Number|undefined} - The current iteration value.\n * If undefined, then the keySet is empty\n * @public\n */\nmodule.exports = function iterateKeySet(keySet, note) {\n    if (note.isArray === undefined) {\n        initializeNote(keySet, note);\n    }\n\n    // Array iteration\n    if (note.isArray) {\n        var nextValue;\n\n        // Cycle through the array and pluck out the next value.\n        do {\n            if (note.loaded && note.rangeOffset > note.to) {\n                ++note.arrayOffset;\n                note.loaded = false;\n            }\n\n            var idx = note.arrayOffset, length = keySet.length;\n            if (idx >= length) {\n                note.done = true;\n                break;\n            }\n\n            var el = keySet[note.arrayOffset];\n            var type = typeof el;\n\n            // Inner range iteration.\n            if (type === 'object') {\n                if (!note.loaded) {\n                    initializeRange(el, note);\n                }\n\n                // Empty to/from\n                if (note.empty) {\n                    continue;\n                }\n\n                nextValue = note.rangeOffset++;\n            }\n\n            // Primitive iteration in array.\n            else {\n                ++note.arrayOffset;\n                nextValue = el;\n            }\n        } while (nextValue === undefined);\n\n        return nextValue;\n    }\n\n    // Range iteration\n    else if (note.isObject) {\n        if (!note.loaded) {\n            initializeRange(keySet, note);\n        }\n        if (note.rangeOffset > note.to) {\n            note.done = true;\n            return undefined;\n        }\n\n        return note.rangeOffset++;\n    }\n\n    // Primitive value\n    else {\n        note.done = true;\n        return keySet;\n    }\n};\n\nfunction initializeRange(key, memo) {\n    var from = memo.from = key.from || 0;\n    var to = memo.to = key.to ||\n        (typeof key.length === 'number' &&\n        memo.from + key.length - 1 || 0);\n    memo.rangeOffset = memo.from;\n    memo.loaded = true;\n    if (from > to) {\n        memo.empty = true;\n    }\n}\n\nfunction initializeNote(key, note) {\n    note.done = false;\n    var isObject = note.isObject = !!(key && typeof key === 'object');\n    note.isArray = isObject && isArray(key);\n    note.arrayOffset = 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/iterateKeySet.js","module.exports = require('./getJSON');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/index.js","module.exports = require('./getJSONGraph');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/index.js","module.exports = inlineJSONGraphValue;\n\n/* eslint-disable no-constant-condition */\nfunction inlineJSONGraphValue(node, path, length, seed, branch) {\n\n    var key, depth = 0, prev,\n        curr = seed.jsonGraph;\n\n    if (!curr) {\n        seed.jsonGraph = curr = {};\n    }\n\n    do {\n        prev = curr;\n        key = path[depth++];\n        if (depth >= length) {\n            curr = prev[key] = branch !== true ? node : prev[key] || {};\n            break;\n        }\n        curr = prev[key] || (prev[key] = {});\n    } while (true);\n\n    return curr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/inlineValue.js","var isArray = Array.isArray;\n\nmodule.exports = onMissing;\n\n/* eslint-disable no-constant-condition */\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, json, branchSelector,\n                   boxValues, onMaterialize) {\n\n    if (!reportMissing && !reportMaterialized) {\n        return;\n    }\n\n    var keyset,\n        restPathIndex = -1,\n        restPathCount = requestedLength - depth,\n        restPath = restPathCount && new Array(restPathCount) || undefined;\n\n    while (++restPathIndex < restPathCount) {\n        keyset = path[restPathIndex + depth];\n        if (isEmptyKeySet(keyset)) {\n            return;\n        }\n        restPath[restPathIndex] = keyset;\n    }\n\n    var index, count, mPath;\n    var lastKeyIsNull = keyset === null;\n    var isRequestedPath = reportMissing;\n    var missDepth, missTotal, missingPath, missingPaths;\n\n    if (!reportMissing) {\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } else {\n        missDepth = depth;\n        missTotal = requestedLength;\n        missingPath = requestedPath;\n        missingPaths = results.requested || (results.requested = []);\n    }\n\n    do {\n        if (restPathCount < requestedLength || !isRequestedPath) {\n            index = -1;\n            count = missDepth;\n            mPath = new Array(missTotal);\n            while (++index < count) {\n                mPath[index] = missingPath[index];\n            }\n            restPathIndex = -1;\n            while (index < missTotal) {\n                mPath[index++] = restPath[++restPathIndex];\n            }\n        }\n\n        // break after inserting both requested and optimized missing paths\n        if (isRequestedPath = !isRequestedPath) {\n            if (reportMissing) {\n                missingPaths[missingPaths.length] = mPath;\n            }\n            break;\n        }\n\n        missingPaths[missingPaths.length] = mPath || restPath;\n\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missingPaths = results.missing || (results.missing = []);\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } while (true);\n\n    if (reportMaterialized) {\n        return onMaterialize(json, mPath, missDepth, missTotal, branchSelector, boxValues);\n    }\n}\n/* eslint-enable */\n\nfunction isEmptyKeySet(keyset) {\n\n    // false if the keyset is a primitive\n    if ('object' !== typeof keyset) {\n        return false;\n    } else if (keyset === null) {\n        return false;\n    }\n\n    if (isArray(keyset)) {\n        // return true if the keyset is an empty array\n        return keyset.length === 0;\n    }\n\n    var rangeEnd = keyset.to,\n        from = keyset.from || 0;\n    if ('number' !== typeof rangeEnd) {\n        rangeEnd = from + (keyset.length || 0);\n    }\n\n    // false if trying to request incorrect or empty ranges\n    // e.g. { from: 10, to: 0 } or { from: 5, length: 0 }\n    return from >= rangeEnd;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMissing.js","var arr = new Array(2);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\nvar getSize = require('../../support/getSize');\nvar createHardlink = require('../createHardlink');\nvar getBoundCacheNode = require('../getBoundCacheNode');\nvar updateNodeAncestors = require('../updateNodeAncestors');\nvar removeNodeAndDescendants = require('../removeNodeAndDescendants');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\n\n/**\n * Invalidates a list of Paths in a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathValues.\n * @param {Array.<PathValue>} paths - the PathValues to set.\n */\n\nmodule.exports = function invalidatePathSets(model, paths, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version++;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n    var parent = node[f_parent] || cache;\n    var initialVersion = cache[f_version];\n\n    var pathIndex = -1;\n    var pathCount = paths.length;\n\n    while (++pathIndex < pathCount) {\n\n        var path = paths[pathIndex];\n\n        invalidatePathSet(\n            path, 0, cache, parent, node,\n            version, expired, lru, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    var newVersion = cache[f_version];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (rootChangeHandler && initialVersion !== newVersion) {\n        rootChangeHandler();\n    }\n};\n\nfunction invalidatePathSet(\n    path, depth, root, parent, node,\n    version, expired, lru, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n\n    do {\n        arr = invalidateNode(\n            root, parent, node,\n            key, branch, false, version,\n            expired, lru, expireImmediate\n        );\n        var nextNode = arr[0];\n        var nextParent = arr[1];\n        if (nextNode) {\n            if (branch) {\n                invalidatePathSet(\n                    path, depth + 1,\n                    root, nextParent, nextNode,\n                    version, expired, lru, expireImmediate\n                );\n            } else if (removeNodeAndDescendants(nextNode, nextParent, key, lru)) {\n                updateNodeAncestors(nextParent, getSize(nextNode), lru, version);\n            }\n        }\n        key = iterateKeySet(keySet, note);\n    } while (!note.done);\n}\n\nfunction invalidateReference(root, node, version, expired, lru, expireImmediate) {\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return arr;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[f_context];\n\n    if (node != null) {\n        parent = node[f_parent] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            arr = invalidateNode(\n                root, parent, node,\n                key, branch, true, version,\n                expired, lru, expireImmediate\n            );\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return arr;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\nfunction invalidateNode(\n    root, parent, node,\n    key, branch, reference, version,\n    expired, lru, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        arr = invalidateReference(root, node, version, expired, lru, expireImmediate);\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return arr;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type !== void 0) {\n        return [node, parent];\n    }\n\n    if (key == null) {\n        if (branch) {\n            throw new Error('`null` is not allowed in branch key positions.');\n        } else if (node) {\n            key = node[f_key];\n        }\n    } else {\n        parent = node;\n        node = parent[key];\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/invalidatePathSets.js","var lruSplice = require('../lru/splice');\nvar unlinkBackReferences = require('./unlinkBackReferences');\nvar unlinkForwardReference = require('./unlinkForwardReference');\n\nmodule.exports = function removeNode(node, parent, key, lru) {\n    if (!(!node || typeof node !== 'object')) {\n        var type = node.$type;\n        if (type) {\n            if (type === $ref) {\n                unlinkForwardReference(node);\n            }\n            lruSplice(lru, node);\n        }\n        unlinkBackReferences(node);\n        parent[key] = node[f_parent] = void 0;\n        return true;\n    }\n    return false;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/removeNode.js","var arr = new Array(3);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar getCachePosition = require('../getCachePosition');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\nvar mergeValueOrInsertBranch = require('../mergeValueOrInsertBranch');\n\n/**\n * Sets a list of {@link PathValue}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the {@link PathValue}s.\n * @param {Array.<PathValue>} pathValues - the list of {@link PathValue}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setPathValues(model, pathValues, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n    var parent = node[f_parent] || cache;\n    var initialVersion = cache[f_version];\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathValueIndex = -1;\n    var pathValueCount = pathValues.length;\n\n    while (++pathValueIndex < pathValueCount) {\n\n        var pathValue = pathValues[pathValueIndex];\n        var path = pathValue.path;\n        var value = pathValue.value;\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathSet(\n            value, path, 0, cache, parent, node,\n            requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n            version, expired, modelRoot, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    var newVersion = cache[f_version];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (initialVersion !== newVersion) {\n        modelRoot.version = version;\n        rootChangeHandler && rootChangeHandler();\n    }\n\n    return [requestedPaths, optimizedPaths, initialVersion !== newVersion];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setPathSet(\n    value, path, depth, root, parent, node,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var results = setNode(\n            root, parent, node, key, value,\n            branch, false, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = results[0];\n        var nextParent = results[1];\n        var nextOptimizedPath = results[2];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setPathSet(\n                    value, path, depth + 1,\n                    root, nextParent, nextNode,\n                    requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                    version, expired, lru, comparator, errorSelector, expireImmediate\n                );\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(\n    value, root, node, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var container = node;\n        parent = root;\n\n        node = node[f_context];\n\n        if (node != null) {\n            parent = node[f_parent] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                optimizedPath.index = index;\n\n                var results = setNode(\n                    root, parent, node, key, value,\n                    branch, true, requestedPath, optimizedPath, version,\n                    expired, lru, comparator, errorSelector, expireImmediate\n                );\n                node = results[0];\n                optimizedPath = results[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return results;\n                }\n                parent = results[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[f_context] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(\n    root, parent, node, key, value,\n    branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = setReference(\n            value, root, node, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        optimizedPath = results[2];\n        type = node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(\n            parent, node, key, value,\n            branch, reference, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setPathValues.js","/**\n * Determined if the key passed in is an f_ internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nvar f_ = require('./f_');\nvar regexp = new RegExp('^' + f_, 'i', 'g');\n\nmodule.exports = regexp.test.bind(regexp);\n\n\n\n// WEBPACK FOOTER //\n// ./lib/internal/isInternal.js","module.exports = 0;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/values/expires-now.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() { return this; })();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 34\n// module chunks = 0","var toPaths = require('./toPaths');\nvar toCollapseMap = require('./toCollapseMap');\nvar toCollapseTrees = require('./toCollapseTrees');\n\nmodule.exports = function collapse(paths) {\n    return toPaths(toCollapseTrees(toCollapseMap(paths)));\n};\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/collapse.js","var isArray = Array.isArray;\nvar flatBufferToPaths = require('./flatBufferToPaths');\n\nmodule.exports = toCollapseMap;\n\nfunction toCollapseMap(paths, collapseMap) {\n    if (!paths) { return collapseMap; }\n    else if (!isArray(paths)) {\n        if (isArray(paths.$keys)) {\n            paths = flatBufferToPaths(paths);\n        }\n    }\n    return paths.reduce(function(acc, path) {\n        var len = path.length;\n        if (!acc[len]) {\n            acc[len] = [];\n        }\n        acc[len].push(path);\n        return acc;\n    }, collapseMap || {});\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toCollapseMap.js","var toTree = require('./toTree');\n\nmodule.exports = toCollapseTrees;\n\nfunction toCollapseTrees(collapseMap, collapseTrees) {\n    return Object.keys(collapseMap).reduce(function(collapseTrees, collapseKey) {\n        collapseTrees[collapseKey] = toTree(\n            collapseMap[collapseKey],\n            collapseTrees[collapseKey]\n        );\n        return collapseTrees;\n    }, collapseTrees || {});\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toCollapseTrees.js","var isArray = Array.isArray;\nvar typeOfObject = 'object';\nvar typeOfString = 'string';\nvar typeOfNumber = 'number';\nvar MAX_SAFE_INTEGER = 9007199254740991; // Number.MAX_SAFE_INTEGER in es6\nvar MAX_SAFE_INTEGER_DIGITS = 16; // String(Number.MAX_SAFE_INTEGER).length\nvar MIN_SAFE_INTEGER_DIGITS = 17; // String(Number.MIN_SAFE_INTEGER).length (including sign)\nvar abs = Math.abs;\nvar safeNumberRegEx = /^(0|(\\-?[1-9][0-9]*))$/;\nvar getHashCode = require('./getHashCode');\nvar materializedAtom = require('./support/materializedAtom');\n\n/* jshint forin: false */\nmodule.exports = function toPaths(lengths) {\n    var pathmap;\n    var allPaths = [];\n    var allPathsLength = 0;\n    for (var length in lengths) {\n        if (isSafeNumber(length) && isObject(pathmap = lengths[length])) {\n            var paths = collapsePathMap(pathmap, 0, parseInt(length, 10)).sets;\n            var pathsIndex = -1;\n            var pathsCount = paths.length;\n            while (++pathsIndex < pathsCount) {\n                allPaths[allPathsLength++] = collapsePathSetIndexes(paths[pathsIndex]);\n            }\n        }\n    }\n    return allPaths;\n};\n\nfunction isObject(value) {\n    return value !== null && typeof value === typeOfObject;\n}\n\nfunction collapsePathMap(pathmap, depth, length) {\n\n    var key;\n    var subs = Object.create(null);\n    var code = '' + getHashCode('' + depth);\n\n    var codes = [];\n    var codesIndex = -1;\n    var codesCount = 0;\n\n    var pathsets = [];\n    var pathsetsCount = 0;\n\n    var subPath, subCode,\n        subKeys, subKeysIndex, subKeysCount,\n        subSets, subSetsIndex, subSetsCount,\n        pathset, pathsetIndex, pathsetCount,\n        firstSubKey, pathsetClone;\n\n    subKeys = [];\n    subKeysIndex = -1;\n\n    if (depth < length - 1) {\n\n        subKeysCount = getSortedKeys(pathmap, subKeys);\n\n        while (++subKeysIndex < subKeysCount) {\n            key = subKeys[subKeysIndex];\n            subPath = collapsePathMap(pathmap[key], depth + 1, length);\n            subCode = subPath.code;\n            if(subs[subCode]) {\n                subPath = subs[subCode];\n            } else {\n                codes[codesCount++] = subCode;\n                subPath = subs[subCode] = {\n                    keys: [],\n                    sets: subPath.sets\n                };\n            }\n            code = '' + getHashCode(code + key + subCode);\n\n            isSafeNumber(key) &&\n                subPath.keys.push(parseInt(key, 10)) ||\n                subPath.keys.push(key);\n        }\n\n        while(++codesIndex < codesCount) {\n\n            key = codes[codesIndex];\n            subPath = subs[key];\n            subKeys = subPath.keys;\n            subKeysCount = subKeys.length;\n\n            if (subKeysCount > 0) {\n\n                subSets = subPath.sets;\n                subSetsIndex = -1;\n                subSetsCount = subSets.length;\n                firstSubKey = subKeys[0];\n\n                while (++subSetsIndex < subSetsCount) {\n\n                    pathset = subSets[subSetsIndex];\n                    pathsetIndex = -1;\n                    pathsetCount = pathset.length;\n                    pathsetClone = new Array(pathsetCount + 1);\n                    pathsetClone[0] = subKeysCount > 1 && subKeys || firstSubKey;\n\n                    while (++pathsetIndex < pathsetCount) {\n                        pathsetClone[pathsetIndex + 1] = pathset[pathsetIndex];\n                    }\n\n                    pathsets[pathsetsCount++] = pathsetClone;\n                }\n            }\n        }\n    } else {\n        subKeysCount = getSortedKeys(pathmap, subKeys);\n        if (subKeysCount > 1) {\n            pathsets[pathsetsCount++] = [subKeys];\n        } else {\n            pathsets[pathsetsCount++] = subKeys;\n        }\n        while (++subKeysIndex < subKeysCount) {\n            code = '' + getHashCode(code + subKeys[subKeysIndex]);\n        }\n    }\n\n    return {\n        code: code,\n        sets: pathsets\n    };\n}\n\nfunction collapsePathSetIndexes(pathset) {\n\n    var keysetIndex = -1;\n    var keysetCount = pathset.length;\n\n    while (++keysetIndex < keysetCount) {\n        var keyset = pathset[keysetIndex];\n        if (isArray(keyset)) {\n            pathset[keysetIndex] = collapseIndex(keyset);\n        }\n    }\n\n    return pathset;\n}\n\n/**\n * Collapse range indexers, e.g. when there is a continuous\n * range in an array, turn it into an object instead:\n *\n * [1,2,3,4,5,6] => {'from':1, 'to':6}\n *\n * @private\n */\nfunction collapseIndex(keyset) {\n\n    // Do we need to dedupe an indexer keyset if they're duplicate consecutive integers?\n    // var hash = {};\n    var keyIndex = -1;\n    var keyCount = keyset.length - 1;\n    var isSparseRange = keyCount > 0;\n\n    while (++keyIndex <= keyCount) {\n\n        var key = keyset[keyIndex];\n\n        if (!isSafeNumber(key) /* || hash[key] === true*/ ) {\n            isSparseRange = false;\n            break;\n        }\n        // hash[key] = true;\n        // Cast number indexes to integers.\n        keyset[keyIndex] = parseInt(key, 10);\n    }\n\n    if (isSparseRange === true) {\n\n        keyset.sort(sortListAscending);\n\n        var from = keyset[0];\n        var to = keyset[keyCount];\n\n        // If we re-introduce deduped integer indexers, change this comparson to '==='.\n        if (to - from <= keyCount) {\n            return { from: from, to: to };\n        }\n    }\n\n    return keyset;\n}\n\nfunction sortListAscending(a, b) {\n    return a - b;\n}\n\n/* jshint forin: false */\nfunction getSortedKeys(map, keys, sort) {\n    var len = 0;\n    if (map === materializedAtom) {\n        keys[len++] = null;\n    } else {\n        for (var key in map) {\n            keys[len++] = key;\n        }\n        if (len > 1) {\n            keys.sort(sort);\n        }\n    }\n    return len;\n}\n\n// function getHashCode(key) {\n//     var code = 5381;\n//     var index = -1;\n//     var count = key.length;\n//     while (++index < count) {\n//         code = (code << 5) + code + key.charCodeAt(index);\n//     }\n//     return String(code);\n// }\n\n/**\n * Return true if argument is a number or can be cast to a number which\n * roundtrips to the same string.\n * @private\n */\nfunction isSafeNumber(val) {\n    var num = val;\n    var type = typeof val;\n    if (type === typeOfString) {\n        var length = val.length;\n        // Number.MIN_SAFE_INTEGER is 17 digits including the sign.\n        // Anything longer cannot be safe.\n        if (length === 0 || length > MIN_SAFE_INTEGER_DIGITS) {\n            return false;\n        }\n        if (!safeNumberRegEx.test(val)) {\n            return false;\n        }\n        // Number.MAX_SAFE_INTEGER is 16 digits.\n        // Anything shorter must be safe.\n        if (length < MAX_SAFE_INTEGER_DIGITS) {\n            return true;\n        }\n        num = +val;\n    } else if (type !== typeOfNumber) {\n        return false;\n    }\n    // Number.isSafeInteger(num) in es6.\n    return num % 1 === 0 && abs(num) <= MAX_SAFE_INTEGER;\n}\n\n// export for testing\nmodule.exports._isSafeNumber = isSafeNumber;\n\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toPaths.js","var isArray = Array.isArray;\nvar walkPathAndBuildOutput = require('./walkPath');\nvar walkFlatBufferAndBuildOutput = require('./walkFlatBuffer');\nvar getBoundCacheNode = require('../../getBoundCacheNode');\nvar InvalidModelError = require('../../../errors/InvalidModelError');\nvar toFlatBuffer = require('@graphistry/falcor-path-utils/lib/toFlatBuffer');\nvar computeFlatBufferHash = require('@graphistry/falcor-path-utils/lib/computeFlatBufferHash');\n\nmodule.exports = getJSON;\n\nfunction getJSON(model, paths, seed, progressive, expireImmediate) {\n\n    var node,\n        referenceContainer,\n        boundPath = model._path,\n        modelRoot = model._root,\n        cache = modelRoot.cache,\n        requestedPath, requestedLength,\n        optimizedPath, optimizedLength =\n            boundPath && boundPath.length || 0;\n\n    // If the model is bound, get the cache position.\n    if (optimizedLength) {\n        node = getBoundCacheNode(model);\n        // If there was a short, then we 'throw an error' to the outside\n        // calling function which will onError the observer.\n        if (node && node.$type) {\n            return { error: new InvalidModelError(boundPath, boundPath) };\n        }\n        // We need to get the new cache position and copy the bound path.\n        optimizedPath = [];\n        for (var i = 0; i < optimizedLength; ++i) {\n            optimizedPath[i] = boundPath[i];\n        }\n        referenceContainer = model._referenceContainer;\n    } else {\n        node = cache;\n        optimizedPath = [];\n    }\n\n    requestedPath = [];\n\n    var isFlatBuffer = false,\n        json = seed && seed.json,\n        results = { data: seed },\n        boxValues = model._boxed,\n        expired = modelRoot.expired,\n        recycleJSON = model._recycleJSON,\n        materialized = model._materialized,\n        hasDataSource = Boolean(model._source),\n        branchSelector = modelRoot.branchSelector,\n        treatErrorsAsValues = model._treatErrorsAsValues,\n        allowFromWhenceYouCame = model._allowFromWhenceYouCame;\n\n    var arr, path, pathsIndex = 0, pathsCount = paths.length;\n\n    if (pathsCount > 0) {\n        if (recycleJSON) {\n            pathsCount = 1;\n            isFlatBuffer = true;\n            if (!paths[0].$keys) {\n                paths = [computeFlatBufferHash(toFlatBuffer(paths, {}))];\n            }\n            arr = walkFlatBufferAndBuildOutput(cache, node, json, paths[0], 0, seed, results,\n                                               requestedPath, optimizedPath, optimizedLength,\n                                               /* fromReference = */ false, referenceContainer,\n                                               modelRoot, expired, expireImmediate, branchSelector,\n                                               boxValues, materialized, hasDataSource,\n                                               treatErrorsAsValues, allowFromWhenceYouCame);\n            json = arr[0];\n            arr[0] = undefined;\n            arr[1] = undefined;\n        } else {\n            do {\n                path = paths[pathsIndex];\n                requestedLength = path.length;\n                json = walkPathAndBuildOutput(cache, node, json, path,\n                                           /* depth = */ 0, seed, results,\n                                              requestedPath, requestedLength,\n                                              optimizedPath, optimizedLength,\n                                              /* fromReference = */ false, referenceContainer,\n                                              modelRoot, expired, expireImmediate, branchSelector,\n                                              boxValues, materialized, hasDataSource,\n                                              treatErrorsAsValues, allowFromWhenceYouCame);\n            } while (++pathsIndex < pathsCount)\n        }\n    }\n\n    var requested = results.requested;\n\n    results.args = isFlatBuffer && paths || requested;\n\n    if (requested && requested.length) {\n        results.relative = results.args;\n        if (optimizedLength) {\n            var boundRequested = [];\n            for (var i = 0, len = requested.length; i < len; ++i) {\n                boundRequested[i] = boundPath.concat(requested[i]);\n            }\n            results.requested = boundRequested;\n        }\n    }\n\n    if (results.hasValue) {\n        seed.json = json;\n    }\n\n    return results;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/getJSON.js","var arr = new Array(3);\nvar promote = require('../../../lru/promote');\nvar isExpired = require('../../isExpired');\nvar createHardlink = require('../../createHardlink');\nvar CircularReferenceError = require('../../../errors/CircularReferenceError');\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, ref, modelRoot, expireImmediate) {\n\n    promote(modelRoot, ref);\n\n    var context,\n        key, type, depth = 0,\n        node = root, path = ref.value,\n        copy = path, length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[f_context])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                throw new CircularReferenceError(path);\n            }\n            // If the node we land on isn't the existing ref context,\n            // create a hard-link between the reference and the node\n            // it points to.\n            else if (node !== context) {\n                createHardlink(ref, node);\n            }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === $ref) {\n\n                promote(modelRoot, node);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n    arr[2] = ref;\n\n    return arr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/getReferenceTarget.js","var clone = require('../../clone');\nvar onError = require('./onError');\n\nmodule.exports = onJSONValue;\n\nfunction onJSONValue(node, type, depth, seed, results,\n                     requestedPath, optimizedPath, optimizedLength,\n                     fromReference, boxValues, materialized,\n                     treatErrorsAsValues) {\n\n    if ($error === type && !treatErrorsAsValues) {\n        return onError(node, depth, results, requestedPath,\n                       fromReference, boxValues);\n    }\n\n    results.hasValue = true;\n\n    // boxValues always clones the node\n    return !boxValues ? node.value : clone(node);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/onValue.js","var walkPathAndBuildOutput = require('./walkPath');\nvar BoundJSONGraphModelError = require('../../../errors/BoundJSONGraphModelError');\n\nmodule.exports = getJSONGraph;\n\nfunction getJSONGraph(model, paths, seed, progressive, expireImmediate) {\n\n    var node, cache,\n        boundPath = model._path,\n        modelRoot = model._root,\n        requestedPath, requestedLength,\n        optimizedPath, optimizedLength =\n            boundPath && boundPath.length || 0;\n\n    // If the model is bound, then get that cache position.\n    if (optimizedLength) {\n        // JSONGraph output cannot ever be bound or else it will\n        // throw an error.\n        return { error: new BoundJSONGraphModelError() };\n    } else {\n        optimizedPath = [];\n        cache = node = modelRoot.cache;\n    }\n\n    requestedPath = [];\n\n    var boxValues = model._boxed,\n        expired = modelRoot.expired,\n        materialized = model._materialized,\n        hasDataSource = Boolean(model._source),\n        treatErrorsAsValues = model._treatErrorsAsValues,\n\n        results = { data: seed },\n        pathsIndex = -1, pathsCount = paths.length;\n\n    while (++pathsIndex < pathsCount) {\n        var path = paths[pathsIndex];\n        requestedLength = path.length;\n        walkPathAndBuildOutput(cache, node, path,\n                            /* depth = */ 0, seed, results,\n                               requestedPath, requestedLength,\n                               optimizedPath, optimizedLength,\n              /* fromReference = */ false, modelRoot, expired, expireImmediate,\n                               boxValues, materialized, hasDataSource, treatErrorsAsValues);\n    }\n\n    results.args =\n    results.relative = results.requested;\n\n    return results;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/getJSONGraph.js","var isArray = Array.isArray;\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar clone = require('../clone');\nvar FalcorJSON = require('./json/FalcorJSON');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = onMaterialize;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterialize(json, path, depth, length,\n                       branchSelector, boxValues) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (depth === length) {\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta;\n\n    var nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        keysetIndex = -1, keysetLength = 0;\n\n    keyset = path[depth];\n\n    if (!json || typeofObject !== typeof json) {\n        json = { __proto__: FalcorJSON.prototype };\n        json[f_meta_data] = f_meta = { __proto__: null };\n        f_meta[f_meta_version] = 0;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[f_meta_data])) {\n        json[f_meta_data] = f_meta = { __proto__: null };\n        f_meta[f_meta_version] = 0;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n    } else {\n        f_meta[f_meta_version] = 0;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            // insert the materialized branch\n            json[nextKey] = onMaterialize(\n                json[nextKey], path,\n                nextDepth, length,\n                branchSelector,\n                boxValues\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMaterialize.js","module.exports = function insertNode(node, parent, key, version, optimizedPath) {\n    node[f_key] = key;\n    node[f_parent] = parent;\n\n    if (version !== undefined) {\n        node[f_version] = version;\n    }\n    if (!node[f_abs_path]) {\n        node[f_abs_path] = optimizedPath.slice(0, optimizedPath.index).concat(key);\n    }\n\n    parent[key] = node;\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/insertNode.js","var isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\nvar getSize = require('../../support/getSize');\nvar createHardlink = require('../createHardlink');\nvar getBoundCacheNode = require('../getBoundCacheNode');\nvar isInternalKey = require('../../support/isInternalKey');\nvar updateNodeAncestors = require('../updateNodeAncestors');\nvar removeNodeAndDescendants = require('../removeNodeAndDescendants');\n\n/**\n * Sets a list of PathMaps into a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of @PathMapEnvelopes to set.\n */\n\nmodule.exports = function invalidatePathMaps(model, pathMapEnvelopes, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version++;\n    var comparator = modelRoot._comparator;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n    var parent = node[f_parent] || cache;\n    var initialVersion = cache[f_version];\n\n    var pathMapIndex = -1;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n\n        invalidatePathMap(\n            pathMapEnvelope.json, 0, cache, parent, node,\n            version, expired, lru, comparator, expireImmediate\n        );\n    }\n\n    var newVersion = cache[f_version];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (rootChangeHandler && initialVersion !== newVersion) {\n        rootChangeHandler();\n    }\n};\n\nfunction invalidatePathMap(\n    pathMap, depth, root, parent, node, version,\n    expired, lru, comparator, expireImmediate) {\n\n    if (!pathMap || typeof pathMap !== 'object' || pathMap.$type) {\n        return;\n    }\n\n    for (var key in pathMap) {\n        if (!isInternalKey(key)) {\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n            var results = invalidateNode(\n                root, parent, node,\n                key, child, branch, false, version, expired,\n                lru, comparator, expireImmediate\n            );\n            var nextNode = results[0];\n            var nextParent = results[1];\n            if (nextNode) {\n                if (branch) {\n                    invalidatePathMap(\n                        child, depth + 1,\n                        root, nextParent, nextNode,\n                        version, expired, lru, comparator, expireImmediate\n                    );\n                } else if (removeNodeAndDescendants(nextNode, nextParent, key, lru)) {\n                    updateNodeAncestors(nextParent, getSize(nextNode), lru, version);\n                }\n            }\n        }\n    }\n}\n\nfunction invalidateReference(\n    value, root, node, version,\n    expired, lru, comparator, expireImmediate) {\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        return [undefined, root];\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[f_context];\n\n    if (node != null) {\n        parent = node[f_parent] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            var results = invalidateNode(\n                root, parent, node,\n                key, value, branch, true, version,\n                expired, lru, comparator, expireImmediate\n            );\n            node = results[0];\n            if (!node || typeof node !== 'object') {\n                return results;\n            }\n            parent = results[1];\n        } while (index++ < count);\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    return [node, parent];\n}\n\nfunction invalidateNode(\n    root, parent, node,\n    key, value, branch, reference, version,\n    expired, lru, comparator, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = invalidateReference(\n            value, root, node, version, expired,\n            lru, comparator, expireImmediate\n        );\n\n        node = results[0];\n\n        if (!node && typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        type = node && node.$type;\n    }\n\n    if (type !== void 0) {\n        return [node, parent];\n    }\n\n    if (key == null) {\n        if (branch) {\n            throw new Error('`null` is not allowed in branch key positions.');\n        } else if (node) {\n            key = node[f_key];\n        }\n    } else {\n        parent = node;\n        node = parent[key];\n    }\n\n    return [node, parent];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/invalidatePathMaps.js","var $now = require('../values/expires-now');\nvar getType = require('../support/getType');\nvar getSize = require('../support/getSize');\nvar getTimestamp = require('../support/getTimestamp');\n\nvar wrapNode = require('./wrapNode');\nvar isExpired = require('./isExpired');\nvar expireNode = require('./expireNode');\nvar insertNode = require('./insertNode');\nvar replaceNode = require('./replaceNode');\nvar reconstructPath = require('./reconstructPath');\nvar updateNodeAncestors = require('./updateNodeAncestors');\nvar removeNodeAndDescendants = require('./removeNodeAndDescendants');\n\nmodule.exports = function mergeValueOrInsertBranch(\n    parent, node, key, value,\n    branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = getType(node, reference);\n\n    if (branch || reference) {\n        if (type && isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge if it expires immediately\n             */\n            true)) {\n            expireNode(node, expired, lru);\n            type = node.$expires === $now ? type : 'expired';\n        }\n        if ((type && type !== $ref) || (!node || typeof node !== 'object')) {\n            node = replaceNode(node, {}, parent, key, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    } else {\n        var message = value;\n        var isDistinct = true;\n        var mType = getType(message);\n\n        // Compare the current cache value with the new value. If either of\n        // them don't have a timestamp, or the message's timestamp is newer,\n        // replace the cache value with the message value. If a comparator\n        // is specified, the comparator takes precedence over timestamps.\n        if (comparator) {\n            isDistinct = !comparator(\n                node, message, optimizedPath.slice(0, optimizedPath.index)\n            );\n        } else if (!mType) {\n            isDistinct = !node || node.value !== message;\n        } else {\n            isDistinct = !type || ((\n                // Comparing either Number or undefined to undefined always results in false.\n                getTimestamp(message) < getTimestamp(node)) === false) || !(\n                // They're the same if the following fields are the same.\n                type !== mType ||\n                node.value !== message.value ||\n                node.$expires !== message.$expires);\n        }\n\n        if (isDistinct) {\n\n            if (errorSelector && mType === $error) {\n                message = errorSelector(reconstructPath(requestedPath, key), message);\n            }\n\n            var sizeOffset = getSize(node) - getSize(message =\n                wrapNode(message, mType, mType ? message.value : message));\n\n            node = replaceNode(node, message, parent, key, lru, version);\n            parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/mergeValueOrInsertBranch.js","/**\n * Reconstructs the path for the current key, from currentPath (requestedPath)\n * state maintained during set/merge walk operations.\n *\n * During the walk, since the requestedPath array is updated after we attempt to\n * merge/insert nodes during a walk (it reflects the inserted node's parent branch)\n * we need to reconstitute a path from it.\n *\n * @param  {Array} currentPath The current requestedPath state, during the walk\n * @param  {String} key        The current key value, during the walk\n * @return {Array} A new array, with the path which represents the node we're about\n * to insert\n */\nmodule.exports = function reconstructPath(currentPath, key) {\n\n    var path = currentPath.slice(0, currentPath.depth);\n    path[path.length] = key;\n\n    return path;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/reconstructPath.js","var transferBackReferences = require('./transferBackReferences');\nvar removeNodeAndDescendants = require('./removeNodeAndDescendants');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = function replaceNode(node, replacement, parent, key, lru, version) {\n    if (node === replacement) {\n        return node;\n    } else if (!(!node || typeof node !== 'object')) {\n        transferBackReferences(node, replacement);\n        removeNodeAndDescendants(node, parent, key, lru);\n        updateBackReferenceVersions(replacement, version);\n    }\n\n    parent[key] = replacement;\n    return replacement;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/replaceNode.js","module.exports = function updateBackReferenceVersions(nodeArg, version) {\n    var stack = [nodeArg];\n    var count = 0;\n    do {\n        var node = stack[count];\n        if (node && node[f_version] !== version) {\n            node[f_version] = version;\n            stack[count++] = node[f_parent];\n            var i = -1;\n            var n = node[f_refs_length] || 0;\n            while (++i < n) {\n                stack[count++] = node[f_ref + i];\n            }\n        }\n    } while (--count > -1);\n    return nodeArg;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/updateBackReferenceVersions.js","var isArray = Array.isArray;\nvar now = require('../support/now');\nvar clone = require('./../support/clone');\nvar getSize = require('./../support/getSize');\nvar getExpires = require('../support/getExpires');\nvar expiresNow = require('../values/expires-now');\n\nvar atomSize = 50;\n\nmodule.exports = function wrapNode(nodeArg, typeArg, value) {\n\n    var size = 0;\n    var node = nodeArg;\n    var type = typeArg;\n\n    if (type) {\n        var modelCreated = node[f_wrapped_value];\n        node = clone(node);\n        size = getSize(node);\n        node.$type = type;\n        node[f_prev] = undefined;\n        node[f_next] = undefined;\n        node[f_wrapped_value] = modelCreated || false;\n    } else {\n        node = { $type: $atom, value: value };\n        node[f_prev] = undefined;\n        node[f_next] = undefined;\n        node[f_wrapped_value] = true;\n    }\n\n    if (value == null) {\n        size = atomSize + 1;\n    } else if (size == null || size <= 0) {\n        switch (typeof value) {\n            case 'object':\n                if (isArray(value)) {\n                    size = atomSize + value.length;\n                } else {\n                    size = atomSize + 1;\n                }\n                break;\n            case 'string':\n                size = atomSize + value.length;\n                break;\n            default:\n                size = atomSize + 1;\n                break;\n        }\n    }\n\n    var expires = getExpires(node);\n\n    if (typeof expires === 'number' && expires < expiresNow) {\n        node.$expires = now() + (expires * -1);\n    }\n\n    node.$size = size;\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/wrapNode.js","var createErrorClass = require('./createErrorClass');\n\nmodule.exports = createErrorClass('CircularReferenceError', function(referencePath) {\n    this.message = 'Encountered circular reference ' + JSON.stringify(referencePath);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/CircularReferenceError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'An exception was thrown when making a request';\n\n/**\n * InvalidSourceError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidSourceError', function(error) {\n    this.message = MESSAGE + ':\\n\\t' + error;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidSourceError.js","var removeNode = require('../cache/removeNode');\nvar updateNodeAncestors = require('../cache/updateNodeAncestors');\n\nmodule.exports = function collect(lru, expired, totalArg, max, ratioArg, version) {\n\n    var total = totalArg;\n    var ratio = ratioArg;\n\n    if (typeof ratio !== 'number') {\n        ratio = 0.75;\n    }\n\n    var shouldUpdate = typeof version === 'number';\n    var targetSize = max * ratio;\n    var parent, node, size;\n\n    node = expired.pop();\n\n    while (node) {\n        size = node.$size || 0;\n        total -= size;\n        if (shouldUpdate === true) {\n            updateNodeAncestors(node, size, lru, version);\n        } else if (parent = node[f_parent]) {  // eslint-disable-line no-cond-assign\n            removeNode(node, parent, node[f_key], lru);\n        }\n        node = expired.pop();\n    }\n\n    if (total >= max) {\n        var prev = lru[f_tail];\n        node = prev;\n        while ((total >= targetSize) && node) {\n            prev = prev[f_prev];\n            size = node.$size || 0;\n            total -= size;\n            if (shouldUpdate === true) {\n                updateNodeAncestors(node, size, lru, version);\n            }\n            node = prev;\n        }\n\n        lru[f_tail] = lru[f_prev] = node;\n        if (node == null) {\n            lru[f_head] = lru[f_next] = undefined;\n        } else {\n            node[f_next] = undefined;\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/collect.js","module.exports = function lruSplice(root, object) {\n\n    // Its in the cache.  Splice out.\n    var prev = object[f_prev];\n    var next = object[f_next];\n    if (next) {\n        next[f_prev] = prev;\n    }\n    if (prev) {\n        prev[f_next] = next;\n    }\n    object[f_prev] = object[f_next] = undefined;\n\n    if (object === root[f_head]) {\n        root[f_head] = next;\n    }\n    if (object === root[f_tail]) {\n        root[f_tail] = prev;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/splice.js","var Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar $$observable = require('symbol-observable').default;\n\nmodule.exports = Source;\n\nfunction Source(subscribe) {\n    if (!subscribe) {\n        return;\n    }\n    switch (typeof subscribe) {\n        case 'object':\n            this.source = subscribe;\n            break;\n        case 'function':\n            this.source = { subscribe: subscribe };\n            break;\n    }\n}\n\nSource.prototype[$$observable] = function() {\n    return this;\n}\n\nSource.prototype.operator = function(destination) {\n    return this.subscribe(destination);\n}\n\n// Unused\n// Source.prototype.lift = function(operator, source) {\n//     source = new Source(source || this);\n//     source.operator = operator;\n//     source._promise = this._promise;\n//     return source;\n// }\n\nSource.prototype.subscribe = function(destination, x, y) {\n    return new Subscription([\n        this.operator.call(\n            this.source, !(destination instanceof Subscriber) ?\n                new Subscriber(destination, x, y) : destination)\n    ]);\n}\n\nSource.prototype.then = function then(onNext, onError) {\n    /* global Promise */\n    var source = this;\n    if (!this._promise) {\n        this._promise = new global['Promise'](function(resolve, reject) {\n            var values = [], rejected = false;\n            source.subscribe({\n                next: function(value) { values[values.length] = value; },\n                error: function(errors) { (rejected = true) && reject(errors); },\n                complete: function() {\n                    !rejected &&\n                    resolve(values.length <= 1 ? values[0] : values);\n                }\n            });\n        });\n    }\n    return this._promise.then(onNext, onError);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Source.js","var empty = {\n    dispose: function() {},\n    unsubscribe: function() {}\n};\n\nfunction ImmediateScheduler() {}\n\nImmediateScheduler.prototype.schedule = function schedule(action) {\n    action();\n    return empty;\n};\n\nmodule.exports = ImmediateScheduler;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/schedulers/ImmediateScheduler.js","var isObject = require('./../support/isObject');\nmodule.exports = function getTimestamp(node) {\n    return isObject(node) && node.$timestamp || undefined;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getTimestamp.js","var isObject = require('./../support/isObject');\n\nmodule.exports = function isJSONEnvelope(envelope) {\n    return isObject(envelope) && ('json' in envelope);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isJSONEnvelope.js","var isArray = Array.isArray;\nvar isObject = require('./../support/isObject');\n\nmodule.exports = function isJSONGraphEnvelope(envelope) {\n    return isObject(envelope) && isArray(envelope.paths) && (\n        isObject(envelope.jsonGraph) ||\n        isObject(envelope.jsong) ||\n        isObject(envelope.json) ||\n        isObject(envelope.values) ||\n        isObject(envelope.value)\n    );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isJSONGraphEnvelope.js","module.exports = Date.now;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/now.js","module.exports = 1;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/values/expires-never.js","var Model = require('./Model');\nvar FalcorJSON = require('./cache/get/json/FalcorJSON');\n\nfunction falcor(opts) {\n    if (!(this instanceof Model)) {\n        return new Model(opts);\n    }\n    Model.call(this, opts);\n}\n\nfalcor.prototype = Object.create(Model.prototype);\n\nfalcor['Model'] = Model;\nfalcor['FalcorJSON'] = FalcorJSON;\nfalcor['toProps'] = FalcorJSON.prototype.toProps;\n\nmodule.exports = falcor;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/index.js","var isArray = Array.isArray;\nvar getHashCode = require('./getHashCode');\n\nmodule.exports = computeFlatBufferHash;\n\nfunction computeFlatBufferHash(seed) {\n\n    if (seed === undefined) {\n        return undefined;\n    }\n\n    var code = '';\n    var keys = seed['$keys'];\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    while (++keysIndex < keysLength) {\n\n        var key = keys[keysIndex];\n\n        if (key === null) {\n            code = '' + getHashCode('' + code + 'null');\n            continue;\n        } else if (typeof key === 'object') {\n            key = '{from:' + key.from + ',length:' + key.length + '}';\n        }\n\n        var next = computeFlatBufferHash(seed[keysIndex]);\n        if (next === undefined) {\n            code = '' + getHashCode('' + code + key);\n        } else {\n            code = '' + getHashCode('' + code + key + next['$code']);\n        }\n    }\n\n    seed['$code'] = code;\n\n    return seed;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/computeFlatBufferHash.js","var isArray = Array.isArray;\nvar materializedAtom = require('./support/materializedAtom');\n\nmodule.exports = hasIntersection\n\n/**\n * Tests to see if the intersection should be stripped from the\n * total paths.  The only way this happens currently is if the entirety\n * of the path is contained in the tree.\n * @private\n */\n\nfunction hasIntersection(tree, path, depth, length) {\n\n    if (depth === length) {\n        return true;\n    }\n\n    var intersects = true;\n    var keyset, keysetIndex = -1, keysetLength = 0;\n    var next, nextKey, nextDepth = depth + 1,\n        keyIsRange, rangeEnd, keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return tree === materializedAtom;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                break iteratingKeyset;\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        do {\n            if (nextDepth === length) {\n                if (tree[nextKey] !== null) {\n                    return false;\n                }\n            } else {\n                next = tree[nextKey];\n                if (next === null || next === undefined) {\n                    return false;\n                } else if (hasIntersection(next, path, nextDepth, length) === false) {\n                    return false;\n                }\n            }\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/hasIntersection.js","var isArray = Array.isArray;\nvar nullBuffer = { '$keys': [null], '$keysMap': { 'null': 0 } };\nvar flatBufferToPaths = require('./flatBufferToPaths');\n\nmodule.exports = toFlatBuffer;\n\nfunction toFlatBuffer(paths, seed) {\n    return paths.reduce(function(seed, path) {\n        if (isArray(path)) {\n            return pathToFlatBuffer(seed, path, 0, path.length);\n        }\n        return toFlatBuffer(flatBufferToPaths(path), seed);\n    }, seed || {});\n}\n\nfunction pathToFlatBuffer(seed, path, depth, length) {\n\n    if (depth === length) {\n        return undefined;\n    }\n\n    seed = seed || {};\n    var keys = seed['$keys'] || (seed['$keys'] = []);\n    var keysMap = seed['$keysMap'] || (seed['$keysMap'] = {});\n    var keysIndex = -1;\n\n    var keyset, keysetIndex = -1, keysetLength = 0;\n    var node, next, nextKey, nextDepth = depth + 1,\n        rangeEnd, keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return nullBuffer;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            if ('undefined' === typeof (keysIndex = keysMap[nextKey])) {\n                keysIndex = keys.length;\n            }\n            keys[keysIndex] = nextKey;\n            keysMap[nextKey] = keysIndex;\n            next = pathToFlatBuffer(seed[keysIndex], path, nextDepth, length);\n            if (next !== undefined) {\n                seed[keysIndex] = next;\n            }\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                break iteratingKeyset;\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyset = { from: nextKey, length: rangeEnd - nextKey + 1 };\n            nextKey = '{from:' + nextKey + ',length:' + (rangeEnd - nextKey + 1) + '}';\n            if ('undefined' === typeof (keysIndex = keysMap[nextKey])) {\n                keysIndex = keys.length;\n            }\n            keys[keysIndex] = keyset;\n            keysMap[nextKey] = keysIndex;\n            next = pathToFlatBuffer(seed[keysIndex], path, nextDepth, length);\n            if (next !== undefined) {\n                seed[keysIndex] = next;\n            }\n        }\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return seed;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toFlatBuffer.js","var isArray = Array.isArray;\nvar materializedAtom = require('./support/materializedAtom');\n\nmodule.exports = toTree;\nmodule.exports.pathToTree = pathToTree;\n\n/**\n * @param {Array} paths -\n * @returns {Object} -\n */\n\nfunction toTree(paths, seed) {\n    return paths.reduce(function(seed, path) {\n        return pathToTree(seed, path, 0, path.length, null);\n    }, seed || {});\n};\n\nfunction pathToTree(seed, path, depth, length, value, branch) {\n\n    if (depth === length) {\n        return true;\n    }\n\n    var seedKeySet, keyset, keysetIndex = -1, keysetLength = 0;\n    var node, next, nextKey, nextDepth = depth + 1,\n        keyIsRange, rangeEnd, keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return materializedAtom;\n    }\n\n    seedKeySet = keyset;\n    seed = seed ? seed : branch ? branch(path, depth, seed) : {};\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                break iteratingKeyset;\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        do {\n            if (nextDepth === length) {\n                seed[nextKey] = value;\n            } else {\n                node = seed[path[depth] = nextKey];\n                next = pathToTree(node, path, nextDepth, length, value);\n                if (!next) {\n                    seed[nextKey] = value;\n                } else if (!node) {\n                    seed[nextKey] = next;\n                }\n            }\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    path[depth] = seedKeySet;\n\n    return seed;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toTree.js","var Call = require('./request/Call');\nvar ModelRoot = require('./ModelRoot');\nvar FalcorJSON = require('./cache/get/json/FalcorJSON');\nvar ModelDataSourceAdapter = require('./ModelDataSourceAdapter');\nvar TimeoutScheduler = require('./schedulers/TimeoutScheduler');\nvar ImmediateScheduler = require('./schedulers/ImmediateScheduler');\nvar collapse = require('@graphistry/falcor-path-utils/lib/collapse');\n\nvar lruCollect = require('./lru/collect');\nvar getSize = require('./support/getSize');\nvar isObject = require('./support/isObject');\nvar isJSONEnvelope = require('./support/isJSONEnvelope');\nvar getCachePosition = require('./cache/getCachePosition');\nvar isJSONGraphEnvelope = require('./support/isJSONGraphEnvelope');\n\nvar setCache = require('./cache/set/setPathMaps');\nvar setJSONGraphs = require('./cache/set/setJSONGraphs');\n\nvar getJSON = require('./cache/get/json');\nvar getCache = require('./cache/getCache');\nvar getJSONGraph = require('./cache/get/jsonGraph');\n\nmodule.exports = Model;\n\n/**\n * This callback is invoked when the Model's cache is changed.\n * @callback Model~onChange\n */\n\n /**\n * This function is invoked on every JSONGraph Error retrieved from the DataSource. This function allows Error objects to be transformed before being stored in the Model's cache.\n * @callback Model~errorSelector\n * @param {Object} jsonGraphError - the JSONGraph Error object to transform before it is stored in the Model's cache.\n * @returns {Object} the JSONGraph Error object to store in the Model cache.\n */\n\n /**\n * This function is invoked every time a value in the Model cache is about to be replaced with a new value. If the function returns true, the existing value is replaced with a new value and the version flag on all of the value's ancestors in the tree are incremented.\n * @callback Model~comparator\n * @param {Object} existingValue - the current value in the Model cache.\n * @param {Object} newValue - the value about to be set into the Model cache.\n * @returns {Boolean} the Boolean value indicating whether the new value and the existing value are equal.\n */\n\n/**\n * A Model object is used to execute commands against a {@link JSONGraph} object. {@link Model}s can work with a local JSONGraph cache, or it can work with a remote {@link JSONGraph} object through a {@link DataSource}.\n * @constructor\n * @param {?Object} options - a set of options to customize behavior\n * @param {?DataSource} options.source - a data source to retrieve and manage the {@link JSONGraph}\n * @param {?JSONGraph} options.cache - initial state of the {@link JSONGraph}\n * @param {?number} options.maxSize - the maximum size of the cache. This value roughly correlates to item count (where itemCount = maxSize / 50). Each item by default is given a metadata `$size` of 50 (or its length when it's an array or string). You can get better control of falcor's memory usage by tweaking `$size`\n * @param {?number} options.collectRatio - the ratio of the maximum size to collect when the maxSize is exceeded\n * @param {?Model~errorSelector} options.errorSelector - a function used to translate errors before they are returned\n * @param {?Model~onChange} options.onChange - a function called whenever the Model's cache is changed\n * @param {?Model~comparator} options.comparator - a function called whenever a value in the Model's cache is about to be replaced with a new value.\n */\nfunction Model(opts) {\n\n    var options = opts || {};\n\n    this._node = options._node;\n    this._path = options._path || [];\n    this._source = options.source || options._source;\n    this._root = options._root || new ModelRoot(options, this);\n    this._recycleJSON = options.recycleJSON === true || options._recycleJSON;\n    this._scheduler = options.scheduler || options._scheduler || new ImmediateScheduler();\n\n    if (options._seed) {\n        this._recycleJSON = true;\n        this._seed = options._seed;\n        this._treatErrorsAsValues = true;\n    } else if (this._recycleJSON) {\n        this._treatErrorsAsValues = true;\n        this._seed = { __proto__: FalcorJSON.prototype };\n    }\n\n    this._boxed = options.boxed === true || options._boxed || false;\n    this._materialized = options.materialized === true || options._materialized || false;\n    this._treatErrorsAsValues = options.treatErrorsAsValues === true || options._treatErrorsAsValues || false;\n    this._allowFromWhenceYouCame = options.allowFromWhenceYouCame === true || options._allowFromWhenceYouCame || false;\n\n    if (options.cache) {\n        this.setCache(options.cache);\n    }\n}\n\nModel.prototype.constructor = Model;\n\n/**\n * The get method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model}. The get method loads each value into a JSON object and returns in a ModelResponse.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - the requested data as JSON\n */\nModel.prototype.get = function get() {\n    return new Call(\n        'get', this, Array.prototype.slice.call(arguments, 0)\n    )._toJSON(this._seed || { __proto__: FalcorJSON.prototype }, []);\n}\n\n/**\n * Sets the value at one or more places in the JSONGraph model. The set method accepts one or more {@link PathValue}s, each of which is a combination of a location in the document and the value to place there.  In addition to accepting  {@link PathValue}s, the set method also returns the values after the set operation is complete.\n * @function\n * @return {ModelResponse.<JSONEnvelope>} - an {@link Observable} stream containing the values in the JSONGraph model after the set was attempted\n */\nModel.prototype.set = function set() {\n    return new Call(\n        'set', this, Array.prototype.slice.call(arguments, 0)\n    )._toJSON({ __proto__: FalcorJSON.prototype }, []);\n}\n\n/**\n * The preload method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model} and loads them into the Model cache.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - a ModelResponse that completes when the data has been loaded into the cache.\n */\nModel.prototype.preload = function preload() {\n    return new Call(\n        'get', this, Array.prototype.slice.call(arguments, 0)\n    )._toJSON(null, []);\n}\n\n/**\n * Invokes a function in the JSON Graph.\n * @function\n * @param {Path} functionPath - the path to the function to invoke\n * @param {Array.<Object>} args - the arguments to pass to the function\n * @param {Array.<PathSet>} refPaths - the paths to retrieve from the JSON Graph References in the message returned from the function\n * @param {Array.<PathSet>} thisPaths - the paths to retrieve from function's this object after successful function execution\n * @return {ModelResponse.<JSONEnvelope> - a JSONEnvelope contains the values returned from the function\n */\n\nModel.prototype.call = function call() {\n    return new Call(\n        'call', this, Array.prototype.slice.call(arguments, 0)\n    )._toJSON({ __proto__: FalcorJSON.prototype }, []);\n}\n\n/**\n * The invalidate method synchronously removes several {@link Path}s or {@link PathSet}s from a {@link Model} cache.\n * @function\n * @param {...PathSet} path - the  paths to remove from the {@link Model}'s cache.\n */\nModel.prototype.invalidate = function invalidate() {\n    return new Call(\n        'invalidate', this, Array.prototype.slice.call(arguments, 0)\n    )._toJSON(null, null).then();\n}\n\n/**\n * Returns a new {@link Model} bound to a location within the {@link\n * JSONGraph}. The bound location is never a {@link Reference}: any {@link\n * Reference}s encountered while resolving the bound {@link Path} are always\n * replaced with the {@link Reference}s target value. For subsequent operations\n * on the {@link Model}, all paths will be evaluated relative to the bound\n * path. Deref allows you to:\n * - Expose only a fragment of the {@link JSONGraph} to components, rather than\n *   the entire graph\n * - Hide the location of a {@link JSONGraph} fragment from components\n * - Optimize for executing multiple operations and path looksup at/below the\n *   same location in the {@link JSONGraph}\n * @method\n * @param {Object} responseObject - an object previously retrieved from the\n * Model\n * @return {Model} - the dereferenced {@link Model}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.deref = require('./deref');\n\n/**\n * A dereferenced model can become invalid when the reference from which it was\n * built has been removed/collected/expired/etc etc.  To fix the issue, a from\n * the parent request should be made (no parent, then from the root) for a valid\n * path and re-dereference performed to update what the model is bound too.\n *\n * @method\n * @private\n * @return {Boolean} - If the currently deref'd model is still considered a\n * valid deref.\n */\nModel.prototype._hasValidParentReference = require('./deref/hasValidParentReference');\n\n/**\n * Get data for a single {@link Path}.\n * @param {Path} path - the path to retrieve\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     getValue('user.name').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.getValue = function getValue(path) {\n    return new Call('get', this, [path])\n        ._toJSON({ __proto__: FalcorJSON.prototype }, [])\n        .lift(function(subscriber) {\n            return this.subscribe({\n                onNext: function(data) {\n                    var depth = -1;\n                    var x = data.json;\n                    var length = path.length;\n                    while (x && !x.$type && ++depth < length) {\n                        x = x[path[depth]];\n                    }\n                    subscriber.onNext(x);\n                },\n                onError: subscriber.onError.bind(subscriber),\n                onCompleted: subscriber.onCompleted.bind(subscriber)\n            })\n        });\n}\n\n/**\n * Set value for a single {@link Path}.\n * @param {Path} path - the path to set\n * @param {Object} value - the value to set\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     setValue('user.name', 'Jim').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.setValue = function setValue(path, value) {\n    path = arguments.length === 1 ? path.path : path;\n    value = arguments.length === 1 ? path : {path:path,value:value};\n    return new Call('set', this, [value])\n        ._toJSON({ __proto__: FalcorJSON.prototype }, [])\n        .lift(function(subscriber) {\n            return this.subscribe({\n                onNext: function(data) {\n                    var depth = -1;\n                    var x = data.json;\n                    var length = path.length;\n                    while (x && !x.$type && ++depth < length) {\n                        x = x[path[depth]];\n                    }\n                    subscriber.onNext(x);\n                },\n                onError: subscriber.onError.bind(subscriber),\n                onCompleted: subscriber.onCompleted.bind(subscriber)\n            })\n        });\n}\n\n/**\n * Set the local cache to a {@link JSONGraph} fragment. This method can be a useful way of mocking a remote document, or restoring the local cache from a previously stored state.\n * @param {JSONGraph} jsonGraph - the {@link JSONGraph} fragment to use as the local cache\n */\nModel.prototype.setCache = function modelSetCache(cacheOrJSONGraphEnvelope) {\n\n    var modelRoot = this._root;\n    var cache = modelRoot.cache;\n\n    if (cacheOrJSONGraphEnvelope !== cache) {\n\n        var options = {\n            _path: [],\n            _boxed: false,\n            _root: modelRoot,\n            _materialized: false,\n            _treatErrorsAsValues: false\n        };\n\n        modelRoot.cache = this._node = {};\n\n        if (typeof cache !== 'undefined') {\n            lruCollect(modelRoot, modelRoot.expired, getSize(cache), 0);\n            if (this._recycleJSON) {\n                this._seed = { __proto__: FalcorJSON.prototype };\n            }\n        }\n\n        var paths;\n        if (isJSONGraphEnvelope(cacheOrJSONGraphEnvelope)) {\n            paths = setJSONGraphs(options, [cacheOrJSONGraphEnvelope])[0];\n        } else if (isJSONEnvelope(cacheOrJSONGraphEnvelope)) {\n            paths = setCache(options, [cacheOrJSONGraphEnvelope])[0];\n        } else if (isObject(cacheOrJSONGraphEnvelope)) {\n            paths = setCache(options, [{ json: cacheOrJSONGraphEnvelope }])[0];\n        }\n\n        // performs promotion without producing output.\n        if (paths) {\n            getJSON(options, paths, null, false, false);\n        }\n    } else if (typeof cache === 'undefined') {\n        this._root.cache = {};\n    }\n    return this;\n};\n\n/**\n * Get the local {@link JSONGraph} cache. This method can be a useful to store the state of the cache.\n * @param {...Array.<PathSet>} [pathSets] - The path(s) to retrieve. If no paths are specified, the entire {@link JSONGraph} is returned.\n * @return {JSONGraph} all of the {@link JSONGraph} data in the {@link Model} cache.\n * @example\n // Storing the boxshot of the first 10 titles in the first 10 genreLists to local storage.\n localStorage.setItem('cache', JSON.stringify(model.getCache('genreLists[0...10][0...10].boxshot')));\n */\nModel.prototype.getCache = function _getCache() {\n\n    var paths = Array.prototype.slice.call(arguments, 0);\n\n    if (paths.length === 0) {\n        return getCache(this._root.cache);\n    }\n\n    var env = getJSONGraph({\n        _path: [],\n        _root: this._root,\n        _boxed: this._boxed,\n        _materialized: this._materialized,\n        _treatErrorsAsValues: this._treatErrorsAsValues\n    }, paths, { __proto__: FalcorJSON.prototype }).data;\n\n    env.paths = collapse(paths);\n\n    return env;\n};\n\n/**\n * Retrieves a number which is incremented every single time a value is changed underneath the Model or the object at an optionally-provided Path beneath the Model.\n * @param {Path?} path - a path at which to retrieve the version number\n * @return {Number} a version number which changes whenever a value is changed underneath the Model or provided Path\n */\nModel.prototype.getVersion = function getVersion(path) {\n    path = path || [];\n    if (Array.isArray(path) === false) {\n        throw new Error('Model#getVersion must be called with an Array path.');\n    }\n    if (this._path.length) {\n        path = this._path.concat(path);\n    }\n    return this._getVersion(this, path);\n};\n\n/* eslint-disable guard-for-in */\nModel.prototype._clone = function cloneModel(opts) {\n    var clone = new Model(this);\n    if (opts) {\n        for (var key in opts) {\n            var value = opts[key];\n            if (value === 'delete') {\n                delete clone[key];\n            } else if (key === '_path') {\n                clone[key] = value;\n                if (false === opts.hasOwnProperty('_node')) {\n                    delete clone['_node'];\n                }\n            } else {\n                clone[key] = value;\n            }\n        }\n    }\n    if (clone._path.length > 0) {\n        clone.setCache = void 0;\n    }\n    return clone;\n};\n/* eslint-enable */\n\n/**\n * Returns a clone of the {@link Model} that enables batching. Within the configured time period, paths for get operations are collected and sent to the {@link DataSource} in a batch. Batching can be more efficient if the {@link DataSource} access the network, potentially reducing the number of HTTP requests to the server.\n * @param {?Scheduler|number} schedulerOrDelay - Either a {@link Scheduler} that determines when to send a batch to the {@link DataSource}, or the number in milliseconds to collect a batch before sending to the {@link DataSource}. If this parameter is omitted, then batch collection ends at the end of the next tick.\n * @return {Model} a Model which schedules a batch of get requests to the DataSource.\n */\nModel.prototype.batch = function batch(schedulerOrDelay) {\n\n    var scheduler;\n\n    if (typeof schedulerOrDelay === 'number') {\n        scheduler = new TimeoutScheduler(Math.round(Math.abs(schedulerOrDelay)));\n    } else if (!schedulerOrDelay) {\n        scheduler = new TimeoutScheduler(1);\n    } else if (typeof schedulerOrDelay.schedule === 'function') {\n        scheduler = schedulerOrDelay;\n    } else if (typeof schedulerOrDelay === 'function') {\n        scheduler = { scheudle: schedulerOrDelay };\n    }\n\n    return this._clone({ _scheduler: scheduler });\n};\n\n/**\n * Returns a clone of the {@link Model} that disables batching. This is the default mode. Each get operation will be executed on the {@link DataSource} separately.\n * @name unbatch\n * @memberof Model.prototype\n * @function\n * @return {Model} a {@link Model} that batches requests of the same type and sends them to the data source together\n */\nModel.prototype.unbatch = function unbatch() {\n    return this._clone({ _scheduler: new ImmediateScheduler() });\n};\n\n/**\n * Returns a clone of the {@link Model} that treats errors as values. Errors will be reported in the same callback used to report data. Errors will appear as objects in responses, rather than being sent to the {@link Observable~onErrorCallback} callback of the {@link ModelResponse}.\n * @return {Model}\n */\nModel.prototype.treatErrorsAsValues = function treatErrorsAsValues() {\n    return this._clone({ _treatErrorsAsValues: true });\n};\n\n/**\n * Adapts a Model to the {@link DataSource} interface.\n * @return {DataSource}\n * @example\nvar model =\n    new falcor.Model({\n        cache: {\n            user: {\n                name: 'Steve',\n                surname: 'McGuire'\n            }\n        }\n    }),\n    proxyModel = new falcor.Model({ source: model.asDataSource() });\n\n// Prints 'Steve'\nproxyModel.getValue('user.name').\n    then(function(name) {\n        console.log(name);\n    });\n */\nModel.prototype.asDataSource = function asDataSource() {\n    return new ModelDataSourceAdapter(this);\n};\n\nModel.prototype._materialize = function materialize() {\n    return this._clone({\n        _materialized: true\n    });\n};\n\nModel.prototype._dematerialize = function dematerialize() {\n    return this._clone({\n        _materialized: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that boxes values returning the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the value inside it. This allows any metadata attached to the wrapper to be inspected.\n * @return {Model}\n */\nModel.prototype.boxValues = function boxValues() {\n    return this._clone({\n        _boxed: true\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that unboxes values, returning the value inside of the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the wrapper itself. This is the default mode.\n * @return {Model}\n */\nModel.prototype.unboxValues = function unboxValues() {\n    return this._clone({\n        _boxed: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that only uses the local {@link JSONGraph} and never uses a {@link DataSource} to retrieve missing paths.\n * @return {Model}\n */\nModel.prototype.withoutDataSource = function withoutDataSource() {\n    return this._clone({\n        _source: 'delete'\n    });\n};\n\nModel.prototype.toJSON = function toJSON() {\n    return {\n        $type: 'ref',\n        value: this.getPath()\n    };\n};\n\n/**\n * Returns the {@link Path} to the object within the JSON Graph that this Model references.\n * @return {Path}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.getPath = function getPath() {\n    return this._path.slice(0);\n};\n\n/**\n * This one is actually private.  I would not use this without talking to\n * jhusain, sdesai, or michaelbpaulson (github).\n * @private\n */\nModel.prototype._fromWhenceYouCame = function fromWhenceYouCame(allow) {\n    return this._clone({\n        _allowFromWhenceYouCame: allow === undefined ? true : allow\n    });\n};\n\nModel.prototype._optimizePath = function _optimizePath(path) {\n    var node = getCachePosition(this._root.cache, path);\n    var abs_path = node && node[f_abs_path] || [];\n    return abs_path.slice(0);\n};\n\nModel.prototype._getVersion = require('./cache/getVersion');\nModel.prototype._getPathValuesAsPathMap = getJSON;\nModel.prototype._getPathValuesAsJSONG = getJSONGraph;\n\nModel.prototype._setPathValues = require('./cache/set/setPathValues');\nModel.prototype._setPathMaps = require('./cache/set/setPathMaps');\nModel.prototype._setJSONGs = require('./cache/set/setJSONGraphs');\nModel.prototype._setCache = require('./cache/set/setPathMaps');\n\nModel.prototype._invalidatePathValues = require('./cache/invalidate/invalidatePathSets');\nModel.prototype._invalidatePathMaps = require('./cache/invalidate/invalidatePathMaps');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Model.js","function ModelDataSourceAdapter(model) {\n    this._model = model\n        // .boxValues()\n        ._materialize().treatErrorsAsValues();\n}\n\nModelDataSourceAdapter.prototype.get = function get(pathSets) {\n    return this._model.get.apply(this._model, pathSets)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.set = function set(jsongResponse) {\n    return this._model.set(jsongResponse)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.call = function call(path, args, suffixes, paths) {\n    return this._model.call.apply(this._model, [\n        path, args, suffixes\n    ].concat(paths))._toJSONG();\n};\n\nmodule.exports = ModelDataSourceAdapter;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ModelDataSourceAdapter.js","var functionTypeof = 'function';\nvar Requests = require('./request/Queue');\n\nfunction ModelRoot(o, model) {\n\n    var options = o || {};\n\n    this.cache = {};\n    this.version = -1;\n    this.syncRefCount = 0;\n    this.maxRetryCount = 10;\n    this.topLevelModel = model;\n    this.requests = new Requests(this);\n    this.expired = options.expired || [];\n\n    this.collectRatio = 0.75;\n    this.maxSize = Math.pow(2, 53) - 1;\n\n    if (typeof options.collectRatio === 'number') {\n        this.collectRatio = options.collectRatio;\n    }\n\n    if (typeof options.maxSize === 'number') {\n        this.maxSize = options.maxSize;\n    }\n\n    if (typeof options.comparator === functionTypeof) {\n        this.comparator = options.comparator;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.errorSelector === functionTypeof) {\n        this.errorSelector = options.errorSelector;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.onChange === functionTypeof) {\n        this.onChange = options.onChange;\n    }\n\n    if (typeof options.onChangesCompleted === functionTypeof) {\n        this.onChangesCompleted = options.onChangesCompleted;\n    }\n}\n\nModelRoot.comparator = function comparator(cacheNode, messageNode) {\n    var cType = cacheNode && cacheNode.$type;\n    var mType = messageNode && messageNode.$type;\n    if (cType) {\n        if (!mType) {\n            return cacheNode.value === messageNode;\n        } else {\n            // They are the same only if the following fields are the same.\n            return !(cType !== mType ||\n                     cacheNode.value !== messageNode.value ||\n                     cacheNode.$expires !== messageNode.$expires);\n        }\n    } else if (mType) {\n        return false;\n    }\n    return cacheNode === messageNode;\n};\n\nmodule.exports = ModelRoot;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ModelRoot.js","var getJSON = require('../get/json');\nvar getJSONGraph = require('../get/jsonGraph');\n\nmodule.exports = { json: json, jsonGraph: jsonGraph };\n\nfunction json(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue =  getJSON(model, thisPaths, data, progressive, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [\n            path, args, suffixes, thisPaths\n        ]\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed,\n            _materialized: model._materialized,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, thisPaths, data, true, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [\n            path, args, suffixes, thisPaths\n        ]\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/call/index.js","module.exports = {\n    json: require('./json/getJSON'),\n    jsonGraph: require('./jsonGraph/getJSONGraph')\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/index.js","var clone = require('../../clone');\n\nmodule.exports = onError;\n\nfunction onError(node, depth, results,\n                 requestedPath, fromReference, boxValues) {\n\n    var index = -1;\n    var length = depth + !!fromReference; // depth + 1 if fromReference === true\n    var errorPath = new Array(length);\n    var errorValue = !boxValues ? node.value : clone(node);\n\n    while (++index < length) {\n        errorPath[index] = requestedPath[index];\n    }\n\n    (results.errors || (results.errors = [])).push({\n        path: errorPath,\n        value: errorValue\n    });\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/onError.js","var arr = new Array(2);\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar onValue = require('./onValue');\nvar FalcorJSON = require('./FalcorJSON');\nvar isExpired = require('../../isExpired');\nvar onValueType = require('../onValueType');\nvar originalOnMissing = require('../onMissing');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar onMaterialize = require('../onMaterializeFlatBuffer');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar getHashCode = require('@graphistry/falcor-path-utils/lib/getHashCode');\nvar flatBufferToPaths = require('@graphistry/falcor-path-utils/lib/flatBufferToPaths');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, json, path,\n                                depth, seed, results, requestedPath,\n                                optimizedPath, optimizedLength,\n                                fromReference, referenceContainer,\n                                modelRoot, expired, expireImmediate,\n                                branchSelector, boxValues, materialized,\n                                hasDataSource, treatErrorsAsValues,\n                                allowFromWhenceYouCame) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === node ||\n        undefined !== (type = node.$type) ||\n        undefined === path) {\n        arr[1] = hasDataSource && node === undefined;\n        arr[0] = onValueType(node, type, json,\n                             path, depth, seed, results,\n                             requestedPath, depth,\n                             optimizedPath, optimizedLength,\n                             fromReference, modelRoot, expired, expireImmediate,\n                             branchSelector, boxValues, materialized, hasDataSource,\n                             treatErrorsAsValues, onValue, onMissing, onMaterialize);\n        return arr;\n    }\n\n    var f_meta, f_old_keys, f_new_keys, f_code = '';\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        keys = path['$keys'],\n        nextDepth = depth + 1, rangeEnd,\n        nextJSON, nextReferenceContainer,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath, refContainerRefPath;\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[f_abs_path];\n    }\n\n    if (json) {\n        if (typeofObject !== typeof json) {\n            json = undefined;\n        } else if (f_meta = json[f_meta_data]) {\n            if (!branchSelector && !(json instanceof FalcorJSON)) {\n                json.__proto__ = { __proto__: FalcorJSON.prototype };\n                json.__proto__[f_meta_data] = f_meta;\n            } else if (\n                f_meta[f_meta_version]  === node[f_version] &&\n                f_meta['$code']         === path['$code'] &&\n                f_meta[f_meta_abs_path] === node[f_abs_path]) {\n                results.hasValue = true;\n                arr[0] = json;\n                arr[1] = false;\n                return arr;\n            }\n            f_old_keys = f_meta[f_meta_keys];\n            f_meta[f_meta_version] = node[f_version];\n            f_meta[f_meta_abs_path] = node[f_abs_path];\n            f_meta[f_meta_deref_to] = refContainerRefPath;\n            f_meta[f_meta_deref_from] = refContainerAbsPath;\n        }\n    }\n\n    f_new_keys = { __proto__: null };\n\n    var keysIndex = -1;\n    var keysLength = keys.length;\n    var nextPath, nextPathKey,\n        hasMissingPath = false;\n\n    iteratingKeyset:\n    while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            f_code = '' + getHashCode('' + f_code + 'null');\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n            nextPathKey = nextKey;\n        }\n        // If the Keyset isn't null or primitive, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n            nextPathKey = '{from:' + nextKey + ',length:' + (rangeEnd - nextKey + 1) + '}';\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextPath === undefined) {\n\n                arr = walkPathAndBuildOutput(\n                    root, next, nextJSON, nextPath, nextDepth, seed,\n                    results, requestedPath, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                nextJSON = arr[0];\n                hasMissingPath = hasMissingPath || arr[1];\n\n                if (nextJSON === undefined && !materialized) {\n                    hasMissingPath = true;\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n            else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                    // If the reference is expired, it will be invalidated and\n                    // reported as missing in the next call to walkPath below.\n                    next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                arr = walkPathAndBuildOutput(\n                    root, next, nextJSON, nextPath, nextDepth, seed,\n                    results, requestedPath, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                nextJSON = arr[0];\n                hasMissingPath = hasMissingPath || arr[1];\n\n                if (nextJSON === undefined) {\n                    hasMissingPath = true;\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = { __proto__: null };\n                f_meta[f_meta_version] = node[f_version];\n                f_meta[f_meta_abs_path] = node[f_abs_path];\n                f_meta[f_meta_deref_to] = refContainerRefPath;\n                f_meta[f_meta_deref_from] = refContainerAbsPath;\n                json = { __proto__: FalcorJSON.prototype };\n                json[f_meta_data] = f_meta;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                // node creation to them.\n                json = !branchSelector && { __proto__: json } || branchSelector(json);\n            }\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && (nextKey in f_old_keys)) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        if (!hasMissingPath) {\n            if (undefined === nextPath) {\n                f_code = '' + getHashCode('' + f_code + nextPathKey);\n            } else {\n                f_code = '' + getHashCode('' + f_code + nextPathKey + nextPath['$code']);\n            }\n        }\n    }\n\n    if (hasMissingPath) {\n        f_code = '__incomplete__';\n    }\n\n    if (f_meta) {\n        f_meta['$code'] = f_code;\n        f_meta[f_meta_keys] = f_new_keys;\n        if (f_old_keys) {\n            for (nextKey in f_old_keys) {\n                if (f_old_keys[nextKey]) {\n                    delete json[nextKey];\n                }\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n\n    arr[0] = json;\n    arr[1] = hasMissingPath;\n\n    return arr;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, json, branchSelector,\n                   boxValues, onMaterialize) {\n\n    if (reportMaterialized) {\n        return onMaterialize(json, path, depth, depth, branchSelector,\n                             boxValues, results, requestedPath, optimizedPath,\n                             optimizedLength, fromReference, reportMissing, onMissing);\n    }\n\n    var paths = path ? flatBufferToPaths(path) : [[]];\n    var rPath = requestedPath.slice(0, requestedLength);\n\n    return paths.forEach(function(restPath) {\n        requestedLength = depth + restPath.length;\n        return originalOnMissing(rPath.concat(restPath), depth, results,\n                                 requestedPath, requestedLength, fromReference,\n                                 optimizedPath, optimizedLength, reportMissing,\n                                 false, json, branchSelector,\n                                 boxValues, onMaterialize);\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/walkFlatBuffer.js","var isArray = Array.isArray;\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar onValue = require('./onValue');\nvar onMissing = require('../onMissing');\nvar FalcorJSON = require('./FalcorJSON');\nvar onValueType = require('../onValueType');\nvar isExpired = require('../../isExpired');\nvar onMaterialize = require('../onMaterialize');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, json, path,\n                                depth, seed, results,\n                                requestedPath, requestedLength,\n                                optimizedPath, optimizedLength,\n                                fromReference, referenceContainer,\n                                modelRoot, expired, expireImmediate,\n                                branchSelector, boxValues, materialized,\n                                hasDataSource, treatErrorsAsValues,\n                                allowFromWhenceYouCame) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (\n        type = node.$type) || (\n        depth === requestedLength)) {\n        return onValueType(node, type, json,\n                           path, depth, seed, results,\n                           requestedPath, requestedLength,\n                           optimizedPath, optimizedLength,\n                           fromReference, modelRoot, expired, expireImmediate,\n                           branchSelector, boxValues, materialized, hasDataSource,\n                           treatErrorsAsValues, onValue, onMissing, onMaterialize);\n    }\n\n    var f_meta;\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        nextJSON, nextReferenceContainer,\n        keysetIndex = -1, keysetLength = 0,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath, refContainerRefPath;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        return json;\n    }\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[f_abs_path];\n    }\n\n    if (json) {\n        if (typeofObject !== typeof json) {\n            json = undefined;\n        } else if (f_meta = json[f_meta_data]) {\n            f_meta[f_meta_version] = node[f_version];\n            f_meta[f_meta_abs_path] = node[f_abs_path];\n            f_meta[f_meta_deref_to] = refContainerRefPath;\n            f_meta[f_meta_deref_from] = refContainerAbsPath;\n        }\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextDepth === requestedLength) {\n                nextJSON = walkPathAndBuildOutput(\n                    root, next, nextJSON, path, nextDepth, seed,\n                    results, requestedPath, requestedLength, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n                if (nextJSON === undefined && !materialized) {\n                    continue;\n                }\n            }\n            else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                    // If the reference is expired, it will be invalidated and\n                    // reported as missing in the next call to walkPath below.\n                    next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                if (undefined === (nextJSON = walkPathAndBuildOutput(\n                        root, next, nextJSON, path, nextDepth, seed,\n                        results, requestedPath, requestedLength, nextOptimizedPath,\n                        nextOptimizedLength, fromReference, nextReferenceContainer,\n                        modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                        materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                    ))) {\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = { __proto__: null };\n                f_meta[f_meta_version] = node[f_version];\n                f_meta[f_meta_abs_path] = node[f_abs_path];\n                f_meta[f_meta_deref_to] = refContainerRefPath;\n                f_meta[f_meta_deref_from] = refContainerAbsPath;\n                json = { __proto__: FalcorJSON.prototype };\n                json[f_meta_data] = f_meta;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                if (branchSelector) {\n                    json = branchSelector(json);\n                }\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/walkPath.js","var arr = new Array(2);\nvar clone = require('../../clone');\nvar inlineValue = require('./inlineValue');\nvar promote = require('../../../lru/promote');\nvar isExpired = require('../../isExpired');\nvar createHardlink = require('../../createHardlink');\nvar CircularReferenceError = require('../../../errors/CircularReferenceError');\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, ref, modelRoot, seed, expireImmediate) {\n\n    promote(modelRoot, ref);\n\n    var context,\n        key, type, depth = 0,\n        node = root, path = ref.value,\n        copy = path, length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[f_context])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                throw new CircularReferenceError(path);\n            }\n            // If the node we land on isn't the existing ref context,\n            // create a hard-link between the reference and the node\n            // it points to.\n            else if (node !== context) {\n                createHardlink(ref, node);\n            }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === $ref) {\n\n                promote(modelRoot, node);\n\n                seed && inlineValue(clone(node), path, length, seed);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n\n    return arr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/getReferenceTarget.js","var typeofObject = 'object';\nvar clone = require('../../clone');\nvar inlineValue = require('./inlineValue');\n\nmodule.exports = onJSONGraphValue;\n\nfunction onJSONGraphValue(node, type, depth, seed, results,\n                          requestedPath, optimizedPath, optimizedLength,\n                          fromReference, boxValues, materialized) {\n\n    var value = node.value;\n\n    // boxValues always clones the node\n    if (boxValues || !(\n        /**\n         * JSON Graph should always clone:\n         * - refs\n         * - errors\n         * - atoms we didn't create\n         * - atoms we created to wrap Objects\n         **/\n        $ref !== type &&\n        $error !== type &&\n        node[f_wrapped_value] &&\n        typeofObject !== typeof value)) {\n        value = clone(node);\n    }\n\n    if (seed) {\n        results.hasValue = true;\n        inlineValue(value, optimizedPath, optimizedLength, seed);\n        (seed.paths || (seed.paths = [])).push(\n            requestedPath.slice(0, depth + !!fromReference) // depth + 1 if fromReference === true\n        );\n    }\n\n    return value;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/onValue.js","var isArray = Array.isArray;\nvar clone = require('../../clone');\nvar onValue = require('./onValue');\nvar inlineValue = require('./inlineValue');\nvar isExpired = require('../../isExpired');\nvar onValueType = require('../onValueType');\nvar onMaterialize = require('../onMaterialize');\nvar originalOnMissing = require('../onMissing');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, path,\n                                depth, seed, results,\n                                requestedPath, requestedLength,\n                                optimizedPath, optimizedLength,\n                                fromReference, modelRoot, expired, expireImmediate,\n                                boxValues, materialized, hasDataSource, treatErrorsAsValues) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (\n        type = node.$type) || (\n        depth === requestedLength)) {\n        return onValueType(node, type, seed,\n                           path, depth, seed, results,\n                           requestedPath, requestedLength,\n                           optimizedPath, optimizedLength,\n                           fromReference, modelRoot, expired, expireImmediate,\n                           undefined, boxValues, materialized, hasDataSource,\n                           treatErrorsAsValues, onValue, onMissing, onMaterialize);\n    }\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        keysetIndex = -1, keysetLength = 0,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        return undefined;\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            keyset = keysOrRanges[keysetIndex];\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            // If we encounter a ref, inline the reference target and continue\n            // evaluating the path.\n            if (next &&\n                nextDepth < requestedLength &&\n                // If the reference is expired, it will be invalidated and\n                // reported as missing in the next call to walkPath below.\n                next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                // Write the cloned ref value into the jsonGraph at the\n                // optimized path. JSONGraph must always clone references.\n                seed && inlineValue(clone(next), optimizedPath, nextOptimizedLength, seed);\n\n                // Retrieve the reference target and next referenceContainer (if\n                // this reference points to other references) and continue\n                // following the path. If the reference resolves to a missing\n                // path or leaf node, it will be handled in the next call to\n                // walkPath.\n                refTarget = getReferenceTarget(root, next, modelRoot, seed, expireImmediate);\n\n                next = refTarget[0];\n                fromReference = true;\n                nextOptimizedPath = refTarget[1];\n                nextOptimizedLength = nextOptimizedPath.length;\n                refTarget[0] = refTarget[1] = undefined;\n            }\n\n            walkPathAndBuildOutput(\n                root, next, path, nextDepth, seed,\n                results, requestedPath, requestedLength, nextOptimizedPath,\n                nextOptimizedLength, fromReference, modelRoot, expired, expireImmediate,\n                boxValues, materialized, hasDataSource, treatErrorsAsValues\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return undefined;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, seed, branchSelector,\n                   boxValues, onMaterialize) {\n\n    var json, isLeaf;\n\n    if (seed && reportMaterialized) {\n\n        (seed.paths || (seed.paths = [])).push(\n            (isLeaf = 0 === requestedLength - depth) &&\n                                 // depth + 1 if fromReference === true\n                requestedPath.slice(0, depth + !!fromReference) ||\n                requestedPath.slice(0, depth).concat(path\n                    .slice(depth, requestedLength + !!fromReference))\n        );\n\n        json = inlineValue(isLeaf && clone(materializedAtom) || undefined,\n                           optimizedPath, optimizedLength, seed, !isLeaf);\n    }\n\n    return originalOnMissing(path, depth, results,\n                             requestedPath, requestedLength, fromReference,\n                             optimizedPath, optimizedLength, reportMissing,\n                             !isLeaf && reportMaterialized, json,\n                             branchSelector, true, onMaterialize);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/walkPath.js","var typeofNumber = 'number';\nvar typeofObject = 'object';\nvar clone = require('../clone');\nvar onValueType = require('./onValueType');\nvar FalcorJSON = require('./json/FalcorJSON');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = onMaterializeFlatBuffer;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterializeFlatBuffer(json, path, depth, length,\n                                 branchSelector, boxValues, results,\n                                 requestedPath, optimizedPath, optimizedLength,\n                                 fromReference, reportMissing, onMissing) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === path) {\n        onValueType(undefined, undefined, json,\n                    path, depth, undefined, results,\n                    requestedPath, depth, optimizedPath,\n                    optimizedLength, fromReference, undefined, undefined,\n                    false, branchSelector, boxValues, false, reportMissing,\n                    false, undefined, onMissing, undefined);\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta, f_old_keys, f_new_keys;\n\n    var nextKey,\n        keyset, keyIsRange,\n        keys = path['$keys'],\n        nextDepth = depth + 1, rangeEnd,\n        nextOptimizedLength = optimizedLength + 1;\n\n    if (!json || typeofObject !== typeof json) {\n        json = { __proto__: FalcorJSON.prototype };\n        json[f_meta_data] = f_meta = { __proto__: null };\n        f_meta[f_meta_version] = 0;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[f_meta_data])) {\n        json[f_meta_data] = f_meta = { __proto__: null };\n        f_meta[f_meta_version] = 0;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n    } else {\n        f_old_keys = f_meta[f_meta_keys];\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n    }\n\n    f_new_keys = { __proto__: null };\n\n    var nextPath;\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    iteratingKeyset:\n    while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If the Keyset isn't null or primitive, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && (nextKey in f_old_keys)) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // insert the materialized branch\n            json[nextKey] = onMaterializeFlatBuffer(\n                json[nextKey], nextPath, nextDepth,\n                nextDepth, branchSelector, boxValues, results,\n                requestedPath, optimizedPath, nextOptimizedLength,\n                fromReference, reportMissing, onMissing\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n    }\n\n    f_meta['$code'] = '__incomplete__';\n    f_meta[f_meta_keys] = f_new_keys;\n    if (f_old_keys) {\n        for (nextKey in f_old_keys) {\n            if (f_old_keys[nextKey]) {\n                delete json[nextKey];\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMaterializeFlatBuffer.js","var isInternalKey = require('../support/isInternalKey');\n\n/**\n * decends and copies the cache.\n */\nmodule.exports = function getCache(cache) {\n    var out = {};\n    _copyCache(cache, out);\n\n    return out;\n};\n\nfunction cloneBoxedValue(boxedValue) {\n    var clonedValue = {};\n\n    var keys = Object.keys(boxedValue);\n    var key;\n    var i;\n    var l;\n\n    for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n\n        if (key === '$type' || !isInternalKey(key)) {\n            clonedValue[key] = boxedValue[key];\n        }\n    }\n\n    return clonedValue;\n}\n\nfunction _copyCache(node, out, fromKey) {\n    // copy and return\n\n    // only copy objects\n    if (!node || typeof node !== 'object') {\n        return;\n    }\n\n    Object.\n        keys(node).\n        filter(function(key) {\n            // Its not an internal key and the node has a value.  In the cache\n            // there are 3 possibilities for values.\n            // 1: A branch node.\n            // 2: A $type-value node.\n            // 3: undefined\n            // We will strip out 3\n            return (key === '$type' || !isInternalKey(key)) && node[key] !== undefined;\n        }).\n        forEach(function(key) {\n            var cacheNext = node[key];\n            var outNext = out[key];\n\n            if (!outNext) {\n                outNext = out[key] = {};\n            }\n\n            // Paste the node into the out cache.\n            if (cacheNext.$type) {\n                var isObject = cacheNext.value && typeof cacheNext.value === 'object';\n                var isUserCreatedcacheNext = !cacheNext[f_wrapped_value];\n                var value;\n                if (isObject || isUserCreatedcacheNext) {\n                    value = cloneBoxedValue(cacheNext);\n                } else {\n                    value = cacheNext.value;\n                }\n\n                out[key] = value;\n                return;\n            }\n\n            _copyCache(cacheNext, outNext, key);\n        });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getCache.js","var getBoundCacheNode = require('./getBoundCacheNode');\n\nmodule.exports = function _getVersion(model, path) {\n    var node = getBoundCacheNode(model, path);\n    var version = node && node[f_version];\n    return (version == null) ? -1 : version;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getVersion.js","var isArray = Array.isArray;\nvar isPathValue = require('../support/isPathValue');\nvar isJSONEnvelope = require('../support/isJSONEnvelope');\nvar isJSONGraphEnvelope = require('../support/isJSONGraphEnvelope');\n\nmodule.exports = groupCacheArguments;\n\nfunction groupCacheArguments(args) {\n\n    var groups = [];\n    var argIndex = -1;\n    var argCount = args.length;\n    var group, groupType, arg, argType;\n\n    while (++argIndex < argCount) {\n        arg = args[argIndex];\n        if (isArray(arg)) {\n            arg = { path: arg };\n            argType = 'PathValues';\n        } else if (isPathValue(arg)) {\n            argType = 'PathValues';\n        } else if (isJSONGraphEnvelope(arg)) {\n            argType = 'JSONGraphs';\n        } else if (isJSONEnvelope(arg)) {\n            argType = 'PathMaps';\n        }\n\n        if (groupType !== argType) {\n            groupType = argType;\n            groups.push(group = {\n                arguments: [],\n                inputType: argType\n            });\n        }\n\n        group.arguments.push(arg);\n    }\n\n    return groups;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/groupCacheArguments.js","var invalidatePathSets = require('./invalidatePathSets');\nvar invalidatePathMaps = require('./invalidatePathMaps');\n\nmodule.exports = {\n    json: invalidate,\n    jsonGraph: invalidate,\n}\n\nfunction invalidate(model, args, seed, progressive, expireImmediate) {\n    invalidatePathSets(model, args, expireImmediate);\n    return {};\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/index.js","var wrapNode = require('./wrapNode');\nvar isExpired = require('./isExpired');\nvar insertNode = require('./insertNode');\nvar expireNode = require('./expireNode');\nvar replaceNode = require('./replaceNode');\nvar getSize = require('../support/getSize');\nvar reconstructPath = require('./reconstructPath');\nvar getTimestamp = require('../support/getTimestamp');\nvar updateNodeAncestors = require('./updateNodeAncestors');\n\nmodule.exports = function mergeJSONGraphNode(\n    parent, node, message, key, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var sizeOffset;\n\n    var cType, mType,\n        cIsObject, mIsObject,\n        cTimestamp, mTimestamp;\n\n    // If the cache and message are the same, we can probably return early:\n    // - If they're both nullsy,\n    //   - If null then the node needs to be wrapped in an atom and inserted.\n    //     This happens from whole branch merging when a leaf is just a null value\n    //     instead of being wrapped in an atom.\n    //   - If undefined then return null (previous behavior).\n    // - If they're both branches, return the branch.\n    // - If they're both edges, continue below.\n    if (node === message) {\n\n        // The message and cache are both undefined, return undefined.\n        if (message === undefined) {\n            return message;\n        }\n        // There should not be undefined values. Those should always be\n        // wrapped in an $atom\n        else if (message === null) {\n            node = wrapNode(message, undefined, message);\n            parent = updateNodeAncestors(parent, -node.$size, lru, version);\n            node = insertNode(node, parent, key, undefined, optimizedPath);\n            return node;\n        }\n        // Is the cache node a branch? If so, return the cache branch.\n        else if ((\n            cIsObject = !(!node || typeof node !== 'object')) && (\n            cType = node.$type) === undefined) {\n            // Has the branch been introduced to the cache yet? If not,\n            // give it a parent, key, and absolute path.\n            if (node[f_parent] === undefined) {\n                insertNode(node, parent, key, version, optimizedPath);\n            }\n            return node;\n        }\n    } else if (cIsObject = !(!node || typeof node !== 'object')) {\n        cType = node.$type;\n    }\n\n    // If the cache isn't a reference, we might be able to return early.\n    if (cType !== $ref) {\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n        }\n        if (cIsObject && !cType) {\n            // If the cache is a branch and the message is empty or\n            // also a branch, continue with the cache branch.\n            if (message == null || (mIsObject && !mType)) {\n                return node;\n            }\n        }\n    }\n    // If the cache is a reference, we might not need to replace it.\n    else {\n        // If the cache is a reference, but the message is empty, leave the cache alone...\n        if (message == null) {\n            // ...unless the cache is an expired reference. In that case, expire\n            // the cache node and return undefined.\n            if (isExpired(node, expireImmediate)) {\n                expireNode(node, expired, lru);\n                return void 0;\n            }\n            return node;\n        }\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n            // If the cache and the message are both references,\n            // check if we need to replace the cache reference.\n            if (mType === $ref) {\n                if (node === message) {\n                    // If the cache and message are the same reference,\n                    // we performed a whole-branch merge of one of the\n                    // grandparents. If we've previously graphed this\n                    // reference, break early. Otherwise, continue to\n                    // leaf insertion below.\n                    if (node[f_parent] != null) {\n                        return node;\n                    }\n                } else {\n\n                    cTimestamp = node.$timestamp;\n                    mTimestamp = message.$timestamp;\n\n                    // - If either the cache or message reference is expired,\n                    //   replace the cache reference with the message.\n                    // - If neither of the references are expired, compare their\n                    //   timestamps. If either of them don't have a timestamp,\n                    //   or the message's timestamp is newer, replace the cache\n                    //   reference with the message reference.\n                    // - If the message reference is older than the cache\n                    //   reference, short-circuit.\n                    if (!isExpired(node, expireImmediate) &&\n                        !isExpired(message, expireImmediate) &&\n                        mTimestamp < cTimestamp) {\n                        return void 0;\n                    }\n                }\n            }\n        }\n    }\n\n    // If the cache is a leaf but the message is a branch, merge the branch over the leaf.\n    if (cType && mIsObject && !mType) {\n        return insertNode(replaceNode(\n                node, message, parent, key, lru, version),\n            parent, key, undefined, optimizedPath\n        );\n    }\n    // If the message is a sentinel or primitive, insert it into the cache.\n    else if (mType || !mIsObject) {\n        // If the cache and the message are the same value, we branch-merged one\n        // of the message's ancestors. If this is the first time we've seen this\n        // leaf, give the message a $size and $type, attach its graph pointers,\n        // and update the cache sizes and versions.\n\n        if (mType === $error && errorSelector) {\n            message = errorSelector(reconstructPath(requestedPath, key), message);\n        }\n\n        if (mType && node === message) {\n            if (node[f_parent] == null) {\n                node = wrapNode(node, cType, node.value);\n                parent = updateNodeAncestors(parent, -node.$size, lru, version);\n                node = insertNode(node, parent, key, version, optimizedPath);\n            }\n        }\n        // If the cache and message are different, the cache value is expired,\n        // or the message is a primitive, replace the cache with the message value.\n        // If the message is a sentinel, clone and maintain its type.\n        // If the message is a primitive value, wrap it in an atom.\n        else {\n            var isDistinct = true;\n            // If the cache is a branch, but the message is a leaf, replace the\n            // cache branch with the message leaf.\n            if (!cIsObject || (cType && !isExpired(node, expireImmediate))) {\n\n                // Compare the current cache value with the new value. If either of\n                // them don't have a timestamp, or the message's timestamp is newer,\n                // replace the cache value with the message value. If a comparator\n                // is specified, the comparator takes precedence over timestamps.\n                if (comparator) {\n                    isDistinct = !comparator(\n                        node, message, optimizedPath.slice(0, optimizedPath.index)\n                    );\n                } else if (!mType) {\n                    isDistinct = !node || node.value !== message;\n                } else {\n                    isDistinct = !cType || ((\n                        // Comparing either Number or undefined to undefined always results in false.\n                        getTimestamp(message) < getTimestamp(node)) === false) || !(\n                        // They're the same if the following fields are the same.\n                        cType !== mType ||\n                        node.value !== message.value ||\n                        node.$expires !== message.$expires);\n                }\n            }\n            if (isDistinct) {\n                message = wrapNode(message, mType, mType ? message.value : message);\n                sizeOffset = getSize(node) - getSize(message);\n                node = replaceNode(node, message, parent, key, lru, version);\n                parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n                node = insertNode(node, parent, key, version, optimizedPath);\n            }\n        }\n\n        // Promote the message edge in the LRU.\n        if (isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge.\n             */\n            true)) {\n            expireNode(node, expired, lru);\n        }\n    }\n    else if (node == null) {\n        node = insertNode(message, parent, key, undefined, optimizedPath);\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/mergeJSONGraphNode.js","var getJSON = require('../get/json');\nvar getJSONGraph = require('../get/jsonGraph');\nvar arrayFlatMap = require('../../support/array-flat-map');\nvar groupCacheArguments = require('../groupCacheArguments');\n\nmodule.exports = {\n    json: json,\n    jsonGraph: jsonGraph,\n    setPathMaps: require('./setPathMaps'),\n    setPathValues: require('./setPathValues'),\n    setJSONGraphs: require('./setJSONGraphs')\n};\n\nfunction json(model, _args, data, progressive, expireImmediate) {\n\n    var set, get, jsong,\n        changed, relative, optimized,\n        missing, fragments, requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args /*, expireImmediate */);\n\n    if ((relative = set.requested).length) {\n\n        if (!(changed = set.changed) || progressive) {\n            get = getJSON(model, relative, data, progressive, expireImmediate);\n        }\n\n        if (changed) {\n\n            jsong = getJSONGraph({\n                _root: model._root,\n                _boxed: model._boxed, _materialized: true,\n                _treatErrorsAsValues: model._treatErrorsAsValues\n            }, set.optimized, {}, progressive, expireImmediate);\n\n            fragments = jsong.data;\n            missing = fragments.paths;\n            requested = jsong.requested;\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: get && get.error,\n        errors: get && get.errors,\n        hasValue: get && get.hasValue\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive, expireImmediate) {\n\n    var set, jsong,\n        changed, relative, optimized,\n        missing, fragments, requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args /*, expireImmediate */);\n\n    if ((relative = set.requested).length && (\n         progressive || set.changed)) {\n\n        jsong = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed, _materialized: true,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, set.optimized, data, progressive, expireImmediate);\n\n        fragments = jsong.data;\n        missing = fragments.paths;\n        requested = jsong.requested;\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: jsong && jsong.error,\n        hasValue: jsong && jsong.hasValue\n    };\n}\n\nfunction setGroupsIntoCache(model, xs /*, expireImmediate */) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var modelRoot = model._root;\n    var selector = modelRoot.errorSelector;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            var operation = module.exports['set' + inputType];\n            var results = operation(model, groupedArgs, selector, null, false);\n            changed = changed || results[2];\n            optimizedPaths.push.apply(optimizedPaths, results[1]);\n            if (inputType === 'PathValues') {\n                requestedPaths.push.apply(requestedPaths, groupedArgs.map(pluckPaths));\n            } else if (inputType === 'JSONGraphs') {\n                requestedPaths.push.apply(requestedPaths, arrayFlatMap(groupedArgs, pluckPaths));\n            } else {\n                requestedPaths.push.apply(requestedPaths, results[0]);\n            }\n        }\n    }\n\n    return {\n        changed: changed,\n        requested: requestedPaths,\n        optimized: optimizedPaths\n    };\n};\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/index.js","module.exports = function transferBackReferences(fromNode, destNode) {\n    var fromNodeRefsLength = fromNode[f_refs_length] || 0,\n        destNodeRefsLength = destNode[f_refs_length] || 0,\n        i = -1;\n    while (++i < fromNodeRefsLength) {\n        var ref = fromNode[f_ref + i];\n        if (ref !== void 0) {\n            ref[f_context] = destNode;\n            destNode[f_ref + (destNodeRefsLength + i)] = ref;\n            fromNode[f_ref + i] = void 0;\n        }\n    }\n    destNode[f_refs_length] = fromNodeRefsLength + destNodeRefsLength;\n    fromNode[f_refs_length] = void 0;\n    return destNode;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/transferBackReferences.js","module.exports = function unlinkBackReferences(node) {\n    var i = -1, n = node[f_refs_length] || 0;\n    while (++i < n) {\n        var ref = node[f_ref + i];\n        if (ref != null) {\n            ref[f_context] = ref[f_ref_index] = node[f_ref + i] = void 0;\n        }\n    }\n    node[f_refs_length] = void 0;\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/unlinkBackReferences.js","module.exports = function unlinkForwardReference(reference) {\n    var destination = reference[f_context];\n    if (destination) {\n        var i = (reference[f_ref_index] || 0) - 1,\n            n = (destination[f_refs_length] || 0) - 1;\n        while (++i <= n) {\n            destination[f_ref + i] = destination[f_ref + (i + 1)];\n        }\n        destination[f_refs_length] = n;\n        reference[f_ref_index] = reference[f_context] = destination = void 0;\n    }\n    return reference;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/unlinkForwardReference.js","module.exports = hasValidParentReference;\n\nfunction hasValidParentReference() {\n    var reference = this._referenceContainer;\n\n    // Always true when this mode is false.\n    if (!this._allowFromWhenceYouCame) {\n        return true;\n    }\n\n    // If fromWhenceYouCame is true and the first set of keys did not have\n    // a reference, this case can happen.  They are always valid.\n    if (reference === true) {\n        return true;\n    }\n\n    // was invalid before even derefing.\n    if (reference === false) {\n        return false;\n    }\n\n    // Its been disconnected (set over or collected) from the graph.\n    if (reference && reference[f_parent] === undefined) {\n        return false;\n    }\n\n    // The reference has expired but has not been collected from the graph.\n    if (reference && reference[f_invalidated]) {\n        return false;\n    }\n\n    return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/deref/hasValidParentReference.js","var typeofObject = 'object';\nvar CONTAINER_DOES_NOT_EXIST = 'e';\nvar FalcorJSON = require('../cache/get/json/FalcorJSON');\nvar getCachePosition = require('../cache/getCachePosition');\nvar InvalidDerefInputError = require('../errors/InvalidDerefInputError');\n\nmodule.exports = function deref(json) {\n\n    var f_meta;\n\n    if (!json || typeofObject !== typeof json || ! (\n        f_meta = json[f_meta_data]) || typeofObject !== typeof f_meta) {\n        return null;\n    }\n\n    var cacheRoot = this._root.cache;\n    var recycleJSON = this._recycleJSON;\n    var absolutePath = f_meta[f_meta_abs_path];\n    var referenceContainer, currentRefPath, i, len;\n\n    if (!absolutePath) {\n        return this._clone({\n            _node: undefined,\n            _seed: recycleJSON && {\n                json: json, __proto__: FalcorJSON.prototype\n            } || undefined\n        });\n    } else if (absolutePath.length === 0) {\n        return this._clone({\n            _node: cacheRoot,\n            _path: absolutePath,\n            _referenceContainer: true,\n            _seed: recycleJSON && {\n                json: json, __proto__: FalcorJSON.prototype\n            } || undefined\n        });\n    }\n\n    var originalRefPath = f_meta[f_meta_deref_to];\n    var originalAbsPath = f_meta[f_meta_deref_from];\n\n    // We deref and then ensure that the reference container is attached to\n    // the model.\n    var cacheNode = getCachePosition(cacheRoot, absolutePath);\n    var validContainer = CONTAINER_DOES_NOT_EXIST;\n\n    if (originalAbsPath) {\n\n        validContainer = false;\n\n        i = -1;\n        len = originalAbsPath.length;\n        referenceContainer = cacheRoot;\n        while (++i < len) {\n            referenceContainer = referenceContainer[originalAbsPath[i]];\n            if (!referenceContainer || referenceContainer.$type) {\n                break;\n            }\n        }\n\n        // If the reference container is still a sentinel value then compare\n        // the reference value with refPath.  If they are the same, then the\n        // model is still valid.\n        if (originalRefPath && referenceContainer && referenceContainer.$type === $ref) {\n            validContainer = true;\n            len = originalRefPath.length;\n            currentRefPath = referenceContainer.value;\n            for (i = 0; i < len; ++i) {\n                if (currentRefPath[i] !== originalRefPath[i]) {\n                    cacheNode = undefined;\n                    validContainer = false;\n                    break;\n                }\n            }\n        }\n    }\n\n    // Signal to the deref'd model that it has been disconnected from the\n    // graph or there is no _fromWhenceYouCame\n    if (!validContainer) {\n        referenceContainer = false;\n    }\n\n    // The container did not exist, therefore there is no reference\n    // container and fromWhenceYouCame should always return true.\n    else if (validContainer === CONTAINER_DOES_NOT_EXIST) {\n        referenceContainer = true;\n    }\n\n    return this._clone({\n        _node: cacheNode,\n        _path: absolutePath,\n        _referenceContainer: referenceContainer,\n        _seed: recycleJSON && {\n            json: json, __proto__: FalcorJSON.prototype\n        } || undefined\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/deref/index.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'It is not legal to use the JSON Graph ' +\n    'format from a bound Model. JSON Graph format' +\n    ' can only be used from a root model.';\n\n/**\n * When a bound model attempts to retrieve JSONGraph it should throw an\n * error.\n *\n * @private\n */\nmodule.exports = createErrorClass('BoundJSONGraphModelError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/BoundJSONGraphModelError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'Deref can only be used with a non-primitive object from get, set, or call.';\n\n/**\n * An invalid deref input is when deref is used with input that is not generated\n * from a get, set, or a call.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidDerefInputError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidDerefInputError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'The boundPath of the model is not valid since a value or error was found before the path end.';\n\n/**\n * An InvalidModelError can only happen when a user binds, whether sync\n * or async to shorted value.  See the unit tests for examples.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidModelError', function(boundPath, shortedPath) {\n    this.message = MESSAGE;\n    this.boundPath = boundPath;\n    this.shortedPath = shortedPath;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidModelError.js","var createErrorClass = require('./createErrorClass');\n\n/**\n * A request can only be retried up to a specified limit.  Once that\n * limit is exceeded, then an error will be thrown.\n *\n * @private\n */\nmodule.exports = createErrorClass('MaxRetryExceededError', function(maxRetryCount, absolute, relative, optimized) {\n    this.message = '' +\n        'Exceeded the max retry count (' + maxRetryCount + ') for these paths: \\n' +\n        (absolute &&\n        'absolute: [\\n\\t' + printPaths(absolute) + '\\n]\\n' || '') +\n        (relative &&\n        'relative: [\\n\\t' + printPaths(relative) + '\\n]\\n' || '') +\n        (optimized &&\n        'optimized: [\\n\\t' + printPaths(optimized) + '\\n]\\n' || '');\n});\n\nfunction printPaths(paths) {\n    return paths.map(function(path) {\n        return JSON.stringify(path);\n    }).join(',\\n\\t');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/MaxRetryExceededError.js","module.exports = String.fromCharCode(30) + 'ƒ_';\n\n\n\n// WEBPACK FOOTER //\n// ./lib/internal/f_.js","var Source = require('./Source');\nvar Subscriber = require('./Subscriber');\nvar lruCollect = require('../lru/collect');\nvar FalcorJSON = require('../cache/get/json/FalcorJSON');\nvar collapse = require('@graphistry/falcor-path-utils/lib/collapse');\nvar InvalidSourceError = require('../errors/InvalidSourceError');\nvar MaxRetryExceededError = require('../errors/MaxRetryExceededError');\n\nmodule.exports = Call;\n\nfunction Call(type, model, _args) {\n    Source.call(this, type);\n    if (model && _args) {\n        this.type = type;\n        this.source = this;\n        this.model = model;\n        this._args = _args;\n    }\n}\n\nCall.prototype = Object.create(Source.prototype);\n\nCall.prototype.lift = function(operator, source) {\n    source = new Call(source || this);\n    source.type = this.type;\n    source.model = this.model;\n    source._args = this._args;\n    source.operator = operator;\n    operator.data = operator.data || this.operator.data;\n    operator.errors = operator.errors || this.operator.errors;\n    operator.operation = operator.operation || this.operator.operation;\n    operator.progressive = operator.progressive || this.operator.progressive;\n    operator.maxRetryCount = operator.maxRetryCount || this.operator.maxRetryCount;\n    return source;\n}\n\nCall.prototype.operator = function(subscriber) {\n    return this._subscribe(subscriber);\n}\n\nCall.prototype._subscribe = function(subscriber) {\n    subscriber.onNext({\n        type: this.type,\n        args: this._args,\n        model: this.model,\n        version: this.model._root.version\n    });\n    subscriber.onCompleted();\n    return subscriber;\n}\n\nCall.prototype._toJSON = function(data, errors) {\n    if (data === undefined) {\n        data = { __proto__: FalcorJSON.prototype };\n    }\n    return this.lift(new CallOperator(\n        data, errors || this.operator.errors, 'json',\n        this.operator.progressive, this.operator.maxRetryCount\n    ), this.source);\n}\n\nCall.prototype._toJSONG = function(data, errors) {\n    if (data === undefined) {\n        data = { __proto__: FalcorJSON.prototype };\n    }\n    return this.lift(new CallOperator(\n        data, errors || this.operator.errors, 'jsonGraph',\n        this.operator.progressive, this.operator.maxRetryCount\n    ), this.source);\n}\n\nCall.prototype.retry = function(maxRetryCount) {\n    return this.lift(new CallOperator(\n        this.operator.data,\n        this.operator.errors,\n        this.operator.operation,\n        this.operator.progresive,\n        maxRetryCount\n    ), this.source);\n}\n\nCall.prototype.progressively = function() {\n    return this.lift(new CallOperator(\n        this.operator.data,\n        this.operator.errors,\n        this.operator.operation,\n        true,\n        this.operator.maxRetryCount\n    ), this.source);\n}\n\nfunction CallOperator(data, errors, operation, progressive, maxRetryCount) {\n    this.data = data;\n    this.errors = errors;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallOperator.prototype.call = function(source, destination) {\n    return source.subscribe(new CallSubscriber(\n        destination, this.data, this.errors, this.operation, this.progressive\n    ));\n}\n\nfunction CallSubscriber(destination, data, errors, operation, progressive, maxRetryCount) {\n    Subscriber.call(this, destination);\n    this.data = data;\n    this.retryCount = -1;\n    this.errors = errors;\n    this.hasValue = false;\n    this.completed = false;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallSubscriber.prototype = Object.create(Subscriber.prototype);\nCallSubscriber.prototype.operations = {\n    get: require('../cache/get'),\n    set: require('../cache/set'),\n    call: require('../cache/call'),\n    invalidate: require('../cache/invalidate')\n};\n\nCallSubscriber.prototype.next =\nCallSubscriber.prototype.onNext = function(seed) {\n\n    if (!this.started) {\n        this.args = seed.args;\n        this.type = seed.type;\n        this.model = seed.model;\n        this.version = seed.version;\n        this.maxRetryCount = this.maxRetryCount || this.model._root.maxRetryCount;\n        return;\n    }\n\n    var missing, fragments;\n    var type = seed.type;\n    var args = seed.args || seed.paths;\n\n    var data = this.data;\n    var model = this.model;\n    var errors = this.errors;\n    var results = this.results;\n    var version = this.version;\n    var hasValue = this.hasValue;\n    var operation = this.operation;\n    var progressive = this.progressive;\n\n    var seedIsImmutable = progressive && data;\n\n    // If we request paths as JSON in progressive mode, ensure each progressive\n    // valueNode is immutable. If not in progressive mode, we can write into the\n    // same JSON tree until the request is completed.\n    if (seedIsImmutable) {\n        data = { __proto__: FalcorJSON.prototype };\n    }\n\n    if (args && args.length) {\n\n        results = this.operations[type]\n            [operation](model, args, data,\n                        progressive || !model._source,\n                        this.retryCount === -1);\n\n        // We must communicate critical errors from get, such as bound path is\n        // broken or this is a JSONGraph request with a bound path.\n        if (results.error) {\n            return tryOnError(this, results.error);\n        }\n\n        errors && results.errors &&\n            errors.push.apply(errors, results.errors);\n\n        if (fragments = results.fragments) {\n            args = results.args;\n            this.fragments = fragments;\n        }\n\n        this.relative = results.relative;\n        this.requested = results.requested;\n        this.missing = missing = results.missing;\n        this.hasValue = hasValue || (hasValue = results.hasValue);\n    }\n\n    // We are done when there are no missing paths or\n    // the model does not have a dataSource to fetch from.\n    this.completed = !missing || !model._source;\n\n    if (type !== 'set') {\n        this.args = args;\n        if (seedIsImmutable) {\n            this.data = mergeInto(data, this.data);\n        }\n    }\n\n    if (progressive && hasValue && data && (data.json || data.jsonGraph)) {\n        tryOnNext(data, operation, model._root, this.destination);\n    }\n}\n\nCallSubscriber.prototype.error =\nCallSubscriber.prototype.onError = function(error) {\n    if (error instanceof InvalidSourceError) {\n        return Subscriber.prototype.onError.call(this, error);\n    }\n    this.errored = true;\n    this.onCompleted(error);\n}\n\nCallSubscriber.prototype.complete =\nCallSubscriber.prototype.onCompleted = function(error) {\n\n    var data, type, errors, errored;\n\n    if (!this.started && (this.started = true)) {\n        this.onNext(this);\n    } else if (errored = this.errored) {\n        this.onNext({ type: 'get', paths: this.relative });\n    }\n\n    if (errored || this.completed) {\n        if (!this.progressive && this.hasValue && (\n            (data = this.data) && data.json || data.jsonGraph)) {\n            tryOnNext(data, this.operation, this.model._root, this.destination);\n        }\n        errors = this.errors;\n        if (errored || error || errors && errors.length) {\n            return tryOnError(this, errors.length && errors || error);\n        }\n\n        return Subscriber.prototype.onCompleted.call(this);\n    }\n\n    if (++this.retryCount >= this.maxRetryCount) {\n        return tryOnError(this, new MaxRetryExceededError(\n            this.retryCount,\n            this.requested,\n            this.relative,\n            this.missing\n        ));\n    }\n\n    this.request = this.model._root.requests[this.type](\n        this.model, this.missing, this.relative, this.fragments\n    ).subscribe(this);\n}\n\nCallSubscriber.prototype.dispose =\nCallSubscriber.prototype.unsubscribe = function() {\n\n    var model = this.model;\n    var version = this.version;\n    var request = this.request;\n\n    this.args = null;\n    this.data = null;\n    this.model = null;\n    this.errors = null;\n    this.errored = false;\n    this.started = false;\n    this.hasValue = false;\n    this.completed = false;\n\n    Subscriber.prototype.dispose.call(this);\n\n    if (request) {\n        this.request = null;\n        request.dispose();\n    }\n\n    if (model) {\n\n        var modelRoot = model._root;\n        var cache = modelRoot.cache;\n        var shouldCollectCache = modelRoot.syncRefCount <= 0 &&\n                                 version !== modelRoot.version;\n\n        // Prune the cache via the LRU if this is the last request.\n        if (shouldCollectCache) {\n\n            if (cache) {\n                lruCollect(modelRoot,\n                           modelRoot.expired,\n                           cache.$size || 0,\n                           modelRoot.maxSize,\n                           modelRoot.collectRatio,\n                           modelRoot.version);\n            }\n\n            var rootOnChangesCompletedHandler = modelRoot.onChangesCompleted;\n\n            if (rootOnChangesCompletedHandler) {\n                rootOnChangesCompletedHandler.call(modelRoot.topLevelModel);\n            }\n        }\n    }\n}\n\nfunction tryOnNext(data, operation, modelRoot, destination) {\n    if (operation === 'jsonGraph' && data.paths) {\n        data.paths = collapse(data.paths);\n    }\n    try {\n        ++modelRoot.syncRefCount;\n        destination.onNext(data);\n    } catch(e) {\n        throw e;\n    } finally {\n        --modelRoot.syncRefCount;\n    }\n}\n\nfunction tryOnError(self, error) {\n    try {\n        throw error;\n    } catch (err) {\n        Subscriber.prototype.onError.call(self, err);\n    }\n}\n\nfunction mergeInto(dest, node) {\n\n    var destValue, nodeValue,\n        key, keys = Object.keys(node),\n        index = -1, length = keys.length;\n\n    while (++index < length) {\n\n        key = keys[index];\n\n        if (key === f_meta_data) {\n            dest[f_meta_data] = node[f_meta_data];\n        } else {\n\n            nodeValue = node[key];\n            destValue = dest[key];\n\n            if (destValue !== nodeValue) {\n                if (!nodeValue || typeof nodeValue !== 'object') {\n                    if (destValue === undefined) {\n                        dest[key] = nodeValue;\n                    }\n                } else if (destValue === undefined) {\n                    dest[key] = nodeValue;\n                } else {\n                    mergeInto(destValue, nodeValue);\n                }\n            }\n        }\n    }\n\n    return dest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Call.js","var Source = require('./Source');\nvar Request = require('./Request');\nvar Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar ImmediateScheduler = require('../schedulers/ImmediateScheduler');\n\nmodule.exports = Queue;\n\nfunction Queue(modelRoot) {\n    Subscription.call(this, []);\n    this.modelRoot = modelRoot;\n}\n\nQueue.prototype = Object.create(Subscription.prototype);\n\nQueue.prototype.set = isolateSet;\nQueue.prototype.call = isolateCall;\nQueue.prototype.get = batchAndDedupeGet;\n\nfunction isolateSet(model, optimized, requested, env) {\n    var queue = this;\n    return new Source(function(destination) {\n\n        var request = new Request('set', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = env.jsonGraph;\n        request.requested.push(requested);\n        request.optimized.push(optimized);\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction isolateCall(model, optimized, requested, callArgs) {\n    var queue = this;\n    return new Source(function(destination) {\n\n        var request = new Request('call', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = callArgs;\n        request.boundPath = model._path;\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction batchAndDedupeGet(model, optimized, requested) {\n    return new Dedupe(\n        this, model._source, model._scheduler, requested, optimized\n    );\n}\n\nfunction Dedupe(queue, source, scheduler, requested, optimized) {\n    this.queue = queue;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n    this.requested = requested;\n    this.optimized = optimized;\n}\n\nDedupe.prototype.subscribe = function(destination) {\n\n    var queue = this.queue;\n    var source = this.dataSource;\n    var requested = this.requested;\n    var optimized = this.optimized;\n    var scheduler = this.scheduler;\n\n    var requestsIndex = -1;\n    var requests  = queue.subscriptions;\n    var requestsCount = requests.length;\n    var subscription = new Subscription([], destination);\n\n    while (++requestsIndex < requestsCount) {\n\n        var request = requests[requestsIndex];\n\n        if (request.type !== 'get') {\n            continue;\n        }\n\n        if (request = request.batch(requested, optimized, requested = [], optimized = [])) {\n            subscription.add(request.subscribe(new Subscriber(destination, request)));\n        }\n\n        if (!optimized.length) {\n            break;\n        }\n    }\n\n    if (optimized.length) {\n        request = requests[requestsIndex] =\n            new Request('get', queue, source, scheduler).batch(requested, optimized);\n        subscription.add(request.subscribe(new Subscriber(destination, request)));\n        request.connect();\n    }\n\n    return subscription;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Queue.js","var isArray = Array.isArray;\nvar Subject = require('./Subject');\nvar Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar InvalidSourceError = require('../errors/InvalidSourceError');\n\nvar setJSONGraphs = require('../cache/set/setJSONGraphs');\nvar setPathValues = require('../cache/set/setPathValues');\nvar invalidatePaths = require('../cache/invalidate/invalidatePathSets');\n\nvar toPaths = require('@graphistry/falcor-path-utils/lib/toPaths');\nvar toCollapseMap = require('@graphistry/falcor-path-utils/lib/toCollapseMap');\nvar toCollapseTrees = require('@graphistry/falcor-path-utils/lib/toCollapseTrees');\nvar hasIntersection = require('@graphistry/falcor-path-utils/lib/hasIntersection');\n\nmodule.exports = Request;\n\nfunction Request(type, queue, source, scheduler) {\n    Subject.call(this, [], queue);\n    this.tree = {};\n    this.paths = [];\n    this.type = type;\n    this.data = null;\n    this.active = false;\n    this.responded = false;\n    this.requested = [];\n    this.optimized = [];\n    this.disposable = null;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n}\n\nRequest.prototype = Object.create(Subject.prototype);\n\nRequest.prototype.next =\nRequest.prototype.onNext = function(envelopes) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    var env = envelopes,\n        envelopeIndex = 0,\n        envelopeCount = 0;\n\n    if (isArray(envelopes)) {\n        if ((envelopeCount = envelopes.length) <= 0) {\n            return;\n        }\n        env = envelopes[0];\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    var boundPath = this.boundPath;\n\n    do {\n\n        var jsonGraph = env.jsonGraph;\n        var requested = this.requested;\n        var modelRoot = queue.modelRoot;\n        var invalidated = env.invalidated;\n        var paths = env.paths || this.paths;\n\n        // Run invalidations first.\n        if (invalidated && invalidated.length) {\n            invalidatePaths({ _root: modelRoot, _path: [] }, invalidated, false);\n        }\n\n        if (paths && paths.length && !(!jsonGraph || typeof jsonGraph !== 'object')) {\n            paths = setJSONGraphs(\n                { _root: modelRoot },\n                [{ paths: paths, jsonGraph: jsonGraph }],\n                modelRoot.errorSelector, modelRoot.comparator, false\n            )[0];\n        }\n    } while (++envelopeIndex < envelopeCount && (env = envelopes[envelopeIndex]))\n\n    this.observers.slice(0).forEach(function(observer, index) {\n        observer.onNext({\n            type: 'get', paths: requested[index] ||\n                filterPathsBoundTo(boundPath, paths)\n        });\n    });\n}\n\nRequest.prototype.error =\nRequest.prototype.onError = function(error) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    error = error || {};\n\n    // Converts errors to object we can insert into the cache.\n    error = !(error instanceof Error) ?\n        // if it's $type error, use it raw\n        error.$type === $error && error ||\n        // Otherwise make it an error\n        { $type: $error, value: error } :\n        // If it's instanceof Error, pluck error.message\n        { $type: $error, value: { message: error.message }};\n\n    var modelRoot = queue.modelRoot;\n\n    var errorPathValues = toPaths(toCollapseTrees(\n        this.requested.reduce(function(collapseMap, paths) {\n            return toCollapseMap(paths, collapseMap);\n        }, {})\n    ))\n    .map(function(path) { return { path: path, value: error }; });\n\n    if (errorPathValues.length) {\n        setPathValues(\n            { _root: modelRoot, _path: [] },\n            errorPathValues,\n            modelRoot.errorSelector,\n            modelRoot.comparator,\n            false\n        );\n    }\n\n    Subject.prototype.onError.call(this, error);\n}\n\nRequest.prototype.complete =\nRequest.prototype.onCompleted = function() {\n    if (this.responded === false) {\n        this.onNext({});\n    }\n    Subject.prototype.onCompleted.call(this);\n}\n\nRequest.prototype.remove = function(subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.requested.splice(index, 1);\n        this.optimized.splice(index, 1);\n        this.observers.splice(index, 1);\n        this.subscriptions.splice(index, 1);\n    }\n    if (this.subscriptions.length === 0) {\n        this.dispose();\n    }\n    return this;\n}\n\nRequest.prototype.dispose =\nRequest.prototype.unsubscribe = function () {\n    this.tree = {};\n    this.data = null;\n    this.paths = null;\n    this.active = false;\n    this.boundPath = null;\n    this.requested = [];\n    this.optimized = [];\n    var queue = this.parent;\n    if (queue) {\n        this.parent = null;\n        queue.remove(this);\n    }\n    var disposable = this.disposable;\n    if (disposable) {\n        this.disposable = null;\n        if (disposable.dispose) {\n            disposable.dispose();\n        } else if (disposable.unsubscribe) {\n            disposable.unsubscribe();\n        }\n    }\n    Subject.prototype.dispose.call(this);\n}\n\nRequest.prototype.connect = function() {\n    if (!this.active && !this.disposable) {\n        var scheduledDisposable = this.scheduler.schedule(flush.bind(this));\n        if (!this.disposable) {\n            this.disposable = scheduledDisposable;\n        }\n    }\n    return this;\n}\n\nRequest.prototype.batch = function(requested, optimized,\n                                   requestedComplements,\n                                   optimizedComplements) {\n    if (this.active) {\n        var requestedIntersection = [];\n        var optimizedIntersection = [];\n        if (findIntersections(this.tree,\n                              requested, optimized,\n                              requestedComplements,\n                              optimizedComplements,\n                              requestedIntersection,\n                              optimizedIntersection)) {\n            this.requested.push(requestedIntersection);\n            this.optimized.push(optimizedIntersection);\n            return this;\n        }\n        return null;\n    }\n    this.requested.push(requested);\n    this.optimized.push(optimized);\n    return this;\n}\n\nfunction flush() {\n\n    this.active = true;\n\n    var obs, paths = this.paths = toPaths(this.tree = toCollapseTrees(\n        this.optimized.reduce(function(collapseMap, paths) {\n            return toCollapseMap(paths, collapseMap);\n        }, {})\n    ));\n\n    try {\n        switch (this.type) {\n            case 'get':\n                obs = this.dataSource.get(paths);\n                break;\n            case 'set':\n                obs = this.dataSource.set({ paths: paths, jsonGraph: this.data });\n                break;\n            case 'call':\n                obs = this.dataSource.call.apply(this.dataSource, this.data);\n                break;\n        }\n        this.disposable = obs.subscribe(this);\n    } catch (e) {\n        this.disposable = {};\n        Subject.prototype.onError.call(this, new InvalidSourceError(e));\n    }\n}\n\nfunction findIntersections(tree,\n                           requested, optimized,\n                           requestedComplements,\n                           optimizedComplements,\n                           requestedIntersection,\n                           optimizedIntersection) {\n\n    var index = -1;\n    var complementIndex = -1;\n    var intersectionIndex = -1;\n    var optTotal = optimized.length;\n    var reqTotal = requested.length - 1;\n\n    while (++index < optTotal) {\n        var path = optimized[index];\n        var pathLen = path.length;\n        var subTree = tree[pathLen];\n        if (subTree && hasIntersection(subTree, path, 0, pathLen)) {\n            optimizedIntersection[++intersectionIndex] = path;\n            requestedIntersection[intersectionIndex] = requested[\n                index < reqTotal ? index : reqTotal\n            ];\n        } else {\n            optimizedComplements[++complementIndex] = path;\n            requestedComplements[complementIndex] = requested[\n                index < reqTotal ? index : reqTotal\n            ];\n        }\n    }\n\n    return ~intersectionIndex;\n}\n\nfunction filterPathsBoundTo(boundPath, paths) {\n\n    var boundLength;\n\n    if (!boundPath || (boundLength = boundPath.length) === 0) {\n        return paths;\n    }\n\n    var filtered = [], filteredIndex = -1, keyIndex;\n    var path, pathsIndex = -1, pathsCount = paths.length;\n\n    outer: while (++pathsIndex < pathsCount) {\n        path = paths[pathsIndex];\n        if (path.length > boundLength) {\n            keyIndex = 0;\n            do {\n                if (path[keyIndex] !== boundPath[keyIndex]) {\n                    continue outer;\n                }\n            } while (++keyIndex < boundLength);\n            filtered[++filteredIndex] = path.slice(boundLength);\n        }\n    }\n\n    return filtered;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Request.js","var Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\n\nmodule.exports = Subject;\n\nfunction Subject(observers, parent) {\n    Subscriber.call(this, null, parent);\n    this.observers = observers || [];\n}\n\nSubject.prototype = Object.create(Subscriber.prototype);\n\n// Unused\n// Subject.prototype.onNext = function(value) {\n//     this.observers.slice(0).forEach(function(observer) {\n//         observer.onNext(value);\n//     });\n// }\n\nSubject.prototype.onError = function(error) {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function(observer) {\n        observer.onError(error);\n    });\n}\n\nSubject.prototype.onCompleted = function() {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function(observer) {\n        observer.onCompleted();\n    });\n}\n\nSubject.prototype.subscribe = function(subscriber) {\n    this.observers.push(subscriber);\n    this.subscriptions.push(subscriber = new Subscription([subscriber], this));\n    return subscriber;\n}\n\nSubject.prototype.dispose =\nSubject.prototype.unsubscribe = function () {\n    this.observers = [];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subject.js","function TimeoutScheduler(delay) {\n    this.delay = delay;\n}\n\nvar TimerDisposable = function TimerDisposable(id) {\n    this.id = id;\n    this.disposed = false;\n};\n\nTimeoutScheduler.prototype.schedule = function schedule(action) {\n    return new TimerDisposable(setTimeout(action, this.delay));\n};\n\nTimerDisposable.prototype.dispose =\nTimerDisposable.prototype.unsubscribe = function() {\n    if (!this.disposed) {\n        clearTimeout(this.id);\n        this.id = null;\n        this.disposed = true;\n    }\n};\n\nmodule.exports = TimeoutScheduler;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/schedulers/TimeoutScheduler.js","module.exports = function arrayFlatMap(array, selector) {\n    var index = -1;\n    var i = -1;\n    var n = array.length;\n    var array2 = [];\n    while (++i < n) {\n        var array3 = selector(array[i], i, array);\n        var j = -1;\n        var k = array3.length;\n        while (++j < k) {\n            array2[++index] = array3[j];\n        }\n    }\n    return array2;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/array-flat-map.js","var isArray = Array.isArray;\nvar isInternal = require('../internal/isInternal');\n\nmodule.exports = clone;\n\nfunction clone(source) {\n    var dest = source;\n    if (!(!dest || typeof dest !== 'object')) {\n        dest = isArray(source) ? [] : {};\n        for (var key in source) {\n            if (isInternal(key)) {\n                continue;\n            }\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/clone.js","var isObject = require('./isObject');\nmodule.exports = function getSize(node) {\n    return isObject(node) && node.$expires || undefined;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getExpires.js","var isObject = require('./../support/isObject');\n\nmodule.exports = function getType(node, anyType) {\n    var type = isObject(node) && node.$type || void 0;\n    if (anyType && type) {\n        return 'branch';\n    }\n    return type;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getType.js","var isArray = Array.isArray;\nvar isObject = require('./../support/isObject');\n\nmodule.exports = function isPathValue(pathValue) {\n    return isObject(pathValue) && (\n        isArray(pathValue.path) || (\n            typeof pathValue.path === 'string'\n        ));\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isPathValue.js","module.exports = require('./lib/index');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/index.js\n// module id = 105\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = require('./ponyfill');\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/lib/index.js\n// module id = 106\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/lib/ponyfill.js\n// module id = 107\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.l; }\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.i; }\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 108\n// module chunks = 0"],"sourceRoot":""}