{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///falcor.all.min.js","webpack:///webpack/bootstrap 96035eb1ed6ea583f2d3","webpack:///./lib/cache/isExpired.js","webpack:///./lib/cache/expireNode.js","webpack:///./lib/cache/get/json/FalcorJSON.js","webpack:///./lib/errors/NullInPathError.js","webpack:///./lib/errors/createErrorClass.js","webpack:///./lib/support/isObject.js","webpack:///.-path-utils/lib/support/materializedAtom.js","webpack:///./lib/cache/clone.js","webpack:///./lib/cache/createHardlink.js","webpack:///./lib/support/getSize.js","webpack:///./lib/cache/getCachePosition.js","webpack:///./lib/cache/updateNodeAncestors.js","webpack:///./lib/errors/InvalidKeySetError.js","webpack:///./lib/lru/promote.js","webpack:///./lib/request/Subscriber.js","webpack:///./lib/request/Subscription.js","webpack:///./lib/cache/get/onValueType.js","webpack:///./lib/cache/getBoundCacheNode.js","webpack:///./lib/cache/set/setJSONGraphs.js","webpack:///./lib/cache/set/setPathMaps.js","webpack:///./lib/support/isInternalKey.js","webpack:///.-path-utils/lib/flatBufferToPaths.js","webpack:///.-path-utils/lib/getHashCode.js","webpack:///.-path-utils/lib/iterateKeySet.js","webpack:///./lib/cache/get/json/index.js","webpack:///./lib/cache/get/jsonGraph/index.js","webpack:///./lib/cache/get/jsonGraph/inlineValue.js","webpack:///./lib/cache/get/onMissing.js","webpack:///./lib/cache/invalidate/invalidatePathSets.js","webpack:///./lib/cache/removeNodeAndDescendants.js","webpack:///./lib/cache/set/setPathValues.js","webpack:///./lib/cache/updateBackReferenceVersions.js","webpack:///./lib/internal/isInternal.js","webpack:///./lib/support/getTimestamp.js","webpack:///./lib/values/expires-now.js","webpack:///(webpack)/buildin/global.js","webpack:///.-path-utils/lib/collapse.js","webpack:///.-path-utils/lib/toCollapseMap.js","webpack:///.-path-utils/lib/toCollapseTrees.js","webpack:///.-path-utils/lib/toPaths.js","webpack:///./lib/cache/get/json/getJSON.js","webpack:///./lib/cache/get/json/getReferenceTarget.js","webpack:///./lib/cache/get/json/onValue.js","webpack:///./lib/cache/get/jsonGraph/getJSONGraph.js","webpack:///./lib/cache/get/onMaterialize.js","webpack:///./lib/cache/groupCacheArguments.js","webpack:///./lib/cache/insertNode.js","webpack:///./lib/cache/invalidate/invalidatePathMaps.js","webpack:///./lib/cache/mergeValueOrInsertBranch.js","webpack:///./lib/cache/reconstructPath.js","webpack:///./lib/cache/replaceNode.js","webpack:///./lib/cache/wrapNode.js","webpack:///./lib/errors/CircularReferenceError.js","webpack:///./lib/errors/InvalidSourceError.js","webpack:///./lib/lru/splice.js","webpack:///./lib/request/Source.js","webpack:///./lib/schedulers/ImmediateScheduler.js","webpack:///./lib/support/isJSONEnvelope.js","webpack:///./lib/support/isJSONGraphEnvelope.js","webpack:///./lib/support/now.js","webpack:///./lib/values/expires-never.js","webpack:///./lib/index.js","webpack:///.-path-utils/lib/computeFlatBufferHash.js","webpack:///.-path-utils/lib/hasIntersection.js","webpack:///.-path-utils/lib/toFlatBuffer.js","webpack:///.-path-utils/lib/toTree.js","webpack:///./lib/Model.js","webpack:///./lib/ModelDataSourceAdapter.js","webpack:///./lib/ModelRoot.js","webpack:///./lib/cache/call/index.js","webpack:///./lib/cache/get/index.js","webpack:///./lib/cache/get/json/onError.js","webpack:///./lib/cache/get/json/walkFlatBuffer.js","webpack:///./lib/cache/get/json/walkPath.js","webpack:///./lib/cache/get/jsonGraph/getReferenceTarget.js","webpack:///./lib/cache/get/jsonGraph/onValue.js","webpack:///./lib/cache/get/jsonGraph/walkPath.js","webpack:///./lib/cache/get/onMaterializeFlatBuffer.js","webpack:///./lib/cache/getCache.js","webpack:///./lib/cache/getVersion.js","webpack:///./lib/cache/invalidate/index.js","webpack:///./lib/cache/mergeJSONGraphNode.js","webpack:///./lib/cache/set/index.js","webpack:///./lib/cache/transferBackReferences.js","webpack:///./lib/cache/unlinkBackReferences.js","webpack:///./lib/cache/unlinkForwardReference.js","webpack:///./lib/deref/hasValidParentReference.js","webpack:///./lib/deref/index.js","webpack:///./lib/errors/BoundJSONGraphModelError.js","webpack:///./lib/errors/InvalidDerefInputError.js","webpack:///./lib/errors/InvalidModelError.js","webpack:///./lib/errors/MaxRetryExceededError.js","webpack:///./lib/internal/f_.js","webpack:///./lib/lru/collect.js","webpack:///./lib/request/Call.js","webpack:///./lib/request/Queue.js","webpack:///./lib/request/Request.js","webpack:///./lib/request/Subject.js","webpack:///./lib/schedulers/TimeoutScheduler.js","webpack:///./lib/support/array-flat-map.js","webpack:///./lib/support/clone.js","webpack:///./lib/support/getExpires.js","webpack:///./lib/support/getType.js","webpack:///./lib/support/isPathValue.js","webpack:///./~/symbol-observable/index.js","webpack:///./~/symbol-observable/lib/index.js","webpack:///./~/symbol-observable/lib/ponyfill.js","webpack:///(webpack)/buildin/module.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","__webpack_require__.i","value","d","__webpack_require__.d","name","getter","Object","defineProperty","configurable","enumerable","get","n","__webpack_require__.n","__esModule","getDefault","getModuleExports","o","__webpack_require__.o","object","property","prototype","hasOwnProperty","p","s","now","$now","$never","module.exports","node","expireImmediate","exp","undefined","splice","expired","lru","global","FalcorJSON","f_meta","bindArrayMethod","fn","bound","arguments","getInst","inst","typeofInst","argsLen","typeofString","typeofObject","toJSON","serialize","toProps","f_meta_inst","f_meta_json","version","json","serializer","includeMetadata","createWithProto","count","total","keys","key","xs","isArray","$code","abs_path","deref_to","deref_from","ys","reduce","descriptors","writable","Array","toString","JSON","$__hash","$__path","$__version","createErrorClass","message","MESSAGE","init","E","Error","constructor","stack","E.is","x","isObject","$type","isInternal","clone","index","length","from","to","backRefs","getCachePosition","cache","path","type","depth","maxDepth","removeNodeAndDescendants","updateBackReferenceVersions","updateNodeAncestors","offset","curr","next","keysOrRanges","mesage","EXPIRES_NEVER","head","prev","Subscriber","destination","parent","onCompleted","Subscription","error","onError","onNext","complete","Subscriber.prototype.onNext","dest","Subscriber.prototype.onError","signaled","dispose","Subscriber.prototype.onCompleted","Subscriber.prototype.unsubscribe","subscriptions","Subscription.prototype.add","subscription","push","Subscription.prototype.remove","indexOf","Subscription.prototype.unsubscribe","isExpired","expireNode","lruPromote","onValueType","seed","results","requestedPath","requestedLength","optimizedPath","optimizedLength","fromReference","modelRoot","branchSelector","boxValues","materialized","reportMissing","treatErrorsAsValues","onValue","onMissing","onMaterialize","reportMaterialized","getBoundCacheNode","model","setJSONGraphPathSet","messageRoot","messageParent","requestedPaths","optimizedPaths","comparator","errorSelector","note","branch","keySet","iterateKeySet","optimizedIndex","setNode","nextNode","nextParent","nextOptimizedPath","reference","container","createHardlink","arr","NullInPathError","mergeJSONGraphNode","jsonGraphEnvelopes","jsonGraphEnvelopeIndex","jsonGraphEnvelopeCount","jsonGraphEnvelope","paths","jsonGraph","pathIndex","pathCount","setPathMap","pathMap","itr","isInternalKey","keyIndex","keyCount","child","mergeValueOrInsertBranch","pathMapEnvelopes","pathMapIndex","pathMapCount","pathMapEnvelope","flatBufferToPaths","leaf","keysLen","keysIndex","keyset","getHashCode","str","hash","initializeRange","memo","nextValue","el","inlineJSONGraphValue","restPathIndex","restPath","restPathCount","isEmptyKeySet","rangeEnd","mPath","lastKeyIsNull","isRequestedPath","missingPaths","missTotal","missingPath","missDepth","Number","invalidatePathSet","invalidateNode","getSize","invalidatePathSets","key2","lruSplice","unlinkForwardReference","unlinkBackReferences","setPathSet","pathValues","pathValueIndex","pathValueCount","pathValue","nodeArg","ref","f_","regexp","RegExp","g","Function","eval","e","window","toPaths","toCollapseMap","toCollapseTrees","collapseMap","acc","len","toTree","collapseTrees","collapseKey","collapsePathMap","pathmap","subs","code","codes","codesIndex","codesCount","pathsets","pathsetsCount","subPath","subCode","subKeys","subKeysIndex","subKeysCount","pathsetClone","getSortedKeys","isSafeNumber","sets","parseInt","subSets","firstSubKey","subSetsIndex","subSetsCount","pathset","pathsetIndex","pathsetCount","sortListAscending","a","b","map","sort","materializedAtom","val","num","typeOfString","MIN_SAFE_INTEGER_DIGITS","safeNumberRegEx","MAX_SAFE_INTEGER_DIGITS","typeOfNumber","MAX_SAFE_INTEGER","abs","Math","lengths","allPaths","allPathsLength","typeOfObject","pathsIndex","pathsCount","keysetIndex","keysetCount","isSparseRange","collapseIndex","walkPathAndBuildOutput","walkFlatBufferAndBuildOutput","InvalidModelError","toFlatBuffer","computeFlatBufferHash","getJSON","progressive","referenceContainer","boundPath","isFlatBuffer","data","recycleJSON","hasDataSource","Boolean","allowFromWhenceYouCame","requested","boundRequested","promote","CircularReferenceError","getReferenceTarget","context","copy","onJSONValue","BoundJSONGraphModelError","getJSONGraph","nextDepth","keysetLength","iteratingKeyset","nextKey","keyIsRange","InvalidKeySetError","typeofNumber","isPathValue","isJSONEnvelope","isJSONGraphEnvelope","groupCacheArguments","args","groups","argIndex","argCount","group","groupType","arg","argType","inputType","invalidatePathMap","invalidatePathMaps","getType","getTimestamp","wrapNode","insertNode","replaceNode","reconstructPath","cType","mType","sizeOffset","currentPath","transferBackReferences","replacement","getExpires","expiresNow","typeArg","size","modelCreated","atomSize","expires","referencePath","Source","subscribe","source","$$observable","default","Source.prototype.operator","Source.prototype.subscribe","y","operator","Source.prototype.then","_promise","resolve","reject","values","rejected","errors","then","ImmediateScheduler","empty","unsubscribe","ImmediateScheduler.prototype.schedule","action","envelope","Date","falcor","opts","Model","keysLength","hasIntersection","tree","pathToFlatBuffer","keysMap","nullBuffer","pathToTree","options","_node","_path","_source","_root","ModelRoot","_recycleJSON","_scheduler","_seed","_treatErrorsAsValues","__proto__","_boxed","_materialized","_allowFromWhenceYouCame","setCache","Call","ModelDataSourceAdapter","TimeoutScheduler","collapse","setJSONGraphs","getCache","Model.prototype.get","_len","_key","_toJSON","Model.prototype.set","_len2","_key2","Model.prototype.preload","_len3","_key3","Model.prototype.call","_len4","_key4","Model.prototype.invalidate","_len5","_key5","Model.prototype.getValue","lift","subscriber","Model.prototype.setValue","Model.prototype.setCache","cacheOrJSONGraphEnvelope","rootOnChangeHandler","Model.prototype.getCache","env","Model.prototype.getVersion","concat","_getVersion","Model.prototype._clone","Model.prototype.batch","schedulerOrDelay","scheduler","scheudle","_clone","Model.prototype.unbatch","Model.prototype.treatErrorsAsValues","Model.prototype.asDataSource","Model.prototype._materialize","Model.prototype._dematerialize","Model.prototype.boxValues","Model.prototype.unboxValues","Model.prototype.withoutDataSource","Model.prototype.inspect","getVersion","join","Model.prototype.toJSON","getPath","Model.prototype.getPath","slice","Model.prototype._fromWhenceYouCame","allow","Model.prototype._optimizePath","_model","ModelDataSourceAdapter.prototype.get","pathSets","apply","_toJSONG","ModelDataSourceAdapter.prototype.set","jsongResponse","set","ModelDataSourceAdapter.prototype.call","suffixes","syncRefCount","maxRetryCount","topLevelModel","requests","Requests","collectRatio","maxSize","functionTypeof","onChange","onChangesCompleted","defaultCompare","_args","hasValue","missing","thisPaths","fragments","errorPath","errorValue","refTarget","f_old_keys","f_new_keys","f_code","nextJSON","nextReferenceContainer","nextOptimizedLength","optimizedLengthNext","refContainerAbsPath","refContainerRefPath","nodeAbsPath","jsonAbsPath","nextPath","nextPathKey","hasMissingPath","tmp","rPath","originalOnMissing","inlineValue","onJSONGraphValue","isLeaf","onMaterializeFlatBuffer","_copyCache","out","fromKey","cacheNext","outNext","isUserCreatedcacheNext","clonedValue","boxedValue","invalidate","changed","groupIndex","groupCount","groupedArgs","pluckPaths","operation","rootChangeHandler","invalidatePathValues","cIsObject","mIsObject","cTimestamp","mTimestamp","isDistinct","setGroupsIntoCache","arrayFlatMap","optimized","jsong","relative","setPathMaps","setPathValues","fromNode","destNode","fromNodeRefsLength","destNodeRefsLength","hasValidParentReference","_referenceContainer","cacheRoot","absolutePath","originalRefPath","originalAbsPath","cacheNode","validContainer","CONTAINER_DOES_NOT_EXIST","currentRefPath","shortedPath","printPaths","absolute","String","totalArg","max","ratioArg","ratio","targetSize","CallOperator","CallSubscriber","retryCount","completed","tryOnNext","tryOnError","self","err","mergeInto","destValue","nodeValue","lruCollect","InvalidSourceError","MaxRetryExceededError","Call.prototype.lift","Call.prototype.operator","_subscribe","Call.prototype._subscribe","Call.prototype._toJSON","Call.prototype._toJSONG","Call.prototype.retry","progresive","Call.prototype.progressively","CallOperator.prototype.call","CallSubscriber.prototype.onNext","started","seedIsImmutable","operations","CallSubscriber.prototype.onError","errored","CallSubscriber.prototype.onCompleted","request","CallSubscriber.prototype.unsubscribe","rootOnChangesCompletedHandler","Queue","Dedupe","queue","dataSource","Request","isolateSet","isolateCall","callArgs","batchAndDedupeGet","Dedupe.prototype.subscribe","requestsIndex","requestsCount","batch","Subject","responded","active","disposable","flush","obs","filterPathsBoundTo","boundLength","filtered","filteredIndex","outer","invalidatePaths","Request.prototype.onNext","invalidated","observers","forEach","observer","Request.prototype.onError","errorPathValues","Request.prototype.onCompleted","Request.prototype.remove","Request.prototype.unsubscribe","Request.prototype.connect","scheduledDisposable","schedule","Request.prototype.batch","requestedComplements","optimizedComplements","requestedIntersection","optimizedIntersection","complementIndex","intersectionIndex","optTotal","reqTotal","pathLen","subTree","Subject.prototype.onError","Subject.prototype.onCompleted","Subject.prototype.subscribe","Subject.prototype.unsubscribe","delay","TimerDisposable","id","disposed","TimeoutScheduler.prototype.schedule","setTimeout","TimerDisposable.prototype.unsubscribe","clearTimeout","array","selector","array2","array3","j","k","anyType","_ponyfill","_ponyfill2","result","symbolObservablePonyfill","_Symbol","Symbol","observable","webpackPolyfill","deprecate","module.deprecate","children"],"mappings":"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","file":"falcor.all.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"falcor\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"falcor\"] = factory();\n\telse\n\t\troot[\"falcor\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"falcor\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"falcor\"] = factory();\n\telse\n\t\troot[\"falcor\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmory imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmory exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tObject.defineProperty(exports, name, {\n/******/ \t\t\tconfigurable: false,\n/******/ \t\t\tenumerable: true,\n/******/ \t\t\tget: getter\n/******/ \t\t});\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 108);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar now = __webpack_require__(59);\nvar $now = __webpack_require__(34);\nvar $never = __webpack_require__(60);\n\nmodule.exports = function isExpired(node, expireImmediate) {\n    var exp = node.$expires;\n    if (exp === undefined || exp === null || exp === $never) {\n        return false;\n    } else if (exp === $now) {\n        return expireImmediate;\n    }\n    return exp < now();\n};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar splice = __webpack_require__(54);\n\nmodule.exports = function expireNode(node, expired, lru) {\n    if (!node[\"\u001eƒ_invalidated\"]) {\n        node[\"\u001eƒ_invalidated\"] = true;\n        expired.push(node);\n        splice(lru, node);\n    }\n    return node;\n};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {function FalcorJSON(f_meta) {\n    if (!f_meta) {\n        this[\"\u001eƒ_meta\"] = {};\n    } else if (!(this[\"\u001eƒ_meta\"] = f_meta[\"\u001eƒ_meta\"])) {\n        this[\"\u001eƒ_meta\"] = f_meta;\n    }\n}\n\nObject.defineProperties(FalcorJSON.prototype, ['concat', 'copyWithin', 'entries', 'every', 'fill', 'filter', 'find', 'findIndex', 'forEach', 'includes', 'indexOf', 'join', 'keys', 'lastIndexOf', 'map', 'pop', 'push', 'reduce', 'reduceRight', 'reverse', 'shift', 'slice', 'some', 'sort', 'splice', 'unshift', 'values'].reduce(function (descriptors, name) {\n    descriptors[name] = {\n        writable: true, enumerable: false,\n        value: bindArrayMethod(Array.prototype[name])\n    };\n    return descriptors;\n}, {\n    toJSON: { enumerable: false, value: toJSON },\n    toProps: { enumerable: false, value: toProps },\n    toString: { enumerable: false, value: toString },\n    $__hash: {\n        enumerable: false,\n        get: function () {\n            var f_meta = this[\"\u001eƒ_meta\"];\n            return f_meta && f_meta['$code'] || '';\n        }\n    },\n    $__path: {\n        enumerable: false,\n        get: function () {\n            var f_meta = this[\"\u001eƒ_meta\"];\n            return f_meta && f_meta[\"abs_path\"] || [];\n        }\n    },\n    $__version: {\n        enumerable: false,\n        get: function () {\n            var f_meta = this[\"\u001eƒ_meta\"];\n            return f_meta && f_meta[\"version\"] || 0;\n        }\n    }\n}));\n\nfunction bindArrayMethod(fn) {\n    return (bound.fn = fn) && bound;\n    function bound() {\n        return bound.fn.apply(this, arguments);\n    }\n}\n\nvar isArray = Array.isArray;\nvar typeofObject = 'object';\nvar typeofString = 'string';\n\nfunction getInst(inst) {\n    var typeofInst = typeof inst;\n    var argsLen = arguments.length;\n    if (argsLen === 0) {\n        inst = this;\n    } else if (typeofInst !== typeofString) {\n        if (!inst || typeofInst !== typeofObject) {\n            return inst;\n        }\n    } else if (argsLen !== 1) {\n        return inst;\n    } else {\n        inst = this;\n    }\n    return inst === global ? undefined : inst;\n}\n\nfunction toJSON() {\n    return serialize(getInst.apply(this, arguments), toJSON);\n}\n\nfunction toString(includeMetadata) {\n    return JSON.stringify(serialize(getInst.call(this, this), serialize, includeMetadata === true));\n}\n\nfunction toProps(inst) {\n\n    inst = getInst.apply(this, arguments);\n\n    var f_meta_inst,\n        f_meta_json,\n        version = 0;\n    var json = serialize(inst, toProps, true, true);\n\n    if (inst && (f_meta_inst = inst[\"\u001eƒ_meta\"])) {\n        version = f_meta_inst[\"version\"];\n    }\n\n    if (!(!json || typeof json !== typeofObject)) {\n        if (f_meta_json = json[\"\u001eƒ_meta\"]) {\n            f_meta_json[\"version\"] = version;\n        }\n    }\n\n    return json;\n}\n\nfunction serialize(inst, serializer, includeMetadata, createWithProto) {\n\n    if (!inst || typeof inst !== typeofObject) {\n        return inst;\n    }\n\n    var count, total, f_meta, keys, key, xs, ys;\n\n    if (isArray(inst)) {\n        xs = inst;\n    } else {\n\n        count = -1;\n        keys = Object.keys(inst);\n        total = keys.length;\n        xs = {};\n\n        if (createWithProto) {\n            xs.__proto__ = FalcorJSON.prototype;\n        }\n\n        if (includeMetadata && (f_meta = inst[\"\u001eƒ_meta\"])) {\n\n            var $code = f_meta['$code'];\n            var abs_path = f_meta[\"abs_path\"];\n            var deref_to = f_meta[\"deref_to\"];\n            var deref_from = f_meta[\"deref_from\"];\n\n            f_meta = {};\n            $code && (f_meta['$code'] = $code);\n            abs_path && (f_meta[\"abs_path\"] = abs_path);\n            deref_to && (f_meta[\"deref_to\"] = deref_to);\n            deref_from && (f_meta[\"deref_from\"] = deref_from);\n\n            xs[\"\u001eƒ_meta\"] = f_meta;\n\n            if (createWithProto) {\n                ys = {};\n                ys.__proto__ = xs;\n                xs = ys;\n            }\n        }\n\n        while (++count < total) {\n            if ((key = keys[count]) !== \"\u001eƒ_meta\") {\n                xs[key] = serializer(inst[key], serializer, includeMetadata);\n            }\n        }\n    }\n\n    return xs;\n}\n\nmodule.exports = FalcorJSON;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(35)))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\nvar MESSAGE = '`null` is not allowed in branch key positions.';\n\n/**\n * Do not allow null in path.\n */\nmodule.exports = createErrorClass('NullInPathError', function () {\n  this.message = MESSAGE;\n});\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\nmodule.exports = createErrorClass;\n\nfunction createErrorClass(name, init) {\n    function E(message) {\n        this.message = message;\n        init && init.apply(this, arguments);\n        if (!Error.captureStackTrace) {\n            this.stack = new Error().stack;\n        } else {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n    E.prototype = Object.create(Error.prototype);\n    E.prototype.name = name;\n    E.prototype.constructor = E;\n    E.is = function (x) {\n        return x.name === name;\n    };\n    return E;\n}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\nmodule.exports = isObject;\n\nfunction isObject(value) {\n    return value !== null && typeof value === 'object';\n}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\nmodule.exports = { $type: 'atom' };\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isInternal = __webpack_require__(32);\n\nmodule.exports = clone;\n\nfunction clone(node) {\n\n    var key,\n        keys = Object.keys(node),\n        json = {},\n        index = -1,\n        length = keys.length;\n\n    while (++index < length) {\n        key = keys[index];\n        if (isInternal(key)) {\n            continue;\n        }\n        json[key] = node[key];\n    }\n\n    return json;\n}\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function createHardlink(from, to) {\n\n    // create a back reference\n    var backRefs = to[\"\u001eƒ_refs_length\"] || 0;\n    to[\"\u001eƒ_ref\" + backRefs] = from;\n    to[\"\u001eƒ_refs_length\"] = backRefs + 1;\n\n    // create a hard reference\n    from[\"\u001eƒ_ref_index\"] = backRefs;\n    from[\"\u001eƒ_context\"] = to;\n};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(5);\nmodule.exports = function getSize(node) {\n    return isObject(node) && node.$size || 0;\n};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * getCachePosition makes a fast walk to the bound value since all bound\n * paths are the most possible optimized path.\n *\n * @param {Model} model -\n * @param {Array} path -\n * @returns {Mixed} - undefined if there is nothing in this position.\n * @private\n */\nmodule.exports = getCachePosition;\n\nfunction getCachePosition(cache, path) {\n\n    var node = cache;\n    var type,\n        depth = 0;\n    var maxDepth = path.length;\n\n    if (maxDepth > 0) {\n        do {\n            node = node[path[depth]];\n\n            while (node && (type = node.$type) === \"ref\") {\n                node = getCachePosition(cache, node.value);\n            }\n        } while (++depth < maxDepth && node && !type);\n    }\n\n    return node;\n};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar removeNodeAndDescendants = __webpack_require__(29);\nvar updateBackReferenceVersions = __webpack_require__(31);\n\nmodule.exports = updateNodeAncestors;\n\nfunction updateNodeAncestors(node, offset, lru, version) {\n    var curr = node,\n        next = curr[\"\u001eƒ_parent\"];\n    do {\n        if ((curr.$size = (curr.$size || 0) - offset) > 0) {\n            if (!(next = curr[\"\u001eƒ_parent\"])) {\n                curr[\"\u001eƒ_version\"] = version;\n            } else if (curr[\"\u001eƒ_version\"] !== version) {\n                updateBackReferenceVersions(curr, version);\n            }\n        } else if (next = curr[\"\u001eƒ_parent\"]) {\n            removeNodeAndDescendants(curr, next, curr[\"\u001eƒ_key\"], lru, version);\n        }\n    } while (curr = next);\n    return node;\n}\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\n\n/**\n * InvalidKeySetError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidKeySetError', function (path, keysOrRanges) {\n  this.mesage = '' + 'The KeySet ' + JSON.stringify(keysOrRanges) + ' in path ' + JSON.stringify(path) + ' contains a KeySet. ' + 'Keysets can only contain Keys or Ranges';\n});\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar EXPIRES_NEVER = __webpack_require__(60);\n\n// [H] -> Next -> ... -> [T]\n// [T] -> Prev -> ... -> [H]\nmodule.exports = function lruPromote(root, object) {\n    // Never promote node.$expires === 1.  They cannot expire.\n    if (object.$expires === EXPIRES_NEVER) {\n        return;\n    }\n\n    var head = root[\"\u001eƒ_head\"];\n\n    // Nothing is in the cache.\n    if (!head) {\n        root[\"\u001eƒ_head\"] = root[\"\u001eƒ_tail\"] = object;\n        return;\n    }\n\n    if (head === object) {\n        return;\n    }\n\n    // The item always exist in the cache since to get anything in the\n    // cache it first must go through set.\n    var prev = object[\"\u001eƒ_prev\"];\n    var next = object[\"\u001eƒ_next\"];\n    if (next) {\n        next[\"\u001eƒ_prev\"] = prev;\n    }\n    if (prev) {\n        prev[\"\u001eƒ_next\"] = next;\n    }\n    object[\"\u001eƒ_prev\"] = undefined;\n\n    // Insert into head position\n    root[\"\u001eƒ_head\"] = object;\n    object[\"\u001eƒ_next\"] = head;\n    head[\"\u001eƒ_prev\"] = object;\n\n    // If the item we promoted was the tail, then set prev to tail.\n    if (object === root[\"\u001eƒ_tail\"]) {\n        root[\"\u001eƒ_tail\"] = prev;\n    }\n};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Subscription = __webpack_require__(15);\n\nmodule.exports = Subscriber;\n\nfunction Subscriber(destination, parent, onCompleted) {\n    if (typeof destination === 'function' || typeof parent === 'function' || typeof onCompleted === 'function') {\n        Subscription.call(this, []);\n        this.destination = {\n            error: parent,\n            onError: parent,\n            next: destination,\n            onNext: destination,\n            complete: onCompleted,\n            onCompleted: onCompleted\n        };\n    } else {\n        Subscription.call(this, [], parent);\n        this.parent = parent;\n        this.destination = destination;\n    }\n}\n\nSubscriber.prototype = Object.create(Subscription.prototype);\n\nSubscriber.prototype.next = Subscriber.prototype.onNext = function onNext(value) {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onNext) {\n            dest.onNext(value);\n        } else if (dest.next) {\n            dest.next(value);\n        }\n    }\n};\n\nSubscriber.prototype.error = Subscriber.prototype.onError = function onError(error) {\n    var signaled = false;\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onError) {\n            signaled = true;\n            dest.onError(error);\n        } else if (dest.error) {\n            signaled = true;\n            dest.error(error);\n        }\n        this.dispose();\n    }\n    if (!signaled) {\n        throw error;\n    }\n};\n\nSubscriber.prototype.complete = Subscriber.prototype.onCompleted = function onCompleted() {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onCompleted) {\n            dest.onCompleted();\n        } else if (dest.complete) {\n            dest.complete();\n        }\n        this.dispose();\n    }\n};\n\nSubscriber.prototype.dispose = Subscriber.prototype.unsubscribe = function () {\n    this.destination = null;\n    Subscription.prototype.dispose.call(this);\n};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\nmodule.exports = Subscription;\n\nfunction Subscription(subscriptions, parent) {\n    this.parent = parent;\n    this.subscriptions = subscriptions || [];\n}\n\nSubscription.prototype.add = function (subscription) {\n    return this.subscriptions.push(subscription) && this || this;\n};\n\nSubscription.prototype.remove = function (subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.subscriptions.splice(index, 1);\n    }\n    return this;\n};\n\nSubscription.prototype.dispose = Subscription.prototype.unsubscribe = function () {\n    var subscription,\n        subscriptions = this.subscriptions;\n    while (subscriptions.length) {\n        (subscription = subscriptions.pop()) && subscription.dispose && subscription.dispose();\n    }\n    var parent = this.parent;\n    if (parent) {\n        this.parent = null;\n        parent.remove && parent.remove(this);\n    }\n};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar lruPromote = __webpack_require__(13);\n\nmodule.exports = onValueType;\n\nfunction onValueType(node, type, json, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, reportMissing, treatErrorsAsValues, onValue, onMissing, onMaterialize) {\n\n    var reportMaterialized = reportMissing;\n\n    if (type) {\n        if (isExpired(node, expireImmediate)) {\n            if (!node[\"\u001eƒ_invalidated\"]) {\n                expireNode(node, expired, modelRoot);\n            }\n        } else {\n            lruPromote(modelRoot, node);\n            if (node.value === undefined) {\n                reportMissing = false;\n                reportMaterialized = materialized;\n            } else {\n                if (seed) {\n                    if (fromReference) {\n                        requestedPath[depth] = null;\n                    }\n                    return onValue(node, type, depth, seed, results, requestedPath, optimizedPath, optimizedLength, fromReference, boxValues, materialized, treatErrorsAsValues);\n                }\n                return undefined;\n            }\n        }\n    }\n\n    if (materialized) {\n        seed && (results.hasValue = true);\n    } else if (!reportMaterialized) {\n        return undefined;\n    }\n\n    return onMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, materialized, json, branchSelector, boxValues, onMaterialize, modelRoot);\n}\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar getCachePosition = __webpack_require__(10);\n\nmodule.exports = getBoundCacheNode;\n\nfunction getBoundCacheNode(model, path) {\n    path = path || model._path;\n    var node = model._node;\n    if (!node || node[\"\u001eƒ_parent\"] === undefined || node[\"\u001eƒ_invalidated\"]) {\n        model._node = null;\n        if (path.length === 0) {\n            node = model._root.cache;\n        } else {\n            node = getCachePosition(model._root.cache, path);\n            if (path === model._path) {\n                model._node = node;\n            }\n        }\n    }\n    return node;\n}\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(5);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar createHardlink = __webpack_require__(8);\nvar mergeJSONGraphNode = __webpack_require__(81);\nvar NullInPathError = __webpack_require__(3);\nvar iterateKeySet = __webpack_require__(23);\n\n/**\n * Merges a list of {@link JSONGraphEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to merge the {@link JSONGraphEnvelope}s.\n * @param {Array.<PathValue>} jsonGraphEnvelopes - the {@link JSONGraphEnvelope}s to merge.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setJSONGraphs(model, jsonGraphEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n\n    var requestedPath = [];\n    var optimizedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var jsonGraphEnvelopeIndex = -1;\n    var jsonGraphEnvelopeCount = jsonGraphEnvelopes.length;\n\n    while (++jsonGraphEnvelopeIndex < jsonGraphEnvelopeCount) {\n\n        var jsonGraphEnvelope = jsonGraphEnvelopes[jsonGraphEnvelopeIndex];\n        var paths = jsonGraphEnvelope.paths;\n        var jsonGraph = jsonGraphEnvelope.jsonGraph;\n\n        var pathIndex = -1;\n        var pathCount = paths.length;\n\n        while (++pathIndex < pathCount) {\n\n            var path = paths[pathIndex];\n            optimizedPath.index = 0;\n\n            setJSONGraphPathSet(path, 0, cache, cache, cache, jsonGraph, jsonGraph, jsonGraph, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n        }\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n    arr[3] = undefined;\n    arr[4] = undefined;\n\n    if (cache[\"\u001eƒ_version\"] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setJSONGraphPathSet(path, depth, root, parent, node, messageRoot, messageParent, message, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n\n        var results = setNode(root, parent, node, messageRoot, messageParent, message, key, branch, false, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = results[0];\n        var nextParent = results[1];\n        var nextOptimizedPath = results[4];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setJSONGraphPathSet(path, depth + 1, root, nextParent, nextNode, messageRoot, results[3], results[2], requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(root, node, messageRoot, message, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var messageParent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        messageParent = messageRoot;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var index = 0;\n        var container = node;\n        var count = reference.length - 1;\n        parent = node = root;\n        messageParent = message = messageRoot;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            optimizedPath.index = index;\n\n            var results = setNode(root, parent, node, messageRoot, messageParent, message, key, branch, true, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n            node = results[0];\n            optimizedPath = results[4];\n            if (!node || typeof node !== 'object') {\n                optimizedPath.index = index;\n                return results;\n            }\n            parent = results[1];\n            message = results[2];\n            messageParent = results[3];\n        } while (index++ < count);\n\n        optimizedPath.index = index;\n\n        if (container[\"\u001eƒ_context\"] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(root, parent, node, messageRoot, messageParent, message, key, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        var results = setReference(root, node, messageRoot, message, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        message = results[2];\n        messageParent = results[3];\n        optimizedPath = results[4];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[\"\u001eƒ_key\"];\n            }\n        } else {\n            parent = node;\n            messageParent = message;\n            node = parent[key];\n            message = messageParent && messageParent[key];\n        }\n\n        node = mergeJSONGraphNode(parent, node, message, key, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n\n    return arr;\n}\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(3);\nvar isArray = Array.isArray;\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar createHardlink = __webpack_require__(8);\nvar getCachePosition = __webpack_require__(10);\nvar isInternalKey = __webpack_require__(20);\nvar NullInPathError = __webpack_require__(3);\nvar mergeValueOrInsertBranch = __webpack_require__(48);\n\n/**\n * Sets a list of {@link PathMapEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of {@link PathMapEnvelope}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setPathMaps(model, pathMapEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[\"\u001eƒ_parent\"] || cache;\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathMapIndex = -1;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathMap(pathMapEnvelope.json, 0, cache, parent, node, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, modelRoot, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    if (cache[\"\u001eƒ_version\"] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setPathMap(pathMap, depth, root, parent, node, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var keys = getKeys(pathMap);\n\n    if (keys && keys.length) {\n\n        var keyIndex = 0;\n        var keyCount = keys.length;\n        var optimizedIndex = optimizedPath.index;\n\n        do {\n            var key = keys[keyIndex];\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n\n            requestedPath.depth = depth;\n\n            var results = setNode(root, parent, node, key, child, branch, false, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n            requestedPath[depth] = key;\n            requestedPath.index = depth;\n\n            var nextNode = results[0];\n            var nextParent = results[1];\n            var nextOptimizedPath = results[2];\n            nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n            if (nextNode) {\n                if (branch) {\n                    setPathMap(child, depth + 1, root, nextParent, nextNode, requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n                } else {\n                    requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                    optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n                }\n            }\n            if (++keyIndex >= keyCount) {\n                break;\n            }\n            optimizedPath.index = optimizedIndex;\n        } while (true);\n    }\n}\n/* eslint-enable */\n\nfunction setReference(value, root, node, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n        var container = node;\n        parent = root;\n\n        node = node[\"\u001eƒ_context\"];\n\n        if (node != null) {\n            parent = node[\"\u001eƒ_parent\"] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n            optimizedPath.index = index;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                var results = setNode(root, parent, node, key, value, branch, true, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n                node = results[0];\n                optimizedPath = results[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return results;\n                }\n                parent = results[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[\"\u001eƒ_context\"] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(root, parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        var results = setReference(value, root, node, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        optimizedPath = results[2];\n        type = node && node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[\"\u001eƒ_key\"];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction getKeys(pathMap) {\n\n    if (!(!pathMap || typeof pathMap !== 'object') && !pathMap.$type) {\n        var keys = [];\n        var itr = 0;\n        if (isArray(pathMap)) {\n            keys[itr++] = 'length';\n        }\n        for (var key in pathMap) {\n            if (isInternalKey(key)) {\n                continue;\n            }\n            keys[itr++] = key;\n        }\n        return keys;\n    }\n\n    return undefined;\n}\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Determined if the key passed in is an internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nmodule.exports = isInternalKey;\n\nvar isInternal = __webpack_require__(32);\n\nfunction isInternalKey(key) {\n  return key && key[0] === '$' || isInternal(key);\n}\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\nmodule.exports = flatBufferToPaths;\n\nfunction flatBufferToPaths(seed, paths, path) {\n\n    path = path || [];\n    paths = paths || [];\n\n    if (!seed) {\n        return paths;\n    }\n\n    var leaf = [];\n    var keys = seed['$keys'];\n    var keysLen = keys.length;\n    var keysIndex = -1,\n        key,\n        len;\n\n    while (++keysIndex < keysLen) {\n\n        var next = seed[keysIndex];\n        var keyset = keys[keysIndex];\n\n        if (!next || typeof next !== 'object') {\n            leaf.push(keyset);\n        } else {\n            flatBufferToPaths(next, paths, path.concat([keyset]));\n        }\n    }\n\n    if (leaf.length === 1) {\n        paths.push(path.concat(leaf));\n    } else if (leaf.length > 1) {\n        paths.push(path.concat([leaf]));\n    }\n\n    return paths;\n}\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\nmodule.exports = getHashCode;\n\nfunction getHashCode(str) {\n    var hash = 5381,\n        i = str.length;\n    while (i) {\n        hash = hash * 33 ^ str.charCodeAt(--i);\n    }\n    // JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n    // integers. Since we want the results to be always positive, convert the\n    // signed int to an unsigned by doing an unsigned bitshift.\n    return hash >>> 0;\n}\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\nvar isArray = Array.isArray;\n\n/**\n * Takes in a keySet and a note attempts to iterate over it.\n * If the value is a primitive, the key will be returned and the note will\n * be marked done\n * If the value is an object, then each value of the range will be returned\n * and when finished the note will be marked done.\n * If the value is an array, each value will be iterated over, if any of the\n * inner values are ranges, those will be iterated over.  When fully done,\n * the note will be marked done.\n *\n * @param {Object|Array|String|Number} keySet -\n * @param {Object} note - The non filled note\n * @returns {String|Number|undefined} - The current iteration value.\n * If undefined, then the keySet is empty\n * @public\n */\nmodule.exports = function iterateKeySet(keySet, note) {\n    if (note.isArray === undefined) {\n        initializeNote(keySet, note);\n    }\n\n    // Array iteration\n    if (note.isArray) {\n        var nextValue;\n\n        // Cycle through the array and pluck out the next value.\n        do {\n            if (note.loaded && note.rangeOffset > note.to) {\n                ++note.arrayOffset;\n                note.loaded = false;\n            }\n\n            var idx = note.arrayOffset,\n                length = keySet.length;\n            if (idx >= length) {\n                note.done = true;\n                break;\n            }\n\n            var el = keySet[note.arrayOffset];\n            var type = typeof el;\n\n            // Inner range iteration.\n            if (type === 'object') {\n                if (!note.loaded) {\n                    initializeRange(el, note);\n                }\n\n                // Empty to/from\n                if (note.empty) {\n                    continue;\n                }\n\n                nextValue = note.rangeOffset++;\n            }\n\n            // Primitive iteration in array.\n            else {\n                    ++note.arrayOffset;\n                    nextValue = el;\n                }\n        } while (nextValue === undefined);\n\n        return nextValue;\n    }\n\n    // Range iteration\n    else if (note.isObject) {\n            if (!note.loaded) {\n                initializeRange(keySet, note);\n            }\n            if (note.rangeOffset > note.to) {\n                note.done = true;\n                return undefined;\n            }\n\n            return note.rangeOffset++;\n        }\n\n        // Primitive value\n        else {\n                note.done = true;\n                return keySet;\n            }\n};\n\nfunction initializeRange(key, memo) {\n    var from = memo.from = key.from || 0;\n    var to = memo.to = key.to || typeof key.length === 'number' && memo.from + key.length - 1 || 0;\n    memo.rangeOffset = memo.from;\n    memo.loaded = true;\n    if (from > to) {\n        memo.empty = true;\n    }\n}\n\nfunction initializeNote(key, note) {\n    note.done = false;\n    var isObject = note.isObject = !!(key && typeof key === 'object');\n    note.isArray = isObject && isArray(key);\n    note.arrayOffset = 0;\n}\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(40);\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(43);\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\nmodule.exports = inlineJSONGraphValue;\n\n/* eslint-disable no-constant-condition */\nfunction inlineJSONGraphValue(node, path, length, seed, branch) {\n\n    var key,\n        depth = 0,\n        prev,\n        curr = seed.jsonGraph;\n\n    if (!curr) {\n        seed.jsonGraph = curr = {};\n    }\n\n    do {\n        prev = curr;\n        key = path[depth++];\n        if (depth >= length) {\n            curr = prev[key] = branch !== true ? node : prev[key] || {};\n            break;\n        }\n        curr = prev[key] || (prev[key] = {});\n    } while (true);\n\n    return curr;\n}\n/* eslint-enable */\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\nvar isArray = Array.isArray;\n\nmodule.exports = onMissing;\n\n/* eslint-disable no-constant-condition */\nfunction onMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, reportMaterialized, json, branchSelector, boxValues, onMaterialize, modelRoot) {\n\n    if (!reportMissing && !reportMaterialized) {\n        return;\n    }\n\n    var keyset,\n        restPathIndex = -1,\n        restPathCount = requestedLength - depth,\n        restPath = restPathCount && new Array(restPathCount) || undefined;\n\n    while (++restPathIndex < restPathCount) {\n        keyset = path[restPathIndex + depth];\n        if (isEmptyKeySet(keyset)) {\n            return;\n        }\n        restPath[restPathIndex] = keyset;\n    }\n\n    var index, count, mPath;\n    var lastKeyIsNull = keyset === null;\n    var isRequestedPath = reportMissing;\n    var missDepth, missTotal, missingPath, missingPaths;\n\n    if (!reportMissing) {\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } else {\n        missDepth = depth;\n        missTotal = requestedLength;\n        missingPath = requestedPath;\n        missingPaths = results.requested || (results.requested = []);\n    }\n\n    do {\n        if (restPathCount < requestedLength || !isRequestedPath) {\n            index = -1;\n            count = missDepth;\n            mPath = new Array(missTotal);\n            while (++index < count) {\n                mPath[index] = missingPath[index];\n            }\n            restPathIndex = -1;\n            while (index < missTotal) {\n                mPath[index++] = restPath[++restPathIndex];\n            }\n        }\n\n        // break after inserting both requested and optimized missing paths\n        if (isRequestedPath = !isRequestedPath) {\n            if (reportMissing) {\n                missingPaths[missingPaths.length] = mPath;\n            }\n            break;\n        }\n\n        missingPaths[missingPaths.length] = mPath || restPath;\n\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missingPaths = results.missing || (results.missing = []);\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } while (true);\n\n    if (reportMaterialized) {\n        return onMaterialize(json, mPath, missDepth, missTotal, branchSelector, boxValues, modelRoot);\n    }\n}\n/* eslint-enable */\n\nfunction isEmptyKeySet(keyset) {\n\n    // false if the keyset is a primitive\n    if ('object' !== typeof keyset) {\n        return false;\n    } else if (keyset === null) {\n        return false;\n    }\n\n    if (isArray(keyset)) {\n        // return true if the keyset is an empty array\n        return keyset.length === 0;\n    }\n\n    var rangeEnd = keyset.to,\n        from = keyset.from || 0;\n    if ('number' !== typeof rangeEnd) {\n        rangeEnd = from + (keyset.length || 0);\n    }\n\n    // false if trying to request incorrect or empty ranges\n    // e.g. { from: 10, to: 0 } or { from: 5, length: 0 }\n    return from >= rangeEnd;\n}\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(2);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar lruPromote = __webpack_require__(13);\nvar getSize = __webpack_require__(9);\nvar createHardlink = __webpack_require__(8);\nvar getBoundCacheNode = __webpack_require__(17);\nvar updateNodeAncestors = __webpack_require__(11);\nvar iterateKeySet = __webpack_require__(23);\n\n/**\n * Invalidates a list of Paths in a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathValues.\n * @param {Array.<PathValue>} paths - the PathValues to set.\n */\n\nmodule.exports = invalidatePathSets;\n\nfunction invalidatePathSets(model, paths, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n\n    if (!node) {\n        return false;\n    }\n\n    var pathIndex = -1;\n    var pathCount = paths.length;\n    var parent = node[\"\u001eƒ_parent\"] || cache;\n\n    while (++pathIndex < pathCount) {\n\n        var path = paths[pathIndex];\n\n        invalidatePathSet(path, 0, cache, parent, node, version, expired, lru, expireImmediate);\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    if (cache[\"\u001eƒ_version\"] === version) {\n        modelRoot.version = version;\n        return true;\n    }\n\n    return false;\n}\n\nfunction invalidatePathSet(path, depth, root, parent, node, version, expired, lru, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n\n    do {\n        arr = invalidateNode(root, parent, node, key, branch, false, version, expired, lru, expireImmediate);\n        var nextNode = arr[0];\n        var nextParent = arr[1];\n        if (nextNode) {\n            if (branch) {\n                invalidatePathSet(path, depth + 1, root, nextParent, nextNode, version, expired, lru, expireImmediate);\n            } else {\n                updateNodeAncestors(nextNode, getSize(nextNode), lru, version);\n            }\n        }\n        key = iterateKeySet(keySet, note);\n    } while (!note.done);\n}\n\nfunction invalidateReference(root, node, version, expired, lru, expireImmediate) {\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return arr;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[\"\u001eƒ_context\"];\n\n    if (node != null) {\n        parent = node[\"\u001eƒ_parent\"] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            arr = invalidateNode(root, parent, node, key, branch, true, version, expired, lru, expireImmediate);\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return arr;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[\"\u001eƒ_context\"] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\nfunction invalidateNode(root, parent, node, key, branch, reference, version, expired, lru, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        arr = invalidateReference(root, node, version, expired, lru, expireImmediate);\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return arr;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new Error('`null` is not allowed in branch key positions.');\n            } else if (node) {\n                key = node[\"\u001eƒ_key\"];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar lruSplice = __webpack_require__(54);\nvar isInternalKey = __webpack_require__(20);\nvar unlinkBackReferences = __webpack_require__(84);\nvar unlinkForwardReference = __webpack_require__(85);\nvar updateBackReferenceVersions = __webpack_require__(31);\n\nmodule.exports = removeNodeAndDescendants;\n\nfunction removeNodeAndDescendants(node, parent, key, lru, version) {\n    if (!(!node || typeof node !== 'object')) {\n        var type = node.$type;\n        if (type === undefined) {\n            for (var key2 in node) {\n                if (!isInternalKey(key2)) {\n                    removeNodeAndDescendants(node[key2], node, key2, lru, version);\n                }\n            }\n        } else {\n            if (type === \"ref\") {\n                unlinkForwardReference(node);\n            }\n            lruSplice(lru, node);\n        }\n        unlinkBackReferences(updateBackReferenceVersions(node, version));\n        parent[key] = node[\"\u001eƒ_parent\"] = undefined;\n        return true;\n    }\n    return false;\n}\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(3);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar createHardlink = __webpack_require__(8);\nvar getCachePosition = __webpack_require__(10);\nvar NullInPathError = __webpack_require__(3);\nvar iterateKeySet = __webpack_require__(23);\nvar mergeValueOrInsertBranch = __webpack_require__(48);\n\n/**\n * Sets a list of {@link PathValue}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the {@link PathValue}s.\n * @param {Array.<PathValue>} pathValues - the list of {@link PathValue}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setPathValues(model, pathValues, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[\"\u001eƒ_parent\"] || cache;\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathValueIndex = -1;\n    var pathValueCount = pathValues.length;\n\n    while (++pathValueIndex < pathValueCount) {\n\n        var pathValue = pathValues[pathValueIndex];\n        var path = pathValue.path;\n        var value = pathValue.value;\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathSet(value, path, 0, cache, parent, node, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, modelRoot, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    if (cache[\"\u001eƒ_version\"] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setPathSet(value, path, depth, root, parent, node, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var results = setNode(root, parent, node, key, value, branch, false, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = results[0];\n        var nextParent = results[1];\n        var nextOptimizedPath = results[2];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setPathSet(value, path, depth + 1, root, nextParent, nextNode, requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(value, root, node, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var container = node;\n        parent = root;\n\n        node = node[\"\u001eƒ_context\"];\n\n        if (node != null) {\n            parent = node[\"\u001eƒ_parent\"] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                optimizedPath.index = index;\n\n                var results = setNode(root, parent, node, key, value, branch, true, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n                node = results[0];\n                optimizedPath = results[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return results;\n                }\n                parent = results[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[\"\u001eƒ_context\"] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(root, parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        var results = setReference(value, root, node, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        optimizedPath = results[2];\n        type = node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[\"\u001eƒ_key\"];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = updateBackReferenceVersions;\n\nfunction updateBackReferenceVersions(nodeArg, version) {\n    var node = nodeArg,\n        stack = [],\n        count = 0,\n        ref,\n        i,\n        n;\n    do {\n        i = -1;\n        ref = node[\"\u001eƒ_parent\"];\n        node[\"\u001eƒ_version\"] = version;\n        n = node[\"\u001eƒ_refs_length\"] || 0;\n        do {\n            if (ref && ref[\"\u001eƒ_version\"] !== version) {\n                stack[count++] = ref;\n            }\n            if (++i < n) {\n                ref = node[\"\u001eƒ_ref\" + i];\n                continue;\n            }\n            break;\n        } while (true);\n    } while (node = stack[--count]);\n    return nodeArg;\n}\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Determined if the key passed in is an f_ internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nvar f_ = __webpack_require__(92);\nvar regexp = new RegExp('^' + f_, 'i', 'g');\n\nmodule.exports = regexp.test.bind(regexp);\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(5);\nmodule.exports = function getTimestamp(node) {\n    return isObject(node) && node.$timestamp || undefined;\n};\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\nmodule.exports = 0;\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() { return this; })();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar toPaths = __webpack_require__(39);\nvar toCollapseMap = __webpack_require__(37);\nvar toCollapseTrees = __webpack_require__(38);\n\nmodule.exports = function collapse(paths) {\n    return toPaths(toCollapseTrees(toCollapseMap(paths)));\n};\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar flatBufferToPaths = __webpack_require__(21);\n\nmodule.exports = toCollapseMap;\n\nfunction toCollapseMap(paths, collapseMap) {\n    if (!paths) {\n        return collapseMap;\n    } else if (!isArray(paths)) {\n        if (isArray(paths.$keys)) {\n            paths = flatBufferToPaths(paths);\n        }\n    }\n    return paths.reduce(function (acc, path) {\n        var len = path.length;\n        if (!acc[len]) {\n            acc[len] = [];\n        }\n        acc[len].push(path);\n        return acc;\n    }, collapseMap || {});\n}\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar toTree = __webpack_require__(65);\n\nmodule.exports = toCollapseTrees;\n\nfunction toCollapseTrees(collapseMap, collapseTrees) {\n    return Object.keys(collapseMap).reduce(function (collapseTrees, collapseKey) {\n        collapseTrees[collapseKey] = toTree(collapseMap[collapseKey], collapseTrees[collapseKey]);\n        return collapseTrees;\n    }, collapseTrees || {});\n}\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar typeOfObject = 'object';\nvar typeOfString = 'string';\nvar typeOfNumber = 'number';\nvar MAX_SAFE_INTEGER = 9007199254740991; // Number.MAX_SAFE_INTEGER in es6\nvar MAX_SAFE_INTEGER_DIGITS = 16; // String(Number.MAX_SAFE_INTEGER).length\nvar MIN_SAFE_INTEGER_DIGITS = 17; // String(Number.MIN_SAFE_INTEGER).length (including sign)\nvar abs = Math.abs;\nvar safeNumberRegEx = /^(0|(\\-?[1-9][0-9]*))$/;\nvar getHashCode = __webpack_require__(22);\nvar materializedAtom = __webpack_require__(6);\n\n/* jshint forin: false */\nmodule.exports = function toPaths(lengths) {\n    var pathmap;\n    var allPaths = [];\n    var allPathsLength = 0;\n    for (var length in lengths) {\n        if (isSafeNumber(length) && isObject(pathmap = lengths[length])) {\n            var paths = collapsePathMap(pathmap, 0, parseInt(length, 10)).sets;\n            var pathsIndex = -1;\n            var pathsCount = paths.length;\n            while (++pathsIndex < pathsCount) {\n                allPaths[allPathsLength++] = collapsePathSetIndexes(paths[pathsIndex]);\n            }\n        }\n    }\n    return allPaths;\n};\n\nfunction isObject(value) {\n    return value !== null && typeof value === typeOfObject;\n}\n\nfunction collapsePathMap(pathmap, depth, length) {\n\n    var key;\n    var subs = Object.create(null);\n    var code = '' + getHashCode('' + depth);\n\n    var codes = [];\n    var codesIndex = -1;\n    var codesCount = 0;\n\n    var pathsets = [];\n    var pathsetsCount = 0;\n\n    var subPath, subCode, subKeys, subKeysIndex, subKeysCount, subSets, subSetsIndex, subSetsCount, pathset, pathsetIndex, pathsetCount, firstSubKey, pathsetClone;\n\n    subKeys = [];\n    subKeysIndex = -1;\n\n    if (depth < length - 1) {\n\n        subKeysCount = getSortedKeys(pathmap, subKeys);\n\n        while (++subKeysIndex < subKeysCount) {\n            key = subKeys[subKeysIndex];\n            subPath = collapsePathMap(pathmap[key], depth + 1, length);\n            subCode = subPath.code;\n            if (subs[subCode]) {\n                subPath = subs[subCode];\n            } else {\n                codes[codesCount++] = subCode;\n                subPath = subs[subCode] = {\n                    keys: [],\n                    sets: subPath.sets\n                };\n            }\n            code = '' + getHashCode(code + key + subCode);\n\n            isSafeNumber(key) && subPath.keys.push(parseInt(key, 10)) || subPath.keys.push(key);\n        }\n\n        while (++codesIndex < codesCount) {\n\n            key = codes[codesIndex];\n            subPath = subs[key];\n            subKeys = subPath.keys;\n            subKeysCount = subKeys.length;\n\n            if (subKeysCount > 0) {\n\n                subSets = subPath.sets;\n                subSetsIndex = -1;\n                subSetsCount = subSets.length;\n                firstSubKey = subKeys[0];\n\n                while (++subSetsIndex < subSetsCount) {\n\n                    pathset = subSets[subSetsIndex];\n                    pathsetIndex = -1;\n                    pathsetCount = pathset.length;\n                    pathsetClone = new Array(pathsetCount + 1);\n                    pathsetClone[0] = subKeysCount > 1 && subKeys || firstSubKey;\n\n                    while (++pathsetIndex < pathsetCount) {\n                        pathsetClone[pathsetIndex + 1] = pathset[pathsetIndex];\n                    }\n\n                    pathsets[pathsetsCount++] = pathsetClone;\n                }\n            }\n        }\n    } else {\n        subKeysCount = getSortedKeys(pathmap, subKeys);\n        if (subKeysCount > 1) {\n            pathsets[pathsetsCount++] = [subKeys];\n        } else {\n            pathsets[pathsetsCount++] = subKeys;\n        }\n        while (++subKeysIndex < subKeysCount) {\n            code = '' + getHashCode(code + subKeys[subKeysIndex]);\n        }\n    }\n\n    return {\n        code: code,\n        sets: pathsets\n    };\n}\n\nfunction collapsePathSetIndexes(pathset) {\n\n    var keysetIndex = -1;\n    var keysetCount = pathset.length;\n\n    while (++keysetIndex < keysetCount) {\n        var keyset = pathset[keysetIndex];\n        if (isArray(keyset)) {\n            pathset[keysetIndex] = collapseIndex(keyset);\n        }\n    }\n\n    return pathset;\n}\n\n/**\n * Collapse range indexers, e.g. when there is a continuous\n * range in an array, turn it into an object instead:\n *\n * [1,2,3,4,5,6] => {'from':1, 'to':6}\n *\n * @private\n */\nfunction collapseIndex(keyset) {\n\n    // Do we need to dedupe an indexer keyset if they're duplicate consecutive integers?\n    // var hash = {};\n    var keyIndex = -1;\n    var keyCount = keyset.length - 1;\n    var isSparseRange = keyCount > 0;\n\n    while (++keyIndex <= keyCount) {\n\n        var key = keyset[keyIndex];\n\n        if (!isSafeNumber(key) /* || hash[key] === true*/) {\n                isSparseRange = false;\n                break;\n            }\n        // hash[key] = true;\n        // Cast number indexes to integers.\n        keyset[keyIndex] = parseInt(key, 10);\n    }\n\n    if (isSparseRange === true) {\n\n        keyset.sort(sortListAscending);\n\n        var from = keyset[0];\n        var to = keyset[keyCount];\n\n        // If we re-introduce deduped integer indexers, change this comparson to '==='.\n        if (to - from <= keyCount) {\n            return { from: from, to: to };\n        }\n    }\n\n    return keyset;\n}\n\nfunction sortListAscending(a, b) {\n    return a - b;\n}\n\n/* jshint forin: false */\nfunction getSortedKeys(map, keys, sort) {\n    var len = 0;\n    if (map === materializedAtom) {\n        keys[len++] = null;\n    } else {\n        for (var key in map) {\n            keys[len++] = key;\n        }\n        if (len > 1) {\n            keys.sort(sort);\n        }\n    }\n    return len;\n}\n\n/**\n * Return true if argument is a number or can be cast to a number which\n * roundtrips to the same string.\n * @private\n */\nfunction isSafeNumber(val) {\n    var num = val;\n    var type = typeof val;\n    if (type === typeOfString) {\n        var length = val.length;\n        // Number.MIN_SAFE_INTEGER is 17 digits including the sign.\n        // Anything longer cannot be safe.\n        if (length === 0 || length > MIN_SAFE_INTEGER_DIGITS) {\n            return false;\n        }\n        if (!safeNumberRegEx.test(val)) {\n            return false;\n        }\n        // Number.MAX_SAFE_INTEGER is 16 digits.\n        // Anything shorter must be safe.\n        if (length < MAX_SAFE_INTEGER_DIGITS) {\n            return true;\n        }\n        num = +val;\n    } else if (type !== typeOfNumber) {\n        return false;\n    }\n    // Number.isSafeInteger(num) in es6.\n    return num % 1 === 0 && abs(num) <= MAX_SAFE_INTEGER;\n}\n\n// export for testing\nmodule.exports._isSafeNumber = isSafeNumber;\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar walkPathAndBuildOutput = __webpack_require__(73);\nvar walkFlatBufferAndBuildOutput = __webpack_require__(72);\nvar getBoundCacheNode = __webpack_require__(17);\nvar InvalidModelError = __webpack_require__(90);\nvar toFlatBuffer = __webpack_require__(64);\nvar computeFlatBufferHash = __webpack_require__(62);\n\nmodule.exports = getJSON;\n\nfunction getJSON(model, paths, seed, progressive, expireImmediate) {\n\n    var node,\n        referenceContainer,\n        boundPath = model._path,\n        modelRoot = model._root,\n        cache = modelRoot.cache,\n        requestedPath,\n        requestedLength,\n        optimizedPath,\n        optimizedLength = boundPath && boundPath.length || 0;\n\n    // If the model is bound, get the cache position.\n    if (optimizedLength) {\n        node = getBoundCacheNode(model);\n        // If there was a short, then we 'throw an error' to the outside\n        // calling function which will onError the observer.\n        if (node && node.$type) {\n            return { error: new InvalidModelError(boundPath, boundPath) };\n        }\n        // We need to get the new cache position and copy the bound path.\n        optimizedPath = [];\n        for (var i = 0; i < optimizedLength; ++i) {\n            optimizedPath[i] = boundPath[i];\n        }\n        referenceContainer = model._referenceContainer;\n    } else {\n        node = cache;\n        optimizedPath = [];\n    }\n\n    requestedPath = [];\n\n    var isFlatBuffer = false,\n        json = seed && seed.json,\n        results = { data: seed },\n        boxValues = model._boxed,\n        expired = modelRoot.expired,\n        recycleJSON = model._recycleJSON,\n        hasDataSource = Boolean(model._source),\n        branchSelector = modelRoot.branchSelector,\n        materialized = seed && model._materialized,\n        treatErrorsAsValues = model._treatErrorsAsValues,\n        allowFromWhenceYouCame = model._allowFromWhenceYouCame;\n\n    var arr,\n        path,\n        pathsIndex = 0,\n        pathsCount = paths.length;\n\n    if (pathsCount > 0) {\n        if (recycleJSON) {\n            isFlatBuffer = true;\n            if (pathsCount > 1 || isArray(paths[0])) {\n                paths = [computeFlatBufferHash(toFlatBuffer(paths, {}))];\n            }\n            arr = walkFlatBufferAndBuildOutput(cache, node, json, paths[0], 0, seed, results, requestedPath, optimizedPath, optimizedLength,\n            /* fromReference = */false, referenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n            json = arr[0];\n            arr[0] = undefined;\n            arr[1] = undefined;\n        } else {\n            do {\n                path = paths[pathsIndex];\n                requestedLength = path.length;\n                json = walkPathAndBuildOutput(cache, node, json, path,\n                /* depth = */0, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength,\n                /* fromReference = */false, referenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n            } while (++pathsIndex < pathsCount);\n        }\n    }\n\n    var requested = results.requested;\n\n    results.args = isFlatBuffer && paths || requested;\n\n    if (requested && requested.length) {\n        results.relative = results.args;\n        if (optimizedLength) {\n            var boundRequested = [];\n            for (var i = 0, len = requested.length; i < len; ++i) {\n                boundRequested[i] = boundPath.concat(requested[i]);\n            }\n            results.requested = boundRequested;\n        }\n    }\n\n    if (results.hasValue) {\n        seed.json = json;\n    }\n\n    return results;\n}\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(3);\nvar promote = __webpack_require__(13);\nvar isExpired = __webpack_require__(0);\nvar createHardlink = __webpack_require__(8);\nvar CircularReferenceError = __webpack_require__(52);\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, ref, modelRoot, expireImmediate) {\n\n    promote(modelRoot, ref);\n\n    var context,\n        key,\n        type,\n        depth = 0,\n        node = root,\n        path = ref.value,\n        copy = path,\n        length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[\"\u001eƒ_context\"])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                    throw new CircularReferenceError(path);\n                }\n                // If the node we land on isn't the existing ref context,\n                // create a hard-link between the reference and the node\n                // it points to.\n                else if (node !== context) {\n                        createHardlink(ref, node);\n                    }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === \"ref\") {\n\n                promote(modelRoot, node);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n    arr[2] = ref;\n\n    return arr;\n}\n/* eslint-enable */\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar clone = __webpack_require__(7);\nvar onError = __webpack_require__(71);\n\nmodule.exports = onJSONValue;\n\nfunction onJSONValue(node, type, depth, seed, results, requestedPath, optimizedPath, optimizedLength, fromReference, boxValues, materialized, treatErrorsAsValues) {\n\n    if (\"error\" === type && !treatErrorsAsValues) {\n        return onError(node, depth, results, requestedPath, fromReference, boxValues);\n    }\n\n    results.hasValue = true;\n\n    // boxValues always clones the node\n    return !boxValues ? node.value : clone(node);\n}\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar walkPathAndBuildOutput = __webpack_require__(76);\nvar BoundJSONGraphModelError = __webpack_require__(88);\n\nmodule.exports = getJSONGraph;\n\nfunction getJSONGraph(model, paths, seed, progressive, expireImmediate) {\n\n    var node,\n        cache,\n        boundPath = model._path,\n        modelRoot = model._root,\n        requestedPath,\n        requestedLength,\n        optimizedPath,\n        optimizedLength = boundPath && boundPath.length || 0;\n\n    // If the model is bound, then get that cache position.\n    if (optimizedLength) {\n        // JSONGraph output cannot ever be bound or else it will\n        // throw an error.\n        return { error: new BoundJSONGraphModelError() };\n    } else {\n        optimizedPath = [];\n        cache = node = modelRoot.cache;\n    }\n\n    requestedPath = [];\n\n    var boxValues = model._boxed,\n        expired = modelRoot.expired,\n        materialized = model._materialized,\n        hasDataSource = Boolean(model._source),\n        treatErrorsAsValues = model._treatErrorsAsValues,\n        results = { data: seed },\n        pathsIndex = -1,\n        pathsCount = paths.length;\n\n    while (++pathsIndex < pathsCount) {\n        var path = paths[pathsIndex];\n        requestedLength = path.length;\n        walkPathAndBuildOutput(cache, node, path,\n        /* depth = */0, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength,\n        /* fromReference = */false, modelRoot, expired, expireImmediate, boxValues, materialized, hasDataSource, treatErrorsAsValues);\n    }\n\n    results.args = results.relative = results.requested;\n\n    return results;\n}\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar clone = __webpack_require__(7);\nvar FalcorJSON = __webpack_require__(2);\nvar NullInPathError = __webpack_require__(3);\nvar InvalidKeySetError = __webpack_require__(12);\nvar materializedAtom = __webpack_require__(6);\n\nmodule.exports = onMaterialize;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterialize(json, path, depth, length, branchSelector, boxValues, modelRoot) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (depth === length) {\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta;\n\n    var nextKey,\n        keyset,\n        keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd,\n        keysOrRanges,\n        keysetIndex = -1,\n        keysetLength = 0;\n\n    keyset = path[depth];\n\n    if (!json || typeofObject !== typeof json) {\n        json = {};\n        json.__proto__ = FalcorJSON.prototype;\n        json[\"\u001eƒ_meta\"] = f_meta = {};\n        f_meta[\"version\"] = modelRoot.version;\n        f_meta[\"abs_path\"] = path.slice(0, depth);\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[\"\u001eƒ_meta\"])) {\n        json[\"\u001eƒ_meta\"] = f_meta = {};\n        f_meta[\"version\"] = modelRoot.version;\n        f_meta[\"abs_path\"] = path.slice(0, depth);\n    } else {\n        f_meta[\"version\"] = modelRoot.version;\n        f_meta[\"abs_path\"] = path.slice(0, depth);\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    throw new InvalidKeySetError(path, keysOrRanges);\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                keyset = keysOrRanges[keysetIndex];\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if (typeofNumber !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            // insert the materialized branch\n            json[nextKey] = onMaterialize(json[nextKey], path, nextDepth, length, branchSelector, boxValues, modelRoot);\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar isPathValue = __webpack_require__(103);\nvar isJSONEnvelope = __webpack_require__(57);\nvar isJSONGraphEnvelope = __webpack_require__(58);\n\nmodule.exports = groupCacheArguments;\n\nfunction groupCacheArguments(args) {\n\n    var groups = [];\n    var argIndex = -1;\n    var argCount = args.length;\n    var group, groupType, arg, argType;\n\n    while (++argIndex < argCount) {\n        arg = args[argIndex];\n        if (isArray(arg)) {\n            arg = { path: arg };\n            argType = 'PathValues';\n        } else if (isPathValue(arg)) {\n            argType = 'PathValues';\n        } else if (isJSONGraphEnvelope(arg)) {\n            argType = 'JSONGraphs';\n        } else if (isJSONEnvelope(arg)) {\n            argType = 'PathMaps';\n        }\n\n        if (groupType !== argType) {\n            groupType = argType;\n            groups.push(group = {\n                arguments: [],\n                inputType: argType\n            });\n        }\n\n        group.arguments.push(arg);\n    }\n\n    return groups;\n}\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function insertNode(node, parent, key, version, optimizedPath) {\n    node[\"\u001eƒ_key\"] = key;\n    node[\"\u001eƒ_parent\"] = parent;\n\n    if (version !== undefined) {\n        node[\"\u001eƒ_version\"] = version;\n    }\n    if (!node[\"\u001eƒ_abs_path\"]) {\n        node[\"\u001eƒ_abs_path\"] = optimizedPath.slice(0, optimizedPath.index).concat(key);\n    }\n\n    parent[key] = node;\n\n    return node;\n};\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(2);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar lruPromote = __webpack_require__(13);\nvar getSize = __webpack_require__(9);\nvar createHardlink = __webpack_require__(8);\nvar getBoundCacheNode = __webpack_require__(17);\nvar isInternalKey = __webpack_require__(20);\nvar updateNodeAncestors = __webpack_require__(11);\n\n/**\n * Sets a list of PathMaps into a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of @PathMapEnvelopes to set.\n */\n\nmodule.exports = invalidatePathMaps;\n\nfunction invalidatePathMaps(model, pathMapEnvelopes, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var comparator = modelRoot._comparator;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n\n    if (!node) {\n        return false;\n    }\n\n    var pathMapIndex = -1;\n    var parent = node[\"\u001eƒ_parent\"] || cache;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n\n        invalidatePathMap(pathMapEnvelope.json, 0, cache, parent, node, version, expired, lru, comparator, expireImmediate);\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    if (cache[\"\u001eƒ_version\"] === version) {\n        modelRoot.version = version;\n        return true;\n    }\n\n    return false;\n}\n\nfunction invalidatePathMap(pathMap, depth, root, parent, node, version, expired, lru, comparator, expireImmediate) {\n\n    if (!pathMap || typeof pathMap !== 'object' || pathMap.$type) {\n        return;\n    }\n\n    for (var key in pathMap) {\n        if (!isInternalKey(key)) {\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n            arr = invalidateNode(root, parent, node, key, child, branch, false, version, expired, lru, comparator, expireImmediate);\n            var nextNode = arr[0];\n            var nextParent = arr[1];\n            if (nextNode) {\n                if (branch) {\n                    invalidatePathMap(child, depth + 1, root, nextParent, nextNode, version, expired, lru, comparator, expireImmediate);\n                } else {\n                    updateNodeAncestors(nextNode, getSize(nextNode), lru, version);\n                }\n            }\n        }\n    }\n}\n\nfunction invalidateReference(value, root, node, version, expired, lru, comparator, expireImmediate) {\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return arr;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[\"\u001eƒ_context\"];\n\n    if (node != null) {\n        parent = node[\"\u001eƒ_parent\"] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            arr = invalidateNode(root, parent, node, key, value, branch, true, version, expired, lru, comparator, expireImmediate);\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return arr;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[\"\u001eƒ_context\"] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\nfunction invalidateNode(root, parent, node, key, value, branch, reference, version, expired, lru, comparator, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        arr = invalidateReference(value, root, node, version, expired, lru, comparator, expireImmediate);\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return arr;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new Error('`null` is not allowed in branch key positions.');\n            } else if (node) {\n                key = node[\"\u001eƒ_key\"];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar $now = __webpack_require__(34);\nvar getType = __webpack_require__(102);\nvar getSize = __webpack_require__(9);\nvar getTimestamp = __webpack_require__(33);\n\nvar wrapNode = __webpack_require__(51);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar insertNode = __webpack_require__(46);\nvar replaceNode = __webpack_require__(50);\nvar reconstructPath = __webpack_require__(49);\nvar updateNodeAncestors = __webpack_require__(11);\nvar removeNodeAndDescendants = __webpack_require__(29);\n\nmodule.exports = function mergeValueOrInsertBranch(parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var cType = getType(node, reference);\n\n    if (branch || reference) {\n        if (cType && isExpired(node,\n        /* expireImmediate:\n         * force true so the node is marked as\n         * expired but keep using it for the merge if it expires immediately\n         */\n        true)) {\n            expireNode(node, expired, lru);\n            cType = node.$expires === $now ? cType : 'expired';\n        }\n        if (cType && cType !== \"ref\" || !node || typeof node !== 'object') {\n            node = replaceNode(node, {}, parent, key, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    } else {\n        var message = value;\n        var isDistinct = true;\n        var mType = getType(message);\n\n        // If both the cache and message are primitives,\n        // insert the message into the cache.\n        if (!cType && !mType) {\n            isDistinct = true;\n        }\n        // Compare the current cache value with the new value. If either of\n        // them don't have a timestamp, or the message's timestamp is newer,\n        // replace the cache value with the message value. If a comparator\n        // is specified, the comparator takes precedence over timestamps.\n        else if (comparator) {\n                isDistinct = !(comparator.length < 3 ? comparator(node, message) : comparator(node, message, optimizedPath.slice(0, optimizedPath.index)));\n            } else {\n                // Comparing either Number or undefined to undefined always results in false.\n                isDistinct = getTimestamp(message) < getTimestamp(node) === false;\n            }\n\n        if (isDistinct) {\n\n            if (errorSelector && mType === \"error\") {\n                message = errorSelector(reconstructPath(requestedPath, key), message);\n            }\n\n            var sizeOffset = getSize(node) - getSize(message = wrapNode(message, mType, mType ? message.value : message));\n\n            node = replaceNode(node, message, parent, key, lru, version);\n            parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    }\n\n    return node;\n};\n\n/***/ },\n/* 49 */\n/***/ function(module, exports) {\n\n/**\n * Reconstructs the path for the current key, from currentPath (requestedPath)\n * state maintained during set/merge walk operations.\n *\n * During the walk, since the requestedPath array is updated after we attempt to\n * merge/insert nodes during a walk (it reflects the inserted node's parent branch)\n * we need to reconstitute a path from it.\n *\n * @param  {Array} currentPath The current requestedPath state, during the walk\n * @param  {String} key        The current key value, during the walk\n * @return {Array} A new array, with the path which represents the node we're about\n * to insert\n */\nmodule.exports = function reconstructPath(currentPath, key) {\n\n  var path = currentPath.slice(0, currentPath.depth);\n  path[path.length] = key;\n\n  return path;\n};\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar transferBackReferences = __webpack_require__(83);\nvar removeNodeAndDescendants = __webpack_require__(29);\nvar updateBackReferenceVersions = __webpack_require__(31);\n\nmodule.exports = function replaceNode(node, replacement, parent, key, lru, version) {\n    if (node === replacement) {\n        return node;\n    } else if (!(!node || typeof node !== 'object')) {\n        transferBackReferences(node, replacement);\n        removeNodeAndDescendants(node, parent, key, lru);\n        updateBackReferenceVersions(replacement, version);\n    }\n\n    parent[key] = replacement;\n    return replacement;\n};\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar now = __webpack_require__(59);\nvar clone = __webpack_require__(100);\nvar getSize = __webpack_require__(9);\nvar getExpires = __webpack_require__(101);\nvar expiresNow = __webpack_require__(34);\n\nvar atomSize = 50;\n\nmodule.exports = function wrapNode(nodeArg, typeArg, value) {\n\n    var size = 0;\n    var node = nodeArg;\n    var type = typeArg;\n\n    if (type) {\n        var modelCreated = node[\"\u001eƒ_wrapped_value\"];\n        node = clone(node);\n        size = getSize(node);\n        node.$type = type;\n        node[\"\u001eƒ_prev\"] = undefined;\n        node[\"\u001eƒ_next\"] = undefined;\n        node[\"\u001eƒ_wrapped_value\"] = modelCreated || false;\n    } else {\n        node = { $type: \"atom\", value: value };\n        node[\"\u001eƒ_prev\"] = undefined;\n        node[\"\u001eƒ_next\"] = undefined;\n        node[\"\u001eƒ_wrapped_value\"] = true;\n    }\n\n    if (value == null) {\n        size = atomSize + 1;\n    } else if (size == null || size <= 0) {\n        switch (typeof value) {\n            case 'object':\n                if (isArray(value)) {\n                    size = atomSize + value.length;\n                } else {\n                    size = atomSize + 1;\n                }\n                break;\n            case 'string':\n                size = atomSize + value.length;\n                break;\n            default:\n                size = atomSize + 1;\n                break;\n        }\n    }\n\n    var expires = getExpires(node);\n\n    if (typeof expires === 'number' && expires < expiresNow) {\n        node.$expires = now() + expires * -1;\n    }\n\n    node.$size = size;\n\n    return node;\n};\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\n\nmodule.exports = createErrorClass('CircularReferenceError', function (referencePath) {\n    this.message = 'Encountered circular reference ' + JSON.stringify(referencePath);\n});\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\nvar MESSAGE = 'An exception was thrown when making a request';\n\n/**\n * InvalidSourceError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidSourceError', function (error) {\n  this.message = MESSAGE + ':\\n\\t' + error;\n});\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function lruSplice(root, object) {\n\n    // Its in the cache.  Splice out.\n    var prev = object[\"\u001eƒ_prev\"];\n    var next = object[\"\u001eƒ_next\"];\n    if (next) {\n        next[\"\u001eƒ_prev\"] = prev;\n    }\n    if (prev) {\n        prev[\"\u001eƒ_next\"] = next;\n    }\n    object[\"\u001eƒ_prev\"] = object[\"\u001eƒ_next\"] = undefined;\n\n    if (object === root[\"\u001eƒ_head\"]) {\n        root[\"\u001eƒ_head\"] = next;\n    }\n    if (object === root[\"\u001eƒ_tail\"]) {\n        root[\"\u001eƒ_tail\"] = prev;\n    }\n};\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var Subscriber = __webpack_require__(14);\nvar Subscription = __webpack_require__(15);\nvar $$observable = __webpack_require__(104).default;\n\nmodule.exports = Source;\n\nfunction Source(subscribe) {\n    if (!subscribe) {\n        return;\n    }\n    switch (typeof subscribe) {\n        case 'object':\n            this.source = subscribe;\n            break;\n        case 'function':\n            this.source = { subscribe: subscribe };\n            break;\n    }\n}\n\nSource.prototype[$$observable] = function () {\n    return this;\n};\n\nSource.prototype.operator = function (destination) {\n    return this.subscribe(destination);\n};\n\n// Unused\n// Source.prototype.lift = function(operator, source) {\n//     source = new Source(source || this);\n//     source.operator = operator;\n//     source._promise = this._promise;\n//     return source;\n// }\n\nSource.prototype.subscribe = function (destination, x, y) {\n    return new Subscription([this.operator.call(this.source, !(destination instanceof Subscriber) ? new Subscriber(destination, x, y) : destination)]);\n};\n\nSource.prototype.then = function then(onNext, onError) {\n    /* global Promise */\n    var source = this;\n    if (!this._promise) {\n        this._promise = new global['Promise'](function (resolve, reject) {\n            var values = [],\n                rejected = false;\n            source.subscribe({\n                next: function (value) {\n                    values[values.length] = value;\n                },\n                error: function (errors) {\n                    (rejected = true) && reject(errors);\n                },\n                complete: function () {\n                    !rejected && resolve(values.length <= 1 ? values[0] : values);\n                }\n            });\n        });\n    }\n    return this._promise.then(onNext, onError);\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(35)))\n\n/***/ },\n/* 56 */\n/***/ function(module, exports) {\n\nvar empty = {\n    dispose: function () {},\n    unsubscribe: function () {}\n};\n\nfunction ImmediateScheduler() {}\n\nImmediateScheduler.prototype.schedule = function schedule(action) {\n    action();\n    return empty;\n};\n\nmodule.exports = ImmediateScheduler;\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(5);\n\nmodule.exports = function isJSONEnvelope(envelope) {\n    return isObject(envelope) && 'json' in envelope;\n};\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar isObject = __webpack_require__(5);\n\nmodule.exports = function isJSONGraphEnvelope(envelope) {\n    return isObject(envelope) && isArray(envelope.paths) && (isObject(envelope.jsonGraph) || isObject(envelope.jsong) || isObject(envelope.json) || isObject(envelope.values) || isObject(envelope.value));\n};\n\n/***/ },\n/* 59 */\n/***/ function(module, exports) {\n\nmodule.exports = Date.now;\n\n/***/ },\n/* 60 */\n/***/ function(module, exports) {\n\nmodule.exports = 1;\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Model = __webpack_require__(66);\nvar FalcorJSON = __webpack_require__(2);\n\nfunction falcor(opts) {\n    if (!(this instanceof Model)) {\n        return new Model(opts);\n    }\n    Model.call(this, opts);\n}\n\nfalcor.prototype = Object.create(Model.prototype);\n\nfalcor['Model'] = Model;\nfalcor['FalcorJSON'] = FalcorJSON;\nfalcor['toProps'] = FalcorJSON.prototype.toProps;\n\nmodule.exports = falcor;\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar getHashCode = __webpack_require__(22);\n\nmodule.exports = computeFlatBufferHash;\n\nfunction computeFlatBufferHash(seed) {\n\n    if (seed === undefined) {\n        return undefined;\n    }\n\n    var code = '';\n    var keys = seed['$keys'];\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    while (++keysIndex < keysLength) {\n\n        var key = keys[keysIndex];\n\n        if (key === null) {\n            code = '' + getHashCode('' + code + 'null');\n            continue;\n        } else if (typeof key === 'object') {\n            key = '[' + key.from + '..' + (key.from + key.length - 1) + ']';\n        }\n\n        var next = computeFlatBufferHash(seed[keysIndex]);\n        if (next === undefined) {\n            code = '' + getHashCode('' + code + key);\n        } else {\n            code = '' + getHashCode('' + code + key + next['$code']);\n        }\n    }\n\n    seed['$code'] = code;\n\n    return seed;\n}\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar materializedAtom = __webpack_require__(6);\n\nmodule.exports = hasIntersection;\n\n/**\n * Tests to see if the intersection should be stripped from the\n * total paths.  The only way this happens currently is if the entirety\n * of the path is contained in the tree.\n * @private\n */\n\nfunction hasIntersection(tree, path, depth, length) {\n\n    if (depth === length) {\n        return true;\n    }\n\n    var intersects = true;\n    var keyset,\n        keysetIndex = -1,\n        keysetLength = 0;\n    var next,\n        nextKey,\n        nextDepth = depth + 1,\n        keyIsRange,\n        rangeEnd,\n        keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return tree === materializedAtom;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    break iteratingKeyset;\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                keyset = keysOrRanges[keysetIndex];\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if ('number' !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        do {\n            if (nextDepth === length) {\n                if (tree[nextKey] !== null) {\n                    return false;\n                }\n            } else {\n                next = tree[nextKey];\n                if (next === null || next === undefined) {\n                    return false;\n                } else if (hasIntersection(next, path, nextDepth, length) === false) {\n                    return false;\n                }\n            }\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return true;\n}\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar nullBuffer = { '$keys': [null], '$keysMap': { 'null': 0 } };\nvar flatBufferToPaths = __webpack_require__(21);\n\nmodule.exports = toFlatBuffer;\n\nfunction toFlatBuffer(paths, seed) {\n    return paths.reduce(function (seed, path) {\n        if (isArray(path)) {\n            return pathToFlatBuffer(seed, path, 0, path.length);\n        } else if (isArray(path.$keys)) {\n            return toFlatBuffer(flatBufferToPaths(path), seed);\n        }\n        return seed;\n    }, seed || {});\n}\n\nfunction pathToFlatBuffer(seed, path, depth, length) {\n\n    if (depth === length) {\n        return undefined;\n    }\n\n    seed = seed || {};\n    var keys = seed['$keys'] || (seed['$keys'] = []);\n    var keysMap = seed['$keysMap'] || (seed['$keysMap'] = {});\n    var keysIndex = -1;\n\n    var keyset,\n        keysetIndex = -1,\n        keysetLength = 0;\n    var node,\n        next,\n        nextKey,\n        nextDepth = depth + 1,\n        rangeEnd,\n        keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return nullBuffer;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            if ('undefined' === typeof (keysIndex = keysMap[nextKey])) {\n                keysIndex = keys.length;\n            }\n            keys[keysIndex] = nextKey;\n            keysMap[nextKey] = keysIndex;\n            next = pathToFlatBuffer(seed[keysIndex], path, nextDepth, length);\n            if (next !== undefined) {\n                seed[keysIndex] = next;\n            }\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    break iteratingKeyset;\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                keyset = keysOrRanges[keysetIndex];\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if ('number' !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyset = { from: nextKey, length: rangeEnd - nextKey + 1 };\n                    nextKey = '[' + nextKey + '..' + rangeEnd + ']';\n                    if ('undefined' === typeof (keysIndex = keysMap[nextKey])) {\n                        keysIndex = keys.length;\n                    }\n                    keys[keysIndex] = keyset;\n                    keysMap[nextKey] = keysIndex;\n                    next = pathToFlatBuffer(seed[keysIndex], path, nextDepth, length);\n                    if (next !== undefined) {\n                        seed[keysIndex] = next;\n                    }\n                }\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return seed;\n}\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar materializedAtom = __webpack_require__(6);\n\nmodule.exports = toTree;\n\n/**\n * @param {Array} paths -\n * @returns {Object} -\n */\n\nfunction toTree(paths, seed) {\n    return paths.reduce(function (seed, path) {\n        return pathToTree(seed, path, 0, path.length, null);\n    }, seed || {});\n};\n\nfunction pathToTree(seed, path, depth, length, value) {\n\n    if (depth === length) {\n        return true;\n    }\n\n    seed = seed || {};\n\n    var keyset,\n        keysetIndex = -1,\n        keysetLength = 0;\n    var node,\n        next,\n        nextKey,\n        nextDepth = depth + 1,\n        keyIsRange,\n        rangeEnd,\n        keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return materializedAtom;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    break iteratingKeyset;\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                keyset = keysOrRanges[keysetIndex];\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if ('number' !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        do {\n            if (nextDepth === length) {\n                seed[nextKey] = value;\n            } else {\n                node = seed[nextKey];\n                next = pathToTree(node, path, nextDepth, length, value);\n                if (!next) {\n                    seed[nextKey] = value;\n                } else if (!node) {\n                    seed[nextKey] = next;\n                }\n            }\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return seed;\n}\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Call = __webpack_require__(94);\nvar ModelRoot = __webpack_require__(68);\nvar FalcorJSON = __webpack_require__(2);\nvar ModelDataSourceAdapter = __webpack_require__(67);\nvar TimeoutScheduler = __webpack_require__(98);\nvar ImmediateScheduler = __webpack_require__(56);\nvar collapse = __webpack_require__(36);\n\nvar getSize = __webpack_require__(9);\nvar isObject = __webpack_require__(5);\nvar isJSONEnvelope = __webpack_require__(57);\nvar getCachePosition = __webpack_require__(10);\nvar isJSONGraphEnvelope = __webpack_require__(58);\n\nvar setCache = __webpack_require__(19);\nvar setJSONGraphs = __webpack_require__(18);\n\nvar getJSON = __webpack_require__(24);\nvar getCache = __webpack_require__(78);\nvar getJSONGraph = __webpack_require__(25);\n\nmodule.exports = Model;\n\n/**\n * This callback is invoked when the Model's cache is changed.\n * @callback Model~onChange\n */\n\n/**\n* This function is invoked on every JSONGraph Error retrieved from the DataSource. This function allows Error objects to be transformed before being stored in the Model's cache.\n* @callback Model~errorSelector\n* @param {Object} jsonGraphError - the JSONGraph Error object to transform before it is stored in the Model's cache.\n* @returns {Object} the JSONGraph Error object to store in the Model cache.\n*/\n\n/**\n* This function is invoked every time a value in the Model cache is about to be replaced with a new value. If the function returns true, the existing value is replaced with a new value and the version flag on all of the value's ancestors in the tree are incremented.\n* @callback Model~comparator\n* @param {Object} existingValue - the current value in the Model cache.\n* @param {Object} newValue - the value about to be set into the Model cache.\n* @returns {Boolean} the Boolean value indicating whether the new value and the existing value are equal.\n*/\n\n/**\n * A Model object is used to execute commands against a {@link JSONGraph} object. {@link Model}s can work with a local JSONGraph cache, or it can work with a remote {@link JSONGraph} object through a {@link DataSource}.\n * @constructor\n * @param {?Object} options - a set of options to customize behavior\n * @param {?DataSource} options.source - a data source to retrieve and manage the {@link JSONGraph}\n * @param {?JSONGraph} options.cache - initial state of the {@link JSONGraph}\n * @param {?number} options.maxSize - the maximum size of the cache. This value roughly correlates to item count (where itemCount = maxSize / 50). Each item by default is given a metadata `$size` of 50 (or its length when it's an array or string). You can get better control of falcor's memory usage by tweaking `$size`\n * @param {?number} options.collectRatio - the ratio of the maximum size to collect when the maxSize is exceeded\n * @param {?Model~errorSelector} options.errorSelector - a function used to translate errors before they are returned\n * @param {?Model~onChange} options.onChange - a function called whenever the Model's cache is changed\n * @param {?Model~comparator} options.comparator - a function called whenever a value in the Model's cache is about to be replaced with a new value.\n */\nfunction Model(opts) {\n\n    var options = opts || {};\n\n    this._node = options._node;\n    this._path = options._path || [];\n    this._source = options.source || options._source;\n    this._root = options._root || new ModelRoot(options, this);\n    this._recycleJSON = options.recycleJSON === true || options._recycleJSON;\n    this._scheduler = options.scheduler || options._scheduler || new ImmediateScheduler();\n\n    if (options._seed) {\n        this._recycleJSON = true;\n        this._seed = options._seed;\n        this._treatErrorsAsValues = true;\n    } else if (this._recycleJSON) {\n        this._treatErrorsAsValues = true;\n        this._seed = {};\n        this._seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    this._boxed = options.boxed === true || options._boxed || false;\n    this._materialized = options.materialized === true || options._materialized || false;\n    this._treatErrorsAsValues = options.treatErrorsAsValues === true || options._treatErrorsAsValues || false;\n    this._allowFromWhenceYouCame = options.allowFromWhenceYouCame === true || options._allowFromWhenceYouCame || false;\n\n    if (options.cache) {\n        this.setCache(options.cache);\n    }\n}\n\nModel.prototype.constructor = Model;\n\n/**\n * The get method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model}. The get method loads each value into a JSON object and returns in a ModelResponse.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - the requested data as JSON\n */\nModel.prototype.get = function get() {\n    var seed = this._seed;\n    if (!seed) {\n        seed = {};\n        seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n    }\n\n    return new Call('get', this, args)._toJSON(seed, []);\n};\n\n/**\n * Sets the value at one or more places in the JSONGraph model. The set method accepts one or more {@link PathValue}s, each of which is a combination of a location in the document and the value to place there.  In addition to accepting  {@link PathValue}s, the set method also returns the values after the set operation is complete.\n * @function\n * @return {ModelResponse.<JSONEnvelope>} - an {@link Observable} stream containing the values in the JSONGraph model after the set was attempted\n */\nModel.prototype.set = function set() {\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n    }\n\n    return new Call('set', this, args)._toJSON(seed, []);\n};\n\n/**\n * The preload method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model} and loads them into the Model cache.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - a ModelResponse that completes when the data has been loaded into the cache.\n */\nModel.prototype.preload = function preload() {\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n    }\n\n    return new Call('get', this, args)._toJSON(null, []);\n};\n\n/**\n * Invokes a function in the JSON Graph.\n * @function\n * @param {Path} functionPath - the path to the function to invoke\n * @param {Array.<Object>} args - the arguments to pass to the function\n * @param {Array.<PathSet>} refPaths - the paths to retrieve from the JSON Graph References in the message returned from the function\n * @param {Array.<PathSet>} thisPaths - the paths to retrieve from function's this object after successful function execution\n * @return {ModelResponse.<JSONEnvelope> - a JSONEnvelope contains the values returned from the function\n */\n\nModel.prototype.call = function call() {\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n\n    for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n    }\n\n    return new Call('call', this, args)._toJSON(seed, []);\n};\n\n/**\n * The invalidate method synchronously removes several {@link Path}s or {@link PathSet}s from a {@link Model} cache.\n * @function\n * @param {...PathSet} path - the  paths to remove from the {@link Model}'s cache.\n */\nModel.prototype.invalidate = function invalidate() {\n    for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n    }\n\n    return new Call('invalidate', this, args)._toJSON(null, null).then();\n};\n\n/**\n * Returns a new {@link Model} bound to a location within the {@link\n * JSONGraph}. The bound location is never a {@link Reference}: any {@link\n * Reference}s encountered while resolving the bound {@link Path} are always\n * replaced with the {@link Reference}s target value. For subsequent operations\n * on the {@link Model}, all paths will be evaluated relative to the bound\n * path. Deref allows you to:\n * - Expose only a fragment of the {@link JSONGraph} to components, rather than\n *   the entire graph\n * - Hide the location of a {@link JSONGraph} fragment from components\n * - Optimize for executing multiple operations and path looksup at/below the\n *   same location in the {@link JSONGraph}\n * @method\n * @param {Object} responseObject - an object previously retrieved from the\n * Model\n * @return {Model} - the dereferenced {@link Model}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.deref = __webpack_require__(87);\n\n/**\n * A dereferenced model can become invalid when the reference from which it was\n * built has been removed/collected/expired/etc etc.  To fix the issue, a from\n * the parent request should be made (no parent, then from the root) for a valid\n * path and re-dereference performed to update what the model is bound too.\n *\n * @method\n * @private\n * @return {Boolean} - If the currently deref'd model is still considered a\n * valid deref.\n */\nModel.prototype._hasValidParentReference = __webpack_require__(86);\n\n/**\n * Get data for a single {@link Path}.\n * @param {Path} path - the path to retrieve\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     getValue('user.name').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.getValue = function getValue(path) {\n    return new Call('get', this, [path])._toJSON({}, []).lift(function (subscriber) {\n        return this.subscribe({\n            onNext: function (data) {\n                var depth = -1;\n                var x = data.json;\n                var length = path.length;\n                while (x && !x.$type && ++depth < length) {\n                    x = x[path[depth]];\n                }\n                subscriber.onNext(x);\n            },\n            onError: subscriber.onError.bind(subscriber),\n            onCompleted: subscriber.onCompleted.bind(subscriber)\n        });\n    });\n};\n\n/**\n * Set value for a single {@link Path}.\n * @param {Path} path - the path to set\n * @param {Object} value - the value to set\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     setValue('user.name', 'Jim').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.setValue = function setValue(path, value) {\n    path = arguments.length === 1 ? path.path : path;\n    value = arguments.length === 1 ? path : { path: path, value: value };\n    return new Call('set', this, [value])._toJSON({}, []).lift(function (subscriber) {\n        return this.subscribe({\n            onNext: function (data) {\n                var depth = -1;\n                var x = data.json;\n                var length = path.length;\n                while (x && !x.$type && ++depth < length) {\n                    x = x[path[depth]];\n                }\n                subscriber.onNext(x);\n            },\n            onError: subscriber.onError.bind(subscriber),\n            onCompleted: subscriber.onCompleted.bind(subscriber)\n        });\n    });\n};\n\n/**\n * Set the local cache to a {@link JSONGraph} fragment. This method can be a useful way of mocking a remote document, or restoring the local cache from a previously stored state.\n * @param {JSONGraph} jsonGraph - the {@link JSONGraph} fragment to use as the local cache\n */\nModel.prototype.setCache = function modelSetCache(cacheOrJSONGraphEnvelope) {\n\n    var modelRoot = this._root;\n    var cache = modelRoot.cache;\n\n    if (cacheOrJSONGraphEnvelope !== cache) {\n\n        var options = {\n            _path: [],\n            _boxed: false,\n            _root: modelRoot,\n            _materialized: false,\n            _treatErrorsAsValues: false\n        };\n\n        modelRoot.cache = this._node = {};\n\n        if (typeof cache !== 'undefined') {\n            modelRoot.expired = [];\n            modelRoot[\"\u001eƒ_head\"] = undefined;\n            modelRoot[\"\u001eƒ_tail\"] = undefined;\n            if (this._recycleJSON) {\n                this._seed = {};\n                this._seed.__proto__ = FalcorJSON.prototype;\n            }\n        }\n\n        var results, rootOnChangeHandler;\n        if (isJSONGraphEnvelope(cacheOrJSONGraphEnvelope)) {\n            results = setJSONGraphs(options, [cacheOrJSONGraphEnvelope]);\n        } else if (isJSONEnvelope(cacheOrJSONGraphEnvelope)) {\n            results = setCache(options, [cacheOrJSONGraphEnvelope]);\n        } else if (isObject(cacheOrJSONGraphEnvelope)) {\n            results = setCache(options, [{ json: cacheOrJSONGraphEnvelope }]);\n        }\n\n        if (results) {\n            // performs promotion without producing output.\n            if (results[0].length) {\n                getJSON(options, results[0], null, false, false);\n            }\n            if (results[2] && (rootOnChangeHandler = modelRoot.onChange)) {\n                rootOnChangeHandler();\n            }\n        }\n    } else if (typeof cache === 'undefined') {\n        this._root.cache = {};\n    }\n    return this;\n};\n\n/**\n * Get the local {@link JSONGraph} cache. This method can be a useful to store the state of the cache.\n * @param {...Array.<PathSet>} [pathSets] - The path(s) to retrieve. If no paths are specified, the entire {@link JSONGraph} is returned.\n * @return {JSONGraph} all of the {@link JSONGraph} data in the {@link Model} cache.\n * @example\n // Storing the boxshot of the first 10 titles in the first 10 genreLists to local storage.\n localStorage.setItem('cache', JSON.stringify(model.getCache('genreLists[0...10][0...10].boxshot')));\n */\nModel.prototype.getCache = function _getCache() {\n\n    var paths = Array.prototype.slice.call(arguments, 0);\n\n    if (paths.length === 0) {\n        return getCache(this._root.cache);\n    }\n\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n\n    var env = getJSONGraph({\n        _path: [],\n        _root: this._root,\n        _boxed: this._boxed,\n        _materialized: this._materialized,\n        _treatErrorsAsValues: this._treatErrorsAsValues\n    }, paths, seed).data;\n\n    env.paths = collapse(paths);\n\n    return env;\n};\n\n/**\n * Retrieves a number which is incremented every single time a value is changed underneath the Model or the object at an optionally-provided Path beneath the Model.\n * @param {Path?} path - a path at which to retrieve the version number\n * @return {Number} a version number which changes whenever a value is changed underneath the Model or provided Path\n */\nModel.prototype.getVersion = function getVersion(path) {\n    path = path || [];\n    if (Array.isArray(path) === false) {\n        throw new Error('Model#getVersion must be called with an Array path.');\n    }\n    if (this._path.length) {\n        path = this._path.concat(path);\n    }\n    return this._getVersion(this, path);\n};\n\n/* eslint-disable guard-for-in */\nModel.prototype._clone = function cloneModel(opts) {\n    var clone = new Model(this);\n    if (opts) {\n        for (var key in opts) {\n            var value = opts[key];\n            if (value === 'delete') {\n                delete clone[key];\n            } else if (key === '_path') {\n                clone[key] = value;\n                if (false === opts.hasOwnProperty('_node')) {\n                    delete clone['_node'];\n                }\n            } else {\n                clone[key] = value;\n            }\n        }\n    }\n    if (clone._path.length > 0) {\n        clone.setCache = void 0;\n    }\n    return clone;\n};\n/* eslint-enable */\n\n/**\n * Returns a clone of the {@link Model} that enables batching. Within the configured time period, paths for get operations are collected and sent to the {@link DataSource} in a batch. Batching can be more efficient if the {@link DataSource} access the network, potentially reducing the number of HTTP requests to the server.\n * @param {?Scheduler|number} schedulerOrDelay - Either a {@link Scheduler} that determines when to send a batch to the {@link DataSource}, or the number in milliseconds to collect a batch before sending to the {@link DataSource}. If this parameter is omitted, then batch collection ends at the end of the next tick.\n * @return {Model} a Model which schedules a batch of get requests to the DataSource.\n */\nModel.prototype.batch = function batch(schedulerOrDelay) {\n\n    var scheduler;\n\n    if (typeof schedulerOrDelay === 'number') {\n        scheduler = new TimeoutScheduler(Math.round(Math.abs(schedulerOrDelay)));\n    } else if (!schedulerOrDelay) {\n        scheduler = new TimeoutScheduler(1);\n    } else if (typeof schedulerOrDelay.schedule === 'function') {\n        scheduler = schedulerOrDelay;\n    } else if (typeof schedulerOrDelay === 'function') {\n        scheduler = { scheudle: schedulerOrDelay };\n    }\n\n    return this._clone({ _scheduler: scheduler });\n};\n\n/**\n * Returns a clone of the {@link Model} that disables batching. This is the default mode. Each get operation will be executed on the {@link DataSource} separately.\n * @name unbatch\n * @memberof Model.prototype\n * @function\n * @return {Model} a {@link Model} that batches requests of the same type and sends them to the data source together\n */\nModel.prototype.unbatch = function unbatch() {\n    return this._clone({ _scheduler: new ImmediateScheduler() });\n};\n\n/**\n * Returns a clone of the {@link Model} that treats errors as values. Errors will be reported in the same callback used to report data. Errors will appear as objects in responses, rather than being sent to the {@link Observable~onErrorCallback} callback of the {@link ModelResponse}.\n * @return {Model}\n */\nModel.prototype.treatErrorsAsValues = function treatErrorsAsValues() {\n    return this._clone({ _treatErrorsAsValues: true });\n};\n\n/**\n * Adapts a Model to the {@link DataSource} interface.\n * @return {DataSource}\n * @example\nvar model =\n    new falcor.Model({\n        cache: {\n            user: {\n                name: 'Steve',\n                surname: 'McGuire'\n            }\n        }\n    }),\n    proxyModel = new falcor.Model({ source: model.asDataSource() });\n\n// Prints 'Steve'\nproxyModel.getValue('user.name').\n    then(function(name) {\n        console.log(name);\n    });\n */\nModel.prototype.asDataSource = function asDataSource() {\n    return new ModelDataSourceAdapter(this);\n};\n\nModel.prototype._materialize = function materialize() {\n    return this._clone({\n        _materialized: true\n    });\n};\n\nModel.prototype._dematerialize = function dematerialize() {\n    return this._clone({\n        _materialized: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that boxes values returning the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the value inside it. This allows any metadata attached to the wrapper to be inspected.\n * @return {Model}\n */\nModel.prototype.boxValues = function boxValues() {\n    return this._clone({\n        _boxed: true\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that unboxes values, returning the value inside of the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the wrapper itself. This is the default mode.\n * @return {Model}\n */\nModel.prototype.unboxValues = function unboxValues() {\n    return this._clone({\n        _boxed: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that only uses the local {@link JSONGraph} and never uses a {@link DataSource} to retrieve missing paths.\n * @return {Model}\n */\nModel.prototype.withoutDataSource = function withoutDataSource() {\n    return this._clone({\n        _source: 'delete'\n    });\n};\n\n/* implement inspect method for node's inspect utility */\nModel.prototype.inspect = function inspect() {\n    return '{ v: ' + this.getVersion() + ' p: [' + this._path.join(', ') + '] }';\n};\n\nModel.prototype.toJSON = function toJSON() {\n    return {\n        $type: 'ref',\n        value: this.getPath()\n    };\n};\n\n/**\n * Returns the {@link Path} to the object within the JSON Graph that this Model references.\n * @return {Path}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.getPath = function getPath() {\n    return this._path.slice(0);\n};\n\n/**\n * This one is actually private.  I would not use this without talking to\n * jhusain, sdesai, or michaelbpaulson (github).\n * @private\n */\nModel.prototype._fromWhenceYouCame = function fromWhenceYouCame(allow) {\n    return this._clone({\n        _allowFromWhenceYouCame: allow === undefined ? true : allow\n    });\n};\n\nModel.prototype._optimizePath = function _optimizePath(path) {\n    var node = getCachePosition(this._root.cache, path);\n    var abs_path = node && node[\"\u001eƒ_abs_path\"] || [];\n    return abs_path.slice(0);\n};\n\nModel.prototype._getVersion = __webpack_require__(79);\nModel.prototype._getPathValuesAsPathMap = getJSON;\nModel.prototype._getPathValuesAsJSONG = getJSONGraph;\n\nModel.prototype._setPathValues = __webpack_require__(30);\nModel.prototype._setPathMaps = __webpack_require__(19);\nModel.prototype._setJSONGs = __webpack_require__(18);\nModel.prototype._setCache = __webpack_require__(19);\n\nModel.prototype._invalidatePathValues = __webpack_require__(28);\nModel.prototype._invalidatePathMaps = __webpack_require__(47);\n\n/***/ },\n/* 67 */\n/***/ function(module, exports) {\n\nfunction ModelDataSourceAdapter(model) {\n    this._model = model\n    // .boxValues()\n    ._materialize().treatErrorsAsValues();\n}\n\nModelDataSourceAdapter.prototype.get = function get(pathSets) {\n    return this._model.get.apply(this._model, pathSets)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.set = function set(jsongResponse) {\n    return this._model.set(jsongResponse)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.call = function call(path, args, suffixes, paths) {\n    return this._model.call.apply(this._model, [path, args, suffixes].concat(paths))._toJSONG();\n};\n\nmodule.exports = ModelDataSourceAdapter;\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar functionTypeof = 'function';\nvar Requests = __webpack_require__(95);\nvar getTimestamp = __webpack_require__(33);\n\nfunction ModelRoot(o, model) {\n\n    var options = o || {};\n\n    this.cache = {};\n    this.version = -1;\n    this.syncRefCount = 0;\n    this.maxRetryCount = 10;\n    this.topLevelModel = model;\n    this.requests = new Requests(this);\n    this.expired = options.expired || [];\n\n    this.collectRatio = 0.75;\n    this.maxSize = Math.pow(2, 53) - 1;\n\n    if (typeof options.collectRatio === 'number') {\n        this.collectRatio = options.collectRatio;\n    }\n\n    if (typeof options.maxSize === 'number') {\n        this.maxSize = options.maxSize;\n    }\n\n    if (typeof options.comparator === functionTypeof) {\n        this.comparator = options.comparator;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.errorSelector === functionTypeof) {\n        this.errorSelector = options.errorSelector;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.onChange === functionTypeof) {\n        this.onChange = options.onChange;\n    }\n\n    if (typeof options.onChangesCompleted === functionTypeof) {\n        this.onChangesCompleted = options.onChangesCompleted;\n    }\n}\n\nfunction defaultCompare(node, message) {\n    var cType = node && node.$type;\n    var mType = message && message.$type;\n    if (cType) {\n        // If the cache has a type, but the message is a primitive,\n        // the message might be the primitive response from the datasource.\n        // If so, return true, so we don't update the back-reference versions.\n        if (!mType) {\n            return node.value === message;\n        }\n        // If the message is older than the cache node, then isDistinct = false\n        else if (getTimestamp(message) < getTimestamp(node) === true) {\n                return true; // isDistinct = false\n            }\n        // Otherwise they are the same if all the following fields are the same.\n        return !(cType !== mType || node.value !== message.value || node.$expires !== message.$expires);\n    }\n    // If cache doesn't have a type but the message\n    // does, they must be different.\n    else if (mType) {\n            return false;\n        }\n    return node === message;\n}\n\nModelRoot.comparator = ModelRoot.prototype.comparator = defaultCompare;\n\nmodule.exports = ModelRoot;\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar getJSON = __webpack_require__(24);\nvar getJSONGraph = __webpack_require__(25);\n\nmodule.exports = { json: json, jsonGraph: jsonGraph };\n\nfunction json(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue = getJSON(model, thisPaths, data, progressive, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [path, args, suffixes, thisPaths]\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed,\n            _materialized: model._materialized,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, thisPaths, data, true, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [path, args, suffixes, thisPaths]\n    };\n}\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n    json: __webpack_require__(40),\n    jsonGraph: __webpack_require__(43)\n};\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar clone = __webpack_require__(7);\n\nmodule.exports = onError;\n\nfunction onError(node, depth, results, requestedPath, fromReference, boxValues) {\n\n    var index = -1;\n    var length = depth + !!fromReference; // depth + 1 if fromReference === true\n    var errorPath = new Array(length);\n    var errorValue = !boxValues ? node.value : clone(node);\n\n    while (++index < length) {\n        errorPath[index] = requestedPath[index];\n    }\n\n    (results.errors || (results.errors = [])).push({\n        path: errorPath,\n        value: errorValue\n    });\n}\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(2);\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar onValue = __webpack_require__(42);\nvar FalcorJSON = __webpack_require__(2);\nvar isExpired = __webpack_require__(0);\nvar onValueType = __webpack_require__(16);\nvar originalOnMissing = __webpack_require__(27);\nvar getReferenceTarget = __webpack_require__(41);\nvar onMaterialize = __webpack_require__(77);\nvar NullInPathError = __webpack_require__(3);\nvar InvalidKeySetError = __webpack_require__(12);\nvar getHashCode = __webpack_require__(22);\nvar flatBufferToPaths = __webpack_require__(21);\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, json, path, depth, seed, results, requestedPath, optimizedPath, optimizedLength, fromReference, referenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === node || undefined !== (type = node.$type) || undefined === path) {\n        arr[1] = hasDataSource && node === undefined;\n        arr[0] = onValueType(node, type, json, path, depth, seed, results, requestedPath, depth, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, onValue, onMissing, onMaterialize);\n        return arr;\n    }\n\n    var f_meta,\n        f_old_keys,\n        f_new_keys,\n        f_code = '';\n\n    var next,\n        nextKey,\n        keyset,\n        keyIsRange,\n        keys = path['$keys'],\n        nodeAbsPath,\n        jsonAbsPath,\n        nextDepth = depth + 1,\n        rangeEnd,\n        nextJSON,\n        nextReferenceContainer,\n        nextOptimizedLength,\n        nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath,\n        refContainerRefPath;\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[\"\u001eƒ_abs_path\"];\n    }\n\n    if (!json || typeofObject !== typeof json) {\n        json = undefined;\n    } else if (f_meta = json[\"\u001eƒ_meta\"]) {\n\n        nodeAbsPath = node[\"\u001eƒ_abs_path\"];\n        jsonAbsPath = f_meta[\"abs_path\"];\n\n        if (!branchSelector && !(json instanceof FalcorJSON)) {\n            json.__proto__ = {};\n            json.__proto__[\"\u001eƒ_meta\"] = f_meta;\n            json.__proto__.__proto__ = FalcorJSON.prototype;\n        }\n\n        if (nodeAbsPath !== jsonAbsPath) {\n            f_meta['$code'] = '__loading__';\n            f_meta[\"abs_path\"] = nodeAbsPath;\n            f_meta[\"version\"] = node[\"\u001eƒ_version\"];\n            f_meta[\"deref_to\"] = refContainerRefPath;\n            f_meta[\"deref_from\"] = refContainerAbsPath;\n            if (f_old_keys = f_meta[\"keys\"]) {\n                f_meta[\"keys\"] = Object.create(null);\n                for (nextKey in f_old_keys) {\n                    if (f_old_keys[nextKey]) {\n                        delete json[nextKey];\n                    }\n                }\n            }\n            arr[0] = json;\n            arr[1] = true;\n            return arr;\n        } else if (!(f_meta[\"version\"] !== node[\"\u001eƒ_version\"] || f_meta['$code'] !== path['$code'])) {\n            results.hasValue = true;\n            arr[0] = json;\n            arr[1] = false;\n            return arr;\n        }\n\n        f_old_keys = f_meta[\"keys\"];\n        f_meta[\"abs_path\"] = nodeAbsPath;\n        f_meta[\"version\"] = node[\"\u001eƒ_version\"];\n        f_meta[\"deref_to\"] = refContainerRefPath;\n        f_meta[\"deref_from\"] = refContainerAbsPath;\n    }\n\n    f_new_keys = Object.create(null);\n\n    var keysIndex = -1;\n    var keysLength = keys.length;\n    var nextPath,\n        nextPathKey,\n        hasMissingPath = false;\n\n    iteratingKeyset: while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            f_code = '' + getHashCode('' + f_code + 'null');\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if (typeofObject !== typeof keyset) {\n                nextKey = keyset;\n                rangeEnd = undefined;\n                keyIsRange = false;\n                nextPathKey = nextKey;\n            }\n            // If the Keyset isn't null or primitive, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if (typeofNumber !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                    nextPathKey = '[' + nextKey + '..' + rangeEnd + ']';\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextPath === undefined) {\n\n                arr = walkPathAndBuildOutput(root, next, nextJSON, nextPath, nextDepth, seed, results, requestedPath, nextOptimizedPath, nextOptimizedLength, fromReference, nextReferenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n\n                if (!hasMissingPath && arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined && !materialized) {\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            } else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                // If the reference is expired, it will be invalidated and\n                // reported as missing in the next call to walkPath below.\n                next.$type === \"ref\" && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                arr = walkPathAndBuildOutput(root, next, nextJSON, nextPath, nextDepth, seed, results, requestedPath, nextOptimizedPath, nextOptimizedLength, fromReference, nextReferenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n\n                if (!hasMissingPath && arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined) {\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = {};\n                f_meta[\"version\"] = node[\"\u001eƒ_version\"];\n                f_meta[\"abs_path\"] = node[\"\u001eƒ_abs_path\"];\n                f_meta[\"deref_to\"] = refContainerRefPath;\n                f_meta[\"deref_from\"] = refContainerAbsPath;\n                json = {};\n                json[\"\u001eƒ_meta\"] = f_meta;\n                json.__proto__ = FalcorJSON.prototype;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                // node creation to them.\n                if (branchSelector) {\n                    json = branchSelector(json);\n                } else {\n                    var tmp = json;\n                    json = {};\n                    json.__proto__ = tmp;\n                    tmp = undefined;\n                }\n            }\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && nextKey in f_old_keys) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        if (!hasMissingPath) {\n            f_code = '' + getHashCode('' + f_code + nextPathKey + (nextPath && nextPath['$code'] || ''));\n        }\n    }\n\n    if (hasMissingPath) {\n        f_code = '__loading__';\n    }\n\n    if (f_meta) {\n        f_meta['$code'] = f_code;\n        f_meta[\"keys\"] = f_new_keys;\n        if (f_old_keys) {\n            for (nextKey in f_old_keys) {\n                if (f_old_keys[nextKey]) {\n                    delete json[nextKey];\n                }\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n\n    arr[0] = json;\n    arr[1] = hasMissingPath;\n\n    return arr;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, reportMaterialized, json, branchSelector, boxValues, onMaterialize, modelRoot) {\n\n    if (reportMaterialized) {\n        return onMaterialize(json, path, depth, depth, branchSelector, boxValues, modelRoot, results, requestedPath, optimizedPath, optimizedLength, fromReference, reportMissing, onMissing);\n    }\n\n    var paths = path ? flatBufferToPaths(path) : [[]];\n    var rPath = requestedPath.slice(0, requestedLength);\n\n    return paths.forEach(function (restPath) {\n        requestedLength = depth + restPath.length;\n        return originalOnMissing(rPath.concat(restPath), depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, false, json, branchSelector, boxValues, onMaterialize, modelRoot);\n    });\n}\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar onValue = __webpack_require__(42);\nvar onMissing = __webpack_require__(27);\nvar FalcorJSON = __webpack_require__(2);\nvar onValueType = __webpack_require__(16);\nvar isExpired = __webpack_require__(0);\nvar onMaterialize = __webpack_require__(44);\nvar getReferenceTarget = __webpack_require__(41);\nvar NullInPathError = __webpack_require__(3);\nvar InvalidKeySetError = __webpack_require__(12);\nvar materializedAtom = __webpack_require__(6);\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, json, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, referenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (type = node.$type) || depth === requestedLength) {\n        return onValueType(node, type, json, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, onValue, onMissing, onMaterialize);\n    }\n\n    var f_meta;\n\n    var next,\n        nextKey,\n        keyset,\n        keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd,\n        keysOrRanges,\n        nextJSON,\n        nextReferenceContainer,\n        keysetIndex = -1,\n        keysetLength = 0,\n        nextOptimizedLength,\n        nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath,\n        refContainerRefPath;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        return json;\n    }\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[\"\u001eƒ_abs_path\"];\n    }\n\n    if (!json || typeofObject !== typeof json) {\n        json = undefined;\n    } else if (f_meta = json[\"\u001eƒ_meta\"]) {\n        f_meta[\"version\"] = node[\"\u001eƒ_version\"];\n        f_meta[\"abs_path\"] = node[\"\u001eƒ_abs_path\"];\n        f_meta[\"deref_to\"] = refContainerRefPath;\n        f_meta[\"deref_from\"] = refContainerAbsPath;\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    throw new InvalidKeySetError(path, keysOrRanges);\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                keyset = keysOrRanges[keysetIndex];\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if (typeofNumber !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextDepth === requestedLength) {\n                nextJSON = walkPathAndBuildOutput(root, next, nextJSON, path, nextDepth, seed, results, requestedPath, requestedLength, nextOptimizedPath, nextOptimizedLength, fromReference, nextReferenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n                if (nextJSON === undefined && !materialized) {\n                    continue;\n                }\n            } else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                // If the reference is expired, it will be invalidated and\n                // reported as missing in the next call to walkPath below.\n                next.$type === \"ref\" && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                if (undefined === (nextJSON = walkPathAndBuildOutput(root, next, nextJSON, path, nextDepth, seed, results, requestedPath, requestedLength, nextOptimizedPath, nextOptimizedLength, fromReference, nextReferenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame))) {\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = {};\n                f_meta[\"version\"] = node[\"\u001eƒ_version\"];\n                f_meta[\"abs_path\"] = node[\"\u001eƒ_abs_path\"];\n                f_meta[\"deref_to\"] = refContainerRefPath;\n                f_meta[\"deref_from\"] = refContainerAbsPath;\n                json = {};\n                json[\"\u001eƒ_meta\"] = f_meta;\n                json.__proto__ = FalcorJSON.prototype;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                if (branchSelector) {\n                    json = branchSelector(json);\n                }\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n/* eslint-enable */\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(2);\nvar clone = __webpack_require__(7);\nvar inlineValue = __webpack_require__(26);\nvar promote = __webpack_require__(13);\nvar isExpired = __webpack_require__(0);\nvar createHardlink = __webpack_require__(8);\nvar CircularReferenceError = __webpack_require__(52);\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, ref, modelRoot, seed, expireImmediate) {\n\n    promote(modelRoot, ref);\n\n    var context,\n        key,\n        type,\n        depth = 0,\n        node = root,\n        path = ref.value,\n        copy = path,\n        length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[\"\u001eƒ_context\"])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                    throw new CircularReferenceError(path);\n                }\n                // If the node we land on isn't the existing ref context,\n                // create a hard-link between the reference and the node\n                // it points to.\n                else if (node !== context) {\n                        createHardlink(ref, node);\n                    }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === \"ref\") {\n\n                promote(modelRoot, node);\n\n                seed && inlineValue(clone(node), path, length, seed);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n\n    return arr;\n}\n/* eslint-enable */\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar typeofObject = 'object';\nvar clone = __webpack_require__(7);\nvar inlineValue = __webpack_require__(26);\n\nmodule.exports = onJSONGraphValue;\n\nfunction onJSONGraphValue(node, type, depth, seed, results, requestedPath, optimizedPath, optimizedLength, fromReference, boxValues, materialized) {\n\n    var value = node.value;\n\n    // boxValues always clones the node\n    if (boxValues || !(\n    /**\n     * JSON Graph should always clone:\n     * - refs\n     * - errors\n     * - atoms we didn't create\n     * - atoms we created to wrap Objects\n     **/\n    \"ref\" !== type && \"error\" !== type && node[\"\u001eƒ_wrapped_value\"] && typeofObject !== typeof value)) {\n        value = clone(node);\n    }\n\n    results.hasValue = true;\n    inlineValue(value, optimizedPath, optimizedLength, seed);\n    (seed.paths || (seed.paths = [])).push(requestedPath.slice(0, depth + !!fromReference) // depth + 1 if fromReference === true\n    );\n\n    return value;\n}\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar clone = __webpack_require__(7);\nvar onValue = __webpack_require__(75);\nvar inlineValue = __webpack_require__(26);\nvar isExpired = __webpack_require__(0);\nvar onValueType = __webpack_require__(16);\nvar onMaterialize = __webpack_require__(44);\nvar originalOnMissing = __webpack_require__(27);\nvar getReferenceTarget = __webpack_require__(74);\nvar NullInPathError = __webpack_require__(3);\nvar InvalidKeySetError = __webpack_require__(12);\nvar materializedAtom = __webpack_require__(6);\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, boxValues, materialized, hasDataSource, treatErrorsAsValues) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (type = node.$type) || depth === requestedLength) {\n        return onValueType(node, type, seed, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, undefined, boxValues, materialized, hasDataSource, treatErrorsAsValues, onValue, onMissing, onMaterialize);\n    }\n\n    var next,\n        nextKey,\n        keyset,\n        keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd,\n        keysOrRanges,\n        keysetIndex = -1,\n        keysetLength = 0,\n        nextOptimizedLength,\n        nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        return undefined;\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    throw new InvalidKeySetError(path, keysOrRanges);\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                keyset = keysOrRanges[keysetIndex];\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if ('number' !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            // If we encounter a ref, inline the reference target and continue\n            // evaluating the path.\n            if (next && nextDepth < requestedLength &&\n            // If the reference is expired, it will be invalidated and\n            // reported as missing in the next call to walkPath below.\n            next.$type === \"ref\" && !isExpired(next, expireImmediate)) {\n\n                // Write the cloned ref value into the jsonGraph at the\n                // optimized path. JSONGraph must always clone references.\n                seed && inlineValue(clone(next), optimizedPath, nextOptimizedLength, seed);\n\n                // Retrieve the reference target and next referenceContainer (if\n                // this reference points to other references) and continue\n                // following the path. If the reference resolves to a missing\n                // path or leaf node, it will be handled in the next call to\n                // walkPath.\n                refTarget = getReferenceTarget(root, next, modelRoot, seed, expireImmediate);\n\n                next = refTarget[0];\n                fromReference = true;\n                nextOptimizedPath = refTarget[1];\n                nextOptimizedLength = nextOptimizedPath.length;\n                refTarget[0] = refTarget[1] = undefined;\n            }\n\n            walkPathAndBuildOutput(root, next, path, nextDepth, seed, results, requestedPath, requestedLength, nextOptimizedPath, nextOptimizedLength, fromReference, modelRoot, expired, expireImmediate, boxValues, materialized, hasDataSource, treatErrorsAsValues);\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return undefined;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, reportMaterialized, seed, branchSelector, boxValues, onMaterialize, modelRoot) {\n\n    var json, isLeaf;\n\n    if (seed && reportMaterialized) {\n\n        (seed.paths || (seed.paths = [])).push((isLeaf = 0 === requestedLength - depth) &&\n        // depth + 1 if fromReference === true\n        requestedPath.slice(0, depth + !!fromReference) || requestedPath.slice(0, depth).concat(path.slice(depth, requestedLength + !!fromReference)));\n\n        json = inlineValue(isLeaf && clone(materializedAtom) || undefined, optimizedPath, optimizedLength, seed, !isLeaf);\n    }\n\n    return originalOnMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, !isLeaf && reportMaterialized, json, branchSelector, true, onMaterialize, modelRoot);\n}\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar clone = __webpack_require__(7);\nvar onValueType = __webpack_require__(16);\nvar FalcorJSON = __webpack_require__(2);\nvar NullInPathError = __webpack_require__(3);\nvar InvalidKeySetError = __webpack_require__(12);\nvar materializedAtom = __webpack_require__(6);\n\nmodule.exports = onMaterializeFlatBuffer;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterializeFlatBuffer(json, path, depth, length, branchSelector, boxValues, modelRoot, results, requestedPath, optimizedPath, optimizedLength, fromReference, reportMissing, onMissing) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === path) {\n        onValueType(undefined, undefined, json, path, depth, undefined, results, requestedPath, depth, optimizedPath, optimizedLength, fromReference, modelRoot, undefined, false, branchSelector, boxValues, false, reportMissing, false, undefined, onMissing, undefined);\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta, f_old_keys, f_new_keys;\n\n    var nextKey,\n        keyset,\n        keyIsRange,\n        keys = path['$keys'],\n        nextDepth = depth + 1,\n        rangeEnd,\n        nextOptimizedLength = optimizedLength + 1;\n\n    if (!json || typeofObject !== typeof json) {\n        json = {};\n        json.__proto__ = FalcorJSON.prototype;\n        json[\"\u001eƒ_meta\"] = f_meta = {};\n        f_meta[\"version\"] = modelRoot.version;\n        f_meta[\"abs_path\"] = optimizedPath.slice(0, optimizedLength);\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[\"\u001eƒ_meta\"])) {\n        json[\"\u001eƒ_meta\"] = f_meta = {};\n        f_meta[\"version\"] = modelRoot.version;\n        f_meta[\"abs_path\"] = optimizedPath.slice(0, optimizedLength);\n    } else {\n        f_old_keys = f_meta[\"keys\"];\n        f_meta[\"version\"] = modelRoot.version;\n        f_meta[\"abs_path\"] = optimizedPath.slice(0, optimizedLength);\n    }\n\n    f_new_keys = Object.create(null);\n\n    var nextPath;\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    iteratingKeyset: while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if (typeofObject !== typeof keyset) {\n                nextKey = keyset;\n                rangeEnd = undefined;\n                keyIsRange = false;\n            }\n            // If the Keyset isn't null or primitive, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if (typeofNumber !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && nextKey in f_old_keys) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // insert the materialized branch\n            json[nextKey] = onMaterializeFlatBuffer(json[nextKey], nextPath, nextDepth, nextDepth, branchSelector, boxValues, modelRoot, results, requestedPath, optimizedPath, nextOptimizedLength, fromReference, reportMissing, onMissing);\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n    }\n\n    f_meta['$code'] = '__missing__';\n    f_meta[\"keys\"] = f_new_keys;\n    if (f_old_keys) {\n        for (nextKey in f_old_keys) {\n            if (f_old_keys[nextKey]) {\n                delete json[nextKey];\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isInternalKey = __webpack_require__(20);\n\n/**\n * decends and copies the cache.\n */\nmodule.exports = function getCache(cache) {\n    var out = {};\n    _copyCache(cache, out);\n\n    return out;\n};\n\nfunction cloneBoxedValue(boxedValue) {\n    var clonedValue = {};\n\n    var keys = Object.keys(boxedValue);\n    var key;\n    var i;\n    var l;\n\n    for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n\n        if (key === '$type' || !isInternalKey(key)) {\n            clonedValue[key] = boxedValue[key];\n        }\n    }\n\n    return clonedValue;\n}\n\nfunction _copyCache(node, out, fromKey) {\n    // copy and return\n\n    // only copy objects\n    if (!node || typeof node !== 'object') {\n        return;\n    }\n\n    Object.keys(node).filter(function (key) {\n        // Its not an internal key and the node has a value.  In the cache\n        // there are 3 possibilities for values.\n        // 1: A branch node.\n        // 2: A $type-value node.\n        // 3: undefined\n        // We will strip out 3\n        return (key === '$type' || !isInternalKey(key)) && node[key] !== undefined;\n    }).forEach(function (key) {\n        var cacheNext = node[key];\n        var outNext = out[key];\n\n        if (!outNext) {\n            outNext = out[key] = {};\n        }\n\n        // Paste the node into the out cache.\n        if (cacheNext.$type) {\n            var isObject = cacheNext.value && typeof cacheNext.value === 'object';\n            var isUserCreatedcacheNext = !cacheNext[\"\u001eƒ_wrapped_value\"];\n            var value;\n            if (isObject || isUserCreatedcacheNext) {\n                value = cloneBoxedValue(cacheNext);\n            } else {\n                value = cacheNext.value;\n            }\n\n            out[key] = value;\n            return;\n        }\n\n        _copyCache(cacheNext, outNext, key);\n    });\n}\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar getBoundCacheNode = __webpack_require__(17);\n\nmodule.exports = function _getVersion(model, path) {\n    var node = getBoundCacheNode(model, path);\n    var version = node && node[\"\u001eƒ_version\"];\n    return version == null ? -1 : version;\n};\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar groupCacheArguments = __webpack_require__(45);\n\nmodule.exports = {\n    json: invalidate,\n    jsonGraph: invalidate,\n    invalidatePathMaps: __webpack_require__(47),\n    invalidatePathValues: __webpack_require__(28)\n};\n\nfunction invalidate(model, args, seed, progressive, expireImmediate) {\n    if (invalidateArgumentGroups(model, groupCacheArguments(args), expireImmediate)) {\n        var rootChangeHandler = model._root.onChange;\n        rootChangeHandler && rootChangeHandler();\n    }\n    return {};\n}\n\nfunction invalidateArgumentGroups(model, xs, expireImmediate) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            if (inputType === 'PathValues') {\n                groupedArgs = groupedArgs.map(pluckPaths);\n            }\n            var operation = module.exports['invalidate' + inputType];\n            if (operation(model, groupedArgs, expireImmediate)) {\n                changed = true;\n            }\n        }\n    }\n    return changed;\n}\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar wrapNode = __webpack_require__(51);\nvar isExpired = __webpack_require__(0);\nvar insertNode = __webpack_require__(46);\nvar expireNode = __webpack_require__(1);\nvar replaceNode = __webpack_require__(50);\nvar getSize = __webpack_require__(9);\nvar reconstructPath = __webpack_require__(49);\nvar getTimestamp = __webpack_require__(33);\nvar updateNodeAncestors = __webpack_require__(11);\n\nmodule.exports = function mergeJSONGraphNode(parent, node, message, key, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var sizeOffset;\n\n    var cType, mType, cIsObject, mIsObject, cTimestamp, mTimestamp;\n\n    // If the cache and message are the same, we can probably return early:\n    // - If they're both nullsy,\n    //   - If null then the node needs to be wrapped in an atom and inserted.\n    //     This happens from whole branch merging when a leaf is just a null value\n    //     instead of being wrapped in an atom.\n    //   - If undefined then return null (previous behavior).\n    // - If they're both branches, return the branch.\n    // - If they're both edges, continue below.\n    if (node === message) {\n\n        // The message and cache are both undefined, return undefined.\n        if (message === undefined) {\n            return message;\n        }\n        // There should not be undefined values. Those should always be\n        // wrapped in an $atom\n        else if (message === null) {\n                node = wrapNode(message, undefined, message);\n                parent = updateNodeAncestors(parent, -node.$size, lru, version);\n                node = insertNode(node, parent, key, undefined, optimizedPath);\n                return node;\n            }\n            // Is the cache node a branch? If so, return the cache branch.\n            else if ((cIsObject = !(!node || typeof node !== 'object')) && (cType = node.$type) === undefined) {\n                    // Has the branch been introduced to the cache yet? If not,\n                    // give it a parent, key, and absolute path.\n                    if (node[\"\u001eƒ_parent\"] === undefined) {\n                        insertNode(node, parent, key, version, optimizedPath);\n                    }\n                    return node;\n                }\n    } else if (cIsObject = !(!node || typeof node !== 'object')) {\n        cType = node.$type;\n    }\n\n    // If the cache isn't a reference, we might be able to return early.\n    if (cType !== \"ref\") {\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n        }\n        if (cIsObject && !cType) {\n            // If the cache is a branch and the message is empty or\n            // also a branch, continue with the cache branch.\n            if (message == null || mIsObject && !mType) {\n                return node;\n            }\n        }\n    }\n    // If the cache is a reference, we might not need to replace it.\n    else {\n            // If the cache is a reference, but the message is empty,\n            // leave the cache alone...\n            if (message == null) {\n                // ...unless the cache is an expired reference. In that case, expire\n                // the cache node and return undefined.\n                if (isExpired(node, expireImmediate)) {\n                    expireNode(node, expired, lru);\n                    return void 0;\n                }\n                return node;\n            }\n            mIsObject = !(!message || typeof message !== 'object');\n            if (mIsObject) {\n                mType = message.$type;\n                // If the cache and the message are both references,\n                // check if we need to replace the cache reference.\n                if (mType === \"ref\") {\n                    if (node === message) {\n                        // If the cache and message are the same reference,\n                        // we performed a whole-branch merge of one of the\n                        // grandparents. If we've previously graphed this\n                        // reference, break early. Otherwise, continue to\n                        // leaf insertion below.\n                        if (node[\"\u001eƒ_parent\"] != null) {\n                            return node;\n                        }\n                    } else {\n\n                        cTimestamp = node.$timestamp;\n                        mTimestamp = message.$timestamp;\n\n                        // - If either the cache or message reference is expired,\n                        //   replace the cache reference with the message.\n                        // - If neither of the references are expired, compare their\n                        //   timestamps. If either of them don't have a timestamp,\n                        //   or the message's timestamp is newer, replace the cache\n                        //   reference with the message reference.\n                        // - If the message reference is older than the cache\n                        //   reference, short-circuit.\n                        if (!isExpired(node, expireImmediate) && !isExpired(message, expireImmediate) && mTimestamp < cTimestamp) {\n                            return void 0;\n                        }\n                    }\n                }\n            }\n        }\n\n    // If the cache is a leaf but the message is a branch,\n    // merge the branch over the leaf.\n    if (cType && mIsObject && !mType) {\n        return insertNode(replaceNode(node, message, parent, key, lru, version), parent, key, undefined, optimizedPath);\n    }\n    // If the message is a sentinel or primitive, insert it into the cache.\n    else if (mType || !mIsObject) {\n\n            if (mType === \"error\" && errorSelector) {\n                message = errorSelector(reconstructPath(requestedPath, key), message);\n            }\n\n            // If the cache and the message are the same value, we branch-merged one\n            // of the message's ancestors. If this is the first time we've seen this\n            // leaf, give the message a $size and $type, attach its graph pointers,\n            // and update the cache sizes and versions.\n            if (mType && node === message) {\n                if (!node[\"\u001eƒ_parent\"]) {\n                    node = wrapNode(node, cType, node.value);\n                    parent = updateNodeAncestors(parent, -node.$size, lru, version);\n                    node = insertNode(node, parent, key, version, optimizedPath);\n                }\n            }\n            // If the cache and message are different, the cache value is expired,\n            // or the message is a primitive, replace the cache with the message value.\n            // If the message is a sentinel, clone and maintain its type.\n            // If the message is a primitive value, wrap it in an atom.\n            else {\n                    var isDistinct = true;\n                    // If both the cache and message are primitives, we branch-merged\n                    // one of the message's ancestors. Insert the value into the cache.\n                    if (!cType && !mType) {\n                        isDistinct = true;\n                    }\n                    // If the cache is a branch, but the message is a leaf, replace the\n                    // cache branch with the message leaf.\n                    else if (!cIsObject || !isExpired(node, expireImmediate)) {\n                            // Compare the current cache value with the new value. If either of\n                            // them don't have a timestamp, or the message's timestamp is newer,\n                            // replace the cache value with the message value. If a comparator\n                            // is specified, the comparator takes precedence over timestamps.\n                            if (comparator) {\n                                isDistinct = !(comparator.length < 3 ? comparator(node, message) : comparator(node, message, optimizedPath.slice(0, optimizedPath.index)));\n                            } else {\n                                // Comparing either Number or undefined to undefined always results in false.\n                                isDistinct = getTimestamp(message) < getTimestamp(node) === false;\n                            }\n                        }\n                    if (isDistinct) {\n                        sizeOffset = getSize(node) - getSize(message = wrapNode(message, mType, mType ? message.value : message));\n                        node = replaceNode(node, message, parent, key, lru, version);\n                        parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n                        node = insertNode(node, parent, key, version, optimizedPath);\n                    }\n                }\n\n            // Promote the message edge in the LRU.\n            if (isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge.\n             */\n            true)) {\n                expireNode(node, expired, lru);\n            }\n        } else if (node == null) {\n            node = insertNode(message, parent, key, undefined, optimizedPath);\n        }\n\n    return node;\n};\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar getJSON = __webpack_require__(24);\nvar getJSONGraph = __webpack_require__(25);\nvar arrayFlatMap = __webpack_require__(99);\nvar groupCacheArguments = __webpack_require__(45);\n\nmodule.exports = {\n    json: json,\n    jsonGraph: jsonGraph,\n    setPathMaps: __webpack_require__(19),\n    setPathValues: __webpack_require__(30),\n    setJSONGraphs: __webpack_require__(18)\n};\n\nfunction json(model, _args, data, progressive, expireImmediate) {\n\n    var set,\n        get,\n        jsong,\n        changed,\n        relative,\n        optimized,\n        missing,\n        fragments,\n        requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args, expireImmediate);\n\n    if ((relative = set.requested).length) {\n\n        if (!(changed = set.changed) || progressive) {\n            get = getJSON(model, relative, data, progressive, expireImmediate);\n        }\n\n        if (changed) {\n\n            jsong = getJSONGraph({\n                _root: model._root,\n                _boxed: model._boxed, _materialized: true,\n                _treatErrorsAsValues: model._treatErrorsAsValues\n            }, set.optimized, {}, progressive, expireImmediate);\n\n            fragments = jsong.data;\n            missing = fragments.paths;\n            requested = jsong.requested;\n\n            var rootChangeHandler = model._root.onChange;\n            rootChangeHandler && rootChangeHandler();\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: get && get.error,\n        errors: get && get.errors,\n        hasValue: get && get.hasValue\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive, expireImmediate) {\n\n    var set,\n        jsong,\n        changed,\n        relative,\n        optimized,\n        missing,\n        fragments,\n        requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args, expireImmediate);\n\n    if ((relative = set.requested).length && (progressive || (changed = set.changed))) {\n\n        jsong = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed, _materialized: true,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, set.optimized, data, progressive, expireImmediate);\n\n        fragments = jsong.data;\n        missing = fragments.paths;\n        requested = jsong.requested;\n\n        if (changed) {\n            var rootChangeHandler = model._root.onChange;\n            rootChangeHandler && rootChangeHandler();\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: jsong && jsong.error,\n        hasValue: jsong && jsong.hasValue\n    };\n}\n\nfunction setGroupsIntoCache(model, xs, expireImmediate) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var modelRoot = model._root;\n    var errorSelector = modelRoot.errorSelector;\n\n    expireImmediate = expireImmediate && !Boolean(model._source);\n    var comparator = Boolean(model._source) ? null : modelRoot.comparator;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            var operation = module.exports['set' + inputType];\n            var results = operation(model, groupedArgs, errorSelector, comparator, expireImmediate);\n            changed = changed || results[2];\n            optimizedPaths.push.apply(optimizedPaths, results[1]);\n            if (inputType === 'PathValues') {\n                requestedPaths.push.apply(requestedPaths, groupedArgs.map(pluckPaths));\n            } else if (inputType === 'JSONGraphs') {\n                requestedPaths.push.apply(requestedPaths, arrayFlatMap(groupedArgs, pluckPaths));\n            } else {\n                requestedPaths.push.apply(requestedPaths, results[0]);\n            }\n        }\n    }\n\n    return {\n        changed: changed,\n        requested: requestedPaths,\n        optimized: optimizedPaths\n    };\n}\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function transferBackReferences(fromNode, destNode) {\n    var fromNodeRefsLength = fromNode[\"\u001eƒ_refs_length\"] || 0,\n        destNodeRefsLength = destNode[\"\u001eƒ_refs_length\"] || 0,\n        i = -1;\n    while (++i < fromNodeRefsLength) {\n        var ref = fromNode[\"\u001eƒ_ref\" + i];\n        if (ref !== undefined) {\n            ref[\"\u001eƒ_context\"] = destNode;\n            destNode[\"\u001eƒ_ref\" + (destNodeRefsLength + i)] = ref;\n            fromNode[\"\u001eƒ_ref\" + i] = undefined;\n        }\n    }\n    destNode[\"\u001eƒ_refs_length\"] = fromNodeRefsLength + destNodeRefsLength;\n    fromNode[\"\u001eƒ_refs_length\"] = undefined;\n    return destNode;\n};\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function unlinkBackReferences(node) {\n    var i = -1,\n        n = node[\"\u001eƒ_refs_length\"] || 0;\n    while (++i < n) {\n        var ref = node[\"\u001eƒ_ref\" + i];\n        if (ref != null) {\n            ref[\"\u001eƒ_context\"] = ref[\"\u001eƒ_ref_index\"] = node[\"\u001eƒ_ref\" + i] = void 0;\n        }\n    }\n    node[\"\u001eƒ_refs_length\"] = void 0;\n    return node;\n};\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function unlinkForwardReference(reference) {\n    var destination = reference[\"\u001eƒ_context\"];\n    if (destination) {\n        var i = (reference[\"\u001eƒ_ref_index\"] || 0) - 1,\n            n = (destination[\"\u001eƒ_refs_length\"] || 0) - 1;\n        while (++i <= n) {\n            destination[\"\u001eƒ_ref\" + i] = destination[\"\u001eƒ_ref\" + (i + 1)];\n        }\n        destination[\"\u001eƒ_refs_length\"] = n;\n        reference[\"\u001eƒ_ref_index\"] = reference[\"\u001eƒ_context\"] = destination = void 0;\n    }\n    return reference;\n};\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = hasValidParentReference;\n\nfunction hasValidParentReference() {\n    var reference = this._referenceContainer;\n\n    // Always true when this mode is false.\n    if (!this._allowFromWhenceYouCame) {\n        return true;\n    }\n\n    // If fromWhenceYouCame is true and the first set of keys did not have\n    // a reference, this case can happen.  They are always valid.\n    if (reference === true) {\n        return true;\n    }\n\n    // was invalid before even derefing.\n    if (reference === false) {\n        return false;\n    }\n\n    // Its been disconnected (set over or collected) from the graph.\n    if (reference && reference[\"\u001eƒ_parent\"] === undefined) {\n        return false;\n    }\n\n    // The reference has expired but has not been collected from the graph.\n    if (reference && reference[\"\u001eƒ_invalidated\"]) {\n        return false;\n    }\n\n    return true;\n}\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar CONTAINER_DOES_NOT_EXIST = 'e';\nvar FalcorJSON = __webpack_require__(2);\nvar getCachePosition = __webpack_require__(10);\nvar InvalidDerefInputError = __webpack_require__(89);\n\nmodule.exports = function deref(json) {\n\n    var seed, f_meta;\n\n    if (!json || 'object' !== typeof json || !(f_meta = json[\"\u001eƒ_meta\"]) || 'object' !== typeof f_meta) {\n        return null;\n    }\n\n    var cacheRoot = this._root.cache;\n    var recycleJSON = this._recycleJSON;\n    var absolutePath = f_meta[\"abs_path\"];\n    var referenceContainer, currentRefPath, i, len;\n\n    if (!absolutePath) {\n        if (recycleJSON) {\n            seed = { json: json };\n            seed.__proto__ = FalcorJSON.prototype;\n        }\n        return this._clone({\n            _node: undefined,\n            _seed: seed\n        });\n    } else if (absolutePath.length === 0) {\n        if (recycleJSON) {\n            seed = { json: json };\n            seed.__proto__ = FalcorJSON.prototype;\n        }\n        return this._clone({\n            _node: cacheRoot,\n            _path: absolutePath,\n            _referenceContainer: true,\n            _seed: seed\n        });\n    }\n\n    var originalRefPath = f_meta[\"deref_to\"];\n    var originalAbsPath = f_meta[\"deref_from\"];\n\n    // We deref and then ensure that the reference container is attached to\n    // the model.\n    var cacheNode = getCachePosition(cacheRoot, absolutePath);\n    var validContainer = CONTAINER_DOES_NOT_EXIST;\n\n    if (originalAbsPath) {\n\n        validContainer = false;\n\n        i = -1;\n        len = originalAbsPath.length;\n        referenceContainer = cacheRoot;\n        while (++i < len) {\n            referenceContainer = referenceContainer[originalAbsPath[i]];\n            if (!referenceContainer || referenceContainer.$type) {\n                break;\n            }\n        }\n\n        // If the reference container is still a sentinel value then compare\n        // the reference value with refPath.  If they are the same, then the\n        // model is still valid.\n        if (originalRefPath && referenceContainer && referenceContainer.$type === \"ref\") {\n            validContainer = true;\n            len = originalRefPath.length;\n            currentRefPath = referenceContainer.value;\n            for (i = 0; i < len; ++i) {\n                if (currentRefPath[i] !== originalRefPath[i]) {\n                    cacheNode = undefined;\n                    validContainer = false;\n                    break;\n                }\n            }\n        }\n    }\n\n    // Signal to the deref'd model that it has been disconnected from the\n    // graph or there is no _fromWhenceYouCame\n    if (!validContainer) {\n        referenceContainer = false;\n    }\n\n    // The container did not exist, therefore there is no reference\n    // container and fromWhenceYouCame should always return true.\n    else if (validContainer === CONTAINER_DOES_NOT_EXIST) {\n            referenceContainer = true;\n        }\n\n    if (recycleJSON) {\n        seed = { json: json };\n        seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    return this._clone({\n        _seed: seed,\n        _node: cacheNode,\n        _path: absolutePath,\n        _referenceContainer: referenceContainer\n    });\n};\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\nvar MESSAGE = 'It is not legal to use the JSON Graph ' + 'format from a bound Model. JSON Graph format' + ' can only be used from a root model.';\n\n/**\n * When a bound model attempts to retrieve JSONGraph it should throw an\n * error.\n *\n * @private\n */\nmodule.exports = createErrorClass('BoundJSONGraphModelError', function () {\n    this.message = MESSAGE;\n});\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\nvar MESSAGE = 'Deref can only be used with a non-primitive object from get, set, or call.';\n\n/**\n * An invalid deref input is when deref is used with input that is not generated\n * from a get, set, or a call.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidDerefInputError', function () {\n  this.message = MESSAGE;\n});\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\nvar MESSAGE = 'The boundPath of the model is not valid since a value or error was found before the path end.';\n\n/**\n * An InvalidModelError can only happen when a user binds, whether sync\n * or async to shorted value.  See the unit tests for examples.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidModelError', function (boundPath, shortedPath) {\n  this.message = MESSAGE;\n  this.boundPath = boundPath;\n  this.shortedPath = shortedPath;\n});\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\n\n/**\n * A request can only be retried up to a specified limit.  Once that\n * limit is exceeded, then an error will be thrown.\n *\n * @private\n */\nmodule.exports = createErrorClass('MaxRetryExceededError', function (maxRetryCount, absolute, relative, optimized) {\n    this.message = '' + 'Exceeded the max retry count (' + maxRetryCount + ') for these paths: \\n' + (absolute && 'absolute: [\\n\\t' + printPaths(absolute) + '\\n]\\n' || '') + (relative && 'relative: [\\n\\t' + printPaths(relative) + '\\n]\\n' || '') + (optimized && 'optimized: [\\n\\t' + printPaths(optimized) + '\\n]\\n' || '');\n});\n\nfunction printPaths(paths) {\n    return paths.map(function (path) {\n        return JSON.stringify(path);\n    }).join(',\\n\\t');\n}\n\n/***/ },\n/* 92 */\n/***/ function(module, exports) {\n\nmodule.exports = String.fromCharCode(30) + 'ƒ_';\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar updateNodeAncestors = __webpack_require__(11);\n\nmodule.exports = function collect(lru, expired, totalArg, max, ratioArg, version) {\n\n    var total = totalArg;\n    var ratio = ratioArg;\n\n    if (typeof ratio !== 'number') {\n        ratio = 0.75;\n    }\n\n    var node,\n        size,\n        targetSize = max * ratio;\n\n    while (node = expired.pop()) {\n        total -= size = node.$size || 0;\n        updateNodeAncestors(node, size, lru, version);\n    }\n\n    if (total >= max) {\n        var prev = lru[\"\u001eƒ_tail\"];\n        while (total >= targetSize && (node = prev)) {\n            prev = prev[\"\u001eƒ_prev\"];\n            total -= size = node.$size || 0;\n            updateNodeAncestors(node, size, lru, version);\n        }\n\n        lru[\"\u001eƒ_tail\"] = node;\n        if (node == null) {\n            lru[\"\u001eƒ_head\"] = undefined;\n        } else {\n            node[\"\u001eƒ_next\"] = undefined;\n        }\n    }\n};\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Source = __webpack_require__(55);\nvar Subscriber = __webpack_require__(14);\nvar lruCollect = __webpack_require__(93);\nvar FalcorJSON = __webpack_require__(2);\nvar collapse = __webpack_require__(36);\nvar InvalidSourceError = __webpack_require__(53);\nvar MaxRetryExceededError = __webpack_require__(91);\n\nmodule.exports = Call;\n\nfunction Call(type, model, _args) {\n    Source.call(this, type);\n    if (model && _args) {\n        this.type = type;\n        this.source = this;\n        this.model = model;\n        this._args = _args;\n    }\n}\n\nCall.prototype = Object.create(Source.prototype);\n\nCall.prototype.lift = function (operator, source) {\n    source = new Call(source || this);\n    source.type = this.type;\n    source.model = this.model;\n    source._args = this._args;\n    source.operator = operator;\n    operator.data = operator.data || this.operator.data;\n    operator.errors = operator.errors || this.operator.errors;\n    operator.operation = operator.operation || this.operator.operation;\n    operator.progressive = operator.progressive || this.operator.progressive;\n    operator.maxRetryCount = operator.maxRetryCount || this.operator.maxRetryCount;\n    return source;\n};\n\nCall.prototype.operator = function (subscriber) {\n    return this._subscribe(subscriber);\n};\n\nCall.prototype._subscribe = function (subscriber) {\n    subscriber.onNext({\n        type: this.type,\n        args: this._args,\n        model: this.model,\n        version: this.model._root.version\n    });\n    subscriber.onCompleted();\n    return subscriber;\n};\n\nCall.prototype._toJSON = function (data, errors) {\n    if (data === undefined) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    return this.lift(new CallOperator(data, errors || this.operator.errors, 'json', this.operator.progressive, this.operator.maxRetryCount), this.source);\n};\n\nCall.prototype._toJSONG = function (data, errors) {\n    if (data === undefined) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    return this.lift(new CallOperator(data, errors || this.operator.errors, 'jsonGraph', this.operator.progressive, this.operator.maxRetryCount), this.source);\n};\n\nCall.prototype.retry = function (maxRetryCount) {\n    return this.lift(new CallOperator(this.operator.data, this.operator.errors, this.operator.operation, this.operator.progresive, maxRetryCount), this.source);\n};\n\nCall.prototype.progressively = function () {\n    return this.lift(new CallOperator(this.operator.data, this.operator.errors, this.operator.operation, true, this.operator.maxRetryCount), this.source);\n};\n\nfunction CallOperator(data, errors, operation, progressive, maxRetryCount) {\n    this.data = data;\n    this.errors = errors;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallOperator.prototype.call = function (source, destination) {\n    return source.subscribe(new CallSubscriber(destination, this.data, this.errors, this.operation, this.progressive));\n};\n\nfunction CallSubscriber(destination, data, errors, operation, progressive, maxRetryCount) {\n    Subscriber.call(this, destination);\n    this.data = data;\n    this.retryCount = -1;\n    this.errors = errors;\n    this.hasValue = false;\n    this.completed = false;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallSubscriber.prototype = Object.create(Subscriber.prototype);\nCallSubscriber.prototype.operations = {\n    get: __webpack_require__(70),\n    set: __webpack_require__(82),\n    call: __webpack_require__(69),\n    invalidate: __webpack_require__(80)\n};\n\nCallSubscriber.prototype.next = CallSubscriber.prototype.onNext = function (seed) {\n\n    if (!this.started) {\n        this.args = seed.args;\n        this.type = seed.type;\n        this.model = seed.model;\n        this.version = seed.version;\n        this.maxRetryCount = this.maxRetryCount || this.model._root.maxRetryCount;\n        return;\n    } else if (!this.destination) {\n        return;\n    }\n\n    var missing, fragments;\n    var type = seed.type;\n    var args = seed.args || seed.paths;\n\n    var data = this.data;\n    var model = this.model;\n    var errors = this.errors;\n    var results = this.results;\n    var version = this.version;\n    var hasValue = this.hasValue;\n    var operation = this.operation;\n    var progressive = this.progressive;\n    var seedIsImmutable = progressive && data;\n\n    if (model._recycleJSON && this.type === 'get') {\n        seedIsImmutable = false;\n    }\n\n    // If we request paths as JSON in progressive mode, ensure each progressive\n    // valueNode is immutable. If not in progressive mode, we can write into the\n    // same JSON tree until the request is completed.\n    if (seedIsImmutable) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n\n    if (args && args.length) {\n\n        results = this.operations[type][operation](model, args, data, progressive || !model._source, this.retryCount === -1);\n\n        // We must communicate critical errors from get, such as bound path is\n        // broken or this is a JSONGraph request with a bound path.\n        if (results.error) {\n            return tryOnError(this, results.error);\n        }\n\n        errors && results.errors && errors.push.apply(errors, results.errors);\n\n        if (fragments = results.fragments) {\n            args = results.args;\n            this.fragments = fragments;\n        }\n\n        this.relative = results.relative;\n        this.requested = results.requested;\n        this.missing = missing = results.missing;\n        this.hasValue = hasValue || (hasValue = results.hasValue);\n    }\n\n    // We are done when there are no missing paths or\n    // the model does not have a dataSource to fetch from.\n    this.completed = !missing || !model._source;\n\n    if (type !== 'set') {\n        this.args = args;\n        if (seedIsImmutable) {\n            this.data = mergeInto(data, this.data);\n        }\n    }\n\n    if (progressive && hasValue && data && (data.json || data.jsonGraph)) {\n        tryOnNext(data, operation, model._root, this.destination);\n    }\n};\n\nCallSubscriber.prototype.error = CallSubscriber.prototype.onError = function (error) {\n    if (error instanceof InvalidSourceError) {\n        return Subscriber.prototype.onError.call(this, error);\n    }\n    this.errored = true;\n    this.onCompleted(error);\n};\n\nCallSubscriber.prototype.complete = CallSubscriber.prototype.onCompleted = function (error) {\n\n    if (!this.destination) {\n        return;\n    }\n\n    var data, type, errors, errored;\n\n    if (!this.started && (this.started = true)) {\n        this.onNext(this);\n    } else if (errored = this.errored) {\n        this.onNext({ type: 'get', paths: this.relative });\n    }\n\n    if (errored || this.completed) {\n        if (!this.progressive && this.hasValue && ((data = this.data) && data.json || data.jsonGraph)) {\n            tryOnNext(data, this.operation, this.model._root, this.destination);\n        }\n        errors = this.errors;\n        if (errored || error || errors && errors.length) {\n            return tryOnError(this, errors.length && errors || error);\n        }\n\n        return Subscriber.prototype.onCompleted.call(this);\n    }\n\n    if (++this.retryCount >= this.maxRetryCount) {\n        return tryOnError(this, new MaxRetryExceededError(this.retryCount, this.requested, this.relative, this.missing));\n    }\n\n    this.request = this.model._root.requests[this.type](this.model, this.missing, this.relative, this.fragments).subscribe(this);\n};\n\nCallSubscriber.prototype.dispose = CallSubscriber.prototype.unsubscribe = function () {\n\n    var model = this.model;\n    var version = this.version;\n    var request = this.request;\n\n    this.args = null;\n    this.data = null;\n    this.model = null;\n    this.errors = null;\n    this.errored = false;\n    this.started = false;\n    this.hasValue = false;\n    this.completed = false;\n\n    Subscriber.prototype.dispose.call(this);\n\n    if (request) {\n        this.request = null;\n        request.dispose();\n    }\n\n    if (model) {\n\n        var modelRoot = model._root;\n        var cache = modelRoot.cache;\n        var shouldCollectCache = modelRoot.syncRefCount <= 0 && version !== modelRoot.version;\n\n        // Prune the cache via the LRU if this is the last request.\n        if (shouldCollectCache) {\n\n            if (cache) {\n                lruCollect(modelRoot, modelRoot.expired, cache.$size || 0, modelRoot.maxSize, modelRoot.collectRatio, modelRoot.version);\n            }\n\n            var rootOnChangesCompletedHandler = modelRoot.onChangesCompleted;\n\n            if (rootOnChangesCompletedHandler) {\n                rootOnChangesCompletedHandler.call(modelRoot.topLevelModel);\n            }\n        }\n    }\n};\n\nfunction tryOnNext(data, operation, modelRoot, destination) {\n    if (operation === 'jsonGraph' && data.paths) {\n        data.paths = collapse(data.paths);\n    }\n    try {\n        ++modelRoot.syncRefCount;\n        destination.onNext(data);\n    } catch (e) {\n        throw e;\n    } finally {\n        --modelRoot.syncRefCount;\n    }\n}\n\nfunction tryOnError(self, error) {\n    try {\n        throw error;\n    } catch (err) {\n        Subscriber.prototype.onError.call(self, err);\n    }\n}\n\nfunction mergeInto(dest, node) {\n\n    var destValue,\n        nodeValue,\n        key,\n        keys = Object.keys(node),\n        index = -1,\n        length = keys.length;\n\n    while (++index < length) {\n\n        key = keys[index];\n\n        if (key === \"\u001eƒ_meta\") {\n            dest[\"\u001eƒ_meta\"] = node[\"\u001eƒ_meta\"];\n        } else {\n\n            nodeValue = node[key];\n            destValue = dest[key];\n\n            if (destValue !== nodeValue) {\n                if (!nodeValue || typeof nodeValue !== 'object') {\n                    if (destValue === undefined) {\n                        dest[key] = nodeValue;\n                    }\n                } else if (destValue === undefined) {\n                    dest[key] = nodeValue;\n                } else {\n                    mergeInto(destValue, nodeValue);\n                }\n            }\n        }\n    }\n\n    return dest;\n}\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Source = __webpack_require__(55);\nvar Request = __webpack_require__(96);\nvar Subscriber = __webpack_require__(14);\nvar Subscription = __webpack_require__(15);\nvar ImmediateScheduler = __webpack_require__(56);\n\nmodule.exports = Queue;\n\nfunction Queue(modelRoot) {\n    Subscription.call(this, []);\n    this.modelRoot = modelRoot;\n}\n\nQueue.prototype = Object.create(Subscription.prototype);\n\nQueue.prototype.set = isolateSet;\nQueue.prototype.call = isolateCall;\nQueue.prototype.get = batchAndDedupeGet;\n\nfunction isolateSet(model, optimized, requested, env) {\n    var queue = this;\n    return new Source(function (destination) {\n\n        var request = new Request('set', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = env.jsonGraph;\n        request.requested.push(requested);\n        request.optimized.push(optimized);\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction isolateCall(model, optimized, requested, callArgs) {\n    var queue = this;\n    return new Source(function (destination) {\n\n        var request = new Request('call', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = callArgs;\n        request.boundPath = model._path;\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction batchAndDedupeGet(model, optimized, requested) {\n    return new Dedupe(this, model._source, model._scheduler, requested, optimized);\n}\n\nfunction Dedupe(queue, source, scheduler, requested, optimized) {\n    this.queue = queue;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n    this.requested = requested;\n    this.optimized = optimized;\n}\n\nDedupe.prototype.subscribe = function (destination) {\n\n    var queue = this.queue;\n    var source = this.dataSource;\n    var requested = this.requested;\n    var optimized = this.optimized;\n    var scheduler = this.scheduler;\n\n    var requestsIndex = -1;\n    var requests = queue.subscriptions;\n    var requestsCount = requests.length;\n    var subscription = new Subscription([], destination);\n\n    while (++requestsIndex < requestsCount) {\n\n        var request = requests[requestsIndex];\n\n        if (request.type !== 'get') {\n            continue;\n        }\n\n        if (request = request.batch(requested, optimized, requested = [], optimized = [])) {\n            subscription.add(request.subscribe(new Subscriber(destination, request)));\n        }\n\n        if (!optimized.length) {\n            break;\n        }\n    }\n\n    if (optimized.length) {\n        request = requests[requestsIndex] = new Request('get', queue, source, scheduler).batch(requested, optimized);\n        subscription.add(request.subscribe(new Subscriber(destination, request)));\n        request.connect();\n    }\n\n    return subscription;\n};\n\n/***/ },\n/* 96 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar Subject = __webpack_require__(97);\nvar Subscriber = __webpack_require__(14);\nvar Subscription = __webpack_require__(15);\nvar InvalidSourceError = __webpack_require__(53);\n\nvar setJSONGraphs = __webpack_require__(18);\nvar setPathValues = __webpack_require__(30);\nvar invalidatePaths = __webpack_require__(28);\n\nvar toPaths = __webpack_require__(39);\nvar toCollapseMap = __webpack_require__(37);\nvar toCollapseTrees = __webpack_require__(38);\nvar hasIntersection = __webpack_require__(63);\n\nmodule.exports = Request;\n\nfunction Request(type, queue, source, scheduler) {\n    Subject.call(this, [], queue);\n    this.tree = {};\n    this.paths = [];\n    this.type = type;\n    this.data = null;\n    this.active = false;\n    this.responded = false;\n    this.requested = [];\n    this.optimized = [];\n    this.disposable = null;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n}\n\nRequest.prototype = Object.create(Subject.prototype);\n\nRequest.prototype.next = Request.prototype.onNext = function (env) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    var changed = false;\n    var jsonGraph = env.jsonGraph;\n    var boundPath = this.boundPath;\n    var modelRoot = queue.modelRoot;\n    var invalidated = env.invalidated;\n    var paths = env.paths || this.paths;\n    var requested = this.requested.slice(0);\n    var rootChangeHandler = modelRoot.onChange;\n\n    // Run invalidations first.\n    if (invalidated && invalidated.length) {\n        changed = invalidatePaths({ _root: modelRoot, _path: [] }, invalidated, false);\n    }\n\n    if (paths && paths.length && !(!jsonGraph || typeof jsonGraph !== 'object')) {\n        var results = setJSONGraphs({ _root: modelRoot }, [{ paths: paths, jsonGraph: jsonGraph }], modelRoot.errorSelector, modelRoot.comparator, false);\n        paths = results[0];\n        changed = changed || results[2];\n    }\n\n    if (changed && rootChangeHandler) {\n        rootChangeHandler();\n    }\n\n    this.observers.slice(0).forEach(function (observer, index) {\n        observer.onNext({\n            type: 'get', paths: requested[index] || filterPathsBoundTo(boundPath, paths)\n        });\n    });\n};\n\nRequest.prototype.error = Request.prototype.onError = function (error) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    error = error || {};\n\n    // Converts errors to object we can insert into the cache.\n    error = !(error instanceof Error) ?\n    // if it's $type error, use it raw\n    error.$type === \"error\" && error ||\n    // Otherwise make it an error\n    { $type: \"error\", value: error } :\n    // If it's instanceof Error, pluck error.message\n    { $type: \"error\", value: { message: error.message } };\n\n    var modelRoot = queue.modelRoot;\n\n    var errorPathValues = toPaths(toCollapseTrees(this.requested.reduce(function (collapseMap, paths) {\n        return toCollapseMap(paths, collapseMap);\n    }, {}))).map(function (path) {\n        return { path: path, value: error };\n    });\n\n    if (errorPathValues.length) {\n        setPathValues({ _root: modelRoot, _path: [] }, errorPathValues, modelRoot.errorSelector, modelRoot.comparator, false);\n    }\n\n    Subject.prototype.onError.call(this, error);\n};\n\nRequest.prototype.complete = Request.prototype.onCompleted = function () {\n    if (this.responded === false) {\n        this.onNext({});\n    }\n    Subject.prototype.onCompleted.call(this);\n};\n\nRequest.prototype.remove = function (subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.requested.splice(index, 1);\n        this.optimized.splice(index, 1);\n        this.observers.splice(index, 1);\n        this.subscriptions.splice(index, 1);\n    }\n    if (this.subscriptions.length === 0) {\n        this.dispose();\n    }\n    return this;\n};\n\nRequest.prototype.dispose = Request.prototype.unsubscribe = function () {\n    this.tree = {};\n    this.data = null;\n    this.paths = null;\n    this.active = false;\n    this.boundPath = null;\n    this.requested = [];\n    this.optimized = [];\n    var queue = this.parent;\n    if (queue) {\n        this.parent = null;\n        queue.remove(this);\n    }\n    var disposable = this.disposable;\n    if (disposable) {\n        this.disposable = null;\n        if (disposable.dispose) {\n            disposable.dispose();\n        } else if (disposable.unsubscribe) {\n            disposable.unsubscribe();\n        }\n    }\n    Subject.prototype.dispose.call(this);\n};\n\nRequest.prototype.connect = function () {\n    if (!this.active && !this.disposable) {\n        var scheduledDisposable = this.scheduler.schedule(flush.bind(this));\n        if (!this.disposable) {\n            this.disposable = scheduledDisposable;\n        }\n    }\n    return this;\n};\n\nRequest.prototype.batch = function (requested, optimized, requestedComplements, optimizedComplements) {\n    if (this.active) {\n        var requestedIntersection = [];\n        var optimizedIntersection = [];\n        if (findIntersections(this.tree, requested, optimized, requestedComplements, optimizedComplements, requestedIntersection, optimizedIntersection)) {\n            this.requested.push(requestedIntersection);\n            this.optimized.push(optimizedIntersection);\n            return this;\n        }\n        return null;\n    }\n    this.requested.push(requested);\n    this.optimized.push(optimized);\n    return this;\n};\n\nfunction flush() {\n\n    this.active = true;\n\n    var obs,\n        paths = this.paths = toPaths(this.tree = toCollapseTrees(this.optimized.reduce(function (collapseMap, paths) {\n        return toCollapseMap(paths, collapseMap);\n    }, {})));\n\n    try {\n        switch (this.type) {\n            case 'get':\n                obs = this.dataSource.get(paths);\n                break;\n            case 'set':\n                obs = this.dataSource.set({ paths: paths, jsonGraph: this.data });\n                break;\n            case 'call':\n                obs = this.dataSource.call.apply(this.dataSource, this.data);\n                break;\n        }\n        this.disposable = obs.subscribe(this);\n    } catch (e) {\n        this.disposable = {};\n        Subject.prototype.onError.call(this, new InvalidSourceError(e));\n    }\n}\n\nfunction findIntersections(tree, requested, optimized, requestedComplements, optimizedComplements, requestedIntersection, optimizedIntersection) {\n\n    var index = -1;\n    var complementIndex = -1;\n    var intersectionIndex = -1;\n    var optTotal = optimized.length;\n    var reqTotal = requested.length - 1;\n\n    while (++index < optTotal) {\n        var path = optimized[index];\n        var pathLen = path.length;\n        var subTree = tree[pathLen];\n        if (subTree && hasIntersection(subTree, path, 0, pathLen)) {\n            optimizedIntersection[++intersectionIndex] = path;\n            requestedIntersection[intersectionIndex] = requested[index < reqTotal ? index : reqTotal];\n        } else {\n            optimizedComplements[++complementIndex] = path;\n            requestedComplements[complementIndex] = requested[index < reqTotal ? index : reqTotal];\n        }\n    }\n\n    return ~intersectionIndex;\n}\n\nfunction filterPathsBoundTo(boundPath, paths) {\n\n    var boundLength;\n\n    if (!boundPath || (boundLength = boundPath.length) === 0) {\n        return paths;\n    }\n\n    var filtered = [],\n        filteredIndex = -1,\n        keyIndex;\n    var path,\n        pathsIndex = -1,\n        pathsCount = paths.length;\n\n    outer: while (++pathsIndex < pathsCount) {\n        path = paths[pathsIndex];\n        if (path.length > boundLength) {\n            keyIndex = 0;\n            do {\n                if (path[keyIndex] !== boundPath[keyIndex]) {\n                    continue outer;\n                }\n            } while (++keyIndex < boundLength);\n            filtered[++filteredIndex] = path.slice(boundLength);\n        }\n    }\n\n    return filtered;\n}\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Subscriber = __webpack_require__(14);\nvar Subscription = __webpack_require__(15);\n\nmodule.exports = Subject;\n\nfunction Subject(observers, parent) {\n    Subscriber.call(this, null, parent);\n    this.observers = observers || [];\n}\n\nSubject.prototype = Object.create(Subscriber.prototype);\n\n// Unused\n// Subject.prototype.onNext = function(value) {\n//     this.observers.slice(0).forEach(function(observer) {\n//         observer.onNext(value);\n//     });\n// }\n\nSubject.prototype.onError = function (error) {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function (observer) {\n        observer.onError(error);\n    });\n};\n\nSubject.prototype.onCompleted = function () {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function (observer) {\n        observer.onCompleted();\n    });\n};\n\nSubject.prototype.subscribe = function (subscriber) {\n    this.observers.push(subscriber);\n    this.subscriptions.push(subscriber = new Subscription([subscriber], this));\n    return subscriber;\n};\n\nSubject.prototype.dispose = Subject.prototype.unsubscribe = function () {\n    this.observers = [];\n};\n\n/***/ },\n/* 98 */\n/***/ function(module, exports) {\n\nfunction TimeoutScheduler(delay) {\n    this.delay = delay;\n}\n\nvar TimerDisposable = function TimerDisposable(id) {\n    this.id = id;\n    this.disposed = false;\n};\n\nTimeoutScheduler.prototype.schedule = function schedule(action) {\n    return new TimerDisposable(setTimeout(action, this.delay));\n};\n\nTimerDisposable.prototype.dispose = TimerDisposable.prototype.unsubscribe = function () {\n    if (!this.disposed) {\n        clearTimeout(this.id);\n        this.id = null;\n        this.disposed = true;\n    }\n};\n\nmodule.exports = TimeoutScheduler;\n\n/***/ },\n/* 99 */\n/***/ function(module, exports) {\n\nmodule.exports = function arrayFlatMap(array, selector) {\n    var index = -1;\n    var i = -1;\n    var n = array.length;\n    var array2 = [];\n    while (++i < n) {\n        var array3 = selector(array[i], i, array);\n        var j = -1;\n        var k = array3.length;\n        while (++j < k) {\n            array2[++index] = array3[j];\n        }\n    }\n    return array2;\n};\n\n/***/ },\n/* 100 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar isInternal = __webpack_require__(32);\n\nmodule.exports = clone;\n\nfunction clone(source) {\n    var dest = source;\n    if (!(!dest || typeof dest !== 'object')) {\n        dest = isArray(source) ? [] : {};\n        for (var key in source) {\n            if (isInternal(key)) {\n                continue;\n            }\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n\n/***/ },\n/* 101 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(5);\nmodule.exports = function getSize(node) {\n    return isObject(node) && node.$expires || undefined;\n};\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(5);\n\nmodule.exports = function getType(node, anyType) {\n    var type = isObject(node) && node.$type || void 0;\n    if (anyType && type) {\n        return 'branch';\n    }\n    return type;\n};\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar isObject = __webpack_require__(5);\n\nmodule.exports = function isPathValue(pathValue) {\n    return isObject(pathValue) && (isArray(pathValue.path) || typeof pathValue.path === 'string');\n};\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(105);\n\n\n/***/ },\n/* 105 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global, module) {'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = __webpack_require__(106);\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (true) {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(35), __webpack_require__(107)(module)))\n\n/***/ },\n/* 106 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n/***/ },\n/* 107 */\n/***/ function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.l; }\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.i; }\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n/***/ },\n/* 108 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(61);\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// falcor.all.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 108);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 96035eb1ed6ea583f2d3","var now = require('../support/now');\nvar $now = require('../values/expires-now');\nvar $never = require('../values/expires-never');\n\nmodule.exports = function isExpired(node, expireImmediate) {\n    var exp = node.$expires;\n    if (exp === undefined || exp === null || exp === $never) {\n        return false;\n    } else if (exp === $now) {\n        return expireImmediate;\n    }\n    return exp < now();\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/isExpired.js","var splice = require('./../lru/splice');\n\nmodule.exports = function expireNode(node, expired, lru) {\n    if (!node[f_invalidated]) {\n        node[f_invalidated] = true;\n        expired.push(node);\n        splice(lru, node);\n    }\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/expireNode.js","function FalcorJSON(f_meta) {\n    if (!f_meta) {\n        this[f_meta_data] = {};\n    } else if (!(this[f_meta_data] = f_meta[f_meta_data])) {\n        this[f_meta_data] = f_meta;\n    }\n}\n\nObject.defineProperties(FalcorJSON.prototype, [\n        'concat', 'copyWithin', 'entries', 'every', 'fill', 'filter',\n        'find', 'findIndex', 'forEach', 'includes', 'indexOf', 'join',\n        'keys', 'lastIndexOf', 'map', 'pop', 'push', 'reduce', 'reduceRight',\n        'reverse', 'shift', 'slice', 'some', 'sort', 'splice', 'unshift', 'values'\n    ]\n    .reduce(function (descriptors, name) {\n        descriptors[name] = {\n            writable: true, enumerable: false,\n            value: bindArrayMethod(Array.prototype[name])\n        };\n        return descriptors;\n    }, {\n        toJSON: { enumerable: false, value: toJSON },\n        toProps: { enumerable: false, value: toProps },\n        toString: { enumerable: false, value: toString },\n        $__hash: {\n            enumerable: false,\n            get: function() {\n                var f_meta = this[f_meta_data];\n                return f_meta && f_meta['$code'] || '';\n            }\n        },\n        $__path: {\n            enumerable: false,\n            get: function() {\n                var f_meta = this[f_meta_data];\n                return f_meta && f_meta[f_meta_abs_path] || [];\n            }\n        },\n        $__version: {\n            enumerable: false,\n            get: function() {\n                var f_meta = this[f_meta_data];\n                return f_meta && f_meta[f_meta_version] || 0;\n            }\n        }\n    })\n);\n\nfunction bindArrayMethod(fn) {\n    return (bound.fn = fn) && bound;\n    function bound() {\n        return bound.fn.apply(this, arguments);\n    }\n}\n\nvar isArray = Array.isArray;\nvar typeofObject = 'object';\nvar typeofString = 'string';\n\nfunction getInst(inst) {\n    var typeofInst = typeof inst;\n    var argsLen = arguments.length;\n    if (argsLen === 0) {\n        inst = this;\n    } else if (typeofInst !== typeofString) {\n        if (!inst || typeofInst !== typeofObject) {\n            return inst;\n        }\n    } else if (argsLen !== 1) {\n        return inst;\n    } else {\n        inst = this;\n    }\n    return inst === global ? undefined : inst;\n}\n\nfunction toJSON() {\n    return serialize(getInst.apply(this, arguments), toJSON);\n}\n\nfunction toString(includeMetadata) {\n    return JSON.stringify(serialize(\n        getInst.call(this, this),\n        serialize, includeMetadata === true\n    ));\n}\n\nfunction toProps(inst) {\n\n    inst = getInst.apply(this, arguments);\n\n    var f_meta_inst, f_meta_json, version = 0;\n    var json = serialize(inst, toProps, true, true);\n\n    if (inst && (f_meta_inst = inst[f_meta_data])) {\n        version = f_meta_inst[f_meta_version];\n    }\n\n    if (!(!json || typeof json !== typeofObject)) {\n        if (f_meta_json = json[f_meta_data]) {\n            f_meta_json[f_meta_version] = version;\n        }\n    }\n\n    return json;\n}\n\nfunction serialize(inst, serializer, includeMetadata, createWithProto) {\n\n    if (!inst || typeof inst !== typeofObject) {\n        return inst;\n    }\n\n    var count, total, f_meta, keys, key, xs, ys;\n\n    if (isArray(inst)) {\n        xs = inst;\n    } else {\n\n        count = -1;\n        keys = Object.keys(inst);\n        total = keys.length;\n        xs = {};\n\n        if (createWithProto) {\n            xs.__proto__ = FalcorJSON.prototype;\n        }\n\n        if (includeMetadata && (f_meta = inst[f_meta_data])) {\n\n            var $code = f_meta['$code'];\n            var abs_path = f_meta[f_meta_abs_path];\n            var deref_to = f_meta[f_meta_deref_to];\n            var deref_from = f_meta[f_meta_deref_from];\n\n            f_meta = {};\n            $code && (f_meta['$code'] = $code);\n            abs_path && (f_meta[f_meta_abs_path] = abs_path);\n            deref_to && (f_meta[f_meta_deref_to] = deref_to);\n            deref_from && (f_meta[f_meta_deref_from] = deref_from);\n\n            xs[f_meta_data] = f_meta;\n\n            if (createWithProto) {\n                ys = {};\n                ys.__proto__ = xs;\n                xs = ys;\n            }\n        }\n\n        while (++count < total) {\n            if ((key = keys[count]) !== f_meta_data) {\n                xs[key] = serializer(inst[key], serializer, includeMetadata);\n            }\n        }\n    }\n\n    return xs;\n}\n\nmodule.exports = FalcorJSON;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/FalcorJSON.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = '`null` is not allowed in branch key positions.';\n\n/**\n * Do not allow null in path.\n */\nmodule.exports = createErrorClass('NullInPathError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/NullInPathError.js","module.exports = createErrorClass;\n\nfunction createErrorClass(name, init) {\n    function E(message) {\n        this.message = message;\n        init && init.apply(this, arguments);\n        if (!Error.captureStackTrace) {\n            this.stack = (new Error()).stack;\n        } else {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n    E.prototype = Object.create(Error.prototype);\n    E.prototype.name = name;\n    E.prototype.constructor = E;\n    E.is = function(x) { return x.name === name; };\n    return E;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/createErrorClass.js","module.exports = isObject;\n\nfunction isObject(value) {\n    return value !== null && typeof value === 'object';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isObject.js","module.exports = { $type: 'atom' };\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/support/materializedAtom.js","var isInternal = require('../internal/isInternal');\n\nmodule.exports = clone;\n\nfunction clone(node) {\n\n    var key, keys = Object.keys(node),\n        json = {}, index = -1, length = keys.length;\n\n    while (++index < length) {\n        key = keys[index];\n        if (isInternal(key)) {\n            continue;\n        }\n        json[key] = node[key];\n    }\n\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/clone.js","module.exports = function createHardlink(from, to) {\n\n    // create a back reference\n    var backRefs = to[f_refs_length] || 0;\n    to[f_ref + backRefs] = from;\n    to[f_refs_length] = backRefs + 1;\n\n    // create a hard reference\n    from[f_ref_index] = backRefs;\n    from[f_context] = to;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/createHardlink.js","var isObject = require('./../support/isObject');\nmodule.exports = function getSize(node) {\n    return isObject(node) && node.$size || 0;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getSize.js","/**\n * getCachePosition makes a fast walk to the bound value since all bound\n * paths are the most possible optimized path.\n *\n * @param {Model} model -\n * @param {Array} path -\n * @returns {Mixed} - undefined if there is nothing in this position.\n * @private\n */\nmodule.exports = getCachePosition;\n\nfunction getCachePosition(cache, path) {\n\n    var node = cache;\n    var type, depth = 0;\n    var maxDepth = path.length;\n\n    if (maxDepth > 0) {\n        do {\n            node = node[path[depth]];\n\n            while (node && (type = node.$type) === $ref) {\n                node = getCachePosition(cache, node.value);\n            }\n        } while (++depth < maxDepth && node && !type);\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getCachePosition.js","var removeNodeAndDescendants = require('./removeNodeAndDescendants');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = updateNodeAncestors;\n\nfunction updateNodeAncestors(node, offset, lru, version) {\n    var curr = node, next = curr[f_parent];\n    do {\n        if ((curr.$size = (curr.$size || 0) - offset) > 0) {\n            if (!(next = curr[f_parent])) {\n                curr[f_version] = version;\n            } else if (curr[f_version] !== version) {\n                updateBackReferenceVersions(curr, version);\n            }\n        } else if (next = curr[f_parent]) {\n            removeNodeAndDescendants(curr, next, curr[f_key], lru, version);\n        }\n    } while (curr = next);\n    return node;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/updateNodeAncestors.js","var createErrorClass = require('./createErrorClass');\n\n/**\n * InvalidKeySetError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidKeySetError', function(path, keysOrRanges) {\n    this.mesage = '' +\n        'The KeySet ' + JSON.stringify(keysOrRanges) +\n        ' in path ' + JSON.stringify(path) + ' contains a KeySet. ' +\n        'Keysets can only contain Keys or Ranges';\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidKeySetError.js","var EXPIRES_NEVER = require('./../values/expires-never');\n\n// [H] -> Next -> ... -> [T]\n// [T] -> Prev -> ... -> [H]\nmodule.exports = function lruPromote(root, object) {\n    // Never promote node.$expires === 1.  They cannot expire.\n    if (object.$expires === EXPIRES_NEVER) {\n        return;\n    }\n\n    var head = root[f_head];\n\n    // Nothing is in the cache.\n    if (!head) {\n        root[f_head] = root[f_tail] = object;\n        return;\n    }\n\n    if (head === object) {\n        return;\n    }\n\n    // The item always exist in the cache since to get anything in the\n    // cache it first must go through set.\n    var prev = object[f_prev];\n    var next = object[f_next];\n    if (next) {\n        next[f_prev] = prev;\n    }\n    if (prev) {\n        prev[f_next] = next;\n    }\n    object[f_prev] = undefined;\n\n    // Insert into head position\n    root[f_head] = object;\n    object[f_next] = head;\n    head[f_prev] = object;\n\n    // If the item we promoted was the tail, then set prev to tail.\n    if (object === root[f_tail]) {\n        root[f_tail] = prev;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/promote.js","var Subscription = require('./Subscription');\n\nmodule.exports = Subscriber;\n\nfunction Subscriber(destination, parent, onCompleted) {\n    if (typeof destination === 'function' ||\n             typeof parent === 'function' ||\n        typeof onCompleted === 'function') {\n        Subscription.call(this, []);\n        this.destination = {\n            error: parent,\n            onError: parent,\n            next: destination,\n            onNext: destination,\n            complete: onCompleted,\n            onCompleted: onCompleted\n        }\n    } else {\n        Subscription.call(this, [], parent);\n        this.parent = parent;\n        this.destination = destination;\n    }\n}\n\nSubscriber.prototype = Object.create(Subscription.prototype);\n\nSubscriber.prototype.next =\nSubscriber.prototype.onNext = function onNext(value) {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onNext) {\n            dest.onNext(value);\n        } else if (dest.next) {\n            dest.next(value);\n        }\n    }\n}\n\nSubscriber.prototype.error =\nSubscriber.prototype.onError = function onError(error) {\n    var signaled = false;\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onError) {\n            signaled = true;\n            dest.onError(error);\n        } else if (dest.error) {\n            signaled = true;\n            dest.error(error);\n        }\n        this.dispose();\n    }\n    if (!signaled) {\n        throw error;\n    }\n}\n\nSubscriber.prototype.complete =\nSubscriber.prototype.onCompleted = function onCompleted() {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onCompleted) {\n            dest.onCompleted();\n        } else if (dest.complete) {\n            dest.complete();\n        }\n        this.dispose();\n    }\n}\n\nSubscriber.prototype.dispose =\nSubscriber.prototype.unsubscribe = function () {\n    this.destination = null;\n    Subscription.prototype.dispose.call(this);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subscriber.js","module.exports = Subscription;\n\nfunction Subscription(subscriptions, parent) {\n    this.parent = parent;\n    this.subscriptions = subscriptions || [];\n}\n\nSubscription.prototype.add = function(subscription) {\n    return this.subscriptions.push(subscription) && this || this;\n}\n\nSubscription.prototype.remove = function(subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.subscriptions.splice(index, 1);\n    }\n    return this;\n}\n\nSubscription.prototype.dispose =\nSubscription.prototype.unsubscribe = function () {\n    var subscription, subscriptions = this.subscriptions;\n    while (subscriptions.length) {\n        (subscription = subscriptions.pop()) &&\n            subscription.dispose &&\n            subscription.dispose();\n    }\n    var parent = this.parent;\n    if (parent) {\n        this.parent = null;\n        parent.remove && parent.remove(this);\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subscription.js","var isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\n\nmodule.exports = onValueType;\n\nfunction onValueType(node, type, json,\n                     path, depth, seed, results,\n                     requestedPath, requestedLength,\n                     optimizedPath, optimizedLength,\n                     fromReference, modelRoot, expired, expireImmediate,\n                     branchSelector, boxValues, materialized, reportMissing,\n                     treatErrorsAsValues, onValue, onMissing, onMaterialize) {\n\n    var reportMaterialized = reportMissing;\n\n    if (type) {\n        if (isExpired(node, expireImmediate)) {\n            if (!node[f_invalidated]) {\n                expireNode(node, expired, modelRoot);\n            }\n        } else {\n            lruPromote(modelRoot, node);\n            if (node.value === undefined) {\n                reportMissing = false;\n                reportMaterialized = materialized;\n            } else {\n                if (seed) {\n                    if (fromReference) {\n                        requestedPath[depth] = null;\n                    }\n                    return onValue(node, type, depth, seed, results,\n                                   requestedPath, optimizedPath, optimizedLength,\n                                   fromReference, boxValues, materialized, treatErrorsAsValues);\n                }\n                return undefined;\n            }\n        }\n    }\n\n    if (materialized) {\n        seed && (results.hasValue = true);\n    } else if (!reportMaterialized) {\n        return undefined;\n    }\n\n    return onMissing(path, depth, results,\n                     requestedPath, requestedLength, fromReference,\n                     optimizedPath, optimizedLength, reportMissing,\n                     materialized, json, branchSelector,\n                     boxValues, onMaterialize, modelRoot);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onValueType.js","var getCachePosition = require('./getCachePosition');\n\nmodule.exports = getBoundCacheNode;\n\nfunction getBoundCacheNode(model, path) {\n    path = path || model._path;\n    var node = model._node;\n    if (!node || node[f_parent] === undefined || node[f_invalidated]) {\n        model._node = null;\n        if (path.length === 0) {\n            node = model._root.cache;\n        } else {\n            node = getCachePosition(model._root.cache, path);\n            if (path === model._path) {\n                model._node = node;\n            }\n        }\n    }\n    return node;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getBoundCacheNode.js","var arr = new Array(5);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar mergeJSONGraphNode = require('../mergeJSONGraphNode');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\n\n/**\n * Merges a list of {@link JSONGraphEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to merge the {@link JSONGraphEnvelope}s.\n * @param {Array.<PathValue>} jsonGraphEnvelopes - the {@link JSONGraphEnvelope}s to merge.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setJSONGraphs(model, jsonGraphEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n\n    var requestedPath = [];\n    var optimizedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var jsonGraphEnvelopeIndex = -1;\n    var jsonGraphEnvelopeCount = jsonGraphEnvelopes.length;\n\n    while (++jsonGraphEnvelopeIndex < jsonGraphEnvelopeCount) {\n\n        var jsonGraphEnvelope = jsonGraphEnvelopes[jsonGraphEnvelopeIndex];\n        var paths = jsonGraphEnvelope.paths;\n        var jsonGraph = jsonGraphEnvelope.jsonGraph;\n\n        var pathIndex = -1;\n        var pathCount = paths.length;\n\n        while (++pathIndex < pathCount) {\n\n            var path = paths[pathIndex];\n            optimizedPath.index = 0;\n\n            setJSONGraphPathSet(\n                path, 0,\n                cache, cache, cache,\n                jsonGraph, jsonGraph, jsonGraph,\n                requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n                version, expired, lru, comparator, errorSelector, expireImmediate\n            );\n        }\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n    arr[3] = undefined;\n    arr[4] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setJSONGraphPathSet(\n    path, depth, root, parent, node,\n    messageRoot, messageParent, message,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n\n        var results = setNode(\n            root, parent, node, messageRoot, messageParent, message,\n            key, branch, false, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = results[0];\n        var nextParent = results[1];\n        var nextOptimizedPath = results[4];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setJSONGraphPathSet(\n                    path, depth + 1, root, nextParent, nextNode,\n                    messageRoot, results[3], results[2],\n                    requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                    version, expired, lru, comparator, errorSelector, expireImmediate\n                );\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(\n    root, node, messageRoot, message, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var messageParent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        messageParent = messageRoot;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var index = 0;\n        var container = node;\n        var count = reference.length - 1;\n        parent = node = root;\n        messageParent = message = messageRoot;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            optimizedPath.index = index;\n\n            var results = setNode(\n                root, parent, node, messageRoot, messageParent, message,\n                key, branch, true, requestedPath, optimizedPath, version,\n                expired, lru, comparator, errorSelector, expireImmediate\n            );\n            node = results[0];\n            optimizedPath = results[4];\n            if (!node || typeof node !== 'object') {\n                optimizedPath.index = index;\n                return results;\n            }\n            parent = results[1];\n            message = results[2];\n            messageParent = results[3];\n        } while (index++ < count);\n\n        optimizedPath.index = index;\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(\n    root, parent, node, messageRoot, messageParent, message,\n    key, branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = setReference(\n            root, node, messageRoot, message, requestedPath, optimizedPath,\n            version, expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        message = results[2];\n        messageParent = results[3];\n        optimizedPath = results[4];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            messageParent = message;\n            node = parent[key];\n            message = messageParent && messageParent[key];\n        }\n\n        node = mergeJSONGraphNode(\n            parent, node, message, key, requestedPath, optimizedPath,\n            version, expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setJSONGraphs.js","var arr = new Array(3);\nvar isArray = Array.isArray;\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar getCachePosition = require('../getCachePosition');\nvar isInternalKey = require('../../support/isInternalKey');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar mergeValueOrInsertBranch = require('../mergeValueOrInsertBranch');\n\n/**\n * Sets a list of {@link PathMapEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of {@link PathMapEnvelope}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setPathMaps(model, pathMapEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[f_parent] || cache;\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathMapIndex = -1;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathMap(\n            pathMapEnvelope.json, 0, cache, parent, node,\n            requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n            version, expired, modelRoot, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setPathMap(\n    pathMap, depth, root, parent, node,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var keys = getKeys(pathMap);\n\n    if (keys && keys.length) {\n\n        var keyIndex = 0;\n        var keyCount = keys.length;\n        var optimizedIndex = optimizedPath.index;\n\n        do {\n            var key = keys[keyIndex];\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n\n            requestedPath.depth = depth;\n\n            var results = setNode(\n                root, parent, node, key, child,\n                branch, false, requestedPath, optimizedPath, version,\n                expired, lru, comparator, errorSelector, expireImmediate\n            );\n\n            requestedPath[depth] = key;\n            requestedPath.index = depth;\n\n            var nextNode = results[0];\n            var nextParent = results[1];\n            var nextOptimizedPath = results[2];\n            nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n            if (nextNode) {\n                if (branch) {\n                    setPathMap(\n                        child, depth + 1,\n                        root, nextParent, nextNode,\n                        requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                        version, expired, lru, comparator, errorSelector, expireImmediate\n                    );\n                } else {\n                    requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                    optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n                }\n            }\n            if (++keyIndex >= keyCount) {\n                break;\n            }\n            optimizedPath.index = optimizedIndex;\n        } while (true);\n    }\n}\n/* eslint-enable */\n\nfunction setReference(\n    value, root, node, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n        var container = node;\n        parent = root;\n\n        node = node[f_context];\n\n        if (node != null) {\n            parent = node[f_parent] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n            optimizedPath.index = index;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                var results = setNode(\n                    root, parent, node, key, value,\n                    branch, true, requestedPath, optimizedPath, version,\n                    expired, lru, comparator, errorSelector, expireImmediate\n                );\n                node = results[0];\n                optimizedPath = results[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return results;\n                }\n                parent = results[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[f_context] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(\n    root, parent, node, key, value,\n    branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = setReference(\n            value, root, node, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        optimizedPath = results[2];\n        type = node && node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(\n            parent, node, key, value,\n            branch, reference, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction getKeys(pathMap) {\n\n    if (!(!pathMap || typeof pathMap !== 'object') && !pathMap.$type) {\n        var keys = [];\n        var itr = 0;\n        if (isArray(pathMap)) {\n            keys[itr++] = 'length';\n        }\n        for (var key in pathMap) {\n            if (isInternalKey(key)) {\n                continue;\n            }\n            keys[itr++] = key;\n        }\n        return keys;\n    }\n\n    return undefined;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setPathMaps.js","/**\n * Determined if the key passed in is an internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nmodule.exports = isInternalKey;\n\nvar isInternal = require('../internal/isInternal');\n\nfunction isInternalKey(key) {\n    return key && key[0] === '$' || isInternal(key);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isInternalKey.js","module.exports = flatBufferToPaths;\n\nfunction flatBufferToPaths(seed, paths, path) {\n\n    path = path || [];\n    paths = paths || [];\n\n    if (!seed) {\n        return paths;\n    }\n\n    var leaf = [];\n    var keys = seed['$keys'];\n    var keysLen = keys.length;\n    var keysIndex = -1, key, len;\n\n    while (++keysIndex < keysLen) {\n\n        var next = seed[keysIndex];\n        var keyset = keys[keysIndex];\n\n        if (!next || typeof next !== 'object') {\n            leaf.push(keyset);\n        } else {\n            flatBufferToPaths(next, paths, path.concat([keyset]));\n        }\n    }\n\n    if (leaf.length === 1) {\n        paths.push(path.concat(leaf));\n    } else if (leaf.length > 1) {\n        paths.push(path.concat([leaf]));\n    }\n\n    return paths;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/flatBufferToPaths.js","module.exports = getHashCode;\n\nfunction getHashCode(str) {\n    var hash = 5381, i = str.length;\n    while (i) {\n        hash = (hash * 33) ^ str.charCodeAt(--i);\n    }\n    // JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n    // integers. Since we want the results to be always positive, convert the\n    // signed int to an unsigned by doing an unsigned bitshift.\n    return hash >>> 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/getHashCode.js","var isArray = Array.isArray;\n\n/**\n * Takes in a keySet and a note attempts to iterate over it.\n * If the value is a primitive, the key will be returned and the note will\n * be marked done\n * If the value is an object, then each value of the range will be returned\n * and when finished the note will be marked done.\n * If the value is an array, each value will be iterated over, if any of the\n * inner values are ranges, those will be iterated over.  When fully done,\n * the note will be marked done.\n *\n * @param {Object|Array|String|Number} keySet -\n * @param {Object} note - The non filled note\n * @returns {String|Number|undefined} - The current iteration value.\n * If undefined, then the keySet is empty\n * @public\n */\nmodule.exports = function iterateKeySet(keySet, note) {\n    if (note.isArray === undefined) {\n        initializeNote(keySet, note);\n    }\n\n    // Array iteration\n    if (note.isArray) {\n        var nextValue;\n\n        // Cycle through the array and pluck out the next value.\n        do {\n            if (note.loaded && note.rangeOffset > note.to) {\n                ++note.arrayOffset;\n                note.loaded = false;\n            }\n\n            var idx = note.arrayOffset, length = keySet.length;\n            if (idx >= length) {\n                note.done = true;\n                break;\n            }\n\n            var el = keySet[note.arrayOffset];\n            var type = typeof el;\n\n            // Inner range iteration.\n            if (type === 'object') {\n                if (!note.loaded) {\n                    initializeRange(el, note);\n                }\n\n                // Empty to/from\n                if (note.empty) {\n                    continue;\n                }\n\n                nextValue = note.rangeOffset++;\n            }\n\n            // Primitive iteration in array.\n            else {\n                ++note.arrayOffset;\n                nextValue = el;\n            }\n        } while (nextValue === undefined);\n\n        return nextValue;\n    }\n\n    // Range iteration\n    else if (note.isObject) {\n        if (!note.loaded) {\n            initializeRange(keySet, note);\n        }\n        if (note.rangeOffset > note.to) {\n            note.done = true;\n            return undefined;\n        }\n\n        return note.rangeOffset++;\n    }\n\n    // Primitive value\n    else {\n        note.done = true;\n        return keySet;\n    }\n};\n\nfunction initializeRange(key, memo) {\n    var from = memo.from = key.from || 0;\n    var to = memo.to = key.to ||\n        (typeof key.length === 'number' &&\n        memo.from + key.length - 1 || 0);\n    memo.rangeOffset = memo.from;\n    memo.loaded = true;\n    if (from > to) {\n        memo.empty = true;\n    }\n}\n\nfunction initializeNote(key, note) {\n    note.done = false;\n    var isObject = note.isObject = !!(key && typeof key === 'object');\n    note.isArray = isObject && isArray(key);\n    note.arrayOffset = 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/iterateKeySet.js","module.exports = require('./getJSON');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/index.js","module.exports = require('./getJSONGraph');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/index.js","module.exports = inlineJSONGraphValue;\n\n/* eslint-disable no-constant-condition */\nfunction inlineJSONGraphValue(node, path, length, seed, branch) {\n\n    var key, depth = 0, prev,\n        curr = seed.jsonGraph;\n\n    if (!curr) {\n        seed.jsonGraph = curr = {};\n    }\n\n    do {\n        prev = curr;\n        key = path[depth++];\n        if (depth >= length) {\n            curr = prev[key] = branch !== true ? node : prev[key] || {};\n            break;\n        }\n        curr = prev[key] || (prev[key] = {});\n    } while (true);\n\n    return curr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/inlineValue.js","var isArray = Array.isArray;\n\nmodule.exports = onMissing;\n\n/* eslint-disable no-constant-condition */\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, json, branchSelector,\n                   boxValues, onMaterialize, modelRoot) {\n\n    if (!reportMissing && !reportMaterialized) {\n        return;\n    }\n\n    var keyset,\n        restPathIndex = -1,\n        restPathCount = requestedLength - depth,\n        restPath = restPathCount && new Array(restPathCount) || undefined;\n\n    while (++restPathIndex < restPathCount) {\n        keyset = path[restPathIndex + depth];\n        if (isEmptyKeySet(keyset)) {\n            return;\n        }\n        restPath[restPathIndex] = keyset;\n    }\n\n    var index, count, mPath;\n    var lastKeyIsNull = keyset === null;\n    var isRequestedPath = reportMissing;\n    var missDepth, missTotal, missingPath, missingPaths;\n\n    if (!reportMissing) {\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } else {\n        missDepth = depth;\n        missTotal = requestedLength;\n        missingPath = requestedPath;\n        missingPaths = results.requested || (results.requested = []);\n    }\n\n    do {\n        if (restPathCount < requestedLength || !isRequestedPath) {\n            index = -1;\n            count = missDepth;\n            mPath = new Array(missTotal);\n            while (++index < count) {\n                mPath[index] = missingPath[index];\n            }\n            restPathIndex = -1;\n            while (index < missTotal) {\n                mPath[index++] = restPath[++restPathIndex];\n            }\n        }\n\n        // break after inserting both requested and optimized missing paths\n        if (isRequestedPath = !isRequestedPath) {\n            if (reportMissing) {\n                missingPaths[missingPaths.length] = mPath;\n            }\n            break;\n        }\n\n        missingPaths[missingPaths.length] = mPath || restPath;\n\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missingPaths = results.missing || (results.missing = []);\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } while (true);\n\n    if (reportMaterialized) {\n        return onMaterialize(json, mPath, missDepth, missTotal, branchSelector, boxValues, modelRoot);\n    }\n}\n/* eslint-enable */\n\nfunction isEmptyKeySet(keyset) {\n\n    // false if the keyset is a primitive\n    if ('object' !== typeof keyset) {\n        return false;\n    } else if (keyset === null) {\n        return false;\n    }\n\n    if (isArray(keyset)) {\n        // return true if the keyset is an empty array\n        return keyset.length === 0;\n    }\n\n    var rangeEnd = keyset.to,\n        from = keyset.from || 0;\n    if ('number' !== typeof rangeEnd) {\n        rangeEnd = from + (keyset.length || 0);\n    }\n\n    // false if trying to request incorrect or empty ranges\n    // e.g. { from: 10, to: 0 } or { from: 5, length: 0 }\n    return from >= rangeEnd;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMissing.js","var arr = new Array(2);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\nvar getSize = require('../../support/getSize');\nvar createHardlink = require('../createHardlink');\nvar getBoundCacheNode = require('../getBoundCacheNode');\nvar updateNodeAncestors = require('../updateNodeAncestors');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\n\n/**\n * Invalidates a list of Paths in a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathValues.\n * @param {Array.<PathValue>} paths - the PathValues to set.\n */\n\nmodule.exports = invalidatePathSets;\n\nfunction invalidatePathSets(model, paths, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n\n    if (!node) {\n        return false;\n    }\n\n    var pathIndex = -1;\n    var pathCount = paths.length;\n    var parent = node[f_parent] || cache;\n\n    while (++pathIndex < pathCount) {\n\n        var path = paths[pathIndex];\n\n        invalidatePathSet(\n            path, 0, cache, parent, node,\n            version, expired, lru, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return true;\n    }\n\n    return false;\n}\n\nfunction invalidatePathSet(\n    path, depth, root, parent, node,\n    version, expired, lru, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n\n    do {\n        arr = invalidateNode(\n            root, parent, node,\n            key, branch, false, version,\n            expired, lru, expireImmediate\n        );\n        var nextNode = arr[0];\n        var nextParent = arr[1];\n        if (nextNode) {\n            if (branch) {\n                invalidatePathSet(\n                    path, depth + 1,\n                    root, nextParent, nextNode,\n                    version, expired, lru, expireImmediate\n                );\n            } else {\n                updateNodeAncestors(nextNode, getSize(nextNode), lru, version);\n            }\n        }\n        key = iterateKeySet(keySet, note);\n    } while (!note.done);\n}\n\nfunction invalidateReference(root, node, version, expired, lru, expireImmediate) {\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return arr;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[f_context];\n\n    if (node != null) {\n        parent = node[f_parent] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            arr = invalidateNode(\n                root, parent, node,\n                key, branch, true, version,\n                expired, lru, expireImmediate\n            );\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return arr;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\nfunction invalidateNode(\n    root, parent, node,\n    key, branch, reference, version,\n    expired, lru, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        arr = invalidateReference(root, node, version, expired, lru, expireImmediate);\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return arr;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new Error('`null` is not allowed in branch key positions.');\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/invalidatePathSets.js","var lruSplice = require('../lru/splice');\nvar isInternalKey = require('../support/isInternalKey');\nvar unlinkBackReferences = require('./unlinkBackReferences');\nvar unlinkForwardReference = require('./unlinkForwardReference');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = removeNodeAndDescendants;\n\nfunction removeNodeAndDescendants(node, parent, key, lru, version) {\n    if (!(!node || typeof node !== 'object')) {\n        var type = node.$type;\n        if (type === undefined) {\n            for (var key2 in node) {\n                if (!isInternalKey(key2)) {\n                    removeNodeAndDescendants(node[key2], node, key2, lru, version);\n                }\n            }\n        } else {\n            if (type === $ref) {\n                unlinkForwardReference(node);\n            }\n            lruSplice(lru, node);\n        }\n        unlinkBackReferences(updateBackReferenceVersions(node, version));\n        parent[key] = node[f_parent] = undefined;\n        return true;\n    }\n    return false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/removeNodeAndDescendants.js","var arr = new Array(3);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar getCachePosition = require('../getCachePosition');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\nvar mergeValueOrInsertBranch = require('../mergeValueOrInsertBranch');\n\n/**\n * Sets a list of {@link PathValue}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the {@link PathValue}s.\n * @param {Array.<PathValue>} pathValues - the list of {@link PathValue}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setPathValues(model, pathValues, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[f_parent] || cache;\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathValueIndex = -1;\n    var pathValueCount = pathValues.length;\n\n    while (++pathValueIndex < pathValueCount) {\n\n        var pathValue = pathValues[pathValueIndex];\n        var path = pathValue.path;\n        var value = pathValue.value;\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathSet(\n            value, path, 0, cache, parent, node,\n            requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n            version, expired, modelRoot, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setPathSet(\n    value, path, depth, root, parent, node,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var results = setNode(\n            root, parent, node, key, value,\n            branch, false, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = results[0];\n        var nextParent = results[1];\n        var nextOptimizedPath = results[2];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setPathSet(\n                    value, path, depth + 1,\n                    root, nextParent, nextNode,\n                    requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                    version, expired, lru, comparator, errorSelector, expireImmediate\n                );\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(\n    value, root, node, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var container = node;\n        parent = root;\n\n        node = node[f_context];\n\n        if (node != null) {\n            parent = node[f_parent] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                optimizedPath.index = index;\n\n                var results = setNode(\n                    root, parent, node, key, value,\n                    branch, true, requestedPath, optimizedPath, version,\n                    expired, lru, comparator, errorSelector, expireImmediate\n                );\n                node = results[0];\n                optimizedPath = results[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return results;\n                }\n                parent = results[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[f_context] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(\n    root, parent, node, key, value,\n    branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = setReference(\n            value, root, node, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        optimizedPath = results[2];\n        type = node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(\n            parent, node, key, value,\n            branch, reference, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setPathValues.js","module.exports = updateBackReferenceVersions;\n\nfunction updateBackReferenceVersions(nodeArg, version) {\n    var node = nodeArg, stack = [], count = 0, ref, i, n;\n    do {\n        i = -1;\n        ref = node[f_parent];\n        node[f_version] = version;\n        n = node[f_refs_length] || 0;\n        do {\n            if (ref && ref[f_version] !== version) {\n                stack[count++] = ref;\n            }\n            if (++i < n) {\n                ref = node[f_ref + i];\n                continue;\n            }\n            break;\n        } while (true);\n    } while (node = stack[--count]);\n    return nodeArg;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/updateBackReferenceVersions.js","/**\n * Determined if the key passed in is an f_ internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nvar f_ = require('./f_');\nvar regexp = new RegExp('^' + f_, 'i', 'g');\n\nmodule.exports = regexp.test.bind(regexp);\n\n\n\n// WEBPACK FOOTER //\n// ./lib/internal/isInternal.js","var isObject = require('./../support/isObject');\nmodule.exports = function getTimestamp(node) {\n    return isObject(node) && node.$timestamp || undefined;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getTimestamp.js","module.exports = 0;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/values/expires-now.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() { return this; })();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 35\n// module chunks = 0","var toPaths = require('./toPaths');\nvar toCollapseMap = require('./toCollapseMap');\nvar toCollapseTrees = require('./toCollapseTrees');\n\nmodule.exports = function collapse(paths) {\n    return toPaths(toCollapseTrees(toCollapseMap(paths)));\n};\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/collapse.js","var isArray = Array.isArray;\nvar flatBufferToPaths = require('./flatBufferToPaths');\n\nmodule.exports = toCollapseMap;\n\nfunction toCollapseMap(paths, collapseMap) {\n    if (!paths) { return collapseMap; }\n    else if (!isArray(paths)) {\n        if (isArray(paths.$keys)) {\n            paths = flatBufferToPaths(paths);\n        }\n    }\n    return paths.reduce(function(acc, path) {\n        var len = path.length;\n        if (!acc[len]) {\n            acc[len] = [];\n        }\n        acc[len].push(path);\n        return acc;\n    }, collapseMap || {});\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toCollapseMap.js","var toTree = require('./toTree');\n\nmodule.exports = toCollapseTrees;\n\nfunction toCollapseTrees(collapseMap, collapseTrees) {\n    return Object.keys(collapseMap).reduce(function(collapseTrees, collapseKey) {\n        collapseTrees[collapseKey] = toTree(\n            collapseMap[collapseKey],\n            collapseTrees[collapseKey]\n        );\n        return collapseTrees;\n    }, collapseTrees || {});\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toCollapseTrees.js","var isArray = Array.isArray;\nvar typeOfObject = 'object';\nvar typeOfString = 'string';\nvar typeOfNumber = 'number';\nvar MAX_SAFE_INTEGER = 9007199254740991; // Number.MAX_SAFE_INTEGER in es6\nvar MAX_SAFE_INTEGER_DIGITS = 16; // String(Number.MAX_SAFE_INTEGER).length\nvar MIN_SAFE_INTEGER_DIGITS = 17; // String(Number.MIN_SAFE_INTEGER).length (including sign)\nvar abs = Math.abs;\nvar safeNumberRegEx = /^(0|(\\-?[1-9][0-9]*))$/;\nvar getHashCode = require('./getHashCode');\nvar materializedAtom = require('./support/materializedAtom');\n\n/* jshint forin: false */\nmodule.exports = function toPaths(lengths) {\n    var pathmap;\n    var allPaths = [];\n    var allPathsLength = 0;\n    for (var length in lengths) {\n        if (isSafeNumber(length) && isObject(pathmap = lengths[length])) {\n            var paths = collapsePathMap(pathmap, 0, parseInt(length, 10)).sets;\n            var pathsIndex = -1;\n            var pathsCount = paths.length;\n            while (++pathsIndex < pathsCount) {\n                allPaths[allPathsLength++] = collapsePathSetIndexes(paths[pathsIndex]);\n            }\n        }\n    }\n    return allPaths;\n};\n\nfunction isObject(value) {\n    return value !== null && typeof value === typeOfObject;\n}\n\nfunction collapsePathMap(pathmap, depth, length) {\n\n    var key;\n    var subs = Object.create(null);\n    var code = '' + getHashCode('' + depth);\n\n    var codes = [];\n    var codesIndex = -1;\n    var codesCount = 0;\n\n    var pathsets = [];\n    var pathsetsCount = 0;\n\n    var subPath, subCode,\n        subKeys, subKeysIndex, subKeysCount,\n        subSets, subSetsIndex, subSetsCount,\n        pathset, pathsetIndex, pathsetCount,\n        firstSubKey, pathsetClone;\n\n    subKeys = [];\n    subKeysIndex = -1;\n\n    if (depth < length - 1) {\n\n        subKeysCount = getSortedKeys(pathmap, subKeys);\n\n        while (++subKeysIndex < subKeysCount) {\n            key = subKeys[subKeysIndex];\n            subPath = collapsePathMap(pathmap[key], depth + 1, length);\n            subCode = subPath.code;\n            if(subs[subCode]) {\n                subPath = subs[subCode];\n            } else {\n                codes[codesCount++] = subCode;\n                subPath = subs[subCode] = {\n                    keys: [],\n                    sets: subPath.sets\n                };\n            }\n            code = '' + getHashCode(code + key + subCode);\n\n            isSafeNumber(key) &&\n                subPath.keys.push(parseInt(key, 10)) ||\n                subPath.keys.push(key);\n        }\n\n        while(++codesIndex < codesCount) {\n\n            key = codes[codesIndex];\n            subPath = subs[key];\n            subKeys = subPath.keys;\n            subKeysCount = subKeys.length;\n\n            if (subKeysCount > 0) {\n\n                subSets = subPath.sets;\n                subSetsIndex = -1;\n                subSetsCount = subSets.length;\n                firstSubKey = subKeys[0];\n\n                while (++subSetsIndex < subSetsCount) {\n\n                    pathset = subSets[subSetsIndex];\n                    pathsetIndex = -1;\n                    pathsetCount = pathset.length;\n                    pathsetClone = new Array(pathsetCount + 1);\n                    pathsetClone[0] = subKeysCount > 1 && subKeys || firstSubKey;\n\n                    while (++pathsetIndex < pathsetCount) {\n                        pathsetClone[pathsetIndex + 1] = pathset[pathsetIndex];\n                    }\n\n                    pathsets[pathsetsCount++] = pathsetClone;\n                }\n            }\n        }\n    } else {\n        subKeysCount = getSortedKeys(pathmap, subKeys);\n        if (subKeysCount > 1) {\n            pathsets[pathsetsCount++] = [subKeys];\n        } else {\n            pathsets[pathsetsCount++] = subKeys;\n        }\n        while (++subKeysIndex < subKeysCount) {\n            code = '' + getHashCode(code + subKeys[subKeysIndex]);\n        }\n    }\n\n    return {\n        code: code,\n        sets: pathsets\n    };\n}\n\nfunction collapsePathSetIndexes(pathset) {\n\n    var keysetIndex = -1;\n    var keysetCount = pathset.length;\n\n    while (++keysetIndex < keysetCount) {\n        var keyset = pathset[keysetIndex];\n        if (isArray(keyset)) {\n            pathset[keysetIndex] = collapseIndex(keyset);\n        }\n    }\n\n    return pathset;\n}\n\n/**\n * Collapse range indexers, e.g. when there is a continuous\n * range in an array, turn it into an object instead:\n *\n * [1,2,3,4,5,6] => {'from':1, 'to':6}\n *\n * @private\n */\nfunction collapseIndex(keyset) {\n\n    // Do we need to dedupe an indexer keyset if they're duplicate consecutive integers?\n    // var hash = {};\n    var keyIndex = -1;\n    var keyCount = keyset.length - 1;\n    var isSparseRange = keyCount > 0;\n\n    while (++keyIndex <= keyCount) {\n\n        var key = keyset[keyIndex];\n\n        if (!isSafeNumber(key) /* || hash[key] === true*/ ) {\n            isSparseRange = false;\n            break;\n        }\n        // hash[key] = true;\n        // Cast number indexes to integers.\n        keyset[keyIndex] = parseInt(key, 10);\n    }\n\n    if (isSparseRange === true) {\n\n        keyset.sort(sortListAscending);\n\n        var from = keyset[0];\n        var to = keyset[keyCount];\n\n        // If we re-introduce deduped integer indexers, change this comparson to '==='.\n        if (to - from <= keyCount) {\n            return { from: from, to: to };\n        }\n    }\n\n    return keyset;\n}\n\nfunction sortListAscending(a, b) {\n    return a - b;\n}\n\n/* jshint forin: false */\nfunction getSortedKeys(map, keys, sort) {\n    var len = 0;\n    if (map === materializedAtom) {\n        keys[len++] = null;\n    } else {\n        for (var key in map) {\n            keys[len++] = key;\n        }\n        if (len > 1) {\n            keys.sort(sort);\n        }\n    }\n    return len;\n}\n\n/**\n * Return true if argument is a number or can be cast to a number which\n * roundtrips to the same string.\n * @private\n */\nfunction isSafeNumber(val) {\n    var num = val;\n    var type = typeof val;\n    if (type === typeOfString) {\n        var length = val.length;\n        // Number.MIN_SAFE_INTEGER is 17 digits including the sign.\n        // Anything longer cannot be safe.\n        if (length === 0 || length > MIN_SAFE_INTEGER_DIGITS) {\n            return false;\n        }\n        if (!safeNumberRegEx.test(val)) {\n            return false;\n        }\n        // Number.MAX_SAFE_INTEGER is 16 digits.\n        // Anything shorter must be safe.\n        if (length < MAX_SAFE_INTEGER_DIGITS) {\n            return true;\n        }\n        num = +val;\n    } else if (type !== typeOfNumber) {\n        return false;\n    }\n    // Number.isSafeInteger(num) in es6.\n    return num % 1 === 0 && abs(num) <= MAX_SAFE_INTEGER;\n}\n\n// export for testing\nmodule.exports._isSafeNumber = isSafeNumber;\n\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toPaths.js","var isArray = Array.isArray;\nvar walkPathAndBuildOutput = require('./walkPath');\nvar walkFlatBufferAndBuildOutput = require('./walkFlatBuffer');\nvar getBoundCacheNode = require('../../getBoundCacheNode');\nvar InvalidModelError = require('../../../errors/InvalidModelError');\nvar toFlatBuffer = require('@graphistry/falcor-path-utils/lib/toFlatBuffer');\nvar computeFlatBufferHash = require('@graphistry/falcor-path-utils/lib/computeFlatBufferHash');\n\nmodule.exports = getJSON;\n\nfunction getJSON(model, paths, seed, progressive, expireImmediate) {\n\n    var node,\n        referenceContainer,\n        boundPath = model._path,\n        modelRoot = model._root,\n        cache = modelRoot.cache,\n        requestedPath, requestedLength,\n        optimizedPath, optimizedLength =\n            boundPath && boundPath.length || 0;\n\n    // If the model is bound, get the cache position.\n    if (optimizedLength) {\n        node = getBoundCacheNode(model);\n        // If there was a short, then we 'throw an error' to the outside\n        // calling function which will onError the observer.\n        if (node && node.$type) {\n            return { error: new InvalidModelError(boundPath, boundPath) };\n        }\n        // We need to get the new cache position and copy the bound path.\n        optimizedPath = [];\n        for (var i = 0; i < optimizedLength; ++i) {\n            optimizedPath[i] = boundPath[i];\n        }\n        referenceContainer = model._referenceContainer;\n    } else {\n        node = cache;\n        optimizedPath = [];\n    }\n\n    requestedPath = [];\n\n    var isFlatBuffer = false,\n        json = seed && seed.json,\n        results = { data: seed },\n        boxValues = model._boxed,\n        expired = modelRoot.expired,\n        recycleJSON = model._recycleJSON,\n        hasDataSource = Boolean(model._source),\n        branchSelector = modelRoot.branchSelector,\n        materialized = seed && model._materialized,\n        treatErrorsAsValues = model._treatErrorsAsValues,\n        allowFromWhenceYouCame = model._allowFromWhenceYouCame;\n\n    var arr, path, pathsIndex = 0, pathsCount = paths.length;\n\n    if (pathsCount > 0) {\n        if (recycleJSON) {\n            isFlatBuffer = true;\n            if (pathsCount > 1 || isArray(paths[0])) {\n                paths = [computeFlatBufferHash(toFlatBuffer(paths, {}))];\n            }\n            arr = walkFlatBufferAndBuildOutput(cache, node, json, paths[0], 0, seed, results,\n                                               requestedPath, optimizedPath, optimizedLength,\n                                               /* fromReference = */ false, referenceContainer,\n                                               modelRoot, expired, expireImmediate, branchSelector,\n                                               boxValues, materialized, hasDataSource,\n                                               treatErrorsAsValues, allowFromWhenceYouCame);\n            json = arr[0];\n            arr[0] = undefined;\n            arr[1] = undefined;\n        } else {\n            do {\n                path = paths[pathsIndex];\n                requestedLength = path.length;\n                json = walkPathAndBuildOutput(cache, node, json, path,\n                                           /* depth = */ 0, seed, results,\n                                              requestedPath, requestedLength,\n                                              optimizedPath, optimizedLength,\n                                              /* fromReference = */ false, referenceContainer,\n                                              modelRoot, expired, expireImmediate, branchSelector,\n                                              boxValues, materialized, hasDataSource,\n                                              treatErrorsAsValues, allowFromWhenceYouCame);\n            } while (++pathsIndex < pathsCount)\n        }\n    }\n\n    var requested = results.requested;\n\n    results.args = isFlatBuffer && paths || requested;\n\n    if (requested && requested.length) {\n        results.relative = results.args;\n        if (optimizedLength) {\n            var boundRequested = [];\n            for (var i = 0, len = requested.length; i < len; ++i) {\n                boundRequested[i] = boundPath.concat(requested[i]);\n            }\n            results.requested = boundRequested;\n        }\n    }\n\n    if (results.hasValue) {\n        seed.json = json;\n    }\n\n    return results;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/getJSON.js","var arr = new Array(3);\nvar promote = require('../../../lru/promote');\nvar isExpired = require('../../isExpired');\nvar createHardlink = require('../../createHardlink');\nvar CircularReferenceError = require('../../../errors/CircularReferenceError');\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, ref, modelRoot, expireImmediate) {\n\n    promote(modelRoot, ref);\n\n    var context,\n        key, type, depth = 0,\n        node = root, path = ref.value,\n        copy = path, length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[f_context])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                throw new CircularReferenceError(path);\n            }\n            // If the node we land on isn't the existing ref context,\n            // create a hard-link between the reference and the node\n            // it points to.\n            else if (node !== context) {\n                createHardlink(ref, node);\n            }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === $ref) {\n\n                promote(modelRoot, node);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n    arr[2] = ref;\n\n    return arr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/getReferenceTarget.js","var clone = require('../../clone');\nvar onError = require('./onError');\n\nmodule.exports = onJSONValue;\n\nfunction onJSONValue(node, type, depth, seed, results,\n                     requestedPath, optimizedPath, optimizedLength,\n                     fromReference, boxValues, materialized,\n                     treatErrorsAsValues) {\n\n    if ($error === type && !treatErrorsAsValues) {\n        return onError(node, depth, results, requestedPath,\n                       fromReference, boxValues);\n    }\n\n    results.hasValue = true;\n\n    // boxValues always clones the node\n    return !boxValues ? node.value : clone(node);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/onValue.js","var walkPathAndBuildOutput = require('./walkPath');\nvar BoundJSONGraphModelError = require('../../../errors/BoundJSONGraphModelError');\n\nmodule.exports = getJSONGraph;\n\nfunction getJSONGraph(model, paths, seed, progressive, expireImmediate) {\n\n    var node, cache,\n        boundPath = model._path,\n        modelRoot = model._root,\n        requestedPath, requestedLength,\n        optimizedPath, optimizedLength =\n            boundPath && boundPath.length || 0;\n\n    // If the model is bound, then get that cache position.\n    if (optimizedLength) {\n        // JSONGraph output cannot ever be bound or else it will\n        // throw an error.\n        return { error: new BoundJSONGraphModelError() };\n    } else {\n        optimizedPath = [];\n        cache = node = modelRoot.cache;\n    }\n\n    requestedPath = [];\n\n    var boxValues = model._boxed,\n        expired = modelRoot.expired,\n        materialized = model._materialized,\n        hasDataSource = Boolean(model._source),\n        treatErrorsAsValues = model._treatErrorsAsValues,\n\n        results = { data: seed },\n        pathsIndex = -1, pathsCount = paths.length;\n\n    while (++pathsIndex < pathsCount) {\n        var path = paths[pathsIndex];\n        requestedLength = path.length;\n        walkPathAndBuildOutput(cache, node, path,\n                            /* depth = */ 0, seed, results,\n                               requestedPath, requestedLength,\n                               optimizedPath, optimizedLength,\n              /* fromReference = */ false, modelRoot, expired, expireImmediate,\n                               boxValues, materialized, hasDataSource, treatErrorsAsValues);\n    }\n\n    results.args =\n    results.relative = results.requested;\n\n    return results;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/getJSONGraph.js","var isArray = Array.isArray;\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar clone = require('../clone');\nvar FalcorJSON = require('./json/FalcorJSON');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = onMaterialize;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterialize(json, path, depth, length,\n                       branchSelector, boxValues, modelRoot) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (depth === length) {\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta;\n\n    var nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        keysetIndex = -1, keysetLength = 0;\n\n    keyset = path[depth];\n\n    if (!json || typeofObject !== typeof json) {\n        json = {};\n        json.__proto__ = FalcorJSON.prototype;\n        json[f_meta_data] = f_meta = {};\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[f_meta_data])) {\n        json[f_meta_data] = f_meta = {};\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n    } else {\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            // insert the materialized branch\n            json[nextKey] = onMaterialize(\n                json[nextKey], path,\n                nextDepth, length,\n                branchSelector,\n                boxValues,\n                modelRoot\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMaterialize.js","var isArray = Array.isArray;\nvar isPathValue = require('../support/isPathValue');\nvar isJSONEnvelope = require('../support/isJSONEnvelope');\nvar isJSONGraphEnvelope = require('../support/isJSONGraphEnvelope');\n\nmodule.exports = groupCacheArguments;\n\nfunction groupCacheArguments(args) {\n\n    var groups = [];\n    var argIndex = -1;\n    var argCount = args.length;\n    var group, groupType, arg, argType;\n\n    while (++argIndex < argCount) {\n        arg = args[argIndex];\n        if (isArray(arg)) {\n            arg = { path: arg };\n            argType = 'PathValues';\n        } else if (isPathValue(arg)) {\n            argType = 'PathValues';\n        } else if (isJSONGraphEnvelope(arg)) {\n            argType = 'JSONGraphs';\n        } else if (isJSONEnvelope(arg)) {\n            argType = 'PathMaps';\n        }\n\n        if (groupType !== argType) {\n            groupType = argType;\n            groups.push(group = {\n                arguments: [],\n                inputType: argType\n            });\n        }\n\n        group.arguments.push(arg);\n    }\n\n    return groups;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/groupCacheArguments.js","module.exports = function insertNode(node, parent, key, version, optimizedPath) {\n    node[f_key] = key;\n    node[f_parent] = parent;\n\n    if (version !== undefined) {\n        node[f_version] = version;\n    }\n    if (!node[f_abs_path]) {\n        node[f_abs_path] = optimizedPath.slice(0, optimizedPath.index).concat(key);\n    }\n\n    parent[key] = node;\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/insertNode.js","var arr = new Array(2);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\nvar getSize = require('../../support/getSize');\nvar createHardlink = require('../createHardlink');\nvar getBoundCacheNode = require('../getBoundCacheNode');\nvar isInternalKey = require('../../support/isInternalKey');\nvar updateNodeAncestors = require('../updateNodeAncestors');\n\n/**\n * Sets a list of PathMaps into a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of @PathMapEnvelopes to set.\n */\n\nmodule.exports = invalidatePathMaps;\n\nfunction invalidatePathMaps(model, pathMapEnvelopes, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var comparator = modelRoot._comparator;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n\n    if (!node) {\n        return false;\n    }\n\n    var pathMapIndex = -1;\n    var parent = node[f_parent] || cache;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n\n        invalidatePathMap(\n            pathMapEnvelope.json, 0, cache, parent, node,\n            version, expired, lru, comparator, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return true;\n    }\n\n    return false;\n}\n\nfunction invalidatePathMap(\n    pathMap, depth, root, parent, node, version,\n    expired, lru, comparator, expireImmediate) {\n\n    if (!pathMap || typeof pathMap !== 'object' || pathMap.$type) {\n        return;\n    }\n\n    for (var key in pathMap) {\n        if (!isInternalKey(key)) {\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n            arr = invalidateNode(\n                root, parent, node,\n                key, child, branch, false, version, expired,\n                lru, comparator, expireImmediate\n            );\n            var nextNode = arr[0];\n            var nextParent = arr[1];\n            if (nextNode) {\n                if (branch) {\n                    invalidatePathMap(\n                        child, depth + 1,\n                        root, nextParent, nextNode,\n                        version, expired, lru, comparator, expireImmediate\n                    );\n                } else {\n                    updateNodeAncestors(nextNode, getSize(nextNode), lru, version);\n                }\n            }\n        }\n    }\n}\n\nfunction invalidateReference(\n    value, root, node, version,\n    expired, lru, comparator, expireImmediate) {\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return arr;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[f_context];\n\n    if (node != null) {\n        parent = node[f_parent] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            arr = invalidateNode(\n                root, parent, node,\n                key, value, branch, true, version,\n                expired, lru, comparator, expireImmediate\n            );\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return arr;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\nfunction invalidateNode(\n    root, parent, node,\n    key, value, branch, reference, version,\n    expired, lru, comparator, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        arr = invalidateReference(\n            value, root, node, version, expired,\n            lru, comparator, expireImmediate\n        );\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return arr;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new Error('`null` is not allowed in branch key positions.');\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/invalidatePathMaps.js","var $now = require('../values/expires-now');\nvar getType = require('../support/getType');\nvar getSize = require('../support/getSize');\nvar getTimestamp = require('../support/getTimestamp');\n\nvar wrapNode = require('./wrapNode');\nvar isExpired = require('./isExpired');\nvar expireNode = require('./expireNode');\nvar insertNode = require('./insertNode');\nvar replaceNode = require('./replaceNode');\nvar reconstructPath = require('./reconstructPath');\nvar updateNodeAncestors = require('./updateNodeAncestors');\nvar removeNodeAndDescendants = require('./removeNodeAndDescendants');\n\nmodule.exports = function mergeValueOrInsertBranch(\n    parent, node, key, value,\n    branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var cType = getType(node, reference);\n\n    if (branch || reference) {\n        if (cType && isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge if it expires immediately\n             */\n            true)) {\n            expireNode(node, expired, lru);\n            cType = node.$expires === $now ? cType : 'expired';\n        }\n        if ((cType && cType !== $ref) || (!node || typeof node !== 'object')) {\n            node = replaceNode(node, {}, parent, key, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    } else {\n        var message = value;\n        var isDistinct = true;\n        var mType = getType(message);\n\n        // If both the cache and message are primitives,\n        // insert the message into the cache.\n        if (!cType && !mType) {\n            isDistinct = true;\n        }\n        // Compare the current cache value with the new value. If either of\n        // them don't have a timestamp, or the message's timestamp is newer,\n        // replace the cache value with the message value. If a comparator\n        // is specified, the comparator takes precedence over timestamps.\n        else if (comparator) {\n            isDistinct = !(comparator.length < 3 ?\n                comparator(node, message) : comparator(node, message,\n                    optimizedPath.slice(0, optimizedPath.index))\n            );\n        } else {\n            // Comparing either Number or undefined to undefined always results in false.\n            isDistinct = getTimestamp(message) < getTimestamp(node) === false;\n        }\n\n        if (isDistinct) {\n\n            if (errorSelector && mType === $error) {\n                message = errorSelector(reconstructPath(requestedPath, key), message);\n            }\n\n            var sizeOffset = getSize(node) - getSize(message =\n                wrapNode(message, mType, mType ? message.value : message));\n\n            node = replaceNode(node, message, parent, key, lru, version);\n            parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/mergeValueOrInsertBranch.js","/**\n * Reconstructs the path for the current key, from currentPath (requestedPath)\n * state maintained during set/merge walk operations.\n *\n * During the walk, since the requestedPath array is updated after we attempt to\n * merge/insert nodes during a walk (it reflects the inserted node's parent branch)\n * we need to reconstitute a path from it.\n *\n * @param  {Array} currentPath The current requestedPath state, during the walk\n * @param  {String} key        The current key value, during the walk\n * @return {Array} A new array, with the path which represents the node we're about\n * to insert\n */\nmodule.exports = function reconstructPath(currentPath, key) {\n\n    var path = currentPath.slice(0, currentPath.depth);\n    path[path.length] = key;\n\n    return path;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/reconstructPath.js","var transferBackReferences = require('./transferBackReferences');\nvar removeNodeAndDescendants = require('./removeNodeAndDescendants');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = function replaceNode(node, replacement, parent, key, lru, version) {\n    if (node === replacement) {\n        return node;\n    } else if (!(!node || typeof node !== 'object')) {\n        transferBackReferences(node, replacement);\n        removeNodeAndDescendants(node, parent, key, lru);\n        updateBackReferenceVersions(replacement, version);\n    }\n\n    parent[key] = replacement;\n    return replacement;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/replaceNode.js","var isArray = Array.isArray;\nvar now = require('../support/now');\nvar clone = require('./../support/clone');\nvar getSize = require('./../support/getSize');\nvar getExpires = require('../support/getExpires');\nvar expiresNow = require('../values/expires-now');\n\nvar atomSize = 50;\n\nmodule.exports = function wrapNode(nodeArg, typeArg, value) {\n\n    var size = 0;\n    var node = nodeArg;\n    var type = typeArg;\n\n    if (type) {\n        var modelCreated = node[f_wrapped_value];\n        node = clone(node);\n        size = getSize(node);\n        node.$type = type;\n        node[f_prev] = undefined;\n        node[f_next] = undefined;\n        node[f_wrapped_value] = modelCreated || false;\n    } else {\n        node = { $type: $atom, value: value };\n        node[f_prev] = undefined;\n        node[f_next] = undefined;\n        node[f_wrapped_value] = true;\n    }\n\n    if (value == null) {\n        size = atomSize + 1;\n    } else if (size == null || size <= 0) {\n        switch (typeof value) {\n            case 'object':\n                if (isArray(value)) {\n                    size = atomSize + value.length;\n                } else {\n                    size = atomSize + 1;\n                }\n                break;\n            case 'string':\n                size = atomSize + value.length;\n                break;\n            default:\n                size = atomSize + 1;\n                break;\n        }\n    }\n\n    var expires = getExpires(node);\n\n    if (typeof expires === 'number' && expires < expiresNow) {\n        node.$expires = now() + (expires * -1);\n    }\n\n    node.$size = size;\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/wrapNode.js","var createErrorClass = require('./createErrorClass');\n\nmodule.exports = createErrorClass('CircularReferenceError', function(referencePath) {\n    this.message = 'Encountered circular reference ' + JSON.stringify(referencePath);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/CircularReferenceError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'An exception was thrown when making a request';\n\n/**\n * InvalidSourceError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidSourceError', function(error) {\n    this.message = MESSAGE + ':\\n\\t' + error;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidSourceError.js","module.exports = function lruSplice(root, object) {\n\n    // Its in the cache.  Splice out.\n    var prev = object[f_prev];\n    var next = object[f_next];\n    if (next) {\n        next[f_prev] = prev;\n    }\n    if (prev) {\n        prev[f_next] = next;\n    }\n    object[f_prev] = object[f_next] = undefined;\n\n    if (object === root[f_head]) {\n        root[f_head] = next;\n    }\n    if (object === root[f_tail]) {\n        root[f_tail] = prev;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/splice.js","var Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar $$observable = require('symbol-observable').default;\n\nmodule.exports = Source;\n\nfunction Source(subscribe) {\n    if (!subscribe) {\n        return;\n    }\n    switch (typeof subscribe) {\n        case 'object':\n            this.source = subscribe;\n            break;\n        case 'function':\n            this.source = { subscribe: subscribe };\n            break;\n    }\n}\n\nSource.prototype[$$observable] = function() {\n    return this;\n}\n\nSource.prototype.operator = function(destination) {\n    return this.subscribe(destination);\n}\n\n// Unused\n// Source.prototype.lift = function(operator, source) {\n//     source = new Source(source || this);\n//     source.operator = operator;\n//     source._promise = this._promise;\n//     return source;\n// }\n\nSource.prototype.subscribe = function(destination, x, y) {\n    return new Subscription([\n        this.operator.call(\n            this.source, !(destination instanceof Subscriber) ?\n                new Subscriber(destination, x, y) : destination)\n    ]);\n}\n\nSource.prototype.then = function then(onNext, onError) {\n    /* global Promise */\n    var source = this;\n    if (!this._promise) {\n        this._promise = new global['Promise'](function(resolve, reject) {\n            var values = [], rejected = false;\n            source.subscribe({\n                next: function(value) { values[values.length] = value; },\n                error: function(errors) { (rejected = true) && reject(errors); },\n                complete: function() {\n                    !rejected &&\n                    resolve(values.length <= 1 ? values[0] : values);\n                }\n            });\n        });\n    }\n    return this._promise.then(onNext, onError);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Source.js","var empty = {\n    dispose: function() {},\n    unsubscribe: function() {}\n};\n\nfunction ImmediateScheduler() {}\n\nImmediateScheduler.prototype.schedule = function schedule(action) {\n    action();\n    return empty;\n};\n\nmodule.exports = ImmediateScheduler;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/schedulers/ImmediateScheduler.js","var isObject = require('./../support/isObject');\n\nmodule.exports = function isJSONEnvelope(envelope) {\n    return isObject(envelope) && ('json' in envelope);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isJSONEnvelope.js","var isArray = Array.isArray;\nvar isObject = require('./../support/isObject');\n\nmodule.exports = function isJSONGraphEnvelope(envelope) {\n    return isObject(envelope) && isArray(envelope.paths) && (\n        isObject(envelope.jsonGraph) ||\n        isObject(envelope.jsong) ||\n        isObject(envelope.json) ||\n        isObject(envelope.values) ||\n        isObject(envelope.value)\n    );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isJSONGraphEnvelope.js","module.exports = Date.now;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/now.js","module.exports = 1;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/values/expires-never.js","var Model = require('./Model');\nvar FalcorJSON = require('./cache/get/json/FalcorJSON');\n\nfunction falcor(opts) {\n    if (!(this instanceof Model)) {\n        return new Model(opts);\n    }\n    Model.call(this, opts);\n}\n\nfalcor.prototype = Object.create(Model.prototype);\n\nfalcor['Model'] = Model;\nfalcor['FalcorJSON'] = FalcorJSON;\nfalcor['toProps'] = FalcorJSON.prototype.toProps;\n\nmodule.exports = falcor;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/index.js","var isArray = Array.isArray;\nvar getHashCode = require('./getHashCode');\n\nmodule.exports = computeFlatBufferHash;\n\nfunction computeFlatBufferHash(seed) {\n\n    if (seed === undefined) {\n        return undefined;\n    }\n\n    var code = '';\n    var keys = seed['$keys'];\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    while (++keysIndex < keysLength) {\n\n        var key = keys[keysIndex];\n\n        if (key === null) {\n            code = '' + getHashCode('' + code + 'null');\n            continue;\n        } else if (typeof key === 'object') {\n            key = '[' + key.from + '..' + (key.from + key.length - 1) + ']';\n        }\n\n        var next = computeFlatBufferHash(seed[keysIndex]);\n        if (next === undefined) {\n            code = '' + getHashCode('' + code + key);\n        } else {\n            code = '' + getHashCode('' + code + key + next['$code']);\n        }\n    }\n\n    seed['$code'] = code;\n\n    return seed;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/computeFlatBufferHash.js","var isArray = Array.isArray;\nvar materializedAtom = require('./support/materializedAtom');\n\nmodule.exports = hasIntersection\n\n/**\n * Tests to see if the intersection should be stripped from the\n * total paths.  The only way this happens currently is if the entirety\n * of the path is contained in the tree.\n * @private\n */\n\nfunction hasIntersection(tree, path, depth, length) {\n\n    if (depth === length) {\n        return true;\n    }\n\n    var intersects = true;\n    var keyset, keysetIndex = -1, keysetLength = 0;\n    var next, nextKey, nextDepth = depth + 1,\n        keyIsRange, rangeEnd, keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return tree === materializedAtom;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                break iteratingKeyset;\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        do {\n            if (nextDepth === length) {\n                if (tree[nextKey] !== null) {\n                    return false;\n                }\n            } else {\n                next = tree[nextKey];\n                if (next === null || next === undefined) {\n                    return false;\n                } else if (hasIntersection(next, path, nextDepth, length) === false) {\n                    return false;\n                }\n            }\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/hasIntersection.js","var isArray = Array.isArray;\nvar nullBuffer = { '$keys': [null], '$keysMap': { 'null': 0 } };\nvar flatBufferToPaths = require('./flatBufferToPaths');\n\nmodule.exports = toFlatBuffer;\n\nfunction toFlatBuffer(paths, seed) {\n    return paths.reduce(function(seed, path) {\n        if (isArray(path)) {\n            return pathToFlatBuffer(seed, path, 0, path.length);\n        } else if (isArray(path.$keys)) {\n            return toFlatBuffer(flatBufferToPaths(path), seed);\n        }\n        return seed;\n    }, seed || {});\n}\n\nfunction pathToFlatBuffer(seed, path, depth, length) {\n\n    if (depth === length) {\n        return undefined;\n    }\n\n    seed = seed || {};\n    var keys = seed['$keys'] || (seed['$keys'] = []);\n    var keysMap = seed['$keysMap'] || (seed['$keysMap'] = {});\n    var keysIndex = -1;\n\n    var keyset, keysetIndex = -1, keysetLength = 0;\n    var node, next, nextKey, nextDepth = depth + 1,\n        rangeEnd, keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return nullBuffer;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            if ('undefined' === typeof (keysIndex = keysMap[nextKey])) {\n                keysIndex = keys.length;\n            }\n            keys[keysIndex] = nextKey;\n            keysMap[nextKey] = keysIndex;\n            next = pathToFlatBuffer(seed[keysIndex], path, nextDepth, length);\n            if (next !== undefined) {\n                seed[keysIndex] = next;\n            }\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                break iteratingKeyset;\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyset = { from: nextKey, length: rangeEnd - nextKey + 1 };\n            nextKey = '[' + nextKey + '..' + rangeEnd + ']';\n            if ('undefined' === typeof (keysIndex = keysMap[nextKey])) {\n                keysIndex = keys.length;\n            }\n            keys[keysIndex] = keyset;\n            keysMap[nextKey] = keysIndex;\n            next = pathToFlatBuffer(seed[keysIndex], path, nextDepth, length);\n            if (next !== undefined) {\n                seed[keysIndex] = next;\n            }\n        }\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return seed;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toFlatBuffer.js","var isArray = Array.isArray;\nvar materializedAtom = require('./support/materializedAtom');\n\nmodule.exports = toTree;\n\n/**\n * @param {Array} paths -\n * @returns {Object} -\n */\n\nfunction toTree(paths, seed) {\n    return paths.reduce(function(seed, path) {\n        return pathToTree(seed, path, 0, path.length, null);\n    }, seed || {});\n};\n\nfunction pathToTree(seed, path, depth, length, value) {\n\n    if (depth === length) {\n        return true;\n    }\n\n    seed = seed || {};\n\n    var keyset, keysetIndex = -1, keysetLength = 0;\n    var node, next, nextKey, nextDepth = depth + 1,\n        keyIsRange, rangeEnd, keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return materializedAtom;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                break iteratingKeyset;\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        do {\n            if (nextDepth === length) {\n                seed[nextKey] = value;\n            } else {\n                node = seed[nextKey];\n                next = pathToTree(node, path, nextDepth, length, value);\n                if (!next) {\n                    seed[nextKey] = value;\n                } else if (!node) {\n                    seed[nextKey] = next;\n                }\n            }\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return seed;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toTree.js","var Call = require('./request/Call');\nvar ModelRoot = require('./ModelRoot');\nvar FalcorJSON = require('./cache/get/json/FalcorJSON');\nvar ModelDataSourceAdapter = require('./ModelDataSourceAdapter');\nvar TimeoutScheduler = require('./schedulers/TimeoutScheduler');\nvar ImmediateScheduler = require('./schedulers/ImmediateScheduler');\nvar collapse = require('@graphistry/falcor-path-utils/lib/collapse');\n\nvar getSize = require('./support/getSize');\nvar isObject = require('./support/isObject');\nvar isJSONEnvelope = require('./support/isJSONEnvelope');\nvar getCachePosition = require('./cache/getCachePosition');\nvar isJSONGraphEnvelope = require('./support/isJSONGraphEnvelope');\n\nvar setCache = require('./cache/set/setPathMaps');\nvar setJSONGraphs = require('./cache/set/setJSONGraphs');\n\nvar getJSON = require('./cache/get/json');\nvar getCache = require('./cache/getCache');\nvar getJSONGraph = require('./cache/get/jsonGraph');\n\nmodule.exports = Model;\n\n/**\n * This callback is invoked when the Model's cache is changed.\n * @callback Model~onChange\n */\n\n /**\n * This function is invoked on every JSONGraph Error retrieved from the DataSource. This function allows Error objects to be transformed before being stored in the Model's cache.\n * @callback Model~errorSelector\n * @param {Object} jsonGraphError - the JSONGraph Error object to transform before it is stored in the Model's cache.\n * @returns {Object} the JSONGraph Error object to store in the Model cache.\n */\n\n /**\n * This function is invoked every time a value in the Model cache is about to be replaced with a new value. If the function returns true, the existing value is replaced with a new value and the version flag on all of the value's ancestors in the tree are incremented.\n * @callback Model~comparator\n * @param {Object} existingValue - the current value in the Model cache.\n * @param {Object} newValue - the value about to be set into the Model cache.\n * @returns {Boolean} the Boolean value indicating whether the new value and the existing value are equal.\n */\n\n/**\n * A Model object is used to execute commands against a {@link JSONGraph} object. {@link Model}s can work with a local JSONGraph cache, or it can work with a remote {@link JSONGraph} object through a {@link DataSource}.\n * @constructor\n * @param {?Object} options - a set of options to customize behavior\n * @param {?DataSource} options.source - a data source to retrieve and manage the {@link JSONGraph}\n * @param {?JSONGraph} options.cache - initial state of the {@link JSONGraph}\n * @param {?number} options.maxSize - the maximum size of the cache. This value roughly correlates to item count (where itemCount = maxSize / 50). Each item by default is given a metadata `$size` of 50 (or its length when it's an array or string). You can get better control of falcor's memory usage by tweaking `$size`\n * @param {?number} options.collectRatio - the ratio of the maximum size to collect when the maxSize is exceeded\n * @param {?Model~errorSelector} options.errorSelector - a function used to translate errors before they are returned\n * @param {?Model~onChange} options.onChange - a function called whenever the Model's cache is changed\n * @param {?Model~comparator} options.comparator - a function called whenever a value in the Model's cache is about to be replaced with a new value.\n */\nfunction Model(opts) {\n\n    var options = opts || {};\n\n    this._node = options._node;\n    this._path = options._path || [];\n    this._source = options.source || options._source;\n    this._root = options._root || new ModelRoot(options, this);\n    this._recycleJSON = options.recycleJSON === true || options._recycleJSON;\n    this._scheduler = options.scheduler || options._scheduler || new ImmediateScheduler();\n\n    if (options._seed) {\n        this._recycleJSON = true;\n        this._seed = options._seed;\n        this._treatErrorsAsValues = true;\n    } else if (this._recycleJSON) {\n        this._treatErrorsAsValues = true;\n        this._seed = {};\n        this._seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    this._boxed = options.boxed === true || options._boxed || false;\n    this._materialized = options.materialized === true || options._materialized || false;\n    this._treatErrorsAsValues = options.treatErrorsAsValues === true || options._treatErrorsAsValues || false;\n    this._allowFromWhenceYouCame = options.allowFromWhenceYouCame === true || options._allowFromWhenceYouCame || false;\n\n    if (options.cache) {\n        this.setCache(options.cache);\n    }\n}\n\nModel.prototype.constructor = Model;\n\n/**\n * The get method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model}. The get method loads each value into a JSON object and returns in a ModelResponse.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - the requested data as JSON\n */\nModel.prototype.get = function get(...args) {\n    var seed = this._seed;\n    if (!seed) {\n        seed = {};\n        seed.__proto__ = FalcorJSON.prototype;\n    }\n    return new Call('get', this, args)._toJSON(seed, []);\n}\n\n/**\n * Sets the value at one or more places in the JSONGraph model. The set method accepts one or more {@link PathValue}s, each of which is a combination of a location in the document and the value to place there.  In addition to accepting  {@link PathValue}s, the set method also returns the values after the set operation is complete.\n * @function\n * @return {ModelResponse.<JSONEnvelope>} - an {@link Observable} stream containing the values in the JSONGraph model after the set was attempted\n */\nModel.prototype.set = function set(...args) {\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n    return new Call('set', this, args)._toJSON(seed, []);\n}\n\n/**\n * The preload method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model} and loads them into the Model cache.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - a ModelResponse that completes when the data has been loaded into the cache.\n */\nModel.prototype.preload = function preload(...args) {\n    return new Call('get', this, args)._toJSON(null, []);\n}\n\n/**\n * Invokes a function in the JSON Graph.\n * @function\n * @param {Path} functionPath - the path to the function to invoke\n * @param {Array.<Object>} args - the arguments to pass to the function\n * @param {Array.<PathSet>} refPaths - the paths to retrieve from the JSON Graph References in the message returned from the function\n * @param {Array.<PathSet>} thisPaths - the paths to retrieve from function's this object after successful function execution\n * @return {ModelResponse.<JSONEnvelope> - a JSONEnvelope contains the values returned from the function\n */\n\nModel.prototype.call = function call(...args) {\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n    return new Call('call', this, args)._toJSON(seed, []);\n}\n\n/**\n * The invalidate method synchronously removes several {@link Path}s or {@link PathSet}s from a {@link Model} cache.\n * @function\n * @param {...PathSet} path - the  paths to remove from the {@link Model}'s cache.\n */\nModel.prototype.invalidate = function invalidate(...args) {\n    return new Call('invalidate', this, args)._toJSON(null, null).then();\n}\n\n/**\n * Returns a new {@link Model} bound to a location within the {@link\n * JSONGraph}. The bound location is never a {@link Reference}: any {@link\n * Reference}s encountered while resolving the bound {@link Path} are always\n * replaced with the {@link Reference}s target value. For subsequent operations\n * on the {@link Model}, all paths will be evaluated relative to the bound\n * path. Deref allows you to:\n * - Expose only a fragment of the {@link JSONGraph} to components, rather than\n *   the entire graph\n * - Hide the location of a {@link JSONGraph} fragment from components\n * - Optimize for executing multiple operations and path looksup at/below the\n *   same location in the {@link JSONGraph}\n * @method\n * @param {Object} responseObject - an object previously retrieved from the\n * Model\n * @return {Model} - the dereferenced {@link Model}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.deref = require('./deref');\n\n/**\n * A dereferenced model can become invalid when the reference from which it was\n * built has been removed/collected/expired/etc etc.  To fix the issue, a from\n * the parent request should be made (no parent, then from the root) for a valid\n * path and re-dereference performed to update what the model is bound too.\n *\n * @method\n * @private\n * @return {Boolean} - If the currently deref'd model is still considered a\n * valid deref.\n */\nModel.prototype._hasValidParentReference = require('./deref/hasValidParentReference');\n\n/**\n * Get data for a single {@link Path}.\n * @param {Path} path - the path to retrieve\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     getValue('user.name').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.getValue = function getValue(path) {\n    return new Call('get', this, [path])\n        ._toJSON({}, [])\n        .lift(function(subscriber) {\n            return this.subscribe({\n                onNext: function(data) {\n                    var depth = -1;\n                    var x = data.json;\n                    var length = path.length;\n                    while (x && !x.$type && ++depth < length) {\n                        x = x[path[depth]];\n                    }\n                    subscriber.onNext(x);\n                },\n                onError: subscriber.onError.bind(subscriber),\n                onCompleted: subscriber.onCompleted.bind(subscriber)\n            })\n        });\n}\n\n/**\n * Set value for a single {@link Path}.\n * @param {Path} path - the path to set\n * @param {Object} value - the value to set\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     setValue('user.name', 'Jim').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.setValue = function setValue(path, value) {\n    path = arguments.length === 1 ? path.path : path;\n    value = arguments.length === 1 ? path : {path:path,value:value};\n    return new Call('set', this, [value])\n        ._toJSON({}, [])\n        .lift(function(subscriber) {\n            return this.subscribe({\n                onNext: function(data) {\n                    var depth = -1;\n                    var x = data.json;\n                    var length = path.length;\n                    while (x && !x.$type && ++depth < length) {\n                        x = x[path[depth]];\n                    }\n                    subscriber.onNext(x);\n                },\n                onError: subscriber.onError.bind(subscriber),\n                onCompleted: subscriber.onCompleted.bind(subscriber)\n            })\n        });\n}\n\n/**\n * Set the local cache to a {@link JSONGraph} fragment. This method can be a useful way of mocking a remote document, or restoring the local cache from a previously stored state.\n * @param {JSONGraph} jsonGraph - the {@link JSONGraph} fragment to use as the local cache\n */\nModel.prototype.setCache = function modelSetCache(cacheOrJSONGraphEnvelope) {\n\n    var modelRoot = this._root;\n    var cache = modelRoot.cache;\n\n    if (cacheOrJSONGraphEnvelope !== cache) {\n\n        var options = {\n            _path: [],\n            _boxed: false,\n            _root: modelRoot,\n            _materialized: false,\n            _treatErrorsAsValues: false\n        };\n\n        modelRoot.cache = this._node = {};\n\n        if (typeof cache !== 'undefined') {\n            modelRoot.expired = [];\n            modelRoot[f_head] = undefined;\n            modelRoot[f_tail] = undefined;\n            if (this._recycleJSON) {\n                this._seed = {};\n                this._seed.__proto__ = FalcorJSON.prototype;\n            }\n        }\n\n        var results, rootOnChangeHandler;\n        if (isJSONGraphEnvelope(cacheOrJSONGraphEnvelope)) {\n            results = setJSONGraphs(options, [cacheOrJSONGraphEnvelope]);\n        } else if (isJSONEnvelope(cacheOrJSONGraphEnvelope)) {\n            results = setCache(options, [cacheOrJSONGraphEnvelope]);\n        } else if (isObject(cacheOrJSONGraphEnvelope)) {\n            results = setCache(options, [{ json: cacheOrJSONGraphEnvelope }]);\n        }\n\n        if (results) {\n            // performs promotion without producing output.\n            if (results[0].length) {\n                getJSON(options, results[0], null, false, false);\n            }\n            if (results[2] && (rootOnChangeHandler = modelRoot.onChange)) {\n                rootOnChangeHandler();\n            }\n        }\n    } else if (typeof cache === 'undefined') {\n        this._root.cache = {};\n    }\n    return this;\n};\n\n/**\n * Get the local {@link JSONGraph} cache. This method can be a useful to store the state of the cache.\n * @param {...Array.<PathSet>} [pathSets] - The path(s) to retrieve. If no paths are specified, the entire {@link JSONGraph} is returned.\n * @return {JSONGraph} all of the {@link JSONGraph} data in the {@link Model} cache.\n * @example\n // Storing the boxshot of the first 10 titles in the first 10 genreLists to local storage.\n localStorage.setItem('cache', JSON.stringify(model.getCache('genreLists[0...10][0...10].boxshot')));\n */\nModel.prototype.getCache = function _getCache() {\n\n    var paths = Array.prototype.slice.call(arguments, 0);\n\n    if (paths.length === 0) {\n        return getCache(this._root.cache);\n    }\n\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n\n    var env = getJSONGraph({\n        _path: [],\n        _root: this._root,\n        _boxed: this._boxed,\n        _materialized: this._materialized,\n        _treatErrorsAsValues: this._treatErrorsAsValues\n    }, paths, seed).data;\n\n    env.paths = collapse(paths);\n\n    return env;\n};\n\n/**\n * Retrieves a number which is incremented every single time a value is changed underneath the Model or the object at an optionally-provided Path beneath the Model.\n * @param {Path?} path - a path at which to retrieve the version number\n * @return {Number} a version number which changes whenever a value is changed underneath the Model or provided Path\n */\nModel.prototype.getVersion = function getVersion(path) {\n    path = path || [];\n    if (Array.isArray(path) === false) {\n        throw new Error('Model#getVersion must be called with an Array path.');\n    }\n    if (this._path.length) {\n        path = this._path.concat(path);\n    }\n    return this._getVersion(this, path);\n};\n\n/* eslint-disable guard-for-in */\nModel.prototype._clone = function cloneModel(opts) {\n    var clone = new Model(this);\n    if (opts) {\n        for (var key in opts) {\n            var value = opts[key];\n            if (value === 'delete') {\n                delete clone[key];\n            } else if (key === '_path') {\n                clone[key] = value;\n                if (false === opts.hasOwnProperty('_node')) {\n                    delete clone['_node'];\n                }\n            } else {\n                clone[key] = value;\n            }\n        }\n    }\n    if (clone._path.length > 0) {\n        clone.setCache = void 0;\n    }\n    return clone;\n};\n/* eslint-enable */\n\n/**\n * Returns a clone of the {@link Model} that enables batching. Within the configured time period, paths for get operations are collected and sent to the {@link DataSource} in a batch. Batching can be more efficient if the {@link DataSource} access the network, potentially reducing the number of HTTP requests to the server.\n * @param {?Scheduler|number} schedulerOrDelay - Either a {@link Scheduler} that determines when to send a batch to the {@link DataSource}, or the number in milliseconds to collect a batch before sending to the {@link DataSource}. If this parameter is omitted, then batch collection ends at the end of the next tick.\n * @return {Model} a Model which schedules a batch of get requests to the DataSource.\n */\nModel.prototype.batch = function batch(schedulerOrDelay) {\n\n    var scheduler;\n\n    if (typeof schedulerOrDelay === 'number') {\n        scheduler = new TimeoutScheduler(Math.round(Math.abs(schedulerOrDelay)));\n    } else if (!schedulerOrDelay) {\n        scheduler = new TimeoutScheduler(1);\n    } else if (typeof schedulerOrDelay.schedule === 'function') {\n        scheduler = schedulerOrDelay;\n    } else if (typeof schedulerOrDelay === 'function') {\n        scheduler = { scheudle: schedulerOrDelay };\n    }\n\n    return this._clone({ _scheduler: scheduler });\n};\n\n/**\n * Returns a clone of the {@link Model} that disables batching. This is the default mode. Each get operation will be executed on the {@link DataSource} separately.\n * @name unbatch\n * @memberof Model.prototype\n * @function\n * @return {Model} a {@link Model} that batches requests of the same type and sends them to the data source together\n */\nModel.prototype.unbatch = function unbatch() {\n    return this._clone({ _scheduler: new ImmediateScheduler() });\n};\n\n/**\n * Returns a clone of the {@link Model} that treats errors as values. Errors will be reported in the same callback used to report data. Errors will appear as objects in responses, rather than being sent to the {@link Observable~onErrorCallback} callback of the {@link ModelResponse}.\n * @return {Model}\n */\nModel.prototype.treatErrorsAsValues = function treatErrorsAsValues() {\n    return this._clone({ _treatErrorsAsValues: true });\n};\n\n/**\n * Adapts a Model to the {@link DataSource} interface.\n * @return {DataSource}\n * @example\nvar model =\n    new falcor.Model({\n        cache: {\n            user: {\n                name: 'Steve',\n                surname: 'McGuire'\n            }\n        }\n    }),\n    proxyModel = new falcor.Model({ source: model.asDataSource() });\n\n// Prints 'Steve'\nproxyModel.getValue('user.name').\n    then(function(name) {\n        console.log(name);\n    });\n */\nModel.prototype.asDataSource = function asDataSource() {\n    return new ModelDataSourceAdapter(this);\n};\n\nModel.prototype._materialize = function materialize() {\n    return this._clone({\n        _materialized: true\n    });\n};\n\nModel.prototype._dematerialize = function dematerialize() {\n    return this._clone({\n        _materialized: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that boxes values returning the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the value inside it. This allows any metadata attached to the wrapper to be inspected.\n * @return {Model}\n */\nModel.prototype.boxValues = function boxValues() {\n    return this._clone({\n        _boxed: true\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that unboxes values, returning the value inside of the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the wrapper itself. This is the default mode.\n * @return {Model}\n */\nModel.prototype.unboxValues = function unboxValues() {\n    return this._clone({\n        _boxed: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that only uses the local {@link JSONGraph} and never uses a {@link DataSource} to retrieve missing paths.\n * @return {Model}\n */\nModel.prototype.withoutDataSource = function withoutDataSource() {\n    return this._clone({\n        _source: 'delete'\n    });\n};\n\n/* implement inspect method for node's inspect utility */\nModel.prototype.inspect = function inspect() {\n    return '{ v: ' + this.getVersion() + ' p: [' + this._path.join(', ') + '] }';\n}\n\nModel.prototype.toJSON = function toJSON() {\n    return {\n        $type: 'ref',\n        value: this.getPath()\n    };\n};\n\n/**\n * Returns the {@link Path} to the object within the JSON Graph that this Model references.\n * @return {Path}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.getPath = function getPath() {\n    return this._path.slice(0);\n};\n\n/**\n * This one is actually private.  I would not use this without talking to\n * jhusain, sdesai, or michaelbpaulson (github).\n * @private\n */\nModel.prototype._fromWhenceYouCame = function fromWhenceYouCame(allow) {\n    return this._clone({\n        _allowFromWhenceYouCame: allow === undefined ? true : allow\n    });\n};\n\nModel.prototype._optimizePath = function _optimizePath(path) {\n    var node = getCachePosition(this._root.cache, path);\n    var abs_path = node && node[f_abs_path] || [];\n    return abs_path.slice(0);\n};\n\nModel.prototype._getVersion = require('./cache/getVersion');\nModel.prototype._getPathValuesAsPathMap = getJSON;\nModel.prototype._getPathValuesAsJSONG = getJSONGraph;\n\nModel.prototype._setPathValues = require('./cache/set/setPathValues');\nModel.prototype._setPathMaps = require('./cache/set/setPathMaps');\nModel.prototype._setJSONGs = require('./cache/set/setJSONGraphs');\nModel.prototype._setCache = require('./cache/set/setPathMaps');\n\nModel.prototype._invalidatePathValues = require('./cache/invalidate/invalidatePathSets');\nModel.prototype._invalidatePathMaps = require('./cache/invalidate/invalidatePathMaps');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Model.js","function ModelDataSourceAdapter(model) {\n    this._model = model\n        // .boxValues()\n        ._materialize().treatErrorsAsValues();\n}\n\nModelDataSourceAdapter.prototype.get = function get(pathSets) {\n    return this._model.get.apply(this._model, pathSets)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.set = function set(jsongResponse) {\n    return this._model.set(jsongResponse)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.call = function call(path, args, suffixes, paths) {\n    return this._model.call.apply(this._model, [\n        path, args, suffixes\n    ].concat(paths))._toJSONG();\n};\n\nmodule.exports = ModelDataSourceAdapter;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ModelDataSourceAdapter.js","var functionTypeof = 'function';\nvar Requests = require('./request/Queue');\nvar getTimestamp = require('./support/getTimestamp');\n\nfunction ModelRoot(o, model) {\n\n    var options = o || {};\n\n    this.cache = {};\n    this.version = -1;\n    this.syncRefCount = 0;\n    this.maxRetryCount = 10;\n    this.topLevelModel = model;\n    this.requests = new Requests(this);\n    this.expired = options.expired || [];\n\n    this.collectRatio = 0.75;\n    this.maxSize = Math.pow(2, 53) - 1;\n\n    if (typeof options.collectRatio === 'number') {\n        this.collectRatio = options.collectRatio;\n    }\n\n    if (typeof options.maxSize === 'number') {\n        this.maxSize = options.maxSize;\n    }\n\n    if (typeof options.comparator === functionTypeof) {\n        this.comparator = options.comparator;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.errorSelector === functionTypeof) {\n        this.errorSelector = options.errorSelector;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.onChange === functionTypeof) {\n        this.onChange = options.onChange;\n    }\n\n    if (typeof options.onChangesCompleted === functionTypeof) {\n        this.onChangesCompleted = options.onChangesCompleted;\n    }\n}\n\nfunction defaultCompare(node, message) {\n    var cType = node && node.$type;\n    var mType = message && message.$type;\n    if (cType) {\n        // If the cache has a type, but the message is a primitive,\n        // the message might be the primitive response from the datasource.\n        // If so, return true, so we don't update the back-reference versions.\n        if (!mType) {\n            return node.value === message;\n        }\n        // If the message is older than the cache node, then isDistinct = false\n        else if (getTimestamp(message) < getTimestamp(node) === true) {\n            return true; // isDistinct = false\n        }\n        // Otherwise they are the same if all the following fields are the same.\n        return !(\n            cType !== mType ||\n            node.value !== message.value ||\n            node.$expires !== message.$expires\n        );\n    }\n    // If cache doesn't have a type but the message\n    // does, they must be different.\n    else if (mType) {\n        return false;\n    }\n    return node === message;\n}\n\nModelRoot.comparator = ModelRoot.prototype.comparator = defaultCompare;\n\nmodule.exports = ModelRoot;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ModelRoot.js","var getJSON = require('../get/json');\nvar getJSONGraph = require('../get/jsonGraph');\n\nmodule.exports = { json: json, jsonGraph: jsonGraph };\n\nfunction json(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue =  getJSON(model, thisPaths, data, progressive, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [\n            path, args, suffixes, thisPaths\n        ]\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed,\n            _materialized: model._materialized,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, thisPaths, data, true, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [\n            path, args, suffixes, thisPaths\n        ]\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/call/index.js","module.exports = {\n    json: require('./json/getJSON'),\n    jsonGraph: require('./jsonGraph/getJSONGraph')\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/index.js","var clone = require('../../clone');\n\nmodule.exports = onError;\n\nfunction onError(node, depth, results,\n                 requestedPath, fromReference, boxValues) {\n\n    var index = -1;\n    var length = depth + !!fromReference; // depth + 1 if fromReference === true\n    var errorPath = new Array(length);\n    var errorValue = !boxValues ? node.value : clone(node);\n\n    while (++index < length) {\n        errorPath[index] = requestedPath[index];\n    }\n\n    (results.errors || (results.errors = [])).push({\n        path: errorPath,\n        value: errorValue\n    });\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/onError.js","var arr = new Array(2);\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar onValue = require('./onValue');\nvar FalcorJSON = require('./FalcorJSON');\nvar isExpired = require('../../isExpired');\nvar onValueType = require('../onValueType');\nvar originalOnMissing = require('../onMissing');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar onMaterialize = require('../onMaterializeFlatBuffer');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar getHashCode = require('@graphistry/falcor-path-utils/lib/getHashCode');\nvar flatBufferToPaths = require('@graphistry/falcor-path-utils/lib/flatBufferToPaths');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, json, path,\n                                depth, seed, results, requestedPath,\n                                optimizedPath, optimizedLength,\n                                fromReference, referenceContainer,\n                                modelRoot, expired, expireImmediate,\n                                branchSelector, boxValues, materialized,\n                                hasDataSource, treatErrorsAsValues,\n                                allowFromWhenceYouCame) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === node ||\n        undefined !== (type = node.$type) ||\n        undefined === path) {\n        arr[1] = hasDataSource && node === undefined;\n        arr[0] = onValueType(node, type, json,\n                             path, depth, seed, results,\n                             requestedPath, depth,\n                             optimizedPath, optimizedLength,\n                             fromReference, modelRoot, expired, expireImmediate,\n                             branchSelector, boxValues, materialized, hasDataSource,\n                             treatErrorsAsValues, onValue, onMissing, onMaterialize);\n        return arr;\n    }\n\n    var f_meta, f_old_keys, f_new_keys, f_code = '';\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        keys = path['$keys'],\n        nodeAbsPath, jsonAbsPath,\n        nextDepth = depth + 1, rangeEnd,\n        nextJSON, nextReferenceContainer,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath, refContainerRefPath;\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[f_abs_path];\n    }\n\n    if (!json || typeofObject !== typeof json) {\n        json = undefined;\n    } else if (f_meta = json[f_meta_data]) {\n\n        nodeAbsPath = node[f_abs_path];\n        jsonAbsPath = f_meta[f_meta_abs_path];\n\n        if (!branchSelector && !(json instanceof FalcorJSON)) {\n            json.__proto__ = {};\n            json.__proto__[f_meta_data] = f_meta;\n            json.__proto__.__proto__ = FalcorJSON.prototype;\n        }\n\n        if (nodeAbsPath !== jsonAbsPath) {\n            f_meta['$code'] = '__loading__';\n            f_meta[f_meta_abs_path] = nodeAbsPath;\n            f_meta[f_meta_version] = node[f_version];\n            f_meta[f_meta_deref_to] = refContainerRefPath;\n            f_meta[f_meta_deref_from] = refContainerAbsPath;\n            if (f_old_keys = f_meta[f_meta_keys]) {\n                f_meta[f_meta_keys] = Object.create(null);\n                for (nextKey in f_old_keys) {\n                    if (f_old_keys[nextKey]) {\n                        delete json[nextKey];\n                    }\n                }\n            }\n            arr[0] = json;\n            arr[1] = true;\n            return arr;\n        } else if (!(\n            f_meta[f_meta_version]  !== node[f_version]  ||\n            f_meta['$code']         !== path['$code'])) {\n            results.hasValue = true;\n            arr[0] = json;\n            arr[1] = false;\n            return arr;\n        }\n\n        f_old_keys = f_meta[f_meta_keys];\n        f_meta[f_meta_abs_path] = nodeAbsPath;\n        f_meta[f_meta_version] = node[f_version];\n        f_meta[f_meta_deref_to] = refContainerRefPath;\n        f_meta[f_meta_deref_from] = refContainerAbsPath;\n    }\n\n    f_new_keys = Object.create(null);\n\n    var keysIndex = -1;\n    var keysLength = keys.length;\n    var nextPath, nextPathKey,\n        hasMissingPath = false;\n\n    iteratingKeyset:\n    while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            f_code = '' + getHashCode('' + f_code + 'null');\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n            nextPathKey = nextKey;\n        }\n        // If the Keyset isn't null or primitive, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n            nextPathKey = '[' + nextKey + '..' + rangeEnd + ']';\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextPath === undefined) {\n\n                arr = walkPathAndBuildOutput(\n                    root, next, nextJSON, nextPath, nextDepth, seed,\n                    results, requestedPath, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                if (!hasMissingPath && arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined && !materialized) {\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n            else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                    // If the reference is expired, it will be invalidated and\n                    // reported as missing in the next call to walkPath below.\n                    next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                arr = walkPathAndBuildOutput(\n                    root, next, nextJSON, nextPath, nextDepth, seed,\n                    results, requestedPath, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                if (!hasMissingPath && arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined) {\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = {};\n                f_meta[f_meta_version] = node[f_version];\n                f_meta[f_meta_abs_path] = node[f_abs_path];\n                f_meta[f_meta_deref_to] = refContainerRefPath;\n                f_meta[f_meta_deref_from] = refContainerAbsPath;\n                json = {};\n                json[f_meta_data] = f_meta;\n                json.__proto__ = FalcorJSON.prototype;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                // node creation to them.\n                if (branchSelector) {\n                    json = branchSelector(json);\n                } else {\n                    var tmp = json;\n                    json = {};\n                    json.__proto__ = tmp;\n                    tmp = undefined;\n                }\n            }\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && (nextKey in f_old_keys)) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        if (!hasMissingPath) {\n            f_code = '' + getHashCode('' + f_code + nextPathKey +\n                                     (  nextPath && nextPath['$code'] || ''));\n        }\n    }\n\n    if (hasMissingPath) {\n        f_code = '__loading__';\n    }\n\n    if (f_meta) {\n        f_meta['$code'] = f_code;\n        f_meta[f_meta_keys] = f_new_keys;\n        if (f_old_keys) {\n            for (nextKey in f_old_keys) {\n                if (f_old_keys[nextKey]) {\n                    delete json[nextKey];\n                }\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n\n    arr[0] = json;\n    arr[1] = hasMissingPath;\n\n    return arr;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, json, branchSelector,\n                   boxValues, onMaterialize, modelRoot) {\n\n    if (reportMaterialized) {\n        return onMaterialize(json, path, depth, depth, branchSelector,\n                             boxValues, modelRoot, results, requestedPath, optimizedPath,\n                             optimizedLength, fromReference, reportMissing, onMissing);\n    }\n\n    var paths = path ? flatBufferToPaths(path) : [[]];\n    var rPath = requestedPath.slice(0, requestedLength);\n\n    return paths.forEach(function(restPath) {\n        requestedLength = depth + restPath.length;\n        return originalOnMissing(rPath.concat(restPath), depth, results,\n                                 requestedPath, requestedLength, fromReference,\n                                 optimizedPath, optimizedLength, reportMissing,\n                                 false, json, branchSelector,\n                                 boxValues, onMaterialize, modelRoot);\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/walkFlatBuffer.js","var isArray = Array.isArray;\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar onValue = require('./onValue');\nvar onMissing = require('../onMissing');\nvar FalcorJSON = require('./FalcorJSON');\nvar onValueType = require('../onValueType');\nvar isExpired = require('../../isExpired');\nvar onMaterialize = require('../onMaterialize');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, json, path,\n                                depth, seed, results,\n                                requestedPath, requestedLength,\n                                optimizedPath, optimizedLength,\n                                fromReference, referenceContainer,\n                                modelRoot, expired, expireImmediate,\n                                branchSelector, boxValues, materialized,\n                                hasDataSource, treatErrorsAsValues,\n                                allowFromWhenceYouCame) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (\n        type = node.$type) || (\n        depth === requestedLength)) {\n        return onValueType(node, type, json,\n                           path, depth, seed, results,\n                           requestedPath, requestedLength,\n                           optimizedPath, optimizedLength,\n                           fromReference, modelRoot, expired, expireImmediate,\n                           branchSelector, boxValues, materialized, hasDataSource,\n                           treatErrorsAsValues, onValue, onMissing, onMaterialize);\n    }\n\n    var f_meta;\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        nextJSON, nextReferenceContainer,\n        keysetIndex = -1, keysetLength = 0,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath, refContainerRefPath;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        return json;\n    }\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[f_abs_path];\n    }\n\n    if (!json || typeofObject !== typeof json) {\n        json = undefined;\n    } else if (f_meta = json[f_meta_data]) {\n        f_meta[f_meta_version] = node[f_version];\n        f_meta[f_meta_abs_path] = node[f_abs_path];\n        f_meta[f_meta_deref_to] = refContainerRefPath;\n        f_meta[f_meta_deref_from] = refContainerAbsPath;\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextDepth === requestedLength) {\n                nextJSON = walkPathAndBuildOutput(\n                    root, next, nextJSON, path, nextDepth, seed,\n                    results, requestedPath, requestedLength, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n                if (nextJSON === undefined && !materialized) {\n                    continue;\n                }\n            }\n            else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                    // If the reference is expired, it will be invalidated and\n                    // reported as missing in the next call to walkPath below.\n                    next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                if (undefined === (nextJSON = walkPathAndBuildOutput(\n                        root, next, nextJSON, path, nextDepth, seed,\n                        results, requestedPath, requestedLength, nextOptimizedPath,\n                        nextOptimizedLength, fromReference, nextReferenceContainer,\n                        modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                        materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                    ))) {\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = {};\n                f_meta[f_meta_version] = node[f_version];\n                f_meta[f_meta_abs_path] = node[f_abs_path];\n                f_meta[f_meta_deref_to] = refContainerRefPath;\n                f_meta[f_meta_deref_from] = refContainerAbsPath;\n                json = {};\n                json[f_meta_data] = f_meta;\n                json.__proto__ = FalcorJSON.prototype;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                if (branchSelector) {\n                    json = branchSelector(json);\n                }\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/walkPath.js","var arr = new Array(2);\nvar clone = require('../../clone');\nvar inlineValue = require('./inlineValue');\nvar promote = require('../../../lru/promote');\nvar isExpired = require('../../isExpired');\nvar createHardlink = require('../../createHardlink');\nvar CircularReferenceError = require('../../../errors/CircularReferenceError');\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, ref, modelRoot, seed, expireImmediate) {\n\n    promote(modelRoot, ref);\n\n    var context,\n        key, type, depth = 0,\n        node = root, path = ref.value,\n        copy = path, length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[f_context])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                throw new CircularReferenceError(path);\n            }\n            // If the node we land on isn't the existing ref context,\n            // create a hard-link between the reference and the node\n            // it points to.\n            else if (node !== context) {\n                createHardlink(ref, node);\n            }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === $ref) {\n\n                promote(modelRoot, node);\n\n                seed && inlineValue(clone(node), path, length, seed);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n\n    return arr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/getReferenceTarget.js","var typeofObject = 'object';\nvar clone = require('../../clone');\nvar inlineValue = require('./inlineValue');\n\nmodule.exports = onJSONGraphValue;\n\nfunction onJSONGraphValue(node, type, depth, seed, results,\n                          requestedPath, optimizedPath, optimizedLength,\n                          fromReference, boxValues, materialized) {\n\n    var value = node.value;\n\n    // boxValues always clones the node\n    if (boxValues || !(\n        /**\n         * JSON Graph should always clone:\n         * - refs\n         * - errors\n         * - atoms we didn't create\n         * - atoms we created to wrap Objects\n         **/\n        $ref !== type &&\n        $error !== type &&\n        node[f_wrapped_value] &&\n        typeofObject !== typeof value)) {\n        value = clone(node);\n    }\n\n    results.hasValue = true;\n    inlineValue(value, optimizedPath, optimizedLength, seed);\n    (seed.paths || (seed.paths = [])).push(\n        requestedPath.slice(0, depth + !!fromReference) // depth + 1 if fromReference === true\n    );\n\n    return value;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/onValue.js","var isArray = Array.isArray;\nvar clone = require('../../clone');\nvar onValue = require('./onValue');\nvar inlineValue = require('./inlineValue');\nvar isExpired = require('../../isExpired');\nvar onValueType = require('../onValueType');\nvar onMaterialize = require('../onMaterialize');\nvar originalOnMissing = require('../onMissing');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, path,\n                                depth, seed, results,\n                                requestedPath, requestedLength,\n                                optimizedPath, optimizedLength,\n                                fromReference, modelRoot, expired, expireImmediate,\n                                boxValues, materialized, hasDataSource, treatErrorsAsValues) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (\n        type = node.$type) || (\n        depth === requestedLength)) {\n        return onValueType(node, type, seed,\n                           path, depth, seed, results,\n                           requestedPath, requestedLength,\n                           optimizedPath, optimizedLength,\n                           fromReference, modelRoot, expired, expireImmediate,\n                           undefined, boxValues, materialized, hasDataSource,\n                           treatErrorsAsValues, onValue, onMissing, onMaterialize);\n    }\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        keysetIndex = -1, keysetLength = 0,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        return undefined;\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            keyset = keysOrRanges[keysetIndex];\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            // If we encounter a ref, inline the reference target and continue\n            // evaluating the path.\n            if (next &&\n                nextDepth < requestedLength &&\n                // If the reference is expired, it will be invalidated and\n                // reported as missing in the next call to walkPath below.\n                next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                // Write the cloned ref value into the jsonGraph at the\n                // optimized path. JSONGraph must always clone references.\n                seed && inlineValue(clone(next), optimizedPath, nextOptimizedLength, seed);\n\n                // Retrieve the reference target and next referenceContainer (if\n                // this reference points to other references) and continue\n                // following the path. If the reference resolves to a missing\n                // path or leaf node, it will be handled in the next call to\n                // walkPath.\n                refTarget = getReferenceTarget(root, next, modelRoot, seed, expireImmediate);\n\n                next = refTarget[0];\n                fromReference = true;\n                nextOptimizedPath = refTarget[1];\n                nextOptimizedLength = nextOptimizedPath.length;\n                refTarget[0] = refTarget[1] = undefined;\n            }\n\n            walkPathAndBuildOutput(\n                root, next, path, nextDepth, seed,\n                results, requestedPath, requestedLength, nextOptimizedPath,\n                nextOptimizedLength, fromReference, modelRoot, expired, expireImmediate,\n                boxValues, materialized, hasDataSource, treatErrorsAsValues\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return undefined;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, seed, branchSelector,\n                   boxValues, onMaterialize, modelRoot) {\n\n    var json, isLeaf;\n\n    if (seed && reportMaterialized) {\n\n        (seed.paths || (seed.paths = [])).push(\n            (isLeaf = 0 === requestedLength - depth) &&\n                                 // depth + 1 if fromReference === true\n                requestedPath.slice(0, depth + !!fromReference) ||\n                requestedPath.slice(0, depth).concat(path\n                    .slice(depth, requestedLength + !!fromReference))\n        );\n\n        json = inlineValue(isLeaf && clone(materializedAtom) || undefined,\n                           optimizedPath, optimizedLength, seed, !isLeaf);\n    }\n\n    return originalOnMissing(path, depth, results,\n                             requestedPath, requestedLength, fromReference,\n                             optimizedPath, optimizedLength, reportMissing,\n                             !isLeaf && reportMaterialized, json,\n                             branchSelector, true, onMaterialize, modelRoot);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/walkPath.js","var typeofNumber = 'number';\nvar typeofObject = 'object';\nvar clone = require('../clone');\nvar onValueType = require('./onValueType');\nvar FalcorJSON = require('./json/FalcorJSON');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = onMaterializeFlatBuffer;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterializeFlatBuffer(json, path, depth, length,\n                                 branchSelector, boxValues, modelRoot, results,\n                                 requestedPath, optimizedPath, optimizedLength,\n                                 fromReference, reportMissing, onMissing) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === path) {\n        onValueType(undefined, undefined, json,\n                    path, depth, undefined, results,\n                    requestedPath, depth, optimizedPath,\n                    optimizedLength, fromReference, modelRoot, undefined,\n                    false, branchSelector, boxValues, false, reportMissing,\n                    false, undefined, onMissing, undefined);\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta, f_old_keys, f_new_keys;\n\n    var nextKey,\n        keyset, keyIsRange,\n        keys = path['$keys'],\n        nextDepth = depth + 1, rangeEnd,\n        nextOptimizedLength = optimizedLength + 1;\n\n    if (!json || typeofObject !== typeof json) {\n        json = {};\n        json.__proto__ = FalcorJSON.prototype;\n        json[f_meta_data] = f_meta = {};\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[f_meta_data])) {\n        json[f_meta_data] = f_meta = {};\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n    } else {\n        f_old_keys = f_meta[f_meta_keys];\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n    }\n\n    f_new_keys = Object.create(null);\n\n    var nextPath;\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    iteratingKeyset:\n    while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If the Keyset isn't null or primitive, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && (nextKey in f_old_keys)) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // insert the materialized branch\n            json[nextKey] = onMaterializeFlatBuffer(\n                json[nextKey], nextPath, nextDepth,\n                nextDepth, branchSelector, boxValues, modelRoot, results,\n                requestedPath, optimizedPath, nextOptimizedLength,\n                fromReference, reportMissing, onMissing\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n    }\n\n    f_meta['$code'] = '__missing__';\n    f_meta[f_meta_keys] = f_new_keys;\n    if (f_old_keys) {\n        for (nextKey in f_old_keys) {\n            if (f_old_keys[nextKey]) {\n                delete json[nextKey];\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMaterializeFlatBuffer.js","var isInternalKey = require('../support/isInternalKey');\n\n/**\n * decends and copies the cache.\n */\nmodule.exports = function getCache(cache) {\n    var out = {};\n    _copyCache(cache, out);\n\n    return out;\n};\n\nfunction cloneBoxedValue(boxedValue) {\n    var clonedValue = {};\n\n    var keys = Object.keys(boxedValue);\n    var key;\n    var i;\n    var l;\n\n    for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n\n        if (key === '$type' || !isInternalKey(key)) {\n            clonedValue[key] = boxedValue[key];\n        }\n    }\n\n    return clonedValue;\n}\n\nfunction _copyCache(node, out, fromKey) {\n    // copy and return\n\n    // only copy objects\n    if (!node || typeof node !== 'object') {\n        return;\n    }\n\n    Object.\n        keys(node).\n        filter(function(key) {\n            // Its not an internal key and the node has a value.  In the cache\n            // there are 3 possibilities for values.\n            // 1: A branch node.\n            // 2: A $type-value node.\n            // 3: undefined\n            // We will strip out 3\n            return (key === '$type' || !isInternalKey(key)) && node[key] !== undefined;\n        }).\n        forEach(function(key) {\n            var cacheNext = node[key];\n            var outNext = out[key];\n\n            if (!outNext) {\n                outNext = out[key] = {};\n            }\n\n            // Paste the node into the out cache.\n            if (cacheNext.$type) {\n                var isObject = cacheNext.value && typeof cacheNext.value === 'object';\n                var isUserCreatedcacheNext = !cacheNext[f_wrapped_value];\n                var value;\n                if (isObject || isUserCreatedcacheNext) {\n                    value = cloneBoxedValue(cacheNext);\n                } else {\n                    value = cacheNext.value;\n                }\n\n                out[key] = value;\n                return;\n            }\n\n            _copyCache(cacheNext, outNext, key);\n        });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getCache.js","var getBoundCacheNode = require('./getBoundCacheNode');\n\nmodule.exports = function _getVersion(model, path) {\n    var node = getBoundCacheNode(model, path);\n    var version = node && node[f_version];\n    return (version == null) ? -1 : version;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getVersion.js","var groupCacheArguments = require('../groupCacheArguments');\n\nmodule.exports = {\n    json: invalidate,\n    jsonGraph: invalidate,\n    invalidatePathMaps: require('./invalidatePathMaps'),\n    invalidatePathValues: require('./invalidatePathSets')\n};\n\nfunction invalidate(model, args, seed, progressive, expireImmediate) {\n    if (invalidateArgumentGroups(model, groupCacheArguments(args), expireImmediate)) {\n        var rootChangeHandler = model._root.onChange;\n        rootChangeHandler && rootChangeHandler();\n    }\n    return {};\n}\n\nfunction invalidateArgumentGroups(model, xs, expireImmediate) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            if (inputType === 'PathValues') {\n                groupedArgs = groupedArgs.map(pluckPaths);\n            }\n            var operation = module.exports['invalidate' + inputType];\n            if (operation(model, groupedArgs, expireImmediate)) {\n                changed = true;\n            }\n        }\n    }\n    return changed;\n}\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/index.js","var wrapNode = require('./wrapNode');\nvar isExpired = require('./isExpired');\nvar insertNode = require('./insertNode');\nvar expireNode = require('./expireNode');\nvar replaceNode = require('./replaceNode');\nvar getSize = require('../support/getSize');\nvar reconstructPath = require('./reconstructPath');\nvar getTimestamp = require('../support/getTimestamp');\nvar updateNodeAncestors = require('./updateNodeAncestors');\n\nmodule.exports = function mergeJSONGraphNode(\n    parent, node, message, key, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var sizeOffset;\n\n    var cType, mType,\n        cIsObject, mIsObject,\n        cTimestamp, mTimestamp;\n\n    // If the cache and message are the same, we can probably return early:\n    // - If they're both nullsy,\n    //   - If null then the node needs to be wrapped in an atom and inserted.\n    //     This happens from whole branch merging when a leaf is just a null value\n    //     instead of being wrapped in an atom.\n    //   - If undefined then return null (previous behavior).\n    // - If they're both branches, return the branch.\n    // - If they're both edges, continue below.\n    if (node === message) {\n\n        // The message and cache are both undefined, return undefined.\n        if (message === undefined) {\n            return message;\n        }\n        // There should not be undefined values. Those should always be\n        // wrapped in an $atom\n        else if (message === null) {\n            node = wrapNode(message, undefined, message);\n            parent = updateNodeAncestors(parent, -node.$size, lru, version);\n            node = insertNode(node, parent, key, undefined, optimizedPath);\n            return node;\n        }\n        // Is the cache node a branch? If so, return the cache branch.\n        else if ((\n            cIsObject = !(!node || typeof node !== 'object')) && (\n            cType = node.$type) === undefined) {\n            // Has the branch been introduced to the cache yet? If not,\n            // give it a parent, key, and absolute path.\n            if (node[f_parent] === undefined) {\n                insertNode(node, parent, key, version, optimizedPath);\n            }\n            return node;\n        }\n    } else if (cIsObject = !(!node || typeof node !== 'object')) {\n        cType = node.$type;\n    }\n\n    // If the cache isn't a reference, we might be able to return early.\n    if (cType !== $ref) {\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n        }\n        if (cIsObject && !cType) {\n            // If the cache is a branch and the message is empty or\n            // also a branch, continue with the cache branch.\n            if (message == null || (mIsObject && !mType)) {\n                return node;\n            }\n        }\n    }\n    // If the cache is a reference, we might not need to replace it.\n    else {\n        // If the cache is a reference, but the message is empty,\n        // leave the cache alone...\n        if (message == null) {\n            // ...unless the cache is an expired reference. In that case, expire\n            // the cache node and return undefined.\n            if (isExpired(node, expireImmediate)) {\n                expireNode(node, expired, lru);\n                return void 0;\n            }\n            return node;\n        }\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n            // If the cache and the message are both references,\n            // check if we need to replace the cache reference.\n            if (mType === $ref) {\n                if (node === message) {\n                    // If the cache and message are the same reference,\n                    // we performed a whole-branch merge of one of the\n                    // grandparents. If we've previously graphed this\n                    // reference, break early. Otherwise, continue to\n                    // leaf insertion below.\n                    if (node[f_parent] != null) {\n                        return node;\n                    }\n                } else {\n\n                    cTimestamp = node.$timestamp;\n                    mTimestamp = message.$timestamp;\n\n                    // - If either the cache or message reference is expired,\n                    //   replace the cache reference with the message.\n                    // - If neither of the references are expired, compare their\n                    //   timestamps. If either of them don't have a timestamp,\n                    //   or the message's timestamp is newer, replace the cache\n                    //   reference with the message reference.\n                    // - If the message reference is older than the cache\n                    //   reference, short-circuit.\n                    if (!isExpired(node, expireImmediate) &&\n                        !isExpired(message, expireImmediate) &&\n                        mTimestamp < cTimestamp) {\n                        return void 0;\n                    }\n                }\n            }\n        }\n    }\n\n    // If the cache is a leaf but the message is a branch,\n    // merge the branch over the leaf.\n    if (cType && mIsObject && !mType) {\n        return insertNode(replaceNode(\n                node, message, parent, key, lru, version),\n            parent, key, undefined, optimizedPath\n        );\n    }\n    // If the message is a sentinel or primitive, insert it into the cache.\n    else if (mType || !mIsObject) {\n\n        if (mType === $error && errorSelector) {\n            message = errorSelector(reconstructPath(requestedPath, key), message);\n        }\n\n        // If the cache and the message are the same value, we branch-merged one\n        // of the message's ancestors. If this is the first time we've seen this\n        // leaf, give the message a $size and $type, attach its graph pointers,\n        // and update the cache sizes and versions.\n        if (mType && node === message) {\n            if (!node[f_parent]) {\n                node = wrapNode(node, cType, node.value);\n                parent = updateNodeAncestors(parent, -node.$size, lru, version);\n                node = insertNode(node, parent, key, version, optimizedPath);\n            }\n        }\n        // If the cache and message are different, the cache value is expired,\n        // or the message is a primitive, replace the cache with the message value.\n        // If the message is a sentinel, clone and maintain its type.\n        // If the message is a primitive value, wrap it in an atom.\n        else {\n            var isDistinct = true;\n            // If both the cache and message are primitives, we branch-merged\n            // one of the message's ancestors. Insert the value into the cache.\n            if (!cType && !mType) {\n                isDistinct = true;\n            }\n            // If the cache is a branch, but the message is a leaf, replace the\n            // cache branch with the message leaf.\n            else if (!cIsObject || !isExpired(node, expireImmediate)) {\n                // Compare the current cache value with the new value. If either of\n                // them don't have a timestamp, or the message's timestamp is newer,\n                // replace the cache value with the message value. If a comparator\n                // is specified, the comparator takes precedence over timestamps.\n                if (comparator) {\n                    isDistinct = !(comparator.length < 3 ?\n                        comparator(node, message) : comparator(node, message,\n                            optimizedPath.slice(0, optimizedPath.index))\n                    );\n                } else {\n                    // Comparing either Number or undefined to undefined always results in false.\n                    isDistinct = getTimestamp(message) < getTimestamp(node) === false;\n                }\n            }\n            if (isDistinct) {\n                sizeOffset = getSize(node) - getSize(message =\n                    wrapNode(message, mType, mType ? message.value : message));\n                node = replaceNode(node, message, parent, key, lru, version);\n                parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n                node = insertNode(node, parent, key, version, optimizedPath);\n            }\n        }\n\n        // Promote the message edge in the LRU.\n        if (isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge.\n             */\n            true)) {\n            expireNode(node, expired, lru);\n        }\n    }\n    else if (node == null) {\n        node = insertNode(message, parent, key, undefined, optimizedPath);\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/mergeJSONGraphNode.js","var getJSON = require('../get/json');\nvar getJSONGraph = require('../get/jsonGraph');\nvar arrayFlatMap = require('../../support/array-flat-map');\nvar groupCacheArguments = require('../groupCacheArguments');\n\nmodule.exports = {\n    json: json,\n    jsonGraph: jsonGraph,\n    setPathMaps: require('./setPathMaps'),\n    setPathValues: require('./setPathValues'),\n    setJSONGraphs: require('./setJSONGraphs')\n};\n\nfunction json(model, _args, data, progressive, expireImmediate) {\n\n    var set, get, jsong,\n        changed, relative, optimized,\n        missing, fragments, requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args, expireImmediate);\n\n    if ((relative = set.requested).length) {\n\n        if (!(changed = set.changed) || progressive) {\n            get = getJSON(model, relative, data, progressive, expireImmediate);\n        }\n\n        if (changed) {\n\n            jsong = getJSONGraph({\n                _root: model._root,\n                _boxed: model._boxed, _materialized: true,\n                _treatErrorsAsValues: model._treatErrorsAsValues\n            }, set.optimized, {}, progressive, expireImmediate);\n\n            fragments = jsong.data;\n            missing = fragments.paths;\n            requested = jsong.requested;\n\n            var rootChangeHandler = model._root.onChange;\n            rootChangeHandler && rootChangeHandler();\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: get && get.error,\n        errors: get && get.errors,\n        hasValue: get && get.hasValue\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive, expireImmediate) {\n\n    var set, jsong,\n        changed, relative, optimized,\n        missing, fragments, requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args, expireImmediate);\n\n    if ((relative = set.requested).length && (\n         progressive || (changed = set.changed))) {\n\n        jsong = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed, _materialized: true,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, set.optimized, data, progressive, expireImmediate);\n\n        fragments = jsong.data;\n        missing = fragments.paths;\n        requested = jsong.requested;\n\n        if (changed) {\n            var rootChangeHandler = model._root.onChange;\n            rootChangeHandler && rootChangeHandler();\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: jsong && jsong.error,\n        hasValue: jsong && jsong.hasValue\n    };\n}\n\nfunction setGroupsIntoCache(model, xs, expireImmediate) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var modelRoot = model._root;\n    var errorSelector = modelRoot.errorSelector;\n\n    expireImmediate = expireImmediate && !Boolean(model._source);\n    var comparator = Boolean(model._source) ? null : modelRoot.comparator;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            var operation = module.exports['set' + inputType];\n            var results = operation(model, groupedArgs, errorSelector, comparator, expireImmediate);\n            changed = changed || results[2];\n            optimizedPaths.push.apply(optimizedPaths, results[1]);\n            if (inputType === 'PathValues') {\n                requestedPaths.push.apply(requestedPaths, groupedArgs.map(pluckPaths));\n            } else if (inputType === 'JSONGraphs') {\n                requestedPaths.push.apply(requestedPaths, arrayFlatMap(groupedArgs, pluckPaths));\n            } else {\n                requestedPaths.push.apply(requestedPaths, results[0]);\n            }\n        }\n    }\n\n    return {\n        changed: changed,\n        requested: requestedPaths,\n        optimized: optimizedPaths\n    };\n}\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/index.js","module.exports = function transferBackReferences(fromNode, destNode) {\n    var fromNodeRefsLength = fromNode[f_refs_length] || 0,\n        destNodeRefsLength = destNode[f_refs_length] || 0,\n        i = -1;\n    while (++i < fromNodeRefsLength) {\n        var ref = fromNode[f_ref + i];\n        if (ref !== undefined) {\n            ref[f_context] = destNode;\n            destNode[f_ref + (destNodeRefsLength + i)] = ref;\n            fromNode[f_ref + i] = undefined;\n        }\n    }\n    destNode[f_refs_length] = fromNodeRefsLength + destNodeRefsLength;\n    fromNode[f_refs_length] = undefined;\n    return destNode;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/transferBackReferences.js","module.exports = function unlinkBackReferences(node) {\n    var i = -1, n = node[f_refs_length] || 0;\n    while (++i < n) {\n        var ref = node[f_ref + i];\n        if (ref != null) {\n            ref[f_context] = ref[f_ref_index] = node[f_ref + i] = void 0;\n        }\n    }\n    node[f_refs_length] = void 0;\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/unlinkBackReferences.js","module.exports = function unlinkForwardReference(reference) {\n    var destination = reference[f_context];\n    if (destination) {\n        var i = (reference[f_ref_index] || 0) - 1,\n            n = (destination[f_refs_length] || 0) - 1;\n        while (++i <= n) {\n            destination[f_ref + i] = destination[f_ref + (i + 1)];\n        }\n        destination[f_refs_length] = n;\n        reference[f_ref_index] = reference[f_context] = destination = void 0;\n    }\n    return reference;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/unlinkForwardReference.js","module.exports = hasValidParentReference;\n\nfunction hasValidParentReference() {\n    var reference = this._referenceContainer;\n\n    // Always true when this mode is false.\n    if (!this._allowFromWhenceYouCame) {\n        return true;\n    }\n\n    // If fromWhenceYouCame is true and the first set of keys did not have\n    // a reference, this case can happen.  They are always valid.\n    if (reference === true) {\n        return true;\n    }\n\n    // was invalid before even derefing.\n    if (reference === false) {\n        return false;\n    }\n\n    // Its been disconnected (set over or collected) from the graph.\n    if (reference && reference[f_parent] === undefined) {\n        return false;\n    }\n\n    // The reference has expired but has not been collected from the graph.\n    if (reference && reference[f_invalidated]) {\n        return false;\n    }\n\n    return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/deref/hasValidParentReference.js","var CONTAINER_DOES_NOT_EXIST = 'e';\nvar FalcorJSON = require('../cache/get/json/FalcorJSON');\nvar getCachePosition = require('../cache/getCachePosition');\nvar InvalidDerefInputError = require('../errors/InvalidDerefInputError');\n\nmodule.exports = function deref(json) {\n\n    var seed, f_meta;\n\n    if (!json || 'object' !== typeof json || !(\n        f_meta = json[f_meta_data]) || 'object' !== typeof f_meta) {\n        return null;\n    }\n\n    var cacheRoot = this._root.cache;\n    var recycleJSON = this._recycleJSON;\n    var absolutePath = f_meta[f_meta_abs_path];\n    var referenceContainer, currentRefPath, i, len;\n\n    if (!absolutePath) {\n        if (recycleJSON) {\n            seed = { json: json };\n            seed.__proto__ = FalcorJSON.prototype;\n        }\n        return this._clone({\n            _node: undefined,\n            _seed: seed\n        });\n    } else if (absolutePath.length === 0) {\n        if (recycleJSON) {\n            seed = { json: json };\n            seed.__proto__ = FalcorJSON.prototype;\n        }\n        return this._clone({\n            _node: cacheRoot,\n            _path: absolutePath,\n            _referenceContainer: true,\n            _seed: seed\n        });\n    }\n\n    var originalRefPath = f_meta[f_meta_deref_to];\n    var originalAbsPath = f_meta[f_meta_deref_from];\n\n    // We deref and then ensure that the reference container is attached to\n    // the model.\n    var cacheNode = getCachePosition(cacheRoot, absolutePath);\n    var validContainer = CONTAINER_DOES_NOT_EXIST;\n\n    if (originalAbsPath) {\n\n        validContainer = false;\n\n        i = -1;\n        len = originalAbsPath.length;\n        referenceContainer = cacheRoot;\n        while (++i < len) {\n            referenceContainer = referenceContainer[originalAbsPath[i]];\n            if (!referenceContainer || referenceContainer.$type) {\n                break;\n            }\n        }\n\n        // If the reference container is still a sentinel value then compare\n        // the reference value with refPath.  If they are the same, then the\n        // model is still valid.\n        if (originalRefPath && referenceContainer && referenceContainer.$type === $ref) {\n            validContainer = true;\n            len = originalRefPath.length;\n            currentRefPath = referenceContainer.value;\n            for (i = 0; i < len; ++i) {\n                if (currentRefPath[i] !== originalRefPath[i]) {\n                    cacheNode = undefined;\n                    validContainer = false;\n                    break;\n                }\n            }\n        }\n    }\n\n    // Signal to the deref'd model that it has been disconnected from the\n    // graph or there is no _fromWhenceYouCame\n    if (!validContainer) {\n        referenceContainer = false;\n    }\n\n    // The container did not exist, therefore there is no reference\n    // container and fromWhenceYouCame should always return true.\n    else if (validContainer === CONTAINER_DOES_NOT_EXIST) {\n        referenceContainer = true;\n    }\n\n    if (recycleJSON) {\n        seed = { json: json };\n        seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    return this._clone({\n        _seed: seed,\n        _node: cacheNode,\n        _path: absolutePath,\n        _referenceContainer: referenceContainer\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/deref/index.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'It is not legal to use the JSON Graph ' +\n    'format from a bound Model. JSON Graph format' +\n    ' can only be used from a root model.';\n\n/**\n * When a bound model attempts to retrieve JSONGraph it should throw an\n * error.\n *\n * @private\n */\nmodule.exports = createErrorClass('BoundJSONGraphModelError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/BoundJSONGraphModelError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'Deref can only be used with a non-primitive object from get, set, or call.';\n\n/**\n * An invalid deref input is when deref is used with input that is not generated\n * from a get, set, or a call.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidDerefInputError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidDerefInputError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'The boundPath of the model is not valid since a value or error was found before the path end.';\n\n/**\n * An InvalidModelError can only happen when a user binds, whether sync\n * or async to shorted value.  See the unit tests for examples.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidModelError', function(boundPath, shortedPath) {\n    this.message = MESSAGE;\n    this.boundPath = boundPath;\n    this.shortedPath = shortedPath;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidModelError.js","var createErrorClass = require('./createErrorClass');\n\n/**\n * A request can only be retried up to a specified limit.  Once that\n * limit is exceeded, then an error will be thrown.\n *\n * @private\n */\nmodule.exports = createErrorClass('MaxRetryExceededError', function(maxRetryCount, absolute, relative, optimized) {\n    this.message = '' +\n        'Exceeded the max retry count (' + maxRetryCount + ') for these paths: \\n' +\n        (absolute &&\n        'absolute: [\\n\\t' + printPaths(absolute) + '\\n]\\n' || '') +\n        (relative &&\n        'relative: [\\n\\t' + printPaths(relative) + '\\n]\\n' || '') +\n        (optimized &&\n        'optimized: [\\n\\t' + printPaths(optimized) + '\\n]\\n' || '');\n});\n\nfunction printPaths(paths) {\n    return paths.map(function(path) {\n        return JSON.stringify(path);\n    }).join(',\\n\\t');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/MaxRetryExceededError.js","module.exports = String.fromCharCode(30) + 'ƒ_';\n\n\n\n// WEBPACK FOOTER //\n// ./lib/internal/f_.js","var updateNodeAncestors = require('../cache/updateNodeAncestors');\n\nmodule.exports = function collect(lru, expired, totalArg, max, ratioArg, version) {\n\n    var total = totalArg;\n    var ratio = ratioArg;\n\n    if (typeof ratio !== 'number') {\n        ratio = 0.75;\n    }\n\n    var node, size, targetSize = max * ratio;\n\n    while (node = expired.pop()) {\n        total -= (size = node.$size || 0);\n        updateNodeAncestors(node, size, lru, version);\n    }\n\n    if (total >= max) {\n        var prev = lru[f_tail];\n        while ((total >= targetSize) && (node = prev)) {\n            prev = prev[f_prev];\n            total -= (size = node.$size || 0);\n            updateNodeAncestors(node, size, lru, version);\n        }\n\n        lru[f_tail] = node;\n        if (node == null) {\n            lru[f_head] = undefined;\n        } else {\n            node[f_next] = undefined;\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/collect.js","var Source = require('./Source');\nvar Subscriber = require('./Subscriber');\nvar lruCollect = require('../lru/collect');\nvar FalcorJSON = require('../cache/get/json/FalcorJSON');\nvar collapse = require('@graphistry/falcor-path-utils/lib/collapse');\nvar InvalidSourceError = require('../errors/InvalidSourceError');\nvar MaxRetryExceededError = require('../errors/MaxRetryExceededError');\n\nmodule.exports = Call;\n\nfunction Call(type, model, _args) {\n    Source.call(this, type);\n    if (model && _args) {\n        this.type = type;\n        this.source = this;\n        this.model = model;\n        this._args = _args;\n    }\n}\n\nCall.prototype = Object.create(Source.prototype);\n\nCall.prototype.lift = function(operator, source) {\n    source = new Call(source || this);\n    source.type = this.type;\n    source.model = this.model;\n    source._args = this._args;\n    source.operator = operator;\n    operator.data = operator.data || this.operator.data;\n    operator.errors = operator.errors || this.operator.errors;\n    operator.operation = operator.operation || this.operator.operation;\n    operator.progressive = operator.progressive || this.operator.progressive;\n    operator.maxRetryCount = operator.maxRetryCount || this.operator.maxRetryCount;\n    return source;\n}\n\nCall.prototype.operator = function(subscriber) {\n    return this._subscribe(subscriber);\n}\n\nCall.prototype._subscribe = function(subscriber) {\n    subscriber.onNext({\n        type: this.type,\n        args: this._args,\n        model: this.model,\n        version: this.model._root.version\n    });\n    subscriber.onCompleted();\n    return subscriber;\n}\n\nCall.prototype._toJSON = function(data, errors) {\n    if (data === undefined) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    return this.lift(new CallOperator(\n        data, errors || this.operator.errors, 'json',\n        this.operator.progressive, this.operator.maxRetryCount\n    ), this.source);\n}\n\nCall.prototype._toJSONG = function(data, errors) {\n    if (data === undefined) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    return this.lift(new CallOperator(\n        data, errors || this.operator.errors, 'jsonGraph',\n        this.operator.progressive, this.operator.maxRetryCount\n    ), this.source);\n}\n\nCall.prototype.retry = function(maxRetryCount) {\n    return this.lift(new CallOperator(\n        this.operator.data,\n        this.operator.errors,\n        this.operator.operation,\n        this.operator.progresive,\n        maxRetryCount\n    ), this.source);\n}\n\nCall.prototype.progressively = function() {\n    return this.lift(new CallOperator(\n        this.operator.data,\n        this.operator.errors,\n        this.operator.operation,\n        true,\n        this.operator.maxRetryCount\n    ), this.source);\n}\n\nfunction CallOperator(data, errors, operation, progressive, maxRetryCount) {\n    this.data = data;\n    this.errors = errors;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallOperator.prototype.call = function(source, destination) {\n    return source.subscribe(new CallSubscriber(\n        destination, this.data, this.errors, this.operation, this.progressive\n    ));\n}\n\nfunction CallSubscriber(destination, data, errors, operation, progressive, maxRetryCount) {\n    Subscriber.call(this, destination);\n    this.data = data;\n    this.retryCount = -1;\n    this.errors = errors;\n    this.hasValue = false;\n    this.completed = false;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallSubscriber.prototype = Object.create(Subscriber.prototype);\nCallSubscriber.prototype.operations = {\n    get: require('../cache/get'),\n    set: require('../cache/set'),\n    call: require('../cache/call'),\n    invalidate: require('../cache/invalidate')\n};\n\nCallSubscriber.prototype.next =\nCallSubscriber.prototype.onNext = function(seed) {\n\n    if (!this.started) {\n        this.args = seed.args;\n        this.type = seed.type;\n        this.model = seed.model;\n        this.version = seed.version;\n        this.maxRetryCount = this.maxRetryCount || this.model._root.maxRetryCount;\n        return;\n    } else if (!this.destination) {\n        return;\n    }\n\n    var missing, fragments;\n    var type = seed.type;\n    var args = seed.args || seed.paths;\n\n    var data = this.data;\n    var model = this.model;\n    var errors = this.errors;\n    var results = this.results;\n    var version = this.version;\n    var hasValue = this.hasValue;\n    var operation = this.operation;\n    var progressive = this.progressive;\n    var seedIsImmutable = progressive && data;\n\n    if (model._recycleJSON && this.type === 'get') {\n        seedIsImmutable = false;\n    }\n\n    // If we request paths as JSON in progressive mode, ensure each progressive\n    // valueNode is immutable. If not in progressive mode, we can write into the\n    // same JSON tree until the request is completed.\n    if (seedIsImmutable) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n\n    if (args && args.length) {\n\n        results = this.operations[type]\n            [operation](model, args, data,\n                        progressive || !model._source,\n                        this.retryCount === -1);\n\n        // We must communicate critical errors from get, such as bound path is\n        // broken or this is a JSONGraph request with a bound path.\n        if (results.error) {\n            return tryOnError(this, results.error);\n        }\n\n        errors && results.errors &&\n            errors.push.apply(errors, results.errors);\n\n        if (fragments = results.fragments) {\n            args = results.args;\n            this.fragments = fragments;\n        }\n\n        this.relative = results.relative;\n        this.requested = results.requested;\n        this.missing = missing = results.missing;\n        this.hasValue = hasValue || (hasValue = results.hasValue);\n    }\n\n    // We are done when there are no missing paths or\n    // the model does not have a dataSource to fetch from.\n    this.completed = !missing || !model._source;\n\n    if (type !== 'set') {\n        this.args = args;\n        if (seedIsImmutable) {\n            this.data = mergeInto(data, this.data);\n        }\n    }\n\n    if (progressive && hasValue && data && (data.json || data.jsonGraph)) {\n        tryOnNext(data, operation, model._root, this.destination);\n    }\n}\n\nCallSubscriber.prototype.error =\nCallSubscriber.prototype.onError = function(error) {\n    if (error instanceof InvalidSourceError) {\n        return Subscriber.prototype.onError.call(this, error);\n    }\n    this.errored = true;\n    this.onCompleted(error);\n}\n\nCallSubscriber.prototype.complete =\nCallSubscriber.prototype.onCompleted = function(error) {\n\n    if (!this.destination) {\n        return;\n    }\n\n    var data, type, errors, errored;\n\n    if (!this.started && (this.started = true)) {\n        this.onNext(this);\n    } else if (errored = this.errored) {\n        this.onNext({ type: 'get', paths: this.relative });\n    }\n\n    if (errored || this.completed) {\n        if (!this.progressive && this.hasValue && (\n            (data = this.data) && data.json || data.jsonGraph)) {\n            tryOnNext(data, this.operation, this.model._root, this.destination);\n        }\n        errors = this.errors;\n        if (errored || error || errors && errors.length) {\n            return tryOnError(this, errors.length && errors || error);\n        }\n\n        return Subscriber.prototype.onCompleted.call(this);\n    }\n\n    if (++this.retryCount >= this.maxRetryCount) {\n        return tryOnError(this, new MaxRetryExceededError(\n            this.retryCount,\n            this.requested,\n            this.relative,\n            this.missing\n        ));\n    }\n\n    this.request = this.model._root.requests[this.type](\n        this.model, this.missing, this.relative, this.fragments\n    ).subscribe(this);\n}\n\nCallSubscriber.prototype.dispose =\nCallSubscriber.prototype.unsubscribe = function() {\n\n    var model = this.model;\n    var version = this.version;\n    var request = this.request;\n\n    this.args = null;\n    this.data = null;\n    this.model = null;\n    this.errors = null;\n    this.errored = false;\n    this.started = false;\n    this.hasValue = false;\n    this.completed = false;\n\n    Subscriber.prototype.dispose.call(this);\n\n    if (request) {\n        this.request = null;\n        request.dispose();\n    }\n\n    if (model) {\n\n        var modelRoot = model._root;\n        var cache = modelRoot.cache;\n        var shouldCollectCache = modelRoot.syncRefCount <= 0 &&\n                                 version !== modelRoot.version;\n\n        // Prune the cache via the LRU if this is the last request.\n        if (shouldCollectCache) {\n\n            if (cache) {\n                lruCollect(modelRoot,\n                           modelRoot.expired,\n                           cache.$size || 0,\n                           modelRoot.maxSize,\n                           modelRoot.collectRatio,\n                           modelRoot.version);\n            }\n\n            var rootOnChangesCompletedHandler = modelRoot.onChangesCompleted;\n\n            if (rootOnChangesCompletedHandler) {\n                rootOnChangesCompletedHandler.call(modelRoot.topLevelModel);\n            }\n        }\n    }\n}\n\nfunction tryOnNext(data, operation, modelRoot, destination) {\n    if (operation === 'jsonGraph' && data.paths) {\n        data.paths = collapse(data.paths);\n    }\n    try {\n        ++modelRoot.syncRefCount;\n        destination.onNext(data);\n    } catch(e) {\n        throw e;\n    } finally {\n        --modelRoot.syncRefCount;\n    }\n}\n\nfunction tryOnError(self, error) {\n    try {\n        throw error;\n    } catch (err) {\n        Subscriber.prototype.onError.call(self, err);\n    }\n}\n\nfunction mergeInto(dest, node) {\n\n    var destValue, nodeValue,\n        key, keys = Object.keys(node),\n        index = -1, length = keys.length;\n\n    while (++index < length) {\n\n        key = keys[index];\n\n        if (key === f_meta_data) {\n            dest[f_meta_data] = node[f_meta_data];\n        } else {\n\n            nodeValue = node[key];\n            destValue = dest[key];\n\n            if (destValue !== nodeValue) {\n                if (!nodeValue || typeof nodeValue !== 'object') {\n                    if (destValue === undefined) {\n                        dest[key] = nodeValue;\n                    }\n                } else if (destValue === undefined) {\n                    dest[key] = nodeValue;\n                } else {\n                    mergeInto(destValue, nodeValue);\n                }\n            }\n        }\n    }\n\n    return dest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Call.js","var Source = require('./Source');\nvar Request = require('./Request');\nvar Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar ImmediateScheduler = require('../schedulers/ImmediateScheduler');\n\nmodule.exports = Queue;\n\nfunction Queue(modelRoot) {\n    Subscription.call(this, []);\n    this.modelRoot = modelRoot;\n}\n\nQueue.prototype = Object.create(Subscription.prototype);\n\nQueue.prototype.set = isolateSet;\nQueue.prototype.call = isolateCall;\nQueue.prototype.get = batchAndDedupeGet;\n\nfunction isolateSet(model, optimized, requested, env) {\n    var queue = this;\n    return new Source(function(destination) {\n\n        var request = new Request('set', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = env.jsonGraph;\n        request.requested.push(requested);\n        request.optimized.push(optimized);\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction isolateCall(model, optimized, requested, callArgs) {\n    var queue = this;\n    return new Source(function(destination) {\n\n        var request = new Request('call', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = callArgs;\n        request.boundPath = model._path;\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction batchAndDedupeGet(model, optimized, requested) {\n    return new Dedupe(\n        this, model._source, model._scheduler, requested, optimized\n    );\n}\n\nfunction Dedupe(queue, source, scheduler, requested, optimized) {\n    this.queue = queue;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n    this.requested = requested;\n    this.optimized = optimized;\n}\n\nDedupe.prototype.subscribe = function(destination) {\n\n    var queue = this.queue;\n    var source = this.dataSource;\n    var requested = this.requested;\n    var optimized = this.optimized;\n    var scheduler = this.scheduler;\n\n    var requestsIndex = -1;\n    var requests  = queue.subscriptions;\n    var requestsCount = requests.length;\n    var subscription = new Subscription([], destination);\n\n    while (++requestsIndex < requestsCount) {\n\n        var request = requests[requestsIndex];\n\n        if (request.type !== 'get') {\n            continue;\n        }\n\n        if (request = request.batch(requested, optimized, requested = [], optimized = [])) {\n            subscription.add(request.subscribe(new Subscriber(destination, request)));\n        }\n\n        if (!optimized.length) {\n            break;\n        }\n    }\n\n    if (optimized.length) {\n        request = requests[requestsIndex] =\n            new Request('get', queue, source, scheduler).batch(requested, optimized);\n        subscription.add(request.subscribe(new Subscriber(destination, request)));\n        request.connect();\n    }\n\n    return subscription;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Queue.js","var isArray = Array.isArray;\nvar Subject = require('./Subject');\nvar Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar InvalidSourceError = require('../errors/InvalidSourceError');\n\nvar setJSONGraphs = require('../cache/set/setJSONGraphs');\nvar setPathValues = require('../cache/set/setPathValues');\nvar invalidatePaths = require('../cache/invalidate/invalidatePathSets');\n\nvar toPaths = require('@graphistry/falcor-path-utils/lib/toPaths');\nvar toCollapseMap = require('@graphistry/falcor-path-utils/lib/toCollapseMap');\nvar toCollapseTrees = require('@graphistry/falcor-path-utils/lib/toCollapseTrees');\nvar hasIntersection = require('@graphistry/falcor-path-utils/lib/hasIntersection');\n\nmodule.exports = Request;\n\nfunction Request(type, queue, source, scheduler) {\n    Subject.call(this, [], queue);\n    this.tree = {};\n    this.paths = [];\n    this.type = type;\n    this.data = null;\n    this.active = false;\n    this.responded = false;\n    this.requested = [];\n    this.optimized = [];\n    this.disposable = null;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n}\n\nRequest.prototype = Object.create(Subject.prototype);\n\nRequest.prototype.next =\nRequest.prototype.onNext = function(env) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    var changed = false;\n    var jsonGraph = env.jsonGraph;\n    var boundPath = this.boundPath;\n    var modelRoot = queue.modelRoot;\n    var invalidated = env.invalidated;\n    var paths = env.paths || this.paths;\n    var requested = this.requested.slice(0);\n    var rootChangeHandler = modelRoot.onChange;\n\n    // Run invalidations first.\n    if (invalidated && invalidated.length) {\n        changed = invalidatePaths({ _root: modelRoot, _path: [] }, invalidated, false);\n    }\n\n    if (paths && paths.length && !(!jsonGraph || typeof jsonGraph !== 'object')) {\n        var results = setJSONGraphs(\n            { _root: modelRoot },\n            [{ paths: paths, jsonGraph: jsonGraph }],\n            modelRoot.errorSelector, modelRoot.comparator, false\n        );\n        paths = results[0];\n        changed = changed || results[2];\n    }\n\n    if (changed && rootChangeHandler) {\n        rootChangeHandler();\n    }\n\n    this.observers.slice(0).forEach(function(observer, index) {\n        observer.onNext({\n            type: 'get', paths: requested[index] ||\n                filterPathsBoundTo(boundPath, paths)\n        });\n    });\n}\n\nRequest.prototype.error =\nRequest.prototype.onError = function(error) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    error = error || {};\n\n    // Converts errors to object we can insert into the cache.\n    error = !(error instanceof Error) ?\n        // if it's $type error, use it raw\n        error.$type === $error && error ||\n        // Otherwise make it an error\n        { $type: $error, value: error } :\n        // If it's instanceof Error, pluck error.message\n        { $type: $error, value: { message: error.message }};\n\n    var modelRoot = queue.modelRoot;\n\n    var errorPathValues = toPaths(toCollapseTrees(\n        this.requested.reduce(function(collapseMap, paths) {\n            return toCollapseMap(paths, collapseMap);\n        }, {})\n    ))\n    .map(function(path) { return { path: path, value: error }; });\n\n    if (errorPathValues.length) {\n        setPathValues(\n            { _root: modelRoot, _path: [] },\n            errorPathValues,\n            modelRoot.errorSelector,\n            modelRoot.comparator,\n            false\n        );\n    }\n\n    Subject.prototype.onError.call(this, error);\n}\n\nRequest.prototype.complete =\nRequest.prototype.onCompleted = function() {\n    if (this.responded === false) {\n        this.onNext({});\n    }\n    Subject.prototype.onCompleted.call(this);\n}\n\nRequest.prototype.remove = function(subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.requested.splice(index, 1);\n        this.optimized.splice(index, 1);\n        this.observers.splice(index, 1);\n        this.subscriptions.splice(index, 1);\n    }\n    if (this.subscriptions.length === 0) {\n        this.dispose();\n    }\n    return this;\n}\n\nRequest.prototype.dispose =\nRequest.prototype.unsubscribe = function () {\n    this.tree = {};\n    this.data = null;\n    this.paths = null;\n    this.active = false;\n    this.boundPath = null;\n    this.requested = [];\n    this.optimized = [];\n    var queue = this.parent;\n    if (queue) {\n        this.parent = null;\n        queue.remove(this);\n    }\n    var disposable = this.disposable;\n    if (disposable) {\n        this.disposable = null;\n        if (disposable.dispose) {\n            disposable.dispose();\n        } else if (disposable.unsubscribe) {\n            disposable.unsubscribe();\n        }\n    }\n    Subject.prototype.dispose.call(this);\n}\n\nRequest.prototype.connect = function() {\n    if (!this.active && !this.disposable) {\n        var scheduledDisposable = this.scheduler.schedule(flush.bind(this));\n        if (!this.disposable) {\n            this.disposable = scheduledDisposable;\n        }\n    }\n    return this;\n}\n\nRequest.prototype.batch = function(requested, optimized,\n                                   requestedComplements,\n                                   optimizedComplements) {\n    if (this.active) {\n        var requestedIntersection = [];\n        var optimizedIntersection = [];\n        if (findIntersections(this.tree,\n                              requested, optimized,\n                              requestedComplements,\n                              optimizedComplements,\n                              requestedIntersection,\n                              optimizedIntersection)) {\n            this.requested.push(requestedIntersection);\n            this.optimized.push(optimizedIntersection);\n            return this;\n        }\n        return null;\n    }\n    this.requested.push(requested);\n    this.optimized.push(optimized);\n    return this;\n}\n\nfunction flush() {\n\n    this.active = true;\n\n    var obs, paths = this.paths = toPaths(this.tree = toCollapseTrees(\n        this.optimized.reduce(function(collapseMap, paths) {\n            return toCollapseMap(paths, collapseMap);\n        }, {})\n    ));\n\n    try {\n        switch (this.type) {\n            case 'get':\n                obs = this.dataSource.get(paths);\n                break;\n            case 'set':\n                obs = this.dataSource.set({ paths: paths, jsonGraph: this.data });\n                break;\n            case 'call':\n                obs = this.dataSource.call.apply(this.dataSource, this.data);\n                break;\n        }\n        this.disposable = obs.subscribe(this);\n    } catch (e) {\n        this.disposable = {};\n        Subject.prototype.onError.call(this, new InvalidSourceError(e));\n    }\n}\n\nfunction findIntersections(tree,\n                           requested, optimized,\n                           requestedComplements,\n                           optimizedComplements,\n                           requestedIntersection,\n                           optimizedIntersection) {\n\n    var index = -1;\n    var complementIndex = -1;\n    var intersectionIndex = -1;\n    var optTotal = optimized.length;\n    var reqTotal = requested.length - 1;\n\n    while (++index < optTotal) {\n        var path = optimized[index];\n        var pathLen = path.length;\n        var subTree = tree[pathLen];\n        if (subTree && hasIntersection(subTree, path, 0, pathLen)) {\n            optimizedIntersection[++intersectionIndex] = path;\n            requestedIntersection[intersectionIndex] = requested[\n                index < reqTotal ? index : reqTotal\n            ];\n        } else {\n            optimizedComplements[++complementIndex] = path;\n            requestedComplements[complementIndex] = requested[\n                index < reqTotal ? index : reqTotal\n            ];\n        }\n    }\n\n    return ~intersectionIndex;\n}\n\nfunction filterPathsBoundTo(boundPath, paths) {\n\n    var boundLength;\n\n    if (!boundPath || (boundLength = boundPath.length) === 0) {\n        return paths;\n    }\n\n    var filtered = [], filteredIndex = -1, keyIndex;\n    var path, pathsIndex = -1, pathsCount = paths.length;\n\n    outer: while (++pathsIndex < pathsCount) {\n        path = paths[pathsIndex];\n        if (path.length > boundLength) {\n            keyIndex = 0;\n            do {\n                if (path[keyIndex] !== boundPath[keyIndex]) {\n                    continue outer;\n                }\n            } while (++keyIndex < boundLength);\n            filtered[++filteredIndex] = path.slice(boundLength);\n        }\n    }\n\n    return filtered;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Request.js","var Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\n\nmodule.exports = Subject;\n\nfunction Subject(observers, parent) {\n    Subscriber.call(this, null, parent);\n    this.observers = observers || [];\n}\n\nSubject.prototype = Object.create(Subscriber.prototype);\n\n// Unused\n// Subject.prototype.onNext = function(value) {\n//     this.observers.slice(0).forEach(function(observer) {\n//         observer.onNext(value);\n//     });\n// }\n\nSubject.prototype.onError = function(error) {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function(observer) {\n        observer.onError(error);\n    });\n}\n\nSubject.prototype.onCompleted = function() {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function(observer) {\n        observer.onCompleted();\n    });\n}\n\nSubject.prototype.subscribe = function(subscriber) {\n    this.observers.push(subscriber);\n    this.subscriptions.push(subscriber = new Subscription([subscriber], this));\n    return subscriber;\n}\n\nSubject.prototype.dispose =\nSubject.prototype.unsubscribe = function () {\n    this.observers = [];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subject.js","function TimeoutScheduler(delay) {\n    this.delay = delay;\n}\n\nvar TimerDisposable = function TimerDisposable(id) {\n    this.id = id;\n    this.disposed = false;\n};\n\nTimeoutScheduler.prototype.schedule = function schedule(action) {\n    return new TimerDisposable(setTimeout(action, this.delay));\n};\n\nTimerDisposable.prototype.dispose =\nTimerDisposable.prototype.unsubscribe = function() {\n    if (!this.disposed) {\n        clearTimeout(this.id);\n        this.id = null;\n        this.disposed = true;\n    }\n};\n\nmodule.exports = TimeoutScheduler;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/schedulers/TimeoutScheduler.js","module.exports = function arrayFlatMap(array, selector) {\n    var index = -1;\n    var i = -1;\n    var n = array.length;\n    var array2 = [];\n    while (++i < n) {\n        var array3 = selector(array[i], i, array);\n        var j = -1;\n        var k = array3.length;\n        while (++j < k) {\n            array2[++index] = array3[j];\n        }\n    }\n    return array2;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/array-flat-map.js","var isArray = Array.isArray;\nvar isInternal = require('../internal/isInternal');\n\nmodule.exports = clone;\n\nfunction clone(source) {\n    var dest = source;\n    if (!(!dest || typeof dest !== 'object')) {\n        dest = isArray(source) ? [] : {};\n        for (var key in source) {\n            if (isInternal(key)) {\n                continue;\n            }\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/clone.js","var isObject = require('./isObject');\nmodule.exports = function getSize(node) {\n    return isObject(node) && node.$expires || undefined;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getExpires.js","var isObject = require('./../support/isObject');\n\nmodule.exports = function getType(node, anyType) {\n    var type = isObject(node) && node.$type || void 0;\n    if (anyType && type) {\n        return 'branch';\n    }\n    return type;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getType.js","var isArray = Array.isArray;\nvar isObject = require('./../support/isObject');\n\nmodule.exports = function isPathValue(pathValue) {\n    return isObject(pathValue) && (\n        isArray(pathValue.path) || (\n            typeof pathValue.path === 'string'\n        ));\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isPathValue.js","module.exports = require('./lib/index');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/index.js\n// module id = 104\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = require('./ponyfill');\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/lib/index.js\n// module id = 105\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/lib/ponyfill.js\n// module id = 106\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.l; }\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.i; }\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 107\n// module chunks = 0"],"sourceRoot":""}