{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///falcor.all.min.js","webpack:///webpack/bootstrap bc22b829519fc938f291","webpack:///./lib/cache/isExpired.js","webpack:///./lib/cache/expireNode.js","webpack:///./lib/cache/get/json/FalcorJSON.js","webpack:///./lib/errors/NullInPathError.js","webpack:///./lib/errors/createErrorClass.js","webpack:///./lib/support/isObject.js","webpack:///.-path-utils/lib/support/materializedAtom.js","webpack:///./lib/cache/clone.js","webpack:///./lib/cache/createHardlink.js","webpack:///./lib/support/getSize.js","webpack:///./lib/cache/getCachePosition.js","webpack:///./lib/cache/updateNodeAncestors.js","webpack:///./lib/errors/InvalidKeySetError.js","webpack:///./lib/lru/promote.js","webpack:///./lib/request/Subscriber.js","webpack:///./lib/request/Subscription.js","webpack:///./lib/cache/get/onValueType.js","webpack:///./lib/cache/getBoundCacheNode.js","webpack:///./lib/cache/set/setJSONGraphs.js","webpack:///./lib/cache/set/setPathMaps.js","webpack:///./lib/support/isInternalKey.js","webpack:///.-path-utils/lib/flatBufferToPaths.js","webpack:///.-path-utils/lib/getHashCode.js","webpack:///.-path-utils/lib/iterateKeySet.js","webpack:///./lib/cache/get/json/index.js","webpack:///./lib/cache/get/jsonGraph/index.js","webpack:///./lib/cache/get/jsonGraph/inlineValue.js","webpack:///./lib/cache/get/onMissing.js","webpack:///./lib/cache/invalidate/invalidatePathSets.js","webpack:///./lib/cache/removeNodeAndDescendants.js","webpack:///./lib/cache/set/setPathValues.js","webpack:///./lib/cache/updateBackReferenceVersions.js","webpack:///./lib/internal/isInternal.js","webpack:///./lib/support/getTimestamp.js","webpack:///./lib/values/expires-now.js","webpack:///(webpack)/buildin/global.js","webpack:///.-path-utils/lib/collapse.js","webpack:///.-path-utils/lib/toCollapseMap.js","webpack:///.-path-utils/lib/toCollapseTrees.js","webpack:///.-path-utils/lib/toPaths.js","webpack:///./lib/cache/get/json/getJSON.js","webpack:///./lib/cache/get/json/getReferenceTarget.js","webpack:///./lib/cache/get/json/onValue.js","webpack:///./lib/cache/get/jsonGraph/getJSONGraph.js","webpack:///./lib/cache/get/onMaterialize.js","webpack:///./lib/cache/groupCacheArguments.js","webpack:///./lib/cache/insertNode.js","webpack:///./lib/cache/invalidate/invalidatePathMaps.js","webpack:///./lib/cache/mergeValueOrInsertBranch.js","webpack:///./lib/cache/reconstructPath.js","webpack:///./lib/cache/replaceNode.js","webpack:///./lib/cache/wrapNode.js","webpack:///./lib/errors/CircularReferenceError.js","webpack:///./lib/errors/InvalidSourceError.js","webpack:///./lib/lru/splice.js","webpack:///./lib/request/Source.js","webpack:///./lib/schedulers/ImmediateScheduler.js","webpack:///./lib/support/isJSONEnvelope.js","webpack:///./lib/support/isJSONGraphEnvelope.js","webpack:///./lib/support/now.js","webpack:///./lib/values/expires-never.js","webpack:///./lib/index.js","webpack:///.-path-utils/lib/computeFlatBufferHash.js","webpack:///.-path-utils/lib/hasIntersection.js","webpack:///.-path-utils/lib/toFlatBuffer.js","webpack:///.-path-utils/lib/toTree.js","webpack:///./lib/Model.js","webpack:///./lib/ModelDataSourceAdapter.js","webpack:///./lib/ModelRoot.js","webpack:///./lib/cache/call/index.js","webpack:///./lib/cache/get/index.js","webpack:///./lib/cache/get/json/onError.js","webpack:///./lib/cache/get/json/walkFlatBuffer.js","webpack:///./lib/cache/get/json/walkPath.js","webpack:///./lib/cache/get/jsonGraph/getReferenceTarget.js","webpack:///./lib/cache/get/jsonGraph/onValue.js","webpack:///./lib/cache/get/jsonGraph/walkPath.js","webpack:///./lib/cache/get/onMaterializeFlatBuffer.js","webpack:///./lib/cache/getCache.js","webpack:///./lib/cache/getVersion.js","webpack:///./lib/cache/invalidate/index.js","webpack:///./lib/cache/mergeJSONGraphNode.js","webpack:///./lib/cache/set/index.js","webpack:///./lib/cache/transferBackReferences.js","webpack:///./lib/cache/unlinkBackReferences.js","webpack:///./lib/cache/unlinkForwardReference.js","webpack:///./lib/deref/hasValidParentReference.js","webpack:///./lib/deref/index.js","webpack:///./lib/errors/BoundJSONGraphModelError.js","webpack:///./lib/errors/InvalidDerefInputError.js","webpack:///./lib/errors/InvalidModelError.js","webpack:///./lib/errors/MaxRetryExceededError.js","webpack:///./lib/internal/f_.js","webpack:///./lib/lru/collect.js","webpack:///./lib/request/Call.js","webpack:///./lib/request/Queue.js","webpack:///./lib/request/Request.js","webpack:///./lib/request/Subject.js","webpack:///./lib/schedulers/TimeoutScheduler.js","webpack:///./lib/support/clone.js","webpack:///./lib/support/getExpires.js","webpack:///./lib/support/getType.js","webpack:///./lib/support/isPathValue.js","webpack:///./~/symbol-observable/index.js","webpack:///./~/symbol-observable/lib/index.js","webpack:///./~/symbol-observable/lib/ponyfill.js","webpack:///(webpack)/buildin/module.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","__webpack_require__.i","value","d","__webpack_require__.d","name","getter","Object","defineProperty","configurable","enumerable","get","n","__webpack_require__.n","__esModule","getDefault","getModuleExports","o","__webpack_require__.o","object","property","prototype","hasOwnProperty","p","s","now","$now","$never","module.exports","node","expireImmediate","exp","undefined","splice","expired","lru","global","FalcorJSON","f_meta","getInst","inst","typeofInst","argsLen","arguments","typeofString","typeofObject","toJSON","serialize","toString","includeMetadata","includeStatus","JSON","toProps","f_meta_inst","f_meta_json","version","json","serializer","createWithProto","count","total","keys","key","xs","isArray","$code","status","abs_path","deref_to","deref_from","ys","protoBlacklist","length","constructor","toLocaleString","protoDescriptors","$__hash","$__path","$__status","$__version","Array","descriptors","fn","Function","bindArrayMethod","writable","createErrorClass","message","MESSAGE","init","E","Error","stack","E.is","x","isObject","$type","isInternal","clone","index","from","to","backRefs","getCachePosition","cache","path","type","depth","maxDepth","removeNodeAndDescendants","updateBackReferenceVersions","updateNodeAncestors","offset","curr","next","keysOrRanges","mesage","EXPIRES_NEVER","head","prev","Subscriber","destination","parent","onCompleted","Subscription","error","onError","onNext","complete","Subscriber.prototype.onNext","dest","Subscriber.prototype.onError","signaled","dispose","Subscriber.prototype.onCompleted","Subscriber.prototype.unsubscribe","subscriptions","Subscription.prototype.add","subscription","push","Subscription.prototype.remove","indexOf","Subscription.prototype.unsubscribe","isExpired","expireNode","lruPromote","onValueType","seed","results","requestedPath","requestedLength","optimizedPath","optimizedLength","fromReference","modelRoot","branchSelector","boxValues","materialized","reportMissing","treatErrorsAsValues","onValue","onMissing","onMaterialize","reportMaterialized","getBoundCacheNode","model","setJSONGraphPathSet","messageRoot","messageParent","requestedPaths","optimizedPaths","comparator","errorSelector","note","branch","keySet","iterateKeySet","optimizedIndex","setNode","nextNode","nextParent","nextOptimizedPath","reference","container","createHardlink","arr","NullInPathError","mergeJSONGraphNode","jsonGraphEnvelopes","jsonGraphEnvelopeIndex","jsonGraphEnvelopeCount","jsonGraphEnvelope","paths","jsonGraph","pathIndex","pathCount","setPathMap","pathMap","itr","isInternalKey","keyIndex","keyCount","child","mergeValueOrInsertBranch","pathMapEnvelopes","bound","pathMapIndex","pathMapCount","pathMapEnvelope","flatBufferToPaths","leaf","keysLen","keysIndex","keyset","getHashCode","str","hash","initializeRange","memo","nextValue","el","inlineJSONGraphValue","restPathIndex","restPath","restPathCount","isEmptyKeySet","rangeEnd","mPath","lastKeyIsNull","isRequestedPath","missingPaths","missTotal","missingPath","missDepth","Number","invalidatePathSet","invalidateNode","getSize","invalidatePathSets","key2","lruSplice","unlinkForwardReference","unlinkBackReferences","setPathSet","pathValues","pathValueIndex","pathValueCount","pathValue","nodeArg","ref","f_","regexp","RegExp","g","eval","e","window","toPaths","toCollapseMap","toCollapseTrees","collapseMap","acc","len","toTree","collapseTrees","collapseKey","collapsePathMap","pathmap","subs","code","codes","codesIndex","codesCount","pathsets","pathsetsCount","subPath","subCode","subKeys","subKeysIndex","subKeysCount","pathsetClone","getSortedKeys","isSafeNumber","sets","parseInt","subSets","firstSubKey","subSetsIndex","subSetsCount","pathset","pathsetIndex","pathsetCount","sortListAscending","a","b","map","sort","materializedAtom","val","num","typeOfString","MIN_SAFE_INTEGER_DIGITS","safeNumberRegEx","MAX_SAFE_INTEGER_DIGITS","typeOfNumber","MAX_SAFE_INTEGER","abs","Math","lengths","allPaths","allPathsLength","typeOfObject","pathsIndex","pathsCount","keysetIndex","keysetCount","isSparseRange","collapseIndex","walkPathAndBuildOutput","walkFlatBufferAndBuildOutput","InvalidModelError","toFlatBuffer","computeFlatBufferHash","getJSON","progressive","referenceContainer","boundPath","isFlatBuffer","data","recycleJSON","hasDataSource","Boolean","allowFromWhenceYouCame","requested","boundRequested","promote","CircularReferenceError","getReferenceTarget","context","copy","onJSONValue","BoundJSONGraphModelError","getJSONGraph","nextDepth","keysetLength","iteratingKeyset","nextKey","keyIsRange","InvalidKeySetError","typeofNumber","isPathValue","isJSONEnvelope","isJSONGraphEnvelope","groupCacheArguments","args","groups","argIndex","argCount","group","groupType","arg","argType","inputType","invalidatePathMap","invalidatePathMaps","getType","getTimestamp","wrapNode","insertNode","replaceNode","reconstructPath","cType","mType","sizeOffset","currentPath","transferBackReferences","replacement","getExpires","expiresNow","typeArg","size","modelCreated","atomSize","expires","referencePath","Source","subscribe","source","$$observable","default","Source.prototype.operator","Source.prototype.subscribe","y","operator","Source.prototype.then","_promise","resolve","reject","values","rejected","errors","then","ImmediateScheduler","empty","unsubscribe","ImmediateScheduler.prototype.schedule","action","envelope","Date","falcor","opts","Model","keysLength","hasIntersection","tree","pathToFlatBuffer","keysMap","nullBuffer","pathToTree","options","_node","_path","_source","_root","ModelRoot","_recycleJSON","_scheduler","_seed","_treatErrorsAsValues","__proto__","_boxed","_materialized","_allowFromWhenceYouCame","setCache","Call","ModelDataSourceAdapter","TimeoutScheduler","collapse","setJSONGraphs","getCache","Model.prototype.get","_len","_key","_toJSON","Model.prototype.set","_len2","_key2","Model.prototype.preload","_len3","_key3","Model.prototype.call","_len4","_key4","Model.prototype.invalidate","_len5","_key5","Model.prototype.getValue","lift","subscriber","Model.prototype.setValue","Model.prototype.setCache","cacheOrJSONGraphEnvelope","rootOnChangeHandler","Model.prototype.getCache","env","Model.prototype.getVersion","concat","_getVersion","Model.prototype._clone","Model.prototype.batch","schedulerOrDelay","scheduler","scheudle","_clone","Model.prototype.unbatch","Model.prototype.treatErrorsAsValues","Model.prototype.asDataSource","Model.prototype._materialize","Model.prototype._dematerialize","Model.prototype.boxValues","Model.prototype.unboxValues","Model.prototype.withoutDataSource","Model.prototype.inspect","getVersion","join","Model.prototype.toJSON","getPath","Model.prototype.getPath","slice","Model.prototype._fromWhenceYouCame","allow","Model.prototype._optimizePath","_model","ModelDataSourceAdapter.prototype.get","pathSets","apply","_toJSONG","ModelDataSourceAdapter.prototype.set","jsongResponse","set","ModelDataSourceAdapter.prototype.call","suffixes","syncRefCount","maxRetryCount","topLevelModel","requests","Requests","collectRatio","maxSize","functionTypeof","onChange","onChangesCompleted","defaultCompare","_args","hasValue","missing","thisPaths","fragments","errorPath","errorValue","refTarget","f_old_keys","f_new_keys","f_code","nextJSON","nextReferenceContainer","nextOptimizedLength","optimizedLengthNext","refContainerAbsPath","refContainerRefPath","nodeAbsPath","jsonAbsPath","arrayEqual","nextPath","nextPathKey","hasMissingPath","tmp","rPath","originalOnMissing","inlineValue","onJSONGraphValue","isLeaf","onMaterializeFlatBuffer","_copyCache","out","fromKey","cacheNext","outNext","isUserCreatedcacheNext","clonedValue","boxedValue","invalidate","changed","groupIndex","groupCount","groupedArgs","pluckPaths","operation","rootChangeHandler","invalidatePathValues","cIsObject","mIsObject","cTimestamp","mTimestamp","isDistinct","setGroupsIntoCache","arrayFlatMap","optimized","array","selector","array2","array3","j","k","jsong","relative","setPathMaps","setPathValues","fromNode","destNode","fromNodeRefsLength","destNodeRefsLength","hasValidParentReference","_referenceContainer","cacheRoot","absolutePath","originalRefPath","originalAbsPath","cacheNode","validContainer","CONTAINER_DOES_NOT_EXIST","currentRefPath","shortedPath","printPaths","absolute","String","totalArg","max","ratioArg","ratio","targetSize","CallOperator","CallSubscriber","retryCount","completed","tryOnNext","tryOnError","self","err","mergeInto","destValue","nodeValue","lruCollect","InvalidSourceError","MaxRetryExceededError","Call.prototype.lift","Call.prototype.operator","_subscribe","Call.prototype._subscribe","Call.prototype._toJSON","Call.prototype._toJSONG","Call.prototype.retry","progresive","Call.prototype.progressively","CallOperator.prototype.call","CallSubscriber.prototype.onNext","started","seedIsImmutable","operations","CallSubscriber.prototype.onError","errored","CallSubscriber.prototype.onCompleted","request","CallSubscriber.prototype.unsubscribe","rootOnChangesCompletedHandler","Queue","Dedupe","queue","dataSource","Request","isolateSet","isolateCall","callArgs","batchAndDedupeGet","Dedupe.prototype.subscribe","requestsIndex","requestsCount","batch","Subject","responded","active","disposable","flush","obs","reduce","filterPathsBoundTo","boundLength","filtered","filteredIndex","outer","invalidatePaths","Request.prototype.onNext","invalidated","observers","forEach","observer","Request.prototype.onError","errorPathValues","Request.prototype.onCompleted","Request.prototype.remove","Request.prototype.unsubscribe","Request.prototype.connect","scheduledDisposable","schedule","Request.prototype.batch","requestedComplements","optimizedComplements","requestedIntersection","optimizedIntersection","complementIndex","intersectionIndex","optTotal","reqTotal","pathLen","subTree","Subject.prototype.onError","Subject.prototype.onCompleted","Subject.prototype.subscribe","Subject.prototype.unsubscribe","delay","TimerDisposable","id","disposed","TimeoutScheduler.prototype.schedule","setTimeout","TimerDisposable.prototype.unsubscribe","clearTimeout","anyType","_ponyfill","_ponyfill2","result","symbolObservablePonyfill","_Symbol","Symbol","observable","webpackPolyfill","deprecate","module.deprecate","children"],"mappings":"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","file":"falcor.all.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"falcor\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"falcor\"] = factory();\n\telse\n\t\troot[\"falcor\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"falcor\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"falcor\"] = factory();\n\telse\n\t\troot[\"falcor\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmory imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmory exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tObject.defineProperty(exports, name, {\n/******/ \t\t\tconfigurable: false,\n/******/ \t\t\tenumerable: true,\n/******/ \t\t\tget: getter\n/******/ \t\t});\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 107);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar now = __webpack_require__(59);\nvar $now = __webpack_require__(34);\nvar $never = __webpack_require__(60);\n\nmodule.exports = function isExpired(node, expireImmediate) {\n    var exp = node.$expires;\n    if (exp === undefined || exp === null || exp === $never) {\n        return false;\n    } else if (exp === $now) {\n        return expireImmediate;\n    }\n    return exp < now();\n};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar splice = __webpack_require__(54);\n\nmodule.exports = function expireNode(node, expired, lru) {\n    if (!node[\"\u001eƒ_invalidated\"]) {\n        node[\"\u001eƒ_invalidated\"] = true;\n        expired.push(node);\n        splice(lru, node);\n    }\n    return node;\n};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {function FalcorJSON(f_meta) {\n    if (!f_meta) {\n        this[\"\u001eƒ_meta\"] = {};\n    } else if (!(this[\"\u001eƒ_meta\"] = f_meta[\"\u001eƒ_meta\"])) {\n        this[\"\u001eƒ_meta\"] = f_meta;\n    }\n}\n\nvar protoBlacklist = {\n    length: true,\n    toString: true,\n    constructor: true,\n    toLocaleString: true\n};\n\nvar protoDescriptors = {\n    toJSON: { enumerable: false, value: toJSON },\n    toProps: { enumerable: false, value: toProps },\n    toString: { enumerable: false, value: toString },\n    toLocaleString: { enumerable: false, value: toString },\n    $__hash: {\n        enumerable: false,\n        get: function () {\n            var f_meta = this[\"\u001eƒ_meta\"];\n            return f_meta && f_meta['$code'] || '';\n        }\n    },\n    $__path: {\n        enumerable: false,\n        get: function () {\n            var f_meta = this[\"\u001eƒ_meta\"];\n            return f_meta && f_meta[\"abs_path\"] || [];\n        }\n    },\n    $__status: {\n        enumerable: false,\n        get: function () {\n            var f_meta = this[\"\u001eƒ_meta\"];\n            return f_meta && f_meta[\"status\"] || 'resolved';\n        }\n    },\n    $__version: {\n        enumerable: false,\n        get: function () {\n            var f_meta = this[\"\u001eƒ_meta\"];\n            return f_meta && f_meta[\"version\"] || 0;\n        }\n    }\n};\n\nObject.defineProperties(FalcorJSON.prototype, Object.getOwnPropertyNames(Array.prototype).reduce(function (descriptors, name) {\n    if (!protoBlacklist.hasOwnProperty(name)) {\n        var fn = Array.prototype[name];\n        if (typeof fn === 'function') {\n            descriptors[name] = {\n                value: bindArrayMethod(name, fn),\n                writable: true, enumerable: false\n            };\n        }\n    }\n    return descriptors;\n}, protoDescriptors));\n\nfunction bindArrayMethod(name, fn) {\n    return new Function('fn', 'return function ' + name + ' () {' + 'return fn.apply(this, arguments);' + '};')(fn);\n}\n\nvar isArray = Array.isArray;\nvar typeofObject = 'object';\nvar typeofString = 'string';\n\nfunction getInst(inst) {\n    var typeofInst = typeof inst;\n    var argsLen = arguments.length;\n    if (argsLen === 0) {\n        inst = this;\n    } else if (typeofInst !== typeofString) {\n        if (!inst || typeofInst !== typeofObject) {\n            return inst;\n        }\n    } else if (argsLen !== 1) {\n        return inst;\n    } else {\n        inst = this;\n    }\n    return inst === global ? undefined : inst;\n}\n\nfunction toJSON() {\n    return serialize(getInst.apply(this, arguments), toJSON);\n}\n\nfunction toString(includeMetadata, includeStatus) {\n    return JSON.stringify(serialize(getInst.call(this, this), serialize, includeMetadata === true, false, includeStatus === true));\n}\n\nfunction toProps(inst) {\n\n    inst = getInst.apply(this, arguments);\n\n    var f_meta_inst,\n        f_meta_json,\n        version = 0;\n    var json = serialize(inst, toProps, true, true);\n\n    if (inst && (f_meta_inst = inst[\"\u001eƒ_meta\"])) {\n        version = f_meta_inst[\"version\"];\n    }\n\n    if (!(!json || typeof json !== typeofObject)) {\n        if (f_meta_json = json[\"\u001eƒ_meta\"]) {\n            f_meta_json[\"version\"] = version;\n        }\n    }\n\n    return json;\n}\n\nfunction serialize(inst, serializer, includeMetadata, createWithProto, includeStatus) {\n\n    if (!inst || typeof inst !== typeofObject) {\n        return inst;\n    }\n\n    var count, total, f_meta, keys, key, xs, ys;\n\n    if (isArray(inst)) {\n        xs = inst;\n    } else {\n\n        count = -1;\n        keys = Object.keys(inst);\n        total = keys.length;\n        xs = {};\n\n        if (createWithProto) {\n            xs.__proto__ = FalcorJSON.prototype;\n        }\n\n        if (includeMetadata && (f_meta = inst[\"\u001eƒ_meta\"])) {\n\n            var $code = f_meta['$code'];\n            var status = f_meta[\"status\"];\n            var abs_path = f_meta[\"abs_path\"];\n            var deref_to = f_meta[\"deref_to\"];\n            var deref_from = f_meta[\"deref_from\"];\n\n            f_meta = {};\n            $code && (f_meta['$code'] = $code);\n            abs_path && (f_meta[\"abs_path\"] = abs_path);\n            deref_to && (f_meta[\"deref_to\"] = deref_to);\n            deref_from && (f_meta[\"deref_from\"] = deref_from);\n            includeStatus && status && (f_meta[\"status\"] = status);\n\n            xs[\"\u001eƒ_meta\"] = f_meta;\n\n            if (createWithProto) {\n                ys = {};\n                ys.__proto__ = xs;\n                xs = ys;\n            }\n        }\n\n        while (++count < total) {\n            if ((key = keys[count]) !== \"\u001eƒ_meta\") {\n                xs[key] = serializer(inst[key], serializer, includeMetadata, createWithProto, includeStatus);\n            }\n        }\n    }\n\n    return xs;\n}\n\nmodule.exports = FalcorJSON;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(35)))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\nvar MESSAGE = '`null` is not allowed in branch key positions.';\n\n/**\n * Do not allow null in path.\n */\nmodule.exports = createErrorClass('NullInPathError', function () {\n  this.message = MESSAGE;\n});\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\nmodule.exports = createErrorClass;\n\nfunction createErrorClass(name, init) {\n    function E(message) {\n        this.message = message;\n        init && init.apply(this, arguments);\n        if (!Error.captureStackTrace) {\n            this.stack = new Error().stack;\n        } else {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n    E.prototype = Object.create(Error.prototype);\n    E.prototype.name = name;\n    E.prototype.constructor = E;\n    E.is = function (x) {\n        return x.name === name;\n    };\n    return E;\n}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\nmodule.exports = isObject;\n\nfunction isObject(value) {\n    return value !== null && typeof value === 'object';\n}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\nmodule.exports = { $type: 'atom' };\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isInternal = __webpack_require__(32);\n\nmodule.exports = clone;\n\nfunction clone(node) {\n\n    var key,\n        keys = Object.keys(node),\n        json = {},\n        index = -1,\n        length = keys.length;\n\n    while (++index < length) {\n        key = keys[index];\n        if (isInternal(key)) {\n            continue;\n        }\n        json[key] = node[key];\n    }\n\n    return json;\n}\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function createHardlink(from, to) {\n\n    // create a back reference\n    var backRefs = to[\"\u001eƒ_refs_length\"] || 0;\n    to[\"\u001eƒ_ref\" + backRefs] = from;\n    to[\"\u001eƒ_refs_length\"] = backRefs + 1;\n\n    // create a hard reference\n    from[\"\u001eƒ_ref_index\"] = backRefs;\n    from[\"\u001eƒ_context\"] = to;\n};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(5);\nmodule.exports = function getSize(node) {\n    return isObject(node) && node.$size || 0;\n};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * getCachePosition makes a fast walk to the bound value since all bound\n * paths are the most possible optimized path.\n *\n * @param {Model} model -\n * @param {Array} path -\n * @returns {Mixed} - undefined if there is nothing in this position.\n * @private\n */\nmodule.exports = getCachePosition;\n\nfunction getCachePosition(cache, path) {\n\n    var node = cache;\n    var type,\n        depth = 0;\n    var maxDepth = path.length;\n\n    if (maxDepth > 0) {\n        do {\n            node = node[path[depth]];\n\n            while (node && (type = node.$type) === \"ref\") {\n                node = getCachePosition(cache, node.value);\n            }\n        } while (++depth < maxDepth && node && !type);\n    }\n\n    return node;\n};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar removeNodeAndDescendants = __webpack_require__(29);\nvar updateBackReferenceVersions = __webpack_require__(31);\n\nmodule.exports = updateNodeAncestors;\n\nfunction updateNodeAncestors(node, offset, lru, version) {\n    var curr = node,\n        next = curr[\"\u001eƒ_parent\"];\n    do {\n        if ((curr.$size = (curr.$size || 0) - offset) > 0) {\n            if (!(next = curr[\"\u001eƒ_parent\"])) {\n                curr[\"\u001eƒ_version\"] = version;\n            } else if (curr[\"\u001eƒ_version\"] !== version) {\n                updateBackReferenceVersions(curr, version);\n            }\n        } else if (next = curr[\"\u001eƒ_parent\"]) {\n            removeNodeAndDescendants(curr, next, curr[\"\u001eƒ_key\"], lru, version);\n        }\n    } while (curr = next);\n    return node;\n}\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\n\n/**\n * InvalidKeySetError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidKeySetError', function (path, keysOrRanges) {\n  this.mesage = '' + 'The KeySet ' + JSON.stringify(keysOrRanges) + ' in path ' + JSON.stringify(path) + ' contains a KeySet. ' + 'Keysets can only contain Keys or Ranges';\n});\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar EXPIRES_NEVER = __webpack_require__(60);\n\n// [H] -> Next -> ... -> [T]\n// [T] -> Prev -> ... -> [H]\nmodule.exports = function lruPromote(root, object) {\n    // Never promote node.$expires === 1.  They cannot expire.\n    if (object.$expires === EXPIRES_NEVER) {\n        return;\n    }\n\n    var head = root[\"\u001eƒ_head\"];\n\n    // Nothing is in the cache.\n    if (!head) {\n        root[\"\u001eƒ_head\"] = root[\"\u001eƒ_tail\"] = object;\n        return;\n    }\n\n    if (head === object) {\n        return;\n    }\n\n    // The item always exist in the cache since to get anything in the\n    // cache it first must go through set.\n    var prev = object[\"\u001eƒ_prev\"];\n    var next = object[\"\u001eƒ_next\"];\n    if (next) {\n        next[\"\u001eƒ_prev\"] = prev;\n    }\n    if (prev) {\n        prev[\"\u001eƒ_next\"] = next;\n    }\n    object[\"\u001eƒ_prev\"] = undefined;\n\n    // Insert into head position\n    root[\"\u001eƒ_head\"] = object;\n    object[\"\u001eƒ_next\"] = head;\n    head[\"\u001eƒ_prev\"] = object;\n\n    // If the item we promoted was the tail, then set prev to tail.\n    if (object === root[\"\u001eƒ_tail\"]) {\n        root[\"\u001eƒ_tail\"] = prev;\n    }\n};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Subscription = __webpack_require__(15);\n\nmodule.exports = Subscriber;\n\nfunction Subscriber(destination, parent, onCompleted) {\n    if (typeof destination === 'function' || typeof parent === 'function' || typeof onCompleted === 'function') {\n        Subscription.call(this, []);\n        this.destination = {\n            error: parent,\n            onError: parent,\n            next: destination,\n            onNext: destination,\n            complete: onCompleted,\n            onCompleted: onCompleted\n        };\n    } else {\n        Subscription.call(this, [], parent);\n        this.parent = parent;\n        this.destination = destination;\n    }\n}\n\nSubscriber.prototype = Object.create(Subscription.prototype);\n\nSubscriber.prototype.next = Subscriber.prototype.onNext = function onNext(value) {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onNext) {\n            dest.onNext(value);\n        } else if (dest.next) {\n            dest.next(value);\n        }\n    }\n};\n\nSubscriber.prototype.error = Subscriber.prototype.onError = function onError(error) {\n    var signaled = false;\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onError) {\n            signaled = true;\n            dest.onError(error);\n        } else if (dest.error) {\n            signaled = true;\n            dest.error(error);\n        }\n        this.dispose();\n    }\n    if (!signaled) {\n        throw error;\n    }\n};\n\nSubscriber.prototype.complete = Subscriber.prototype.onCompleted = function onCompleted() {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onCompleted) {\n            dest.onCompleted();\n        } else if (dest.complete) {\n            dest.complete();\n        }\n        this.dispose();\n    }\n};\n\nSubscriber.prototype.dispose = Subscriber.prototype.unsubscribe = function () {\n    this.destination = null;\n    Subscription.prototype.dispose.call(this);\n};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\nmodule.exports = Subscription;\n\nfunction Subscription(subscriptions, parent) {\n    this.parent = parent;\n    this.subscriptions = subscriptions || [];\n}\n\nSubscription.prototype.add = function (subscription) {\n    return this.subscriptions.push(subscription) && this || this;\n};\n\nSubscription.prototype.remove = function (subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.subscriptions.splice(index, 1);\n    }\n    return this;\n};\n\nSubscription.prototype.dispose = Subscription.prototype.unsubscribe = function () {\n    var subscription,\n        subscriptions = this.subscriptions;\n    while (subscriptions.length) {\n        (subscription = subscriptions.pop()) && subscription.dispose && subscription.dispose();\n    }\n    var parent = this.parent;\n    if (parent) {\n        this.parent = null;\n        parent.remove && parent.remove(this);\n    }\n};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar lruPromote = __webpack_require__(13);\n\nmodule.exports = onValueType;\n\nfunction onValueType(node, type, json, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, reportMissing, treatErrorsAsValues, onValue, onMissing, onMaterialize) {\n\n    var reportMaterialized = reportMissing;\n\n    if (type) {\n        if (isExpired(node, expireImmediate)) {\n            if (!node[\"\u001eƒ_invalidated\"]) {\n                expireNode(node, expired, modelRoot);\n            }\n        } else {\n            lruPromote(modelRoot, node);\n            if (node.value === undefined) {\n                reportMissing = false;\n                reportMaterialized = materialized;\n            } else {\n                if (seed) {\n                    if (fromReference) {\n                        requestedPath[depth] = null;\n                    }\n                    return onValue(node, type, depth, seed, results, requestedPath, optimizedPath, optimizedLength, fromReference, boxValues, materialized, treatErrorsAsValues);\n                }\n                return undefined;\n            }\n        }\n    }\n\n    if (materialized) {\n        seed && (results.hasValue = true);\n    } else if (!reportMaterialized) {\n        return undefined;\n    }\n\n    return onMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, materialized, json, branchSelector, boxValues, onMaterialize, modelRoot);\n}\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar getCachePosition = __webpack_require__(10);\n\nmodule.exports = getBoundCacheNode;\n\nfunction getBoundCacheNode(model, path) {\n    path = path || model._path;\n    var node = model._node;\n    if (!node || node[\"\u001eƒ_parent\"] === undefined || node[\"\u001eƒ_invalidated\"]) {\n        model._node = null;\n        if (path.length === 0) {\n            node = model._root.cache;\n        } else {\n            node = getCachePosition(model._root.cache, path);\n            if (path === model._path) {\n                model._node = node;\n            }\n        }\n    }\n    return node;\n}\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(5);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar createHardlink = __webpack_require__(8);\nvar mergeJSONGraphNode = __webpack_require__(81);\nvar NullInPathError = __webpack_require__(3);\nvar iterateKeySet = __webpack_require__(23);\n\n/**\n * Merges a list of {@link JSONGraphEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to merge the {@link JSONGraphEnvelope}s.\n * @param {Array.<PathValue>} jsonGraphEnvelopes - the {@link JSONGraphEnvelope}s to merge.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setJSONGraphs(model, jsonGraphEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n\n    var requestedPath = [];\n    var optimizedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var jsonGraphEnvelopeIndex = -1;\n    var jsonGraphEnvelopeCount = jsonGraphEnvelopes.length;\n\n    while (++jsonGraphEnvelopeIndex < jsonGraphEnvelopeCount) {\n\n        var jsonGraphEnvelope = jsonGraphEnvelopes[jsonGraphEnvelopeIndex];\n        var paths = jsonGraphEnvelope.paths;\n        var jsonGraph = jsonGraphEnvelope.jsonGraph;\n\n        var pathIndex = -1;\n        var pathCount = paths.length;\n\n        while (++pathIndex < pathCount) {\n\n            var path = paths[pathIndex];\n            optimizedPath.index = 0;\n\n            setJSONGraphPathSet(path, 0, cache, cache, cache, jsonGraph, jsonGraph, jsonGraph, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n        }\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n    arr[3] = undefined;\n    arr[4] = undefined;\n\n    if (cache[\"\u001eƒ_version\"] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setJSONGraphPathSet(path, depth, root, parent, node, messageRoot, messageParent, message, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n\n        var results = setNode(root, parent, node, messageRoot, messageParent, message, key, branch, false, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = results[0];\n        var nextParent = results[1];\n        var nextOptimizedPath = results[4];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setJSONGraphPathSet(path, depth + 1, root, nextParent, nextNode, messageRoot, results[3], results[2], requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(root, node, messageRoot, message, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var messageParent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        messageParent = messageRoot;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var index = 0;\n        var container = node;\n        var count = reference.length - 1;\n        parent = node = root;\n        messageParent = message = messageRoot;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            optimizedPath.index = index;\n\n            var results = setNode(root, parent, node, messageRoot, messageParent, message, key, branch, true, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n            node = results[0];\n            optimizedPath = results[4];\n            if (!node || typeof node !== 'object') {\n                optimizedPath.index = index;\n                return results;\n            }\n            parent = results[1];\n            message = results[2];\n            messageParent = results[3];\n        } while (index++ < count);\n\n        optimizedPath.index = index;\n\n        if (container[\"\u001eƒ_context\"] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(root, parent, node, messageRoot, messageParent, message, key, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        var results = setReference(root, node, messageRoot, message, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        message = results[2];\n        messageParent = results[3];\n        optimizedPath = results[4];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[\"\u001eƒ_key\"];\n            }\n        } else {\n            parent = node;\n            messageParent = message;\n            node = parent[key];\n            message = messageParent && messageParent[key];\n        }\n\n        node = mergeJSONGraphNode(parent, node, message, key, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n\n    return arr;\n}\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(3);\nvar isArray = Array.isArray;\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar createHardlink = __webpack_require__(8);\nvar getCachePosition = __webpack_require__(10);\nvar isInternalKey = __webpack_require__(20);\nvar NullInPathError = __webpack_require__(3);\nvar mergeValueOrInsertBranch = __webpack_require__(48);\n\n/**\n * Sets a list of {@link PathMapEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of {@link PathMapEnvelope}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setPathMaps(model, pathMapEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[\"\u001eƒ_parent\"] || cache;\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathMapIndex = -1;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathMap(pathMapEnvelope.json, 0, cache, parent, node, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, modelRoot, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    if (cache[\"\u001eƒ_version\"] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setPathMap(pathMap, depth, root, parent, node, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var keys = getKeys(pathMap);\n\n    if (keys && keys.length) {\n\n        var keyIndex = 0;\n        var keyCount = keys.length;\n        var optimizedIndex = optimizedPath.index;\n\n        do {\n            var key = keys[keyIndex];\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n\n            requestedPath.depth = depth;\n\n            var results = setNode(root, parent, node, key, child, branch, false, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n            requestedPath[depth] = key;\n            requestedPath.index = depth;\n\n            var nextNode = results[0];\n            var nextParent = results[1];\n            var nextOptimizedPath = results[2];\n            nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n            if (nextNode) {\n                if (branch) {\n                    setPathMap(child, depth + 1, root, nextParent, nextNode, requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n                } else {\n                    requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                    optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n                }\n            }\n            if (++keyIndex >= keyCount) {\n                break;\n            }\n            optimizedPath.index = optimizedIndex;\n        } while (true);\n    }\n}\n/* eslint-enable */\n\nfunction setReference(value, root, node, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n        var container = node;\n        parent = root;\n\n        node = node[\"\u001eƒ_context\"];\n\n        if (node != null) {\n            parent = node[\"\u001eƒ_parent\"] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n            optimizedPath.index = index;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                var results = setNode(root, parent, node, key, value, branch, true, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n                node = results[0];\n                optimizedPath = results[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return results;\n                }\n                parent = results[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[\"\u001eƒ_context\"] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(root, parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        var results = setReference(value, root, node, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        optimizedPath = results[2];\n        type = node && node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[\"\u001eƒ_key\"];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction getKeys(pathMap) {\n\n    if (!(!pathMap || typeof pathMap !== 'object') && !pathMap.$type) {\n        var keys = [];\n        var itr = 0;\n        if (isArray(pathMap)) {\n            keys[itr++] = 'length';\n        }\n        for (var key in pathMap) {\n            if (isInternalKey(key)) {\n                continue;\n            }\n            keys[itr++] = key;\n        }\n        return keys;\n    }\n\n    return undefined;\n}\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Determined if the key passed in is an internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nmodule.exports = isInternalKey;\n\nvar isInternal = __webpack_require__(32);\n\nfunction isInternalKey(key) {\n  return key && key[0] === '$' || isInternal(key);\n}\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\nmodule.exports = flatBufferToPaths;\n\nfunction flatBufferToPaths(seed, paths, path) {\n\n    path = path || [];\n    paths = paths || [];\n\n    if (!seed) {\n        return paths;\n    }\n\n    var leaf = [];\n    var keys = seed['$keys'];\n    var keysLen = keys.length;\n    var keysIndex = -1,\n        key,\n        len;\n\n    while (++keysIndex < keysLen) {\n\n        var next = seed[keysIndex];\n        var keyset = keys[keysIndex];\n\n        if (!next || typeof next !== 'object') {\n            leaf.push(keyset);\n        } else {\n            flatBufferToPaths(next, paths, path.concat([keyset]));\n        }\n    }\n\n    if (leaf.length === 1) {\n        paths.push(path.concat(leaf));\n    } else if (leaf.length > 1) {\n        paths.push(path.concat([leaf]));\n    }\n\n    return paths;\n}\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\nmodule.exports = getHashCode;\n\nfunction getHashCode(str) {\n    var hash = 5381,\n        i = str.length;\n    while (i) {\n        hash = hash * 33 ^ str.charCodeAt(--i);\n    }\n    // JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n    // integers. Since we want the results to be always positive, convert the\n    // signed int to an unsigned by doing an unsigned bitshift.\n    return hash >>> 0;\n}\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\nvar isArray = Array.isArray;\n\n/**\n * Takes in a keySet and a note attempts to iterate over it.\n * If the value is a primitive, the key will be returned and the note will\n * be marked done\n * If the value is an object, then each value of the range will be returned\n * and when finished the note will be marked done.\n * If the value is an array, each value will be iterated over, if any of the\n * inner values are ranges, those will be iterated over.  When fully done,\n * the note will be marked done.\n *\n * @param {Object|Array|String|Number} keySet -\n * @param {Object} note - The non filled note\n * @returns {String|Number|undefined} - The current iteration value.\n * If undefined, then the keySet is empty\n * @public\n */\nmodule.exports = function iterateKeySet(keySet, note) {\n    if (note.isArray === undefined) {\n        initializeNote(keySet, note);\n    }\n\n    // Array iteration\n    if (note.isArray) {\n        var nextValue;\n\n        // Cycle through the array and pluck out the next value.\n        do {\n            if (note.loaded && note.rangeOffset > note.to) {\n                ++note.arrayOffset;\n                note.loaded = false;\n            }\n\n            var idx = note.arrayOffset,\n                length = keySet.length;\n            if (idx >= length) {\n                note.done = true;\n                break;\n            }\n\n            var el = keySet[note.arrayOffset];\n            var type = typeof el;\n\n            // Inner range iteration.\n            if (type === 'object') {\n                if (!note.loaded) {\n                    initializeRange(el, note);\n                }\n\n                // Empty to/from\n                if (note.empty) {\n                    continue;\n                }\n\n                nextValue = note.rangeOffset++;\n            }\n\n            // Primitive iteration in array.\n            else {\n                    ++note.arrayOffset;\n                    nextValue = el;\n                }\n        } while (nextValue === undefined);\n\n        return nextValue;\n    }\n\n    // Range iteration\n    else if (note.isObject) {\n            if (!note.loaded) {\n                initializeRange(keySet, note);\n            }\n            if (note.rangeOffset > note.to) {\n                note.done = true;\n                return undefined;\n            }\n\n            return note.rangeOffset++;\n        }\n\n        // Primitive value\n        else {\n                note.done = true;\n                return keySet;\n            }\n};\n\nfunction initializeRange(key, memo) {\n    var from = memo.from = key.from || 0;\n    var to = memo.to = key.to || typeof key.length === 'number' && memo.from + key.length - 1 || 0;\n    memo.rangeOffset = memo.from;\n    memo.loaded = true;\n    if (from > to) {\n        memo.empty = true;\n    }\n}\n\nfunction initializeNote(key, note) {\n    note.done = false;\n    var isObject = note.isObject = !!(key && typeof key === 'object');\n    note.isArray = isObject && isArray(key);\n    note.arrayOffset = 0;\n}\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(40);\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(43);\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\nmodule.exports = inlineJSONGraphValue;\n\n/* eslint-disable no-constant-condition */\nfunction inlineJSONGraphValue(node, path, length, seed, branch) {\n\n    var key,\n        depth = 0,\n        prev,\n        curr = seed.jsonGraph;\n\n    if (!curr) {\n        seed.jsonGraph = curr = {};\n    }\n\n    do {\n        prev = curr;\n        key = path[depth++];\n        if (depth >= length) {\n            curr = prev[key] = branch !== true ? node : prev[key] || {};\n            break;\n        }\n        curr = prev[key] || (prev[key] = {});\n    } while (true);\n\n    return curr;\n}\n/* eslint-enable */\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\nvar isArray = Array.isArray;\n\nmodule.exports = onMissing;\n\n/* eslint-disable no-constant-condition */\nfunction onMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, reportMaterialized, json, branchSelector, boxValues, onMaterialize, modelRoot) {\n\n    if (!reportMissing && !reportMaterialized) {\n        return;\n    }\n\n    var keyset,\n        restPathIndex = -1,\n        restPathCount = requestedLength - depth,\n        restPath = restPathCount && new Array(restPathCount) || undefined;\n\n    while (++restPathIndex < restPathCount) {\n        keyset = path[restPathIndex + depth];\n        if (isEmptyKeySet(keyset)) {\n            return;\n        }\n        restPath[restPathIndex] = keyset;\n    }\n\n    var index, count, mPath;\n    var lastKeyIsNull = keyset === null;\n    var isRequestedPath = reportMissing;\n    var missDepth, missTotal, missingPath, missingPaths;\n\n    if (!reportMissing) {\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } else {\n        missDepth = depth;\n        missTotal = requestedLength;\n        missingPath = requestedPath;\n        missingPaths = results.requested || (results.requested = []);\n    }\n\n    do {\n        if (restPathCount < requestedLength || !isRequestedPath) {\n            index = -1;\n            count = missDepth;\n            mPath = new Array(missTotal);\n            while (++index < count) {\n                mPath[index] = missingPath[index];\n            }\n            restPathIndex = -1;\n            while (index < missTotal) {\n                mPath[index++] = restPath[++restPathIndex];\n            }\n        }\n\n        // break after inserting both requested and optimized missing paths\n        if (isRequestedPath = !isRequestedPath) {\n            if (reportMissing) {\n                missingPaths[missingPaths.length] = mPath;\n            }\n            break;\n        }\n\n        missingPaths[missingPaths.length] = mPath || restPath;\n\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missingPaths = results.missing || (results.missing = []);\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } while (true);\n\n    if (reportMaterialized) {\n        return onMaterialize(json, mPath, missDepth, missTotal, branchSelector, boxValues, modelRoot);\n    }\n}\n/* eslint-enable */\n\nfunction isEmptyKeySet(keyset) {\n\n    // false if the keyset is a primitive\n    if ('object' !== typeof keyset) {\n        return false;\n    } else if (keyset === null) {\n        return false;\n    }\n\n    if (isArray(keyset)) {\n        // return true if the keyset is an empty array\n        return keyset.length === 0;\n    }\n\n    var rangeEnd = keyset.to,\n        from = keyset.from || 0;\n    if ('number' !== typeof rangeEnd) {\n        rangeEnd = from + (keyset.length || 0);\n    }\n\n    // false if trying to request incorrect or empty ranges\n    // e.g. { from: 10, to: 0 } or { from: 5, length: 0 }\n    return from >= rangeEnd;\n}\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(2);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar lruPromote = __webpack_require__(13);\nvar getSize = __webpack_require__(9);\nvar createHardlink = __webpack_require__(8);\nvar getBoundCacheNode = __webpack_require__(17);\nvar updateNodeAncestors = __webpack_require__(11);\nvar iterateKeySet = __webpack_require__(23);\n\n/**\n * Invalidates a list of Paths in a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathValues.\n * @param {Array.<PathValue>} paths - the PathValues to set.\n */\n\nmodule.exports = invalidatePathSets;\n\nfunction invalidatePathSets(model, paths, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n\n    if (!node) {\n        return false;\n    }\n\n    var pathIndex = -1;\n    var pathCount = paths.length;\n    var parent = node[\"\u001eƒ_parent\"] || cache;\n\n    while (++pathIndex < pathCount) {\n\n        var path = paths[pathIndex];\n\n        invalidatePathSet(path, 0, cache, parent, node, version, expired, lru, expireImmediate);\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    if (cache[\"\u001eƒ_version\"] === version) {\n        modelRoot.version = version;\n        return true;\n    }\n\n    return false;\n}\n\nfunction invalidatePathSet(path, depth, root, parent, node, version, expired, lru, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n\n    do {\n        arr = invalidateNode(root, parent, node, key, branch, false, version, expired, lru, expireImmediate);\n        var nextNode = arr[0];\n        var nextParent = arr[1];\n        if (nextNode) {\n            if (branch) {\n                invalidatePathSet(path, depth + 1, root, nextParent, nextNode, version, expired, lru, expireImmediate);\n            } else {\n                updateNodeAncestors(nextNode, getSize(nextNode), lru, version);\n            }\n        }\n        key = iterateKeySet(keySet, note);\n    } while (!note.done);\n}\n\nfunction invalidateReference(root, node, version, expired, lru, expireImmediate) {\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return arr;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[\"\u001eƒ_context\"];\n\n    if (node != null) {\n        parent = node[\"\u001eƒ_parent\"] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            arr = invalidateNode(root, parent, node, key, branch, true, version, expired, lru, expireImmediate);\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return arr;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[\"\u001eƒ_context\"] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\nfunction invalidateNode(root, parent, node, key, branch, reference, version, expired, lru, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        arr = invalidateReference(root, node, version, expired, lru, expireImmediate);\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return arr;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new Error('`null` is not allowed in branch key positions.');\n            } else if (node) {\n                key = node[\"\u001eƒ_key\"];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar lruSplice = __webpack_require__(54);\nvar isInternalKey = __webpack_require__(20);\nvar unlinkBackReferences = __webpack_require__(84);\nvar unlinkForwardReference = __webpack_require__(85);\nvar updateBackReferenceVersions = __webpack_require__(31);\n\nmodule.exports = removeNodeAndDescendants;\n\nfunction removeNodeAndDescendants(node, parent, key, lru, version) {\n    if (!(!node || typeof node !== 'object')) {\n        var type = node.$type;\n        if (type === undefined) {\n            for (var key2 in node) {\n                if (!isInternalKey(key2)) {\n                    removeNodeAndDescendants(node[key2], node, key2, lru, version);\n                }\n            }\n        } else {\n            if (type === \"ref\") {\n                unlinkForwardReference(node);\n            }\n            lruSplice(lru, node);\n        }\n        unlinkBackReferences(updateBackReferenceVersions(node, version));\n        parent[key] = node[\"\u001eƒ_parent\"] = undefined;\n        return true;\n    }\n    return false;\n}\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(3);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar createHardlink = __webpack_require__(8);\nvar getCachePosition = __webpack_require__(10);\nvar NullInPathError = __webpack_require__(3);\nvar iterateKeySet = __webpack_require__(23);\nvar mergeValueOrInsertBranch = __webpack_require__(48);\n\n/**\n * Sets a list of {@link PathValue}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the {@link PathValue}s.\n * @param {Array.<PathValue>} pathValues - the list of {@link PathValue}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setPathValues(model, pathValues, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[\"\u001eƒ_parent\"] || cache;\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathValueIndex = -1;\n    var pathValueCount = pathValues.length;\n\n    while (++pathValueIndex < pathValueCount) {\n\n        var pathValue = pathValues[pathValueIndex];\n        var path = pathValue.path;\n        var value = pathValue.value;\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathSet(value, path, 0, cache, parent, node, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, modelRoot, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    if (cache[\"\u001eƒ_version\"] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setPathSet(value, path, depth, root, parent, node, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var results = setNode(root, parent, node, key, value, branch, false, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = results[0];\n        var nextParent = results[1];\n        var nextOptimizedPath = results[2];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setPathSet(value, path, depth + 1, root, nextParent, nextNode, requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(value, root, node, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var container = node;\n        parent = root;\n\n        node = node[\"\u001eƒ_context\"];\n\n        if (node != null) {\n            parent = node[\"\u001eƒ_parent\"] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                optimizedPath.index = index;\n\n                var results = setNode(root, parent, node, key, value, branch, true, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n                node = results[0];\n                optimizedPath = results[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return results;\n                }\n                parent = results[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[\"\u001eƒ_context\"] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(root, parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        var results = setReference(value, root, node, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        optimizedPath = results[2];\n        type = node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[\"\u001eƒ_key\"];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = updateBackReferenceVersions;\n\nfunction updateBackReferenceVersions(nodeArg, version) {\n    var node = nodeArg,\n        stack = [],\n        count = 0,\n        ref,\n        i,\n        n;\n    do {\n        i = -1;\n        ref = node[\"\u001eƒ_parent\"];\n        node[\"\u001eƒ_version\"] = version;\n        n = node[\"\u001eƒ_refs_length\"] || 0;\n        do {\n            if (ref && ref[\"\u001eƒ_version\"] !== version) {\n                stack[count++] = ref;\n            }\n            if (++i < n) {\n                ref = node[\"\u001eƒ_ref\" + i];\n                continue;\n            }\n            break;\n        } while (true);\n    } while (node = stack[--count]);\n    return nodeArg;\n}\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Determined if the key passed in is an f_ internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nvar f_ = __webpack_require__(92);\nvar regexp = new RegExp('^' + f_, 'i', 'g');\n\nmodule.exports = regexp.test.bind(regexp);\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(5);\nmodule.exports = function getTimestamp(node) {\n    return isObject(node) && node.$timestamp || undefined;\n};\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\nmodule.exports = 0;\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() { return this; })();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar toPaths = __webpack_require__(39);\nvar toCollapseMap = __webpack_require__(37);\nvar toCollapseTrees = __webpack_require__(38);\n\nmodule.exports = function collapse(paths) {\n    return toPaths(toCollapseTrees(toCollapseMap(paths)));\n};\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar flatBufferToPaths = __webpack_require__(21);\n\nmodule.exports = toCollapseMap;\n\nfunction toCollapseMap(paths, collapseMap) {\n    if (!paths) {\n        return collapseMap;\n    } else if (!isArray(paths)) {\n        if (isArray(paths.$keys)) {\n            paths = flatBufferToPaths(paths);\n        }\n    }\n    return paths.reduce(function (acc, path) {\n        var len = path.length;\n        if (!acc[len]) {\n            acc[len] = [];\n        }\n        acc[len].push(path);\n        return acc;\n    }, collapseMap || {});\n}\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar toTree = __webpack_require__(65);\n\nmodule.exports = toCollapseTrees;\n\nfunction toCollapseTrees(collapseMap, collapseTrees) {\n    return Object.keys(collapseMap).reduce(function (collapseTrees, collapseKey) {\n        collapseTrees[collapseKey] = toTree(collapseMap[collapseKey], collapseTrees[collapseKey]);\n        return collapseTrees;\n    }, collapseTrees || {});\n}\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar typeOfObject = 'object';\nvar typeOfString = 'string';\nvar typeOfNumber = 'number';\nvar MAX_SAFE_INTEGER = 9007199254740991; // Number.MAX_SAFE_INTEGER in es6\nvar MAX_SAFE_INTEGER_DIGITS = 16; // String(Number.MAX_SAFE_INTEGER).length\nvar MIN_SAFE_INTEGER_DIGITS = 17; // String(Number.MIN_SAFE_INTEGER).length (including sign)\nvar abs = Math.abs;\nvar safeNumberRegEx = /^(0|(\\-?[1-9][0-9]*))$/;\nvar getHashCode = __webpack_require__(22);\nvar materializedAtom = __webpack_require__(6);\n\n/* jshint forin: false */\nmodule.exports = function toPaths(lengths) {\n    var pathmap;\n    var allPaths = [];\n    var allPathsLength = 0;\n    for (var length in lengths) {\n        if (isSafeNumber(length) && isObject(pathmap = lengths[length])) {\n            var paths = collapsePathMap(pathmap, 0, parseInt(length, 10)).sets;\n            var pathsIndex = -1;\n            var pathsCount = paths.length;\n            while (++pathsIndex < pathsCount) {\n                allPaths[allPathsLength++] = collapsePathSetIndexes(paths[pathsIndex]);\n            }\n        }\n    }\n    return allPaths;\n};\n\nfunction isObject(value) {\n    return value !== null && typeof value === typeOfObject;\n}\n\nfunction collapsePathMap(pathmap, depth, length) {\n\n    var key;\n    var subs = Object.create(null);\n    var code = '' + getHashCode('' + depth);\n\n    var codes = [];\n    var codesIndex = -1;\n    var codesCount = 0;\n\n    var pathsets = [];\n    var pathsetsCount = 0;\n\n    var subPath, subCode, subKeys, subKeysIndex, subKeysCount, subSets, subSetsIndex, subSetsCount, pathset, pathsetIndex, pathsetCount, firstSubKey, pathsetClone;\n\n    subKeys = [];\n    subKeysIndex = -1;\n\n    if (depth < length - 1) {\n\n        subKeysCount = getSortedKeys(pathmap, subKeys);\n\n        while (++subKeysIndex < subKeysCount) {\n            key = subKeys[subKeysIndex];\n            subPath = collapsePathMap(pathmap[key], depth + 1, length);\n            subCode = subPath.code;\n            if (subs[subCode]) {\n                subPath = subs[subCode];\n            } else {\n                codes[codesCount++] = subCode;\n                subPath = subs[subCode] = {\n                    keys: [],\n                    sets: subPath.sets\n                };\n            }\n            code = '' + getHashCode(code + key + subCode);\n\n            isSafeNumber(key) && subPath.keys.push(parseInt(key, 10)) || subPath.keys.push(key);\n        }\n\n        while (++codesIndex < codesCount) {\n\n            key = codes[codesIndex];\n            subPath = subs[key];\n            subKeys = subPath.keys;\n            subKeysCount = subKeys.length;\n\n            if (subKeysCount > 0) {\n\n                subSets = subPath.sets;\n                subSetsIndex = -1;\n                subSetsCount = subSets.length;\n                firstSubKey = subKeys[0];\n\n                while (++subSetsIndex < subSetsCount) {\n\n                    pathset = subSets[subSetsIndex];\n                    pathsetIndex = -1;\n                    pathsetCount = pathset.length;\n                    pathsetClone = new Array(pathsetCount + 1);\n                    pathsetClone[0] = subKeysCount > 1 && subKeys || firstSubKey;\n\n                    while (++pathsetIndex < pathsetCount) {\n                        pathsetClone[pathsetIndex + 1] = pathset[pathsetIndex];\n                    }\n\n                    pathsets[pathsetsCount++] = pathsetClone;\n                }\n            }\n        }\n    } else {\n        subKeysCount = getSortedKeys(pathmap, subKeys);\n        if (subKeysCount > 1) {\n            pathsets[pathsetsCount++] = [subKeys];\n        } else {\n            pathsets[pathsetsCount++] = subKeys;\n        }\n        while (++subKeysIndex < subKeysCount) {\n            code = '' + getHashCode(code + subKeys[subKeysIndex]);\n        }\n    }\n\n    return {\n        code: code,\n        sets: pathsets\n    };\n}\n\nfunction collapsePathSetIndexes(pathset) {\n\n    var keysetIndex = -1;\n    var keysetCount = pathset.length;\n\n    while (++keysetIndex < keysetCount) {\n        var keyset = pathset[keysetIndex];\n        if (isArray(keyset)) {\n            pathset[keysetIndex] = collapseIndex(keyset);\n        }\n    }\n\n    return pathset;\n}\n\n/**\n * Collapse range indexers, e.g. when there is a continuous\n * range in an array, turn it into an object instead:\n *\n * [1,2,3,4,5,6] => {'from':1, 'to':6}\n *\n * @private\n */\nfunction collapseIndex(keyset) {\n\n    // Do we need to dedupe an indexer keyset if they're duplicate consecutive integers?\n    // var hash = {};\n    var keyIndex = -1;\n    var keyCount = keyset.length - 1;\n    var isSparseRange = keyCount > 0;\n\n    while (++keyIndex <= keyCount) {\n\n        var key = keyset[keyIndex];\n\n        if (!isSafeNumber(key) /* || hash[key] === true*/) {\n                isSparseRange = false;\n                break;\n            }\n        // hash[key] = true;\n        // Cast number indexes to integers.\n        keyset[keyIndex] = parseInt(key, 10);\n    }\n\n    if (isSparseRange === true) {\n\n        keyset.sort(sortListAscending);\n\n        var from = keyset[0];\n        var to = keyset[keyCount];\n\n        // If we re-introduce deduped integer indexers, change this comparson to '==='.\n        if (to - from <= keyCount) {\n            return { from: from, to: to };\n        }\n    }\n\n    return keyset;\n}\n\nfunction sortListAscending(a, b) {\n    return a - b;\n}\n\n/* jshint forin: false */\nfunction getSortedKeys(map, keys, sort) {\n    var len = 0;\n    if (map === materializedAtom) {\n        keys[len++] = null;\n    } else {\n        for (var key in map) {\n            keys[len++] = key;\n        }\n        if (len > 1) {\n            keys.sort(sort);\n        }\n    }\n    return len;\n}\n\n/**\n * Return true if argument is a number or can be cast to a number which\n * roundtrips to the same string.\n * @private\n */\nfunction isSafeNumber(val) {\n    var num = val;\n    var type = typeof val;\n    if (type === typeOfString) {\n        var length = val.length;\n        // Number.MIN_SAFE_INTEGER is 17 digits including the sign.\n        // Anything longer cannot be safe.\n        if (length === 0 || length > MIN_SAFE_INTEGER_DIGITS) {\n            return false;\n        }\n        if (!safeNumberRegEx.test(val)) {\n            return false;\n        }\n        // Number.MAX_SAFE_INTEGER is 16 digits.\n        // Anything shorter must be safe.\n        if (length < MAX_SAFE_INTEGER_DIGITS) {\n            return true;\n        }\n        num = +val;\n    } else if (type !== typeOfNumber) {\n        return false;\n    }\n    // Number.isSafeInteger(num) in es6.\n    return num % 1 === 0 && abs(num) <= MAX_SAFE_INTEGER;\n}\n\n// export for testing\nmodule.exports._isSafeNumber = isSafeNumber;\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar walkPathAndBuildOutput = __webpack_require__(73);\nvar walkFlatBufferAndBuildOutput = __webpack_require__(72);\nvar getBoundCacheNode = __webpack_require__(17);\nvar InvalidModelError = __webpack_require__(90);\nvar toFlatBuffer = __webpack_require__(64);\nvar computeFlatBufferHash = __webpack_require__(62);\n\nmodule.exports = getJSON;\n\nfunction getJSON(model, paths, seed, progressive, expireImmediate) {\n\n    var node,\n        referenceContainer,\n        boundPath = model._path,\n        modelRoot = model._root,\n        cache = modelRoot.cache,\n        requestedPath,\n        requestedLength,\n        optimizedPath,\n        optimizedLength = boundPath && boundPath.length || 0;\n\n    // If the model is bound, get the cache position.\n    if (optimizedLength) {\n        node = getBoundCacheNode(model);\n        // If there was a short, then we 'throw an error' to the outside\n        // calling function which will onError the observer.\n        if (node && node.$type) {\n            return { error: new InvalidModelError(boundPath, boundPath) };\n        }\n        // We need to get the new cache position and copy the bound path.\n        optimizedPath = [];\n        for (var i = 0; i < optimizedLength; ++i) {\n            optimizedPath[i] = boundPath[i];\n        }\n        referenceContainer = model._referenceContainer;\n    } else {\n        node = cache;\n        optimizedPath = [];\n    }\n\n    requestedPath = [];\n\n    var isFlatBuffer = false,\n        json = seed && seed.json,\n        results = { data: seed },\n        boxValues = model._boxed,\n        expired = modelRoot.expired,\n        recycleJSON = model._recycleJSON,\n        hasDataSource = Boolean(model._source),\n        branchSelector = modelRoot.branchSelector,\n        materialized = seed && model._materialized,\n        treatErrorsAsValues = model._treatErrorsAsValues,\n        allowFromWhenceYouCame = model._allowFromWhenceYouCame;\n\n    var arr,\n        path,\n        pathsIndex = 0,\n        pathsCount = paths.length;\n\n    if (pathsCount > 0) {\n\n        if (recycleJSON) {\n            isFlatBuffer = true;\n            if (pathsCount > 1 || isArray(paths[0])) {\n                pathsCount = 1;\n                paths = [computeFlatBufferHash(toFlatBuffer(paths, {}))];\n            }\n        }\n\n        do {\n            path = paths[pathsIndex];\n            if (isFlatBuffer) {\n                arr = walkFlatBufferAndBuildOutput(cache, node, json, paths[0], 0, seed, results, requestedPath, optimizedPath, optimizedLength,\n                /* fromReference = */false, referenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n            } else {\n                requestedLength = path.length;\n                arr = walkPathAndBuildOutput(cache, node, json, path,\n                /* depth = */0, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength,\n                /* fromReference = */false, referenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n            }\n            json = arr[0];\n            arr[0] = undefined;\n            arr[1] = undefined;\n        } while (++pathsIndex < pathsCount);\n    }\n\n    var requested = results.requested;\n\n    results.args = isFlatBuffer && paths || requested;\n\n    if (requested && requested.length) {\n        results.relative = results.args;\n        if (optimizedLength) {\n            var boundRequested = [];\n            for (var i = 0, len = requested.length; i < len; ++i) {\n                boundRequested[i] = boundPath.concat(requested[i]);\n            }\n            results.requested = boundRequested;\n        }\n    }\n\n    if (results.hasValue) {\n        seed.json = json;\n    }\n\n    return results;\n}\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(3);\nvar promote = __webpack_require__(13);\nvar isExpired = __webpack_require__(0);\nvar createHardlink = __webpack_require__(8);\nvar CircularReferenceError = __webpack_require__(52);\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, ref, modelRoot, expireImmediate) {\n\n    promote(modelRoot, ref);\n\n    var context,\n        key,\n        type,\n        depth = 0,\n        node = root,\n        path = ref.value,\n        copy = path,\n        length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[\"\u001eƒ_context\"])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                    throw new CircularReferenceError(path);\n                }\n                // If the node we land on isn't the existing ref context,\n                // create a hard-link between the reference and the node\n                // it points to.\n                else if (node !== context) {\n                        createHardlink(ref, node);\n                    }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === \"ref\") {\n\n                promote(modelRoot, node);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n    arr[2] = ref;\n\n    return arr;\n}\n/* eslint-enable */\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar clone = __webpack_require__(7);\nvar onError = __webpack_require__(71);\n\nmodule.exports = onJSONValue;\n\nfunction onJSONValue(node, type, depth, seed, results, requestedPath, optimizedPath, optimizedLength, fromReference, boxValues, materialized, treatErrorsAsValues) {\n\n    if (\"error\" === type && !treatErrorsAsValues) {\n        return onError(node, depth, results, requestedPath, fromReference, boxValues);\n    }\n\n    results.hasValue = true;\n\n    // boxValues always clones the node\n    return !boxValues ? node.value : clone(node);\n}\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar walkPathAndBuildOutput = __webpack_require__(76);\nvar BoundJSONGraphModelError = __webpack_require__(88);\n\nmodule.exports = getJSONGraph;\n\nfunction getJSONGraph(model, paths, seed, progressive, expireImmediate) {\n\n    var node,\n        cache,\n        boundPath = model._path,\n        modelRoot = model._root,\n        requestedPath,\n        requestedLength,\n        optimizedPath,\n        optimizedLength = boundPath && boundPath.length || 0;\n\n    // If the model is bound, then get that cache position.\n    if (optimizedLength) {\n        // JSONGraph output cannot ever be bound or else it will\n        // throw an error.\n        return { error: new BoundJSONGraphModelError() };\n    } else {\n        optimizedPath = [];\n        cache = node = modelRoot.cache;\n    }\n\n    requestedPath = [];\n\n    var boxValues = model._boxed,\n        expired = modelRoot.expired,\n        materialized = model._materialized,\n        hasDataSource = Boolean(model._source),\n        treatErrorsAsValues = model._treatErrorsAsValues,\n        results = { data: seed },\n        pathsIndex = -1,\n        pathsCount = paths.length;\n\n    while (++pathsIndex < pathsCount) {\n        var path = paths[pathsIndex];\n        requestedLength = path.length;\n        walkPathAndBuildOutput(cache, node, path,\n        /* depth = */0, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength,\n        /* fromReference = */false, modelRoot, expired, expireImmediate, boxValues, materialized, hasDataSource, treatErrorsAsValues);\n    }\n\n    results.args = results.relative = results.requested;\n\n    return results;\n}\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar clone = __webpack_require__(7);\nvar FalcorJSON = __webpack_require__(2);\nvar NullInPathError = __webpack_require__(3);\nvar InvalidKeySetError = __webpack_require__(12);\nvar materializedAtom = __webpack_require__(6);\n\nmodule.exports = onMaterialize;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterialize(json, path, depth, length, branchSelector, boxValues, modelRoot) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (depth === length) {\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta;\n\n    var nextKey,\n        keyset,\n        keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd,\n        keysOrRanges,\n        keysetIndex = -1,\n        keysetLength = 0;\n\n    keyset = path[depth];\n\n    if (!json || typeofObject !== typeof json) {\n        json = {};\n        json.__proto__ = FalcorJSON.prototype;\n        json[\"\u001eƒ_meta\"] = f_meta = {};\n        f_meta[\"status\"] = 'resolved';\n        f_meta[\"version\"] = modelRoot.version;\n        f_meta[\"abs_path\"] = path.slice(0, depth);\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[\"\u001eƒ_meta\"])) {\n        json[\"\u001eƒ_meta\"] = f_meta = {};\n        f_meta[\"status\"] = 'resolved';\n        f_meta[\"version\"] = modelRoot.version;\n        f_meta[\"abs_path\"] = path.slice(0, depth);\n    } else {\n        f_meta[\"status\"] = 'resolved';\n        f_meta[\"version\"] = modelRoot.version;\n        f_meta[\"abs_path\"] = path.slice(0, depth);\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    throw new InvalidKeySetError(path, keysOrRanges);\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                keyset = keysOrRanges[keysetIndex];\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if (typeofNumber !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            // insert the materialized branch\n            json[nextKey] = onMaterialize(json[nextKey], path, nextDepth, length, branchSelector, boxValues, modelRoot);\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar isPathValue = __webpack_require__(102);\nvar isJSONEnvelope = __webpack_require__(57);\nvar isJSONGraphEnvelope = __webpack_require__(58);\n\nmodule.exports = groupCacheArguments;\n\nfunction groupCacheArguments(args) {\n\n    var groups = [];\n    var argIndex = -1;\n    var argCount = args.length;\n    var group, groupType, arg, argType;\n\n    while (++argIndex < argCount) {\n        arg = args[argIndex];\n        if (isArray(arg)) {\n            arg = { path: arg };\n            argType = 'PathValues';\n        } else if (isPathValue(arg)) {\n            argType = 'PathValues';\n        } else if (isJSONGraphEnvelope(arg)) {\n            argType = 'JSONGraphs';\n        } else if (isJSONEnvelope(arg)) {\n            argType = 'PathMaps';\n        }\n\n        if (groupType !== argType) {\n            groupType = argType;\n            groups.push(group = {\n                arguments: [],\n                inputType: argType\n            });\n        }\n\n        group.arguments.push(arg);\n    }\n\n    return groups;\n}\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function insertNode(node, parent, key, version, optimizedPath) {\n    node[\"\u001eƒ_key\"] = key;\n    node[\"\u001eƒ_parent\"] = parent;\n\n    if (version !== undefined) {\n        node[\"\u001eƒ_version\"] = version;\n    }\n    if (!node[\"\u001eƒ_abs_path\"]) {\n        node[\"\u001eƒ_abs_path\"] = optimizedPath.slice(0, optimizedPath.index).concat(key);\n    }\n\n    parent[key] = node;\n\n    return node;\n};\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(2);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar lruPromote = __webpack_require__(13);\nvar getSize = __webpack_require__(9);\nvar createHardlink = __webpack_require__(8);\nvar getBoundCacheNode = __webpack_require__(17);\nvar isInternalKey = __webpack_require__(20);\nvar updateNodeAncestors = __webpack_require__(11);\n\n/**\n * Sets a list of PathMaps into a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of @PathMapEnvelopes to set.\n */\n\nmodule.exports = invalidatePathMaps;\n\nfunction invalidatePathMaps(model, pathMapEnvelopes, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var comparator = modelRoot._comparator;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n\n    if (!node) {\n        return false;\n    }\n\n    var pathMapIndex = -1;\n    var parent = node[\"\u001eƒ_parent\"] || cache;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n\n        invalidatePathMap(pathMapEnvelope.json, 0, cache, parent, node, version, expired, lru, comparator, expireImmediate);\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    if (cache[\"\u001eƒ_version\"] === version) {\n        modelRoot.version = version;\n        return true;\n    }\n\n    return false;\n}\n\nfunction invalidatePathMap(pathMap, depth, root, parent, node, version, expired, lru, comparator, expireImmediate) {\n\n    if (!pathMap || typeof pathMap !== 'object' || pathMap.$type) {\n        return;\n    }\n\n    for (var key in pathMap) {\n        if (!isInternalKey(key)) {\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n            arr = invalidateNode(root, parent, node, key, child, branch, false, version, expired, lru, comparator, expireImmediate);\n            var nextNode = arr[0];\n            var nextParent = arr[1];\n            if (nextNode) {\n                if (branch) {\n                    invalidatePathMap(child, depth + 1, root, nextParent, nextNode, version, expired, lru, comparator, expireImmediate);\n                } else {\n                    updateNodeAncestors(nextNode, getSize(nextNode), lru, version);\n                }\n            }\n        }\n    }\n}\n\nfunction invalidateReference(value, root, node, version, expired, lru, comparator, expireImmediate) {\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return arr;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[\"\u001eƒ_context\"];\n\n    if (node != null) {\n        parent = node[\"\u001eƒ_parent\"] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            arr = invalidateNode(root, parent, node, key, value, branch, true, version, expired, lru, comparator, expireImmediate);\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return arr;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[\"\u001eƒ_context\"] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\nfunction invalidateNode(root, parent, node, key, value, branch, reference, version, expired, lru, comparator, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        arr = invalidateReference(value, root, node, version, expired, lru, comparator, expireImmediate);\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return arr;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new Error('`null` is not allowed in branch key positions.');\n            } else if (node) {\n                key = node[\"\u001eƒ_key\"];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar $now = __webpack_require__(34);\nvar getType = __webpack_require__(101);\nvar getSize = __webpack_require__(9);\nvar getTimestamp = __webpack_require__(33);\n\nvar wrapNode = __webpack_require__(51);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar insertNode = __webpack_require__(46);\nvar replaceNode = __webpack_require__(50);\nvar reconstructPath = __webpack_require__(49);\nvar updateNodeAncestors = __webpack_require__(11);\nvar removeNodeAndDescendants = __webpack_require__(29);\n\nmodule.exports = function mergeValueOrInsertBranch(parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var cType = getType(node, reference);\n\n    if (branch || reference) {\n        if (cType && isExpired(node,\n        /* expireImmediate:\n         * force true so the node is marked as\n         * expired but keep using it for the merge if it expires immediately\n         */\n        true)) {\n            expireNode(node, expired, lru);\n            cType = node.$expires === $now ? cType : 'expired';\n        }\n        if (cType && cType !== \"ref\" || !node || typeof node !== 'object') {\n            node = replaceNode(node, {}, parent, key, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    } else {\n        var message = value;\n        var isDistinct = true;\n        var mType = getType(message);\n\n        // If both the cache and message are primitives,\n        // insert the message into the cache.\n        if (!cType && !mType) {\n            isDistinct = true;\n        }\n        // Compare the current cache value with the new value. If either of\n        // them don't have a timestamp, or the message's timestamp is newer,\n        // replace the cache value with the message value. If a comparator\n        // is specified, the comparator takes precedence over timestamps.\n        else if (comparator) {\n                isDistinct = !(comparator.length < 3 ? comparator(node, message) : comparator(node, message, optimizedPath.slice(0, optimizedPath.index)));\n            } else {\n                // Comparing either Number or undefined to undefined always results in false.\n                isDistinct = getTimestamp(message) < getTimestamp(node) === false;\n            }\n\n        if (isDistinct) {\n\n            if (errorSelector && mType === \"error\") {\n                message = errorSelector(reconstructPath(requestedPath, key), message);\n            }\n\n            var sizeOffset = getSize(node) - getSize(message = wrapNode(message, mType, mType ? message.value : message));\n\n            node = replaceNode(node, message, parent, key, lru, version);\n            parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    }\n\n    return node;\n};\n\n/***/ },\n/* 49 */\n/***/ function(module, exports) {\n\n/**\n * Reconstructs the path for the current key, from currentPath (requestedPath)\n * state maintained during set/merge walk operations.\n *\n * During the walk, since the requestedPath array is updated after we attempt to\n * merge/insert nodes during a walk (it reflects the inserted node's parent branch)\n * we need to reconstitute a path from it.\n *\n * @param  {Array} currentPath The current requestedPath state, during the walk\n * @param  {String} key        The current key value, during the walk\n * @return {Array} A new array, with the path which represents the node we're about\n * to insert\n */\nmodule.exports = function reconstructPath(currentPath, key) {\n\n  var path = currentPath.slice(0, currentPath.depth);\n  path[path.length] = key;\n\n  return path;\n};\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar transferBackReferences = __webpack_require__(83);\nvar removeNodeAndDescendants = __webpack_require__(29);\nvar updateBackReferenceVersions = __webpack_require__(31);\n\nmodule.exports = function replaceNode(node, replacement, parent, key, lru, version) {\n    if (node === replacement) {\n        return node;\n    } else if (!(!node || typeof node !== 'object')) {\n        transferBackReferences(node, replacement);\n        removeNodeAndDescendants(node, parent, key, lru);\n        updateBackReferenceVersions(replacement, version);\n    }\n\n    parent[key] = replacement;\n    return replacement;\n};\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar now = __webpack_require__(59);\nvar clone = __webpack_require__(99);\nvar getSize = __webpack_require__(9);\nvar getExpires = __webpack_require__(100);\nvar expiresNow = __webpack_require__(34);\n\nvar atomSize = 50;\n\nmodule.exports = function wrapNode(nodeArg, typeArg, value) {\n\n    var size = 0;\n    var node = nodeArg;\n    var type = typeArg;\n\n    if (type) {\n        var modelCreated = node[\"\u001eƒ_wrapped_value\"];\n        node = clone(node);\n        size = getSize(node);\n        node.$type = type;\n        node[\"\u001eƒ_prev\"] = undefined;\n        node[\"\u001eƒ_next\"] = undefined;\n        node[\"\u001eƒ_wrapped_value\"] = modelCreated || false;\n    } else {\n        node = { $type: \"atom\", value: value };\n        node[\"\u001eƒ_prev\"] = undefined;\n        node[\"\u001eƒ_next\"] = undefined;\n        node[\"\u001eƒ_wrapped_value\"] = true;\n    }\n\n    if (value == null) {\n        size = atomSize + 1;\n    } else if (size == null || size <= 0) {\n        switch (typeof value) {\n            case 'object':\n                if (isArray(value)) {\n                    size = atomSize + value.length;\n                } else {\n                    size = atomSize + 1;\n                }\n                break;\n            case 'string':\n                size = atomSize + value.length;\n                break;\n            default:\n                size = atomSize + 1;\n                break;\n        }\n    }\n\n    var expires = getExpires(node);\n\n    if (typeof expires === 'number' && expires < expiresNow) {\n        node.$expires = now() + expires * -1;\n    }\n\n    node.$size = size;\n\n    return node;\n};\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\n\nmodule.exports = createErrorClass('CircularReferenceError', function (referencePath) {\n    this.message = 'Encountered circular reference ' + JSON.stringify(referencePath);\n});\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\nvar MESSAGE = 'An exception was thrown when making a request';\n\n/**\n * InvalidSourceError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidSourceError', function (error) {\n  this.message = MESSAGE + ':\\n\\t' + error;\n});\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function lruSplice(root, object) {\n\n    // Its in the cache.  Splice out.\n    var prev = object[\"\u001eƒ_prev\"];\n    var next = object[\"\u001eƒ_next\"];\n    if (next) {\n        next[\"\u001eƒ_prev\"] = prev;\n    }\n    if (prev) {\n        prev[\"\u001eƒ_next\"] = next;\n    }\n    object[\"\u001eƒ_prev\"] = object[\"\u001eƒ_next\"] = undefined;\n\n    if (object === root[\"\u001eƒ_head\"]) {\n        root[\"\u001eƒ_head\"] = next;\n    }\n    if (object === root[\"\u001eƒ_tail\"]) {\n        root[\"\u001eƒ_tail\"] = prev;\n    }\n};\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var Subscriber = __webpack_require__(14);\nvar Subscription = __webpack_require__(15);\nvar $$observable = __webpack_require__(103).default;\n\nmodule.exports = Source;\n\nfunction Source(subscribe) {\n    if (!subscribe) {\n        return;\n    }\n    switch (typeof subscribe) {\n        case 'object':\n            this.source = subscribe;\n            break;\n        case 'function':\n            this.source = { subscribe: subscribe };\n            break;\n    }\n}\n\nSource.prototype[$$observable] = function () {\n    return this;\n};\n\nSource.prototype.operator = function (destination) {\n    return this.subscribe(destination);\n};\n\n// Unused\n// Source.prototype.lift = function(operator, source) {\n//     source = new Source(source || this);\n//     source.operator = operator;\n//     source._promise = this._promise;\n//     return source;\n// }\n\nSource.prototype.subscribe = function (destination, x, y) {\n    return new Subscription([this.operator.call(this.source, !(destination instanceof Subscriber) ? new Subscriber(destination, x, y) : destination)]);\n};\n\nSource.prototype.then = function then(onNext, onError) {\n    /* global Promise */\n    var source = this;\n    if (!this._promise) {\n        this._promise = new global['Promise'](function (resolve, reject) {\n            var values = [],\n                rejected = false;\n            source.subscribe({\n                next: function (value) {\n                    values[values.length] = value;\n                },\n                error: function (errors) {\n                    (rejected = true) && reject(errors);\n                },\n                complete: function () {\n                    !rejected && resolve(values.length <= 1 ? values[0] : values);\n                }\n            });\n        });\n    }\n    return this._promise.then(onNext, onError);\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(35)))\n\n/***/ },\n/* 56 */\n/***/ function(module, exports) {\n\nvar empty = {\n    dispose: function () {},\n    unsubscribe: function () {}\n};\n\nfunction ImmediateScheduler() {}\n\nImmediateScheduler.prototype.schedule = function schedule(action) {\n    action();\n    return empty;\n};\n\nmodule.exports = ImmediateScheduler;\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(5);\n\nmodule.exports = function isJSONEnvelope(envelope) {\n    return isObject(envelope) && 'json' in envelope;\n};\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar isObject = __webpack_require__(5);\n\nmodule.exports = function isJSONGraphEnvelope(envelope) {\n    return isObject(envelope) && isArray(envelope.paths) && (isObject(envelope.jsonGraph) || isObject(envelope.jsong) || isObject(envelope.json) || isObject(envelope.values) || isObject(envelope.value));\n};\n\n/***/ },\n/* 59 */\n/***/ function(module, exports) {\n\nmodule.exports = Date.now;\n\n/***/ },\n/* 60 */\n/***/ function(module, exports) {\n\nmodule.exports = 1;\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Model = __webpack_require__(66);\nvar FalcorJSON = __webpack_require__(2);\n\nfunction falcor(opts) {\n    if (!(this instanceof Model)) {\n        return new Model(opts);\n    }\n    Model.call(this, opts);\n}\n\nfalcor.prototype = Object.create(Model.prototype);\n\nfalcor['Model'] = Model;\nfalcor['FalcorJSON'] = FalcorJSON;\nfalcor['toProps'] = FalcorJSON.prototype.toProps;\n\nmodule.exports = falcor;\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar getHashCode = __webpack_require__(22);\n\nmodule.exports = computeFlatBufferHash;\n\nfunction computeFlatBufferHash(seed) {\n\n    if (seed === undefined) {\n        return undefined;\n    }\n\n    var code = '';\n    var keys = seed['$keys'];\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    while (++keysIndex < keysLength) {\n\n        var key = keys[keysIndex];\n\n        if (key === null) {\n            code = '' + getHashCode('' + code + 'null');\n            continue;\n        } else if (typeof key === 'object') {\n            key = '[' + key.from + '..' + (key.from + key.length - 1) + ']';\n        }\n\n        var next = computeFlatBufferHash(seed[keysIndex]);\n        if (next === undefined) {\n            code = '' + getHashCode('' + code + key);\n        } else {\n            code = '' + getHashCode('' + code + key + next['$code']);\n        }\n    }\n\n    seed['$code'] = code;\n\n    return seed;\n}\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar materializedAtom = __webpack_require__(6);\n\nmodule.exports = hasIntersection;\n\n/**\n * Tests to see if the intersection should be stripped from the\n * total paths.  The only way this happens currently is if the entirety\n * of the path is contained in the tree.\n * @private\n */\n\nfunction hasIntersection(tree, path, depth, length) {\n\n    if (depth === length) {\n        return true;\n    }\n\n    var intersects = true;\n    var keyset,\n        keysetIndex = -1,\n        keysetLength = 0;\n    var next,\n        nextKey,\n        nextDepth = depth + 1,\n        keyIsRange,\n        rangeEnd,\n        keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return tree === materializedAtom;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    break iteratingKeyset;\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                keyset = keysOrRanges[keysetIndex];\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if ('number' !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        do {\n            if (nextDepth === length) {\n                if (tree[nextKey] !== null) {\n                    return false;\n                }\n            } else {\n                next = tree[nextKey];\n                if (next === null || next === undefined) {\n                    return false;\n                } else if (hasIntersection(next, path, nextDepth, length) === false) {\n                    return false;\n                }\n            }\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return true;\n}\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar nullBuffer = { '$keys': [null], '$keysMap': { 'null': 0 } };\nvar flatBufferToPaths = __webpack_require__(21);\n\nmodule.exports = toFlatBuffer;\n\nfunction toFlatBuffer(paths, seed) {\n    return paths.reduce(function (seed, path) {\n        if (isArray(path)) {\n            return pathToFlatBuffer(seed, path, 0, path.length);\n        } else if (isArray(path.$keys)) {\n            return toFlatBuffer(flatBufferToPaths(path), seed);\n        }\n        return seed;\n    }, seed || {});\n}\n\nfunction pathToFlatBuffer(seed, path, depth, length) {\n\n    if (depth === length) {\n        return undefined;\n    }\n\n    seed = seed || {};\n    var keys = seed['$keys'] || (seed['$keys'] = []);\n    var keysMap = seed['$keysMap'] || (seed['$keysMap'] = {});\n    var keysIndex = -1;\n\n    var keyset,\n        keysetIndex = -1,\n        keysetLength = 0;\n    var node,\n        next,\n        nextKey,\n        nextDepth = depth + 1,\n        rangeEnd,\n        keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return nullBuffer;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            if ('undefined' === typeof (keysIndex = keysMap[nextKey])) {\n                keysIndex = keys.length;\n            }\n            keys[keysIndex] = nextKey;\n            keysMap[nextKey] = keysIndex;\n            next = pathToFlatBuffer(seed[keysIndex], path, nextDepth, length);\n            if (next !== undefined) {\n                seed[keysIndex] = next;\n            }\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    break iteratingKeyset;\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                keyset = keysOrRanges[keysetIndex];\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if ('number' !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyset = { from: nextKey, length: rangeEnd - nextKey + 1 };\n                    nextKey = '[' + nextKey + '..' + rangeEnd + ']';\n                    if ('undefined' === typeof (keysIndex = keysMap[nextKey])) {\n                        keysIndex = keys.length;\n                    }\n                    keys[keysIndex] = keyset;\n                    keysMap[nextKey] = keysIndex;\n                    next = pathToFlatBuffer(seed[keysIndex], path, nextDepth, length);\n                    if (next !== undefined) {\n                        seed[keysIndex] = next;\n                    }\n                }\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return seed;\n}\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar materializedAtom = __webpack_require__(6);\n\nmodule.exports = toTree;\n\n/**\n * @param {Array} paths -\n * @returns {Object} -\n */\n\nfunction toTree(paths, seed) {\n    return paths.reduce(function (seed, path) {\n        return pathToTree(seed, path, 0, path.length, null);\n    }, seed || {});\n};\n\nfunction pathToTree(seed, path, depth, length, value) {\n\n    if (depth === length) {\n        return true;\n    }\n\n    seed = seed || {};\n\n    var keyset,\n        keysetIndex = -1,\n        keysetLength = 0;\n    var node,\n        next,\n        nextKey,\n        nextDepth = depth + 1,\n        keyIsRange,\n        rangeEnd,\n        keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return materializedAtom;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    break iteratingKeyset;\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                keyset = keysOrRanges[keysetIndex];\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if ('number' !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        do {\n            if (nextDepth === length) {\n                seed[nextKey] = value;\n            } else {\n                node = seed[nextKey];\n                next = pathToTree(node, path, nextDepth, length, value);\n                if (!next) {\n                    seed[nextKey] = value;\n                } else if (!node) {\n                    seed[nextKey] = next;\n                }\n            }\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return seed;\n}\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Call = __webpack_require__(94);\nvar ModelRoot = __webpack_require__(68);\nvar FalcorJSON = __webpack_require__(2);\nvar ModelDataSourceAdapter = __webpack_require__(67);\nvar TimeoutScheduler = __webpack_require__(98);\nvar ImmediateScheduler = __webpack_require__(56);\nvar collapse = __webpack_require__(36);\n\nvar getSize = __webpack_require__(9);\nvar isObject = __webpack_require__(5);\nvar isJSONEnvelope = __webpack_require__(57);\nvar getCachePosition = __webpack_require__(10);\nvar isJSONGraphEnvelope = __webpack_require__(58);\n\nvar setCache = __webpack_require__(19);\nvar setJSONGraphs = __webpack_require__(18);\n\nvar getJSON = __webpack_require__(24);\nvar getCache = __webpack_require__(78);\nvar getJSONGraph = __webpack_require__(25);\n\nmodule.exports = Model;\n\n/**\n * This callback is invoked when the Model's cache is changed.\n * @callback Model~onChange\n */\n\n/**\n* This function is invoked on every JSONGraph Error retrieved from the DataSource. This function allows Error objects to be transformed before being stored in the Model's cache.\n* @callback Model~errorSelector\n* @param {Object} jsonGraphError - the JSONGraph Error object to transform before it is stored in the Model's cache.\n* @returns {Object} the JSONGraph Error object to store in the Model cache.\n*/\n\n/**\n* This function is invoked every time a value in the Model cache is about to be replaced with a new value. If the function returns true, the existing value is replaced with a new value and the version flag on all of the value's ancestors in the tree are incremented.\n* @callback Model~comparator\n* @param {Object} existingValue - the current value in the Model cache.\n* @param {Object} newValue - the value about to be set into the Model cache.\n* @returns {Boolean} the Boolean value indicating whether the new value and the existing value are equal.\n*/\n\n/**\n * A Model object is used to execute commands against a {@link JSONGraph} object. {@link Model}s can work with a local JSONGraph cache, or it can work with a remote {@link JSONGraph} object through a {@link DataSource}.\n * @constructor\n * @param {?Object} options - a set of options to customize behavior\n * @param {?DataSource} options.source - a data source to retrieve and manage the {@link JSONGraph}\n * @param {?JSONGraph} options.cache - initial state of the {@link JSONGraph}\n * @param {?number} options.maxSize - the maximum size of the cache. This value roughly correlates to item count (where itemCount = maxSize / 50). Each item by default is given a metadata `$size` of 50 (or its length when it's an array or string). You can get better control of falcor's memory usage by tweaking `$size`\n * @param {?number} options.collectRatio - the ratio of the maximum size to collect when the maxSize is exceeded\n * @param {?Model~errorSelector} options.errorSelector - a function used to translate errors before they are returned\n * @param {?Model~onChange} options.onChange - a function called whenever the Model's cache is changed\n * @param {?Model~comparator} options.comparator - a function called whenever a value in the Model's cache is about to be replaced with a new value.\n */\nfunction Model(opts) {\n\n    var options = opts || {};\n\n    this._node = options._node;\n    this._path = options._path || [];\n    this._source = options.source || options._source;\n    this._root = options._root || new ModelRoot(options, this);\n    this._recycleJSON = options.recycleJSON === true || options._recycleJSON;\n    this._scheduler = options.scheduler || options._scheduler || new ImmediateScheduler();\n\n    if (options._seed) {\n        this._recycleJSON = true;\n        this._seed = options._seed;\n        this._treatErrorsAsValues = true;\n    } else if (this._recycleJSON) {\n        this._treatErrorsAsValues = true;\n        this._seed = {};\n        this._seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    this._boxed = options.boxed === true || options._boxed || false;\n    this._materialized = options.materialized === true || options._materialized || false;\n    this._treatErrorsAsValues = options.treatErrorsAsValues === true || options._treatErrorsAsValues || false;\n    this._allowFromWhenceYouCame = options.allowFromWhenceYouCame === true || options._allowFromWhenceYouCame || false;\n\n    if (options.cache) {\n        this.setCache(options.cache);\n    }\n}\n\nModel.prototype.constructor = Model;\n\n/**\n * The get method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model}. The get method loads each value into a JSON object and returns in a ModelResponse.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - the requested data as JSON\n */\nModel.prototype.get = function get() {\n    var seed = this._seed;\n    if (!seed) {\n        seed = {};\n        seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n    }\n\n    return new Call('get', this, args)._toJSON(seed, []);\n};\n\n/**\n * Sets the value at one or more places in the JSONGraph model. The set method accepts one or more {@link PathValue}s, each of which is a combination of a location in the document and the value to place there.  In addition to accepting  {@link PathValue}s, the set method also returns the values after the set operation is complete.\n * @function\n * @return {ModelResponse.<JSONEnvelope>} - an {@link Observable} stream containing the values in the JSONGraph model after the set was attempted\n */\nModel.prototype.set = function set() {\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n    }\n\n    return new Call('set', this, args)._toJSON(seed, []);\n};\n\n/**\n * The preload method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model} and loads them into the Model cache.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - a ModelResponse that completes when the data has been loaded into the cache.\n */\nModel.prototype.preload = function preload() {\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n    }\n\n    return new Call('get', this, args)._toJSON(null, []);\n};\n\n/**\n * Invokes a function in the JSON Graph.\n * @function\n * @param {Path} functionPath - the path to the function to invoke\n * @param {Array.<Object>} args - the arguments to pass to the function\n * @param {Array.<PathSet>} refPaths - the paths to retrieve from the JSON Graph References in the message returned from the function\n * @param {Array.<PathSet>} thisPaths - the paths to retrieve from function's this object after successful function execution\n * @return {ModelResponse.<JSONEnvelope> - a JSONEnvelope contains the values returned from the function\n */\n\nModel.prototype.call = function call() {\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n\n    for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n    }\n\n    return new Call('call', this, args)._toJSON(seed, []);\n};\n\n/**\n * The invalidate method synchronously removes several {@link Path}s or {@link PathSet}s from a {@link Model} cache.\n * @function\n * @param {...PathSet} path - the  paths to remove from the {@link Model}'s cache.\n */\nModel.prototype.invalidate = function invalidate() {\n    for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n    }\n\n    return new Call('invalidate', this, args)._toJSON(null, null).then();\n};\n\n/**\n * Returns a new {@link Model} bound to a location within the {@link\n * JSONGraph}. The bound location is never a {@link Reference}: any {@link\n * Reference}s encountered while resolving the bound {@link Path} are always\n * replaced with the {@link Reference}s target value. For subsequent operations\n * on the {@link Model}, all paths will be evaluated relative to the bound\n * path. Deref allows you to:\n * - Expose only a fragment of the {@link JSONGraph} to components, rather than\n *   the entire graph\n * - Hide the location of a {@link JSONGraph} fragment from components\n * - Optimize for executing multiple operations and path looksup at/below the\n *   same location in the {@link JSONGraph}\n * @method\n * @param {Object} responseObject - an object previously retrieved from the\n * Model\n * @return {Model} - the dereferenced {@link Model}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.deref = __webpack_require__(87);\n\n/**\n * A dereferenced model can become invalid when the reference from which it was\n * built has been removed/collected/expired/etc etc.  To fix the issue, a from\n * the parent request should be made (no parent, then from the root) for a valid\n * path and re-dereference performed to update what the model is bound too.\n *\n * @method\n * @private\n * @return {Boolean} - If the currently deref'd model is still considered a\n * valid deref.\n */\nModel.prototype._hasValidParentReference = __webpack_require__(86);\n\n/**\n * Get data for a single {@link Path}.\n * @param {Path} path - the path to retrieve\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     getValue('user.name').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.getValue = function getValue(path) {\n    return new Call('get', this, [path])._toJSON({}, []).lift(function (subscriber) {\n        return this.subscribe({\n            onNext: function (data) {\n                var depth = -1;\n                var x = data.json;\n                var length = path.length;\n                while (x && !x.$type && ++depth < length) {\n                    x = x[path[depth]];\n                }\n                subscriber.onNext(x);\n            },\n            onError: subscriber.onError.bind(subscriber),\n            onCompleted: subscriber.onCompleted.bind(subscriber)\n        });\n    });\n};\n\n/**\n * Set value for a single {@link Path}.\n * @param {Path} path - the path to set\n * @param {Object} value - the value to set\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     setValue('user.name', 'Jim').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.setValue = function setValue(path, value) {\n    path = arguments.length === 1 ? path.path : path;\n    value = arguments.length === 1 ? path : { path: path, value: value };\n    return new Call('set', this, [value])._toJSON({}, []).lift(function (subscriber) {\n        return this.subscribe({\n            onNext: function (data) {\n                var depth = -1;\n                var x = data.json;\n                var length = path.length;\n                while (x && !x.$type && ++depth < length) {\n                    x = x[path[depth]];\n                }\n                subscriber.onNext(x);\n            },\n            onError: subscriber.onError.bind(subscriber),\n            onCompleted: subscriber.onCompleted.bind(subscriber)\n        });\n    });\n};\n\n/**\n * Set the local cache to a {@link JSONGraph} fragment. This method can be a useful way of mocking a remote document, or restoring the local cache from a previously stored state.\n * @param {JSONGraph} jsonGraph - the {@link JSONGraph} fragment to use as the local cache\n */\nModel.prototype.setCache = function modelSetCache(cacheOrJSONGraphEnvelope) {\n\n    var modelRoot = this._root;\n    var cache = modelRoot.cache;\n\n    if (cacheOrJSONGraphEnvelope !== cache) {\n\n        var options = {\n            _path: [],\n            _boxed: false,\n            _root: modelRoot,\n            _materialized: false,\n            _treatErrorsAsValues: false\n        };\n\n        modelRoot.cache = this._node = {};\n\n        if (typeof cache !== 'undefined') {\n            modelRoot.expired = [];\n            modelRoot[\"\u001eƒ_head\"] = undefined;\n            modelRoot[\"\u001eƒ_tail\"] = undefined;\n            if (this._recycleJSON) {\n                this._seed = {};\n                this._seed.__proto__ = FalcorJSON.prototype;\n            }\n        }\n\n        var results, rootOnChangeHandler;\n        if (isJSONGraphEnvelope(cacheOrJSONGraphEnvelope)) {\n            results = setJSONGraphs(options, [cacheOrJSONGraphEnvelope]);\n        } else if (isJSONEnvelope(cacheOrJSONGraphEnvelope)) {\n            results = setCache(options, [cacheOrJSONGraphEnvelope]);\n        } else if (isObject(cacheOrJSONGraphEnvelope)) {\n            results = setCache(options, [{ json: cacheOrJSONGraphEnvelope }]);\n        }\n\n        if (results) {\n            // performs promotion without producing output.\n            if (results[0].length) {\n                getJSON(options, results[0], null, false, false);\n            }\n            if (results[2] && (rootOnChangeHandler = modelRoot.onChange)) {\n                rootOnChangeHandler();\n            }\n        }\n    } else if (typeof cache === 'undefined') {\n        this._root.cache = {};\n    }\n    return this;\n};\n\n/**\n * Get the local {@link JSONGraph} cache. This method can be a useful to store the state of the cache.\n * @param {...Array.<PathSet>} [pathSets] - The path(s) to retrieve. If no paths are specified, the entire {@link JSONGraph} is returned.\n * @return {JSONGraph} all of the {@link JSONGraph} data in the {@link Model} cache.\n * @example\n // Storing the boxshot of the first 10 titles in the first 10 genreLists to local storage.\n localStorage.setItem('cache', JSON.stringify(model.getCache('genreLists[0...10][0...10].boxshot')));\n */\nModel.prototype.getCache = function _getCache() {\n\n    var paths = Array.prototype.slice.call(arguments, 0);\n\n    if (paths.length === 0) {\n        return getCache(this._root.cache);\n    }\n\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n\n    var env = getJSONGraph({\n        _path: [],\n        _root: this._root,\n        _boxed: this._boxed,\n        _materialized: this._materialized,\n        _treatErrorsAsValues: this._treatErrorsAsValues\n    }, paths, seed).data;\n\n    env.paths = collapse(paths);\n\n    return env;\n};\n\n/**\n * Retrieves a number which is incremented every single time a value is changed underneath the Model or the object at an optionally-provided Path beneath the Model.\n * @param {Path?} path - a path at which to retrieve the version number\n * @return {Number} a version number which changes whenever a value is changed underneath the Model or provided Path\n */\nModel.prototype.getVersion = function getVersion(path) {\n    path = path || [];\n    if (Array.isArray(path) === false) {\n        throw new Error('Model#getVersion must be called with an Array path.');\n    }\n    if (this._path.length) {\n        path = this._path.concat(path);\n    }\n    return this._getVersion(this, path);\n};\n\n/* eslint-disable guard-for-in */\nModel.prototype._clone = function cloneModel(opts) {\n    var clone = new Model(this);\n    if (opts) {\n        for (var key in opts) {\n            var value = opts[key];\n            if (value === 'delete') {\n                delete clone[key];\n            } else if (key === '_path') {\n                clone[key] = value;\n                if (false === opts.hasOwnProperty('_node')) {\n                    delete clone['_node'];\n                }\n            } else {\n                clone[key] = value;\n            }\n        }\n    }\n    if (clone._path.length > 0) {\n        clone.setCache = void 0;\n    }\n    return clone;\n};\n/* eslint-enable */\n\n/**\n * Returns a clone of the {@link Model} that enables batching. Within the configured time period, paths for get operations are collected and sent to the {@link DataSource} in a batch. Batching can be more efficient if the {@link DataSource} access the network, potentially reducing the number of HTTP requests to the server.\n * @param {?Scheduler|number} schedulerOrDelay - Either a {@link Scheduler} that determines when to send a batch to the {@link DataSource}, or the number in milliseconds to collect a batch before sending to the {@link DataSource}. If this parameter is omitted, then batch collection ends at the end of the next tick.\n * @return {Model} a Model which schedules a batch of get requests to the DataSource.\n */\nModel.prototype.batch = function batch(schedulerOrDelay) {\n\n    var scheduler;\n\n    if (typeof schedulerOrDelay === 'number') {\n        scheduler = new TimeoutScheduler(Math.round(Math.abs(schedulerOrDelay)));\n    } else if (!schedulerOrDelay) {\n        scheduler = new TimeoutScheduler(1);\n    } else if (typeof schedulerOrDelay.schedule === 'function') {\n        scheduler = schedulerOrDelay;\n    } else if (typeof schedulerOrDelay === 'function') {\n        scheduler = { scheudle: schedulerOrDelay };\n    }\n\n    return this._clone({ _scheduler: scheduler });\n};\n\n/**\n * Returns a clone of the {@link Model} that disables batching. This is the default mode. Each get operation will be executed on the {@link DataSource} separately.\n * @name unbatch\n * @memberof Model.prototype\n * @function\n * @return {Model} a {@link Model} that batches requests of the same type and sends them to the data source together\n */\nModel.prototype.unbatch = function unbatch() {\n    return this._clone({ _scheduler: new ImmediateScheduler() });\n};\n\n/**\n * Returns a clone of the {@link Model} that treats errors as values. Errors will be reported in the same callback used to report data. Errors will appear as objects in responses, rather than being sent to the {@link Observable~onErrorCallback} callback of the {@link ModelResponse}.\n * @return {Model}\n */\nModel.prototype.treatErrorsAsValues = function treatErrorsAsValues() {\n    return this._clone({ _treatErrorsAsValues: true });\n};\n\n/**\n * Adapts a Model to the {@link DataSource} interface.\n * @return {DataSource}\n * @example\nvar model =\n    new falcor.Model({\n        cache: {\n            user: {\n                name: 'Steve',\n                surname: 'McGuire'\n            }\n        }\n    }),\n    proxyModel = new falcor.Model({ source: model.asDataSource() });\n\n// Prints 'Steve'\nproxyModel.getValue('user.name').\n    then(function(name) {\n        console.log(name);\n    });\n */\nModel.prototype.asDataSource = function asDataSource() {\n    return new ModelDataSourceAdapter(this);\n};\n\nModel.prototype._materialize = function materialize() {\n    return this._clone({\n        _materialized: true\n    });\n};\n\nModel.prototype._dematerialize = function dematerialize() {\n    return this._clone({\n        _materialized: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that boxes values returning the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the value inside it. This allows any metadata attached to the wrapper to be inspected.\n * @return {Model}\n */\nModel.prototype.boxValues = function boxValues() {\n    return this._clone({\n        _boxed: true\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that unboxes values, returning the value inside of the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the wrapper itself. This is the default mode.\n * @return {Model}\n */\nModel.prototype.unboxValues = function unboxValues() {\n    return this._clone({\n        _boxed: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that only uses the local {@link JSONGraph} and never uses a {@link DataSource} to retrieve missing paths.\n * @return {Model}\n */\nModel.prototype.withoutDataSource = function withoutDataSource() {\n    return this._clone({\n        _source: 'delete'\n    });\n};\n\n/* implement inspect method for node's inspect utility */\nModel.prototype.inspect = function inspect() {\n    return '{ v: ' + this.getVersion() + ' p: [' + this._path.join(', ') + '] }';\n};\n\nModel.prototype.toJSON = function toJSON() {\n    return {\n        $type: 'ref',\n        value: this.getPath()\n    };\n};\n\n/**\n * Returns the {@link Path} to the object within the JSON Graph that this Model references.\n * @return {Path}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.getPath = function getPath() {\n    return this._path.slice(0);\n};\n\n/**\n * This one is actually private.  I would not use this without talking to\n * jhusain, sdesai, or michaelbpaulson (github).\n * @private\n */\nModel.prototype._fromWhenceYouCame = function fromWhenceYouCame(allow) {\n    return this._clone({\n        _allowFromWhenceYouCame: allow === undefined ? true : allow\n    });\n};\n\nModel.prototype._optimizePath = function _optimizePath(path) {\n    var node = getCachePosition(this._root.cache, path);\n    var abs_path = node && node[\"\u001eƒ_abs_path\"] || [];\n    return abs_path.slice(0);\n};\n\nModel.prototype._getVersion = __webpack_require__(79);\nModel.prototype._getPathValuesAsPathMap = getJSON;\nModel.prototype._getPathValuesAsJSONG = getJSONGraph;\n\nModel.prototype._setPathValues = __webpack_require__(30);\nModel.prototype._setPathMaps = __webpack_require__(19);\nModel.prototype._setJSONGs = __webpack_require__(18);\nModel.prototype._setCache = __webpack_require__(19);\n\nModel.prototype._invalidatePathValues = __webpack_require__(28);\nModel.prototype._invalidatePathMaps = __webpack_require__(47);\n\n/***/ },\n/* 67 */\n/***/ function(module, exports) {\n\nfunction ModelDataSourceAdapter(model) {\n    this._model = model\n    // .boxValues()\n    ._materialize().treatErrorsAsValues();\n}\n\nModelDataSourceAdapter.prototype.get = function get(pathSets) {\n    return this._model.get.apply(this._model, pathSets)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.set = function set(jsongResponse) {\n    return this._model.set(jsongResponse)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.call = function call(path, args, suffixes, paths) {\n    return this._model.call.apply(this._model, [path, args, suffixes].concat(paths))._toJSONG();\n};\n\nmodule.exports = ModelDataSourceAdapter;\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar functionTypeof = 'function';\nvar Requests = __webpack_require__(95);\nvar getTimestamp = __webpack_require__(33);\n\nfunction ModelRoot(o, model) {\n\n    var options = o || {};\n\n    this.cache = {};\n    this.version = -1;\n    this.syncRefCount = 0;\n    this.maxRetryCount = 10;\n    this.topLevelModel = model;\n    this.requests = new Requests(this);\n    this.expired = options.expired || [];\n\n    this.collectRatio = 0.75;\n    this.maxSize = Math.pow(2, 53) - 1;\n\n    if (typeof options.collectRatio === 'number') {\n        this.collectRatio = options.collectRatio;\n    }\n\n    if (typeof options.maxSize === 'number') {\n        this.maxSize = options.maxSize;\n    }\n\n    if (typeof options.comparator === functionTypeof) {\n        this.comparator = options.comparator;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.errorSelector === functionTypeof) {\n        this.errorSelector = options.errorSelector;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.onChange === functionTypeof) {\n        this.onChange = options.onChange;\n    }\n\n    if (typeof options.onChangesCompleted === functionTypeof) {\n        this.onChangesCompleted = options.onChangesCompleted;\n    }\n}\n\nfunction defaultCompare(node, message) {\n    var cType = node && node.$type;\n    var mType = message && message.$type;\n    if (cType) {\n        // If the cache has a type, but the message is a primitive,\n        // the message might be the primitive response from the datasource.\n        // If so, return true, so we don't update the back-reference versions.\n        if (!mType) {\n            return node.value === message;\n        }\n        // If the message is older than the cache node, then isDistinct = false\n        else if (getTimestamp(message) < getTimestamp(node) === true) {\n                return true; // isDistinct = false\n            }\n        // Otherwise they are the same if all the following fields are the same.\n        return !(cType !== mType || node.value !== message.value || node.$expires !== message.$expires);\n    }\n    // If cache doesn't have a type but the message\n    // does, they must be different.\n    else if (mType) {\n            return false;\n        }\n    return node === message;\n}\n\nModelRoot.comparator = ModelRoot.prototype.comparator = defaultCompare;\n\nmodule.exports = ModelRoot;\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar getJSON = __webpack_require__(24);\nvar getJSONGraph = __webpack_require__(25);\n\nmodule.exports = { json: json, jsonGraph: jsonGraph };\n\nfunction json(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue = getJSON(model, thisPaths, data, progressive, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [path, args, suffixes, thisPaths]\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed,\n            _materialized: model._materialized,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, thisPaths, data, true, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [path, args, suffixes, thisPaths]\n    };\n}\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n    json: __webpack_require__(40),\n    jsonGraph: __webpack_require__(43)\n};\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar clone = __webpack_require__(7);\n\nmodule.exports = onError;\n\nfunction onError(node, depth, results, requestedPath, fromReference, boxValues) {\n\n    var index = -1;\n    var length = depth + !!fromReference; // depth + 1 if fromReference === true\n    var errorPath = new Array(length);\n    var errorValue = !boxValues ? node.value : clone(node);\n\n    while (++index < length) {\n        errorPath[index] = requestedPath[index];\n    }\n\n    (results.errors || (results.errors = [])).push({\n        path: errorPath,\n        value: errorValue\n    });\n}\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(2);\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar onValue = __webpack_require__(42);\nvar FalcorJSON = __webpack_require__(2);\nvar isExpired = __webpack_require__(0);\nvar onValueType = __webpack_require__(16);\nvar originalOnMissing = __webpack_require__(27);\nvar getReferenceTarget = __webpack_require__(41);\nvar onMaterialize = __webpack_require__(77);\nvar NullInPathError = __webpack_require__(3);\nvar InvalidKeySetError = __webpack_require__(12);\nvar getHashCode = __webpack_require__(22);\nvar flatBufferToPaths = __webpack_require__(21);\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, json, path, depth, seed, results, requestedPath, optimizedPath, optimizedLength, fromReference, referenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === node || undefined !== (type = node.$type) || undefined === path) {\n        arr[1] = hasDataSource && node === undefined;\n        arr[0] = onValueType(node, type, json, path, depth, seed, results, requestedPath, depth, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, onValue, onMissing, onMaterialize);\n        return arr;\n    }\n\n    var f_meta,\n        f_old_keys,\n        f_new_keys,\n        f_code = '';\n\n    var next,\n        nextKey,\n        keyset,\n        keyIsRange,\n        keys = path['$keys'],\n        nodeAbsPath,\n        jsonAbsPath,\n        nextDepth = depth + 1,\n        rangeEnd,\n        nextJSON,\n        nextReferenceContainer,\n        nextOptimizedLength,\n        nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath,\n        refContainerRefPath;\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[\"\u001eƒ_abs_path\"];\n    }\n\n    if (!json || typeofObject !== typeof json) {\n        json = undefined;\n    } else if (f_meta = json[\"\u001eƒ_meta\"]) {\n\n        nodeAbsPath = node[\"\u001eƒ_abs_path\"];\n        jsonAbsPath = f_meta[\"abs_path\"];\n\n        if (!branchSelector && !(json instanceof FalcorJSON)) {\n            json.__proto__ = {};\n            json.__proto__[\"\u001eƒ_meta\"] = f_meta;\n            json.__proto__.__proto__ = FalcorJSON.prototype;\n        }\n\n        if (!arrayEqual(nodeAbsPath, jsonAbsPath)) {\n            f_meta['$code'] = '';\n            f_meta[\"status\"] = 'pending';\n            f_meta[\"abs_path\"] = nodeAbsPath;\n            f_meta[\"version\"] = node[\"\u001eƒ_version\"];\n            refContainerRefPath && (f_meta[\"deref_to\"] = refContainerRefPath);\n            refContainerAbsPath && (f_meta[\"deref_from\"] = refContainerAbsPath);\n            if (f_old_keys = f_meta[\"keys\"]) {\n                f_meta[\"keys\"] = Object.create(null);\n                for (nextKey in f_old_keys) {\n                    if (f_old_keys[nextKey]) {\n                        delete json[nextKey];\n                    }\n                }\n            }\n            arr[0] = json;\n            arr[1] = true;\n            return arr;\n        } else if (!(f_meta[\"version\"] !== node[\"\u001eƒ_version\"] || f_meta['$code'] !== path['$code'])) {\n            results.hasValue = true;\n            arr[0] = json;\n            arr[1] = false;\n            return arr;\n        }\n\n        f_old_keys = f_meta[\"keys\"];\n        f_meta[\"abs_path\"] = nodeAbsPath;\n        f_meta[\"version\"] = node[\"\u001eƒ_version\"];\n        refContainerRefPath && (f_meta[\"deref_to\"] = refContainerRefPath);\n        refContainerAbsPath && (f_meta[\"deref_from\"] = refContainerAbsPath);\n    }\n\n    f_new_keys = Object.create(null);\n\n    var keysIndex = -1;\n    var keysLength = keys.length;\n    var nextPath,\n        nextPathKey,\n        hasMissingPath = false;\n\n    iteratingKeyset: while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            f_code = '' + getHashCode('' + f_code + 'null');\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if (typeofObject !== typeof keyset) {\n                nextKey = keyset;\n                rangeEnd = undefined;\n                keyIsRange = false;\n                nextPathKey = nextKey;\n            }\n            // If the Keyset isn't null or primitive, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if (typeofNumber !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                    nextPathKey = '[' + nextKey + '..' + rangeEnd + ']';\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextPath === undefined) {\n\n                arr = walkPathAndBuildOutput(root, next, nextJSON, nextPath, nextDepth, seed, results, requestedPath, nextOptimizedPath, nextOptimizedLength, fromReference, nextReferenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined && !materialized) {\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            } else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                // If the reference is expired, it will be invalidated and\n                // reported as missing in the next call to walkPath below.\n                next.$type === \"ref\" && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                arr = walkPathAndBuildOutput(root, next, nextJSON, nextPath, nextDepth, seed, results, requestedPath, nextOptimizedPath, nextOptimizedLength, fromReference, nextReferenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined) {\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = {};\n                f_meta[\"version\"] = node[\"\u001eƒ_version\"];\n                f_meta[\"abs_path\"] = node[\"\u001eƒ_abs_path\"];\n                refContainerRefPath && (f_meta[\"deref_to\"] = refContainerRefPath);\n                refContainerAbsPath && (f_meta[\"deref_from\"] = refContainerAbsPath);\n                json = {};\n                json[\"\u001eƒ_meta\"] = f_meta;\n                json.__proto__ = FalcorJSON.prototype;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                // node creation to them.\n                if (branchSelector) {\n                    json = branchSelector(json);\n                } else {\n                    var tmp = json;\n                    json = {};\n                    json.__proto__ = tmp;\n                    tmp = undefined;\n                }\n            }\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && nextKey in f_old_keys) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        f_code = '' + getHashCode('' + f_code + (!hasMissingPath ? nextPathKey : '') + (nextPath ? nextPath['$code'] : ''));\n    }\n\n    if (f_meta) {\n        f_meta['$code'] = f_code;\n        f_meta[\"keys\"] = f_new_keys;\n        f_meta[\"status\"] = hasMissingPath && 'pending' || 'resolved';\n        if (f_old_keys) {\n            for (nextKey in f_old_keys) {\n                if (f_old_keys[nextKey]) {\n                    delete json[nextKey];\n                }\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n\n    arr[0] = json;\n    arr[1] = hasMissingPath;\n\n    return arr;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, reportMaterialized, json, branchSelector, boxValues, onMaterialize, modelRoot) {\n\n    if (reportMaterialized) {\n        return onMaterialize(json, path, depth, depth, branchSelector, boxValues, modelRoot, results, requestedPath, optimizedPath, optimizedLength, fromReference, reportMissing, onMissing);\n    }\n\n    var paths = path ? flatBufferToPaths(path) : [[]];\n    var rPath = requestedPath.slice(0, requestedLength);\n\n    return paths.forEach(function (restPath) {\n        requestedLength = depth + restPath.length;\n        return originalOnMissing(rPath.concat(restPath), depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, false, json, branchSelector, boxValues, onMaterialize, modelRoot);\n    });\n}\n\nfunction arrayEqual(xs, ys) {\n    if (xs === ys) {\n        return true;\n    }\n    var len = xs.length;\n    if (len !== ys.length) {\n        return false;\n    }\n    while (~--len) {\n        if (xs[len] !== ys[len]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(2);\nvar isArray = Array.isArray;\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar onValue = __webpack_require__(42);\nvar onMissing = __webpack_require__(27);\nvar FalcorJSON = __webpack_require__(2);\nvar onValueType = __webpack_require__(16);\nvar isExpired = __webpack_require__(0);\nvar onMaterialize = __webpack_require__(44);\nvar getReferenceTarget = __webpack_require__(41);\nvar NullInPathError = __webpack_require__(3);\nvar InvalidKeySetError = __webpack_require__(12);\nvar materializedAtom = __webpack_require__(6);\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, json, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, referenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (type = node.$type) || depth === requestedLength) {\n        arr[1] = hasDataSource && node === undefined;\n        arr[0] = onValueType(node, type, json, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, onValue, onMissing, onMaterialize);\n        return arr;\n    }\n\n    var f_meta;\n\n    var next,\n        nextKey,\n        keyset,\n        keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd,\n        keysOrRanges,\n        nextJSON,\n        nextReferenceContainer,\n        keysetIndex = -1,\n        keysetLength = 0,\n        nextOptimizedLength,\n        nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath,\n        refContainerRefPath;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        arr[0] = json;\n        arr[1] = false;\n        return arr;\n    }\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[\"\u001eƒ_abs_path\"];\n    }\n\n    if (!json || typeofObject !== typeof json) {\n        json = undefined;\n    } else if (f_meta = json[\"\u001eƒ_meta\"]) {\n        f_meta[\"version\"] = node[\"\u001eƒ_version\"];\n        f_meta[\"abs_path\"] = node[\"\u001eƒ_abs_path\"];\n        refContainerRefPath && (f_meta[\"deref_to\"] = refContainerRefPath);\n        refContainerAbsPath && (f_meta[\"deref_from\"] = refContainerAbsPath);\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    var hasMissingPath = false;\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    throw new InvalidKeySetError(path, keysOrRanges);\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                keyset = keysOrRanges[keysetIndex];\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if (typeofNumber !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextDepth === requestedLength) {\n\n                arr = walkPathAndBuildOutput(root, next, nextJSON, path, nextDepth, seed, results, requestedPath, requestedLength, nextOptimizedPath, nextOptimizedLength, fromReference, nextReferenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined && !materialized) {\n                    continue;\n                }\n            } else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                // If the reference is expired, it will be invalidated and\n                // reported as missing in the next call to walkPath below.\n                next.$type === \"ref\" && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                arr = walkPathAndBuildOutput(root, next, nextJSON, path, nextDepth, seed, results, requestedPath, requestedLength, nextOptimizedPath, nextOptimizedLength, fromReference, nextReferenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined) {\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = {};\n                f_meta[\"version\"] = node[\"\u001eƒ_version\"];\n                f_meta[\"abs_path\"] = node[\"\u001eƒ_abs_path\"];\n                refContainerRefPath && (f_meta[\"deref_to\"] = refContainerRefPath);\n                refContainerAbsPath && (f_meta[\"deref_from\"] = refContainerAbsPath);\n                json = {};\n                json[\"\u001eƒ_meta\"] = f_meta;\n                json.__proto__ = FalcorJSON.prototype;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                // node creation to them.\n                if (branchSelector) {\n                    json = branchSelector(json);\n                }\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    if (f_meta) {\n        f_meta[\"status\"] = hasMissingPath && 'pending' || 'resolved';\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    arr[0] = json;\n    arr[1] = hasMissingPath;\n\n    return arr;\n}\n/* eslint-enable */\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(2);\nvar clone = __webpack_require__(7);\nvar inlineValue = __webpack_require__(26);\nvar promote = __webpack_require__(13);\nvar isExpired = __webpack_require__(0);\nvar createHardlink = __webpack_require__(8);\nvar CircularReferenceError = __webpack_require__(52);\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, ref, modelRoot, seed, expireImmediate) {\n\n    promote(modelRoot, ref);\n\n    var context,\n        key,\n        type,\n        depth = 0,\n        node = root,\n        path = ref.value,\n        copy = path,\n        length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[\"\u001eƒ_context\"])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                    throw new CircularReferenceError(path);\n                }\n                // If the node we land on isn't the existing ref context,\n                // create a hard-link between the reference and the node\n                // it points to.\n                else if (node !== context) {\n                        createHardlink(ref, node);\n                    }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === \"ref\") {\n\n                promote(modelRoot, node);\n\n                seed && inlineValue(clone(node), path, length, seed);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n\n    return arr;\n}\n/* eslint-enable */\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar typeofObject = 'object';\nvar clone = __webpack_require__(7);\nvar inlineValue = __webpack_require__(26);\n\nmodule.exports = onJSONGraphValue;\n\nfunction onJSONGraphValue(node, type, depth, seed, results, requestedPath, optimizedPath, optimizedLength, fromReference, boxValues, materialized) {\n\n    var value = node.value;\n\n    // boxValues always clones the node\n    if (boxValues || !(\n    /**\n     * JSON Graph should always clone:\n     * - refs\n     * - errors\n     * - atoms we didn't create\n     * - atoms we created to wrap Objects\n     **/\n    \"ref\" !== type && \"error\" !== type && node[\"\u001eƒ_wrapped_value\"] && typeofObject !== typeof value)) {\n        value = clone(node);\n    }\n\n    results.hasValue = true;\n    inlineValue(value, optimizedPath, optimizedLength, seed);\n    (seed.paths || (seed.paths = [])).push(requestedPath.slice(0, depth + !!fromReference) // depth + 1 if fromReference === true\n    );\n\n    return value;\n}\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar clone = __webpack_require__(7);\nvar onValue = __webpack_require__(75);\nvar inlineValue = __webpack_require__(26);\nvar isExpired = __webpack_require__(0);\nvar onValueType = __webpack_require__(16);\nvar onMaterialize = __webpack_require__(44);\nvar originalOnMissing = __webpack_require__(27);\nvar getReferenceTarget = __webpack_require__(74);\nvar NullInPathError = __webpack_require__(3);\nvar InvalidKeySetError = __webpack_require__(12);\nvar materializedAtom = __webpack_require__(6);\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, boxValues, materialized, hasDataSource, treatErrorsAsValues) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (type = node.$type) || depth === requestedLength) {\n        return onValueType(node, type, seed, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, undefined, boxValues, materialized, hasDataSource, treatErrorsAsValues, onValue, onMissing, onMaterialize);\n    }\n\n    var next,\n        nextKey,\n        keyset,\n        keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd,\n        keysOrRanges,\n        keysetIndex = -1,\n        keysetLength = 0,\n        nextOptimizedLength,\n        nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        return undefined;\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    throw new InvalidKeySetError(path, keysOrRanges);\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                keyset = keysOrRanges[keysetIndex];\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if ('number' !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            // If we encounter a ref, inline the reference target and continue\n            // evaluating the path.\n            if (next && nextDepth < requestedLength &&\n            // If the reference is expired, it will be invalidated and\n            // reported as missing in the next call to walkPath below.\n            next.$type === \"ref\" && !isExpired(next, expireImmediate)) {\n\n                // Write the cloned ref value into the jsonGraph at the\n                // optimized path. JSONGraph must always clone references.\n                seed && inlineValue(clone(next), optimizedPath, nextOptimizedLength, seed);\n\n                // Retrieve the reference target and next referenceContainer (if\n                // this reference points to other references) and continue\n                // following the path. If the reference resolves to a missing\n                // path or leaf node, it will be handled in the next call to\n                // walkPath.\n                refTarget = getReferenceTarget(root, next, modelRoot, seed, expireImmediate);\n\n                next = refTarget[0];\n                fromReference = true;\n                nextOptimizedPath = refTarget[1];\n                nextOptimizedLength = nextOptimizedPath.length;\n                refTarget[0] = refTarget[1] = undefined;\n            }\n\n            walkPathAndBuildOutput(root, next, path, nextDepth, seed, results, requestedPath, requestedLength, nextOptimizedPath, nextOptimizedLength, fromReference, modelRoot, expired, expireImmediate, boxValues, materialized, hasDataSource, treatErrorsAsValues);\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return undefined;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, reportMaterialized, seed, branchSelector, boxValues, onMaterialize, modelRoot) {\n\n    var json, isLeaf;\n\n    if (seed && reportMaterialized) {\n\n        (seed.paths || (seed.paths = [])).push((isLeaf = 0 === requestedLength - depth) &&\n        // depth + 1 if fromReference === true\n        requestedPath.slice(0, depth + !!fromReference) || requestedPath.slice(0, depth).concat(path.slice(depth, requestedLength + !!fromReference)));\n\n        json = inlineValue(isLeaf && clone(materializedAtom) || undefined, optimizedPath, optimizedLength, seed, !isLeaf);\n    }\n\n    return originalOnMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, !isLeaf && reportMaterialized, json, branchSelector, true, onMaterialize, modelRoot);\n}\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar clone = __webpack_require__(7);\nvar onValueType = __webpack_require__(16);\nvar FalcorJSON = __webpack_require__(2);\nvar NullInPathError = __webpack_require__(3);\nvar InvalidKeySetError = __webpack_require__(12);\nvar materializedAtom = __webpack_require__(6);\n\nmodule.exports = onMaterializeFlatBuffer;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterializeFlatBuffer(json, path, depth, length, branchSelector, boxValues, modelRoot, results, requestedPath, optimizedPath, optimizedLength, fromReference, reportMissing, onMissing) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === path) {\n        onValueType(undefined, undefined, json, path, depth, undefined, results, requestedPath, depth, optimizedPath, optimizedLength, fromReference, modelRoot, undefined, false, branchSelector, boxValues, false, reportMissing, false, undefined, onMissing, undefined);\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta, f_old_keys, f_new_keys;\n\n    var nextKey,\n        keyset,\n        keyIsRange,\n        keys = path['$keys'],\n        nextDepth = depth + 1,\n        rangeEnd,\n        nextOptimizedLength = optimizedLength + 1;\n\n    if (!json || typeofObject !== typeof json) {\n        json = {};\n        json.__proto__ = FalcorJSON.prototype;\n        json[\"\u001eƒ_meta\"] = f_meta = {};\n        f_meta['$code'] = '';\n        f_meta[\"status\"] = 'resolved';\n        f_meta[\"version\"] = modelRoot.version;\n        f_meta[\"abs_path\"] = optimizedPath.slice(0, optimizedLength);\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[\"\u001eƒ_meta\"])) {\n        json[\"\u001eƒ_meta\"] = f_meta = {};\n        f_meta['$code'] = '';\n        f_meta[\"status\"] = 'resolved';\n        f_meta[\"version\"] = modelRoot.version;\n        f_meta[\"abs_path\"] = optimizedPath.slice(0, optimizedLength);\n    } else {\n        f_old_keys = f_meta[\"keys\"];\n        f_meta['$code'] = '';\n        f_meta[\"status\"] = 'resolved';\n        f_meta[\"version\"] = modelRoot.version;\n        f_meta[\"abs_path\"] = optimizedPath.slice(0, optimizedLength);\n    }\n\n    f_new_keys = Object.create(null);\n\n    var nextPath;\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    iteratingKeyset: while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if (typeofObject !== typeof keyset) {\n                nextKey = keyset;\n                rangeEnd = undefined;\n                keyIsRange = false;\n            }\n            // If the Keyset isn't null or primitive, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if (typeofNumber !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && nextKey in f_old_keys) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // insert the materialized branch\n            json[nextKey] = onMaterializeFlatBuffer(json[nextKey], nextPath, nextDepth, nextDepth, branchSelector, boxValues, modelRoot, results, requestedPath, optimizedPath, nextOptimizedLength, fromReference, reportMissing, onMissing);\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n    }\n\n    f_meta[\"keys\"] = f_new_keys;\n    if (f_old_keys) {\n        for (nextKey in f_old_keys) {\n            if (f_old_keys[nextKey]) {\n                delete json[nextKey];\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isInternalKey = __webpack_require__(20);\n\n/**\n * decends and copies the cache.\n */\nmodule.exports = function getCache(cache) {\n    var out = {};\n    _copyCache(cache, out);\n\n    return out;\n};\n\nfunction cloneBoxedValue(boxedValue) {\n    var clonedValue = {};\n\n    var keys = Object.keys(boxedValue);\n    var key;\n    var i;\n    var l;\n\n    for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n\n        if (key === '$type' || !isInternalKey(key)) {\n            clonedValue[key] = boxedValue[key];\n        }\n    }\n\n    return clonedValue;\n}\n\nfunction _copyCache(node, out, fromKey) {\n    // copy and return\n\n    // only copy objects\n    if (!node || typeof node !== 'object') {\n        return;\n    }\n\n    Object.keys(node).filter(function (key) {\n        // Its not an internal key and the node has a value.  In the cache\n        // there are 3 possibilities for values.\n        // 1: A branch node.\n        // 2: A $type-value node.\n        // 3: undefined\n        // We will strip out 3\n        return (key === '$type' || !isInternalKey(key)) && node[key] !== undefined;\n    }).forEach(function (key) {\n        var cacheNext = node[key];\n        var outNext = out[key];\n\n        if (!outNext) {\n            outNext = out[key] = {};\n        }\n\n        // Paste the node into the out cache.\n        if (cacheNext.$type) {\n            var isObject = cacheNext.value && typeof cacheNext.value === 'object';\n            var isUserCreatedcacheNext = !cacheNext[\"\u001eƒ_wrapped_value\"];\n            var value;\n            if (isObject || isUserCreatedcacheNext) {\n                value = cloneBoxedValue(cacheNext);\n            } else {\n                value = cacheNext.value;\n            }\n\n            out[key] = value;\n            return;\n        }\n\n        _copyCache(cacheNext, outNext, key);\n    });\n}\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar getBoundCacheNode = __webpack_require__(17);\n\nmodule.exports = function _getVersion(model, path) {\n    var node = getBoundCacheNode(model, path);\n    var version = node && node[\"\u001eƒ_version\"];\n    return version == null ? -1 : version;\n};\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar groupCacheArguments = __webpack_require__(45);\n\nmodule.exports = {\n    json: invalidate,\n    jsonGraph: invalidate,\n    invalidatePathMaps: __webpack_require__(47),\n    invalidatePathValues: __webpack_require__(28)\n};\n\nfunction invalidate(model, args, seed, progressive, expireImmediate) {\n    if (invalidateArgumentGroups(model, groupCacheArguments(args), expireImmediate)) {\n        var rootChangeHandler = model._root.onChange;\n        rootChangeHandler && rootChangeHandler();\n    }\n    return {};\n}\n\nfunction invalidateArgumentGroups(model, xs, expireImmediate) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            if (inputType === 'PathValues') {\n                groupedArgs = groupedArgs.map(pluckPaths);\n            }\n            var operation = module.exports['invalidate' + inputType];\n            if (operation(model, groupedArgs, expireImmediate)) {\n                changed = true;\n            }\n        }\n    }\n    return changed;\n}\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar wrapNode = __webpack_require__(51);\nvar isExpired = __webpack_require__(0);\nvar insertNode = __webpack_require__(46);\nvar expireNode = __webpack_require__(1);\nvar replaceNode = __webpack_require__(50);\nvar getSize = __webpack_require__(9);\nvar reconstructPath = __webpack_require__(49);\nvar getTimestamp = __webpack_require__(33);\nvar updateNodeAncestors = __webpack_require__(11);\n\nmodule.exports = function mergeJSONGraphNode(parent, node, message, key, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var sizeOffset;\n\n    var cType, mType, cIsObject, mIsObject, cTimestamp, mTimestamp;\n\n    // If the cache and message are the same, we can probably return early:\n    // - If they're both nullsy,\n    //   - If null then the node needs to be wrapped in an atom and inserted.\n    //     This happens from whole branch merging when a leaf is just a null value\n    //     instead of being wrapped in an atom.\n    //   - If undefined then return null (previous behavior).\n    // - If they're both branches, return the branch.\n    // - If they're both edges, continue below.\n    if (node === message) {\n\n        // The message and cache are both undefined, return undefined.\n        if (message === undefined) {\n            return message;\n        }\n        // There should not be undefined values. Those should always be\n        // wrapped in an $atom\n        else if (message === null) {\n                node = wrapNode(message, undefined, message);\n                parent = updateNodeAncestors(parent, -node.$size, lru, version);\n                node = insertNode(node, parent, key, undefined, optimizedPath);\n                return node;\n            }\n            // Is the cache node a branch? If so, return the cache branch.\n            else if ((cIsObject = !(!node || typeof node !== 'object')) && (cType = node.$type) === undefined) {\n                    // Has the branch been introduced to the cache yet? If not,\n                    // give it a parent, key, and absolute path.\n                    if (node[\"\u001eƒ_parent\"] === undefined) {\n                        insertNode(node, parent, key, version, optimizedPath);\n                    }\n                    return node;\n                }\n    } else if (cIsObject = !(!node || typeof node !== 'object')) {\n        cType = node.$type;\n    }\n\n    // If the cache isn't a reference, we might be able to return early.\n    if (cType !== \"ref\") {\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n        }\n        if (cIsObject && !cType) {\n            // If the cache is a branch and the message is empty or\n            // also a branch, continue with the cache branch.\n            if (message == null || mIsObject && !mType) {\n                return node;\n            }\n        }\n    }\n    // If the cache is a reference, we might not need to replace it.\n    else {\n            // If the cache is a reference, but the message is empty,\n            // leave the cache alone...\n            if (message == null) {\n                // ...unless the cache is an expired reference. In that case, expire\n                // the cache node and return undefined.\n                if (isExpired(node, expireImmediate)) {\n                    expireNode(node, expired, lru);\n                    return void 0;\n                }\n                return node;\n            }\n            mIsObject = !(!message || typeof message !== 'object');\n            if (mIsObject) {\n                mType = message.$type;\n                // If the cache and the message are both references,\n                // check if we need to replace the cache reference.\n                if (mType === \"ref\") {\n                    if (node === message) {\n                        // If the cache and message are the same reference,\n                        // we performed a whole-branch merge of one of the\n                        // grandparents. If we've previously graphed this\n                        // reference, break early. Otherwise, continue to\n                        // leaf insertion below.\n                        if (node[\"\u001eƒ_parent\"] != null) {\n                            return node;\n                        }\n                    } else {\n\n                        cTimestamp = node.$timestamp;\n                        mTimestamp = message.$timestamp;\n\n                        // - If either the cache or message reference is expired,\n                        //   replace the cache reference with the message.\n                        // - If neither of the references are expired, compare their\n                        //   timestamps. If either of them don't have a timestamp,\n                        //   or the message's timestamp is newer, replace the cache\n                        //   reference with the message reference.\n                        // - If the message reference is older than the cache\n                        //   reference, short-circuit.\n                        if (!isExpired(node, expireImmediate) && !isExpired(message, expireImmediate) && mTimestamp < cTimestamp) {\n                            return void 0;\n                        }\n                    }\n                }\n            }\n        }\n\n    // If the cache is a leaf but the message is a branch,\n    // merge the branch over the leaf.\n    if (cType && mIsObject && !mType) {\n        return insertNode(replaceNode(node, message, parent, key, lru, version), parent, key, undefined, optimizedPath);\n    }\n    // If the message is a sentinel or primitive, insert it into the cache.\n    else if (mType || !mIsObject) {\n\n            if (mType === \"error\" && errorSelector) {\n                message = errorSelector(reconstructPath(requestedPath, key), message);\n            }\n\n            // If the cache and the message are the same value, we branch-merged one\n            // of the message's ancestors. If this is the first time we've seen this\n            // leaf, give the message a $size and $type, attach its graph pointers,\n            // and update the cache sizes and versions.\n            if (mType && node === message) {\n                if (!node[\"\u001eƒ_parent\"]) {\n                    node = wrapNode(node, cType, node.value);\n                    parent = updateNodeAncestors(parent, -node.$size, lru, version);\n                    node = insertNode(node, parent, key, version, optimizedPath);\n                }\n            }\n            // If the cache and message are different, the cache value is expired,\n            // or the message is a primitive, replace the cache with the message value.\n            // If the message is a sentinel, clone and maintain its type.\n            // If the message is a primitive value, wrap it in an atom.\n            else {\n                    var isDistinct = true;\n                    // If both the cache and message are primitives, we branch-merged\n                    // one of the message's ancestors. Insert the value into the cache.\n                    if (!cType && !mType) {\n                        isDistinct = true;\n                    }\n                    // If the cache is a branch, but the message is a leaf, replace the\n                    // cache branch with the message leaf.\n                    else if (!cIsObject || !isExpired(node, expireImmediate)) {\n                            // Compare the current cache value with the new value. If either of\n                            // them don't have a timestamp, or the message's timestamp is newer,\n                            // replace the cache value with the message value. If a comparator\n                            // is specified, the comparator takes precedence over timestamps.\n                            if (comparator) {\n                                isDistinct = !(comparator.length < 3 ? comparator(node, message) : comparator(node, message, optimizedPath.slice(0, optimizedPath.index)));\n                            } else {\n                                // Comparing either Number or undefined to undefined always results in false.\n                                isDistinct = getTimestamp(message) < getTimestamp(node) === false;\n                            }\n                        }\n                    if (isDistinct) {\n                        sizeOffset = getSize(node) - getSize(message = wrapNode(message, mType, mType ? message.value : message));\n                        node = replaceNode(node, message, parent, key, lru, version);\n                        parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n                        node = insertNode(node, parent, key, version, optimizedPath);\n                    }\n                }\n\n            // Promote the message edge in the LRU.\n            if (isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge.\n             */\n            true)) {\n                expireNode(node, expired, lru);\n            }\n        } else if (node == null) {\n            node = insertNode(message, parent, key, undefined, optimizedPath);\n        }\n\n    return node;\n};\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar getJSON = __webpack_require__(24);\nvar getJSONGraph = __webpack_require__(25);\nvar groupCacheArguments = __webpack_require__(45);\n\nmodule.exports = {\n    json: json,\n    jsonGraph: jsonGraph,\n    setPathMaps: __webpack_require__(19),\n    setPathValues: __webpack_require__(30),\n    setJSONGraphs: __webpack_require__(18)\n};\n\nfunction json(model, _args, data, progressive, expireImmediate) {\n\n    var set,\n        get,\n        jsong,\n        changed,\n        relative,\n        optimized,\n        missing,\n        fragments,\n        requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args, expireImmediate);\n\n    if ((relative = set.requested).length) {\n\n        if (!(changed = set.changed) || progressive) {\n            get = getJSON(model, relative, data, progressive, expireImmediate);\n        }\n\n        if (changed) {\n\n            jsong = getJSONGraph({\n                _root: model._root,\n                _boxed: model._boxed, _materialized: true,\n                _treatErrorsAsValues: model._treatErrorsAsValues\n            }, set.optimized, {}, progressive, expireImmediate);\n\n            fragments = jsong.data;\n            missing = fragments.paths;\n            requested = jsong.requested;\n\n            var rootChangeHandler = model._root.onChange;\n            rootChangeHandler && rootChangeHandler();\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: get && get.error,\n        errors: get && get.errors,\n        hasValue: get && get.hasValue\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive, expireImmediate) {\n\n    var set,\n        jsong,\n        changed,\n        relative,\n        optimized,\n        missing,\n        fragments,\n        requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args, expireImmediate);\n\n    if ((relative = set.requested).length && (progressive || (changed = set.changed))) {\n\n        jsong = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed, _materialized: true,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, set.optimized, data, progressive, expireImmediate);\n\n        fragments = jsong.data;\n        missing = fragments.paths;\n        requested = jsong.requested;\n\n        if (changed) {\n            var rootChangeHandler = model._root.onChange;\n            rootChangeHandler && rootChangeHandler();\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: jsong && jsong.error,\n        hasValue: jsong && jsong.hasValue\n    };\n}\n\nfunction setGroupsIntoCache(model, xs, expireImmediate) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var modelRoot = model._root;\n    var errorSelector = modelRoot.errorSelector;\n\n    expireImmediate = expireImmediate && !Boolean(model._source);\n    var comparator = Boolean(model._source) ? null : modelRoot.comparator;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            var operation = module.exports['set' + inputType];\n            var results = operation(model, groupedArgs, errorSelector, comparator, expireImmediate);\n            changed = changed || results[2];\n            optimizedPaths.push.apply(optimizedPaths, results[1]);\n            if (inputType === 'PathValues') {\n                requestedPaths.push.apply(requestedPaths, groupedArgs.map(pluckPaths));\n            } else if (inputType === 'JSONGraphs') {\n                requestedPaths.push.apply(requestedPaths, arrayFlatMap(groupedArgs, pluckPaths));\n            } else {\n                requestedPaths.push.apply(requestedPaths, results[0]);\n            }\n        }\n    }\n\n    return {\n        changed: changed,\n        requested: requestedPaths,\n        optimized: optimizedPaths\n    };\n}\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\nfunction arrayFlatMap(array, selector) {\n    var index = -1;\n    var i = -1;\n    var n = array.length;\n    var array2 = [];\n    while (++i < n) {\n        var array3 = selector(array[i], i, array);\n        var j = -1;\n        var k = array3.length;\n        while (++j < k) {\n            array2[++index] = array3[j];\n        }\n    }\n    return array2;\n}\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function transferBackReferences(fromNode, destNode) {\n    var fromNodeRefsLength = fromNode[\"\u001eƒ_refs_length\"] || 0,\n        destNodeRefsLength = destNode[\"\u001eƒ_refs_length\"] || 0,\n        i = -1;\n    while (++i < fromNodeRefsLength) {\n        var ref = fromNode[\"\u001eƒ_ref\" + i];\n        if (ref !== undefined) {\n            ref[\"\u001eƒ_context\"] = destNode;\n            destNode[\"\u001eƒ_ref\" + (destNodeRefsLength + i)] = ref;\n            fromNode[\"\u001eƒ_ref\" + i] = undefined;\n        }\n    }\n    destNode[\"\u001eƒ_refs_length\"] = fromNodeRefsLength + destNodeRefsLength;\n    fromNode[\"\u001eƒ_refs_length\"] = undefined;\n    return destNode;\n};\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function unlinkBackReferences(node) {\n    var i = -1,\n        n = node[\"\u001eƒ_refs_length\"] || 0;\n    while (++i < n) {\n        var ref = node[\"\u001eƒ_ref\" + i];\n        if (ref != null) {\n            ref[\"\u001eƒ_context\"] = ref[\"\u001eƒ_ref_index\"] = node[\"\u001eƒ_ref\" + i] = void 0;\n        }\n    }\n    node[\"\u001eƒ_refs_length\"] = void 0;\n    return node;\n};\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function unlinkForwardReference(reference) {\n    var destination = reference[\"\u001eƒ_context\"];\n    if (destination) {\n        var i = (reference[\"\u001eƒ_ref_index\"] || 0) - 1,\n            n = (destination[\"\u001eƒ_refs_length\"] || 0) - 1;\n        while (++i <= n) {\n            destination[\"\u001eƒ_ref\" + i] = destination[\"\u001eƒ_ref\" + (i + 1)];\n        }\n        destination[\"\u001eƒ_refs_length\"] = n;\n        reference[\"\u001eƒ_ref_index\"] = reference[\"\u001eƒ_context\"] = destination = void 0;\n    }\n    return reference;\n};\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = hasValidParentReference;\n\nfunction hasValidParentReference() {\n    var reference = this._referenceContainer;\n\n    // Always true when this mode is false.\n    if (!this._allowFromWhenceYouCame) {\n        return true;\n    }\n\n    // If fromWhenceYouCame is true and the first set of keys did not have\n    // a reference, this case can happen.  They are always valid.\n    if (reference === true) {\n        return true;\n    }\n\n    // was invalid before even derefing.\n    if (reference === false) {\n        return false;\n    }\n\n    // Its been disconnected (set over or collected) from the graph.\n    if (reference && reference[\"\u001eƒ_parent\"] === undefined) {\n        return false;\n    }\n\n    // The reference has expired but has not been collected from the graph.\n    if (reference && reference[\"\u001eƒ_invalidated\"]) {\n        return false;\n    }\n\n    return true;\n}\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar CONTAINER_DOES_NOT_EXIST = 'e';\nvar FalcorJSON = __webpack_require__(2);\nvar getCachePosition = __webpack_require__(10);\nvar InvalidDerefInputError = __webpack_require__(89);\n\nmodule.exports = function deref(json) {\n\n    var seed, f_meta;\n\n    if (!json || 'object' !== typeof json || !(f_meta = json[\"\u001eƒ_meta\"]) || 'object' !== typeof f_meta) {\n        return null;\n    }\n\n    var cacheRoot = this._root.cache;\n    var recycleJSON = this._recycleJSON;\n    var absolutePath = f_meta[\"abs_path\"];\n    var referenceContainer, currentRefPath, i, len;\n\n    if (!absolutePath) {\n        if (recycleJSON) {\n            seed = { json: json };\n            seed.__proto__ = FalcorJSON.prototype;\n        }\n        return this._clone({\n            _node: undefined,\n            _seed: seed\n        });\n    } else if (absolutePath.length === 0) {\n        if (recycleJSON) {\n            seed = { json: json };\n            seed.__proto__ = FalcorJSON.prototype;\n        }\n        return this._clone({\n            _node: cacheRoot,\n            _path: absolutePath,\n            _referenceContainer: true,\n            _seed: seed\n        });\n    }\n\n    var originalRefPath = f_meta[\"deref_to\"];\n    var originalAbsPath = f_meta[\"deref_from\"];\n\n    // We deref and then ensure that the reference container is attached to\n    // the model.\n    var cacheNode = getCachePosition(cacheRoot, absolutePath);\n    var validContainer = CONTAINER_DOES_NOT_EXIST;\n\n    if (originalAbsPath) {\n\n        validContainer = false;\n\n        i = -1;\n        len = originalAbsPath.length;\n        referenceContainer = cacheRoot;\n        while (++i < len) {\n            referenceContainer = referenceContainer[originalAbsPath[i]];\n            if (!referenceContainer || referenceContainer.$type) {\n                break;\n            }\n        }\n\n        // If the reference container is still a sentinel value then compare\n        // the reference value with refPath.  If they are the same, then the\n        // model is still valid.\n        if (originalRefPath && referenceContainer && referenceContainer.$type === \"ref\") {\n            validContainer = true;\n            len = originalRefPath.length;\n            currentRefPath = referenceContainer.value;\n            for (i = 0; i < len; ++i) {\n                if (currentRefPath[i] !== originalRefPath[i]) {\n                    cacheNode = undefined;\n                    validContainer = false;\n                    break;\n                }\n            }\n        }\n    }\n\n    // Signal to the deref'd model that it has been disconnected from the\n    // graph or there is no _fromWhenceYouCame\n    if (!validContainer) {\n        referenceContainer = false;\n    }\n\n    // The container did not exist, therefore there is no reference\n    // container and fromWhenceYouCame should always return true.\n    else if (validContainer === CONTAINER_DOES_NOT_EXIST) {\n            referenceContainer = true;\n        }\n\n    if (recycleJSON) {\n        seed = { json: json };\n        seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    return this._clone({\n        _seed: seed,\n        _node: cacheNode,\n        _path: absolutePath,\n        _referenceContainer: referenceContainer\n    });\n};\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\nvar MESSAGE = 'It is not legal to use the JSON Graph ' + 'format from a bound Model. JSON Graph format' + ' can only be used from a root model.';\n\n/**\n * When a bound model attempts to retrieve JSONGraph it should throw an\n * error.\n *\n * @private\n */\nmodule.exports = createErrorClass('BoundJSONGraphModelError', function () {\n    this.message = MESSAGE;\n});\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\nvar MESSAGE = 'Deref can only be used with a non-primitive object from get, set, or call.';\n\n/**\n * An invalid deref input is when deref is used with input that is not generated\n * from a get, set, or a call.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidDerefInputError', function () {\n  this.message = MESSAGE;\n});\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\nvar MESSAGE = 'The boundPath of the model is not valid since a value or error was found before the path end.';\n\n/**\n * An InvalidModelError can only happen when a user binds, whether sync\n * or async to shorted value.  See the unit tests for examples.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidModelError', function (boundPath, shortedPath) {\n  this.message = MESSAGE;\n  this.boundPath = boundPath;\n  this.shortedPath = shortedPath;\n});\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\n\n/**\n * A request can only be retried up to a specified limit.  Once that\n * limit is exceeded, then an error will be thrown.\n *\n * @private\n */\nmodule.exports = createErrorClass('MaxRetryExceededError', function (maxRetryCount, absolute, relative, optimized) {\n    this.message = '' + 'Exceeded the max retry count (' + maxRetryCount + ') for these paths: \\n' + (absolute && 'absolute: [\\n\\t' + printPaths(absolute) + '\\n]\\n' || '') + (relative && 'relative: [\\n\\t' + printPaths(relative) + '\\n]\\n' || '') + (optimized && 'optimized: [\\n\\t' + printPaths(optimized) + '\\n]\\n' || '');\n});\n\nfunction printPaths(paths) {\n    return paths.map(function (path) {\n        return JSON.stringify(path);\n    }).join(',\\n\\t');\n}\n\n/***/ },\n/* 92 */\n/***/ function(module, exports) {\n\nmodule.exports = String.fromCharCode(30) + 'ƒ_';\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar updateNodeAncestors = __webpack_require__(11);\n\nmodule.exports = function collect(lru, expired, totalArg, max, ratioArg, version) {\n\n    var total = totalArg;\n    var ratio = ratioArg;\n\n    if (typeof ratio !== 'number') {\n        ratio = 0.75;\n    }\n\n    var node,\n        size,\n        targetSize = max * ratio;\n\n    while (node = expired.pop()) {\n        total -= size = node.$size || 0;\n        updateNodeAncestors(node, size, lru, version);\n    }\n\n    if (total >= max) {\n        var prev = lru[\"\u001eƒ_tail\"];\n        while (total >= targetSize && (node = prev)) {\n            prev = prev[\"\u001eƒ_prev\"];\n            total -= size = node.$size || 0;\n            updateNodeAncestors(node, size, lru, version);\n        }\n\n        lru[\"\u001eƒ_tail\"] = node;\n        if (node == null) {\n            lru[\"\u001eƒ_head\"] = undefined;\n        } else {\n            node[\"\u001eƒ_next\"] = undefined;\n        }\n    }\n};\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Source = __webpack_require__(55);\nvar Subscriber = __webpack_require__(14);\nvar lruCollect = __webpack_require__(93);\nvar FalcorJSON = __webpack_require__(2);\nvar collapse = __webpack_require__(36);\nvar InvalidSourceError = __webpack_require__(53);\nvar MaxRetryExceededError = __webpack_require__(91);\n\nmodule.exports = Call;\n\nfunction Call(type, model, _args) {\n    Source.call(this, type);\n    if (model && _args) {\n        this.type = type;\n        this.source = this;\n        this.model = model;\n        this._args = _args;\n    }\n}\n\nCall.prototype = Object.create(Source.prototype);\n\nCall.prototype.lift = function (operator, source) {\n    source = new Call(source || this);\n    source.type = this.type;\n    source.model = this.model;\n    source._args = this._args;\n    source.operator = operator;\n    operator.data = operator.data || this.operator.data;\n    operator.errors = operator.errors || this.operator.errors;\n    operator.operation = operator.operation || this.operator.operation;\n    operator.progressive = operator.progressive || this.operator.progressive;\n    operator.maxRetryCount = operator.maxRetryCount || this.operator.maxRetryCount;\n    return source;\n};\n\nCall.prototype.operator = function (subscriber) {\n    return this._subscribe(subscriber);\n};\n\nCall.prototype._subscribe = function (subscriber) {\n    subscriber.onNext({\n        type: this.type,\n        args: this._args,\n        model: this.model,\n        version: this.model._root.version\n    });\n    subscriber.onCompleted();\n    return subscriber;\n};\n\nCall.prototype._toJSON = function (data, errors) {\n    if (data === undefined) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    return this.lift(new CallOperator(data, errors || this.operator.errors, 'json', this.operator.progressive, this.operator.maxRetryCount), this.source);\n};\n\nCall.prototype._toJSONG = function (data, errors) {\n    if (data === undefined) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    return this.lift(new CallOperator(data, errors || this.operator.errors, 'jsonGraph', this.operator.progressive, this.operator.maxRetryCount), this.source);\n};\n\nCall.prototype.retry = function (maxRetryCount) {\n    return this.lift(new CallOperator(this.operator.data, this.operator.errors, this.operator.operation, this.operator.progresive, maxRetryCount), this.source);\n};\n\nCall.prototype.progressively = function () {\n    return this.lift(new CallOperator(this.operator.data, this.operator.errors, this.operator.operation, true, this.operator.maxRetryCount), this.source);\n};\n\nfunction CallOperator(data, errors, operation, progressive, maxRetryCount) {\n    this.data = data;\n    this.errors = errors;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallOperator.prototype.call = function (source, destination) {\n    return source.subscribe(new CallSubscriber(destination, this.data, this.errors, this.operation, this.progressive));\n};\n\nfunction CallSubscriber(destination, data, errors, operation, progressive, maxRetryCount) {\n    Subscriber.call(this, destination);\n    this.data = data;\n    this.retryCount = -1;\n    this.errors = errors;\n    this.hasValue = false;\n    this.completed = false;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallSubscriber.prototype = Object.create(Subscriber.prototype);\nCallSubscriber.prototype.operations = {\n    get: __webpack_require__(70),\n    set: __webpack_require__(82),\n    call: __webpack_require__(69),\n    invalidate: __webpack_require__(80)\n};\n\nCallSubscriber.prototype.next = CallSubscriber.prototype.onNext = function (seed) {\n\n    if (!this.started) {\n        this.args = seed.args;\n        this.type = seed.type;\n        this.model = seed.model;\n        this.version = seed.version;\n        this.maxRetryCount = this.maxRetryCount || this.model._root.maxRetryCount;\n        return;\n    } else if (!this.destination) {\n        return;\n    }\n\n    var missing, fragments;\n    var type = seed.type;\n    var args = seed.args || seed.paths;\n\n    var data = this.data;\n    var model = this.model;\n    var errors = this.errors;\n    var results = this.results;\n    var version = this.version;\n    var hasValue = this.hasValue;\n    var operation = this.operation;\n    var progressive = this.progressive;\n    var seedIsImmutable = progressive && data;\n\n    if (model._recycleJSON && this.type === 'get') {\n        seedIsImmutable = false;\n    }\n\n    // If we request paths as JSON in progressive mode, ensure each progressive\n    // valueNode is immutable. If not in progressive mode, we can write into the\n    // same JSON tree until the request is completed.\n    if (seedIsImmutable) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n\n    if (args && args.length) {\n\n        results = this.operations[type][operation](model, args, data, progressive || !model._source, this.retryCount === -1);\n\n        // We must communicate critical errors from get, such as bound path is\n        // broken or this is a JSONGraph request with a bound path.\n        if (results.error) {\n            return tryOnError(this, results.error);\n        }\n\n        errors && results.errors && errors.push.apply(errors, results.errors);\n\n        if (fragments = results.fragments) {\n            args = results.args;\n            this.fragments = fragments;\n        }\n\n        this.relative = results.relative;\n        this.requested = results.requested;\n        this.missing = missing = results.missing;\n        this.hasValue = hasValue || (hasValue = results.hasValue);\n    }\n\n    // We are done when there are no missing paths or\n    // the model does not have a dataSource to fetch from.\n    this.completed = !missing || !model._source;\n\n    if (type !== 'set') {\n        this.args = args;\n        if (seedIsImmutable) {\n            this.data = mergeInto(data, this.data);\n        }\n    }\n\n    if (progressive && hasValue && data && (data.json || data.jsonGraph)) {\n        tryOnNext(data, operation, model._root, this.destination);\n    }\n};\n\nCallSubscriber.prototype.error = CallSubscriber.prototype.onError = function (error) {\n    if (error instanceof InvalidSourceError) {\n        return Subscriber.prototype.onError.call(this, error);\n    }\n    this.errored = true;\n    this.onCompleted(error);\n};\n\nCallSubscriber.prototype.complete = CallSubscriber.prototype.onCompleted = function (error) {\n\n    if (!this.destination) {\n        return;\n    }\n\n    var data, type, errors, errored;\n\n    if (!this.started && (this.started = true)) {\n        this.onNext(this);\n    } else if (errored = this.errored) {\n        this.onNext({ type: 'get', paths: this.relative });\n    }\n\n    if (errored || this.completed) {\n        if (!this.progressive && this.hasValue && ((data = this.data) && data.json || data.jsonGraph)) {\n            tryOnNext(data, this.operation, this.model._root, this.destination);\n        }\n        errors = this.errors;\n        if (errored || error || errors && errors.length) {\n            return tryOnError(this, errors.length && errors || error);\n        }\n\n        return Subscriber.prototype.onCompleted.call(this);\n    }\n\n    if (++this.retryCount >= this.maxRetryCount) {\n        return tryOnError(this, new MaxRetryExceededError(this.retryCount, this.requested, this.relative, this.missing));\n    }\n\n    this.request = this.model._root.requests[this.type](this.model, this.missing, this.relative, this.fragments).subscribe(this);\n};\n\nCallSubscriber.prototype.dispose = CallSubscriber.prototype.unsubscribe = function () {\n\n    var model = this.model;\n    var version = this.version;\n    var request = this.request;\n\n    this.args = null;\n    this.data = null;\n    this.model = null;\n    this.errors = null;\n    this.errored = false;\n    this.started = false;\n    this.hasValue = false;\n    this.completed = false;\n\n    Subscriber.prototype.dispose.call(this);\n\n    if (request) {\n        this.request = null;\n        request.dispose();\n    }\n\n    if (model) {\n\n        var modelRoot = model._root;\n        var cache = modelRoot.cache;\n        var shouldCollectCache = modelRoot.syncRefCount <= 0 && version !== modelRoot.version;\n\n        // Prune the cache via the LRU if this is the last request.\n        if (shouldCollectCache) {\n\n            if (cache) {\n                lruCollect(modelRoot, modelRoot.expired, cache.$size || 0, modelRoot.maxSize, modelRoot.collectRatio, modelRoot.version);\n            }\n\n            var rootOnChangesCompletedHandler = modelRoot.onChangesCompleted;\n\n            if (rootOnChangesCompletedHandler) {\n                rootOnChangesCompletedHandler.call(modelRoot.topLevelModel);\n            }\n        }\n    }\n};\n\nfunction tryOnNext(data, operation, modelRoot, destination) {\n    if (operation === 'jsonGraph' && data.paths) {\n        data.paths = collapse(data.paths);\n    }\n    try {\n        ++modelRoot.syncRefCount;\n        destination.onNext(data);\n    } catch (e) {\n        throw e;\n    } finally {\n        --modelRoot.syncRefCount;\n    }\n}\n\nfunction tryOnError(self, error) {\n    try {\n        throw error;\n    } catch (err) {\n        Subscriber.prototype.onError.call(self, err);\n    }\n}\n\nfunction mergeInto(dest, node) {\n\n    var destValue,\n        nodeValue,\n        key,\n        keys = Object.keys(node),\n        index = -1,\n        length = keys.length;\n\n    while (++index < length) {\n\n        key = keys[index];\n\n        if (key === \"\u001eƒ_meta\") {\n            dest[\"\u001eƒ_meta\"] = node[\"\u001eƒ_meta\"];\n        } else {\n\n            nodeValue = node[key];\n            destValue = dest[key];\n\n            if (destValue !== nodeValue) {\n                if (!nodeValue || typeof nodeValue !== 'object') {\n                    if (destValue === undefined) {\n                        dest[key] = nodeValue;\n                    }\n                } else if (destValue === undefined) {\n                    dest[key] = nodeValue;\n                } else {\n                    mergeInto(destValue, nodeValue);\n                }\n            }\n        }\n    }\n\n    return dest;\n}\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Source = __webpack_require__(55);\nvar Request = __webpack_require__(96);\nvar Subscriber = __webpack_require__(14);\nvar Subscription = __webpack_require__(15);\nvar ImmediateScheduler = __webpack_require__(56);\n\nmodule.exports = Queue;\n\nfunction Queue(modelRoot) {\n    Subscription.call(this, []);\n    this.modelRoot = modelRoot;\n}\n\nQueue.prototype = Object.create(Subscription.prototype);\n\nQueue.prototype.set = isolateSet;\nQueue.prototype.call = isolateCall;\nQueue.prototype.get = batchAndDedupeGet;\n\nfunction isolateSet(model, optimized, requested, env) {\n    var queue = this;\n    return new Source(function (destination) {\n\n        var request = new Request('set', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = env.jsonGraph;\n        request.requested.push(requested);\n        request.optimized.push(optimized);\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction isolateCall(model, optimized, requested, callArgs) {\n    var queue = this;\n    return new Source(function (destination) {\n\n        var request = new Request('call', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = callArgs;\n        request.boundPath = model._path;\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction batchAndDedupeGet(model, optimized, requested) {\n    return new Dedupe(this, model._source, model._scheduler, requested, optimized);\n}\n\nfunction Dedupe(queue, source, scheduler, requested, optimized) {\n    this.queue = queue;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n    this.requested = requested;\n    this.optimized = optimized;\n}\n\nDedupe.prototype.subscribe = function (destination) {\n\n    var queue = this.queue;\n    var source = this.dataSource;\n    var requested = this.requested;\n    var optimized = this.optimized;\n    var scheduler = this.scheduler;\n\n    var requestsIndex = -1;\n    var requests = queue.subscriptions;\n    var requestsCount = requests.length;\n    var subscription = new Subscription([], destination);\n\n    while (++requestsIndex < requestsCount) {\n\n        var request = requests[requestsIndex];\n\n        if (request.type !== 'get') {\n            continue;\n        }\n\n        if (request = request.batch(requested, optimized, requested = [], optimized = [])) {\n            subscription.add(request.subscribe(new Subscriber(destination, request)));\n        }\n\n        if (!optimized.length) {\n            break;\n        }\n    }\n\n    if (optimized.length) {\n        request = requests[requestsIndex] = new Request('get', queue, source, scheduler).batch(requested, optimized);\n        subscription.add(request.subscribe(new Subscriber(destination, request)));\n        request.connect();\n    }\n\n    return subscription;\n};\n\n/***/ },\n/* 96 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar Subject = __webpack_require__(97);\nvar Subscriber = __webpack_require__(14);\nvar Subscription = __webpack_require__(15);\nvar InvalidSourceError = __webpack_require__(53);\n\nvar setJSONGraphs = __webpack_require__(18);\nvar setPathValues = __webpack_require__(30);\nvar invalidatePaths = __webpack_require__(28);\n\nvar toPaths = __webpack_require__(39);\nvar toCollapseMap = __webpack_require__(37);\nvar toCollapseTrees = __webpack_require__(38);\nvar hasIntersection = __webpack_require__(63);\n\nmodule.exports = Request;\n\nfunction Request(type, queue, source, scheduler) {\n    Subject.call(this, [], queue);\n    this.tree = {};\n    this.paths = [];\n    this.type = type;\n    this.data = null;\n    this.active = false;\n    this.responded = false;\n    this.requested = [];\n    this.optimized = [];\n    this.disposable = null;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n}\n\nRequest.prototype = Object.create(Subject.prototype);\n\nRequest.prototype.next = Request.prototype.onNext = function (env) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    var changed = false;\n    var jsonGraph = env.jsonGraph;\n    var boundPath = this.boundPath;\n    var modelRoot = queue.modelRoot;\n    var invalidated = env.invalidated;\n    var paths = env.paths || this.paths;\n    var requested = this.requested.slice(0);\n    var rootChangeHandler = modelRoot.onChange;\n\n    // Run invalidations first.\n    if (invalidated && invalidated.length) {\n        changed = invalidatePaths({ _root: modelRoot, _path: [] }, invalidated, false);\n    }\n\n    if (paths && paths.length && !(!jsonGraph || typeof jsonGraph !== 'object')) {\n        var results = setJSONGraphs({ _root: modelRoot }, [{ paths: paths, jsonGraph: jsonGraph }], modelRoot.errorSelector, modelRoot.comparator, false);\n        paths = results[0];\n        changed = changed || results[2];\n    }\n\n    if (changed && rootChangeHandler) {\n        rootChangeHandler();\n    }\n\n    this.observers.slice(0).forEach(function (observer, index) {\n        observer.onNext({\n            type: 'get', paths: requested[index] || filterPathsBoundTo(boundPath, paths)\n        });\n    });\n};\n\nRequest.prototype.error = Request.prototype.onError = function (error) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    error = error || {};\n\n    // Converts errors to object we can insert into the cache.\n    error = !(error instanceof Error) ?\n    // if it's $type error, use it raw\n    error.$type === \"error\" && error ||\n    // Otherwise make it an error\n    { $type: \"error\", value: error } :\n    // If it's instanceof Error, pluck error.message\n    { $type: \"error\", value: { message: error.message } };\n\n    var modelRoot = queue.modelRoot;\n\n    var errorPathValues = toPaths(toCollapseTrees(this.requested.reduce(function (collapseMap, paths) {\n        return toCollapseMap(paths, collapseMap);\n    }, {}))).map(function (path) {\n        return { path: path, value: error };\n    });\n\n    if (errorPathValues.length) {\n        setPathValues({ _root: modelRoot, _path: [] }, errorPathValues, modelRoot.errorSelector, modelRoot.comparator, false);\n    }\n\n    Subject.prototype.onError.call(this, error);\n};\n\nRequest.prototype.complete = Request.prototype.onCompleted = function () {\n    if (this.responded === false) {\n        this.onNext({});\n    }\n    Subject.prototype.onCompleted.call(this);\n};\n\nRequest.prototype.remove = function (subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.requested.splice(index, 1);\n        this.optimized.splice(index, 1);\n        this.observers.splice(index, 1);\n        this.subscriptions.splice(index, 1);\n    }\n    if (this.subscriptions.length === 0) {\n        this.dispose();\n    }\n    return this;\n};\n\nRequest.prototype.dispose = Request.prototype.unsubscribe = function () {\n    this.tree = {};\n    this.data = null;\n    this.paths = null;\n    this.active = false;\n    this.boundPath = null;\n    this.requested = [];\n    this.optimized = [];\n    var queue = this.parent;\n    if (queue) {\n        this.parent = null;\n        queue.remove(this);\n    }\n    var disposable = this.disposable;\n    if (disposable) {\n        this.disposable = null;\n        if (disposable.dispose) {\n            disposable.dispose();\n        } else if (disposable.unsubscribe) {\n            disposable.unsubscribe();\n        }\n    }\n    Subject.prototype.dispose.call(this);\n};\n\nRequest.prototype.connect = function () {\n    if (!this.active && !this.disposable) {\n        var scheduledDisposable = this.scheduler.schedule(flush.bind(this));\n        if (!this.disposable) {\n            this.disposable = scheduledDisposable;\n        }\n    }\n    return this;\n};\n\nRequest.prototype.batch = function (requested, optimized, requestedComplements, optimizedComplements) {\n    if (this.active) {\n        var requestedIntersection = [];\n        var optimizedIntersection = [];\n        if (findIntersections(this.tree, requested, optimized, requestedComplements, optimizedComplements, requestedIntersection, optimizedIntersection)) {\n            this.requested.push(requestedIntersection);\n            this.optimized.push(optimizedIntersection);\n            return this;\n        }\n        return null;\n    }\n    this.requested.push(requested);\n    this.optimized.push(optimized);\n    return this;\n};\n\nfunction flush() {\n\n    this.active = true;\n\n    var obs,\n        paths = this.paths = toPaths(this.tree = toCollapseTrees(this.optimized.reduce(function (collapseMap, paths) {\n        return toCollapseMap(paths, collapseMap);\n    }, {})));\n\n    try {\n        switch (this.type) {\n            case 'get':\n                obs = this.dataSource.get(paths);\n                break;\n            case 'set':\n                obs = this.dataSource.set({ paths: paths, jsonGraph: this.data });\n                break;\n            case 'call':\n                obs = this.dataSource.call.apply(this.dataSource, this.data);\n                break;\n        }\n        this.disposable = obs.subscribe(this);\n    } catch (e) {\n        this.disposable = {};\n        Subject.prototype.onError.call(this, new InvalidSourceError(e));\n    }\n}\n\nfunction findIntersections(tree, requested, optimized, requestedComplements, optimizedComplements, requestedIntersection, optimizedIntersection) {\n\n    var index = -1;\n    var complementIndex = -1;\n    var intersectionIndex = -1;\n    var optTotal = optimized.length;\n    var reqTotal = requested.length - 1;\n\n    while (++index < optTotal) {\n        var path = optimized[index];\n        var pathLen = path.length;\n        var subTree = tree[pathLen];\n        if (subTree && hasIntersection(subTree, path, 0, pathLen)) {\n            optimizedIntersection[++intersectionIndex] = path;\n            requestedIntersection[intersectionIndex] = requested[index < reqTotal ? index : reqTotal];\n        } else {\n            optimizedComplements[++complementIndex] = path;\n            requestedComplements[complementIndex] = requested[index < reqTotal ? index : reqTotal];\n        }\n    }\n\n    return ~intersectionIndex;\n}\n\nfunction filterPathsBoundTo(boundPath, paths) {\n\n    var boundLength;\n\n    if (!boundPath || (boundLength = boundPath.length) === 0) {\n        return paths;\n    }\n\n    var filtered = [],\n        filteredIndex = -1,\n        keyIndex;\n    var path,\n        pathsIndex = -1,\n        pathsCount = paths.length;\n\n    outer: while (++pathsIndex < pathsCount) {\n        path = paths[pathsIndex];\n        if (path.length > boundLength) {\n            keyIndex = 0;\n            do {\n                if (path[keyIndex] !== boundPath[keyIndex]) {\n                    continue outer;\n                }\n            } while (++keyIndex < boundLength);\n            filtered[++filteredIndex] = path.slice(boundLength);\n        }\n    }\n\n    return filtered;\n}\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Subscriber = __webpack_require__(14);\nvar Subscription = __webpack_require__(15);\n\nmodule.exports = Subject;\n\nfunction Subject(observers, parent) {\n    Subscriber.call(this, null, parent);\n    this.observers = observers || [];\n}\n\nSubject.prototype = Object.create(Subscriber.prototype);\n\n// Unused\n// Subject.prototype.onNext = function(value) {\n//     this.observers.slice(0).forEach(function(observer) {\n//         observer.onNext(value);\n//     });\n// }\n\nSubject.prototype.onError = function (error) {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function (observer) {\n        observer.onError(error);\n    });\n};\n\nSubject.prototype.onCompleted = function () {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function (observer) {\n        observer.onCompleted();\n    });\n};\n\nSubject.prototype.subscribe = function (subscriber) {\n    this.observers.push(subscriber);\n    this.subscriptions.push(subscriber = new Subscription([subscriber], this));\n    return subscriber;\n};\n\nSubject.prototype.dispose = Subject.prototype.unsubscribe = function () {\n    this.observers = [];\n};\n\n/***/ },\n/* 98 */\n/***/ function(module, exports) {\n\nfunction TimeoutScheduler(delay) {\n    this.delay = delay;\n}\n\nvar TimerDisposable = function TimerDisposable(id) {\n    this.id = id;\n    this.disposed = false;\n};\n\nTimeoutScheduler.prototype.schedule = function schedule(action) {\n    return new TimerDisposable(setTimeout(action, this.delay));\n};\n\nTimerDisposable.prototype.dispose = TimerDisposable.prototype.unsubscribe = function () {\n    if (!this.disposed) {\n        clearTimeout(this.id);\n        this.id = null;\n        this.disposed = true;\n    }\n};\n\nmodule.exports = TimeoutScheduler;\n\n/***/ },\n/* 99 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar isInternal = __webpack_require__(32);\n\nmodule.exports = clone;\n\nfunction clone(source) {\n    var dest = source;\n    if (!(!dest || typeof dest !== 'object')) {\n        dest = isArray(source) ? [] : {};\n        for (var key in source) {\n            if (isInternal(key)) {\n                continue;\n            }\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n\n/***/ },\n/* 100 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(5);\nmodule.exports = function getSize(node) {\n    return isObject(node) && node.$expires || undefined;\n};\n\n/***/ },\n/* 101 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(5);\n\nmodule.exports = function getType(node, anyType) {\n    var type = isObject(node) && node.$type || void 0;\n    if (anyType && type) {\n        return 'branch';\n    }\n    return type;\n};\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar isObject = __webpack_require__(5);\n\nmodule.exports = function isPathValue(pathValue) {\n    return isObject(pathValue) && (isArray(pathValue.path) || typeof pathValue.path === 'string');\n};\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(104);\n\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global, module) {'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = __webpack_require__(105);\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (true) {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(35), __webpack_require__(106)(module)))\n\n/***/ },\n/* 105 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n/***/ },\n/* 106 */\n/***/ function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.l; }\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.i; }\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n/***/ },\n/* 107 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(61);\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// falcor.all.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 107);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bc22b829519fc938f291","var now = require('../support/now');\nvar $now = require('../values/expires-now');\nvar $never = require('../values/expires-never');\n\nmodule.exports = function isExpired(node, expireImmediate) {\n    var exp = node.$expires;\n    if (exp === undefined || exp === null || exp === $never) {\n        return false;\n    } else if (exp === $now) {\n        return expireImmediate;\n    }\n    return exp < now();\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/isExpired.js","var splice = require('./../lru/splice');\n\nmodule.exports = function expireNode(node, expired, lru) {\n    if (!node[f_invalidated]) {\n        node[f_invalidated] = true;\n        expired.push(node);\n        splice(lru, node);\n    }\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/expireNode.js","function FalcorJSON(f_meta) {\n    if (!f_meta) {\n        this[f_meta_data] = {};\n    } else if (!(this[f_meta_data] = f_meta[f_meta_data])) {\n        this[f_meta_data] = f_meta;\n    }\n}\n\nvar protoBlacklist = {\n    length: true,\n    toString: true,\n    constructor: true,\n    toLocaleString: true\n};\n\nvar protoDescriptors = {\n    toJSON: { enumerable: false, value: toJSON },\n    toProps: { enumerable: false, value: toProps },\n    toString: { enumerable: false, value: toString },\n    toLocaleString: { enumerable: false, value: toString },\n    $__hash: {\n        enumerable: false,\n        get: function() {\n            var f_meta = this[f_meta_data];\n            return f_meta && f_meta['$code'] || '';\n        }\n    },\n    $__path: {\n        enumerable: false,\n        get: function() {\n            var f_meta = this[f_meta_data];\n            return f_meta && f_meta[f_meta_abs_path] || [];\n        }\n    },\n    $__status: {\n        enumerable: false,\n        get: function() {\n            var f_meta = this[f_meta_data];\n            return f_meta && f_meta[f_meta_status] || 'resolved';\n        }\n    },\n    $__version: {\n        enumerable: false,\n        get: function() {\n            var f_meta = this[f_meta_data];\n            return f_meta && f_meta[f_meta_version] || 0;\n        }\n    }\n};\n\nObject.defineProperties(FalcorJSON.prototype, Object\n    .getOwnPropertyNames(Array.prototype)\n    .reduce(function (descriptors, name) {\n        if (!protoBlacklist.hasOwnProperty(name)) {\n            var fn = Array.prototype[name];\n            if (typeof fn === 'function') {\n                descriptors[name] = {\n                    value: bindArrayMethod(name, fn),\n                    writable: true, enumerable: false\n                };\n            }\n        }\n        return descriptors;\n    }, protoDescriptors)\n);\n\nfunction bindArrayMethod(name, fn) {\n    return new Function('fn',\n        'return function ' + name + ' () {' +\n            'return fn.apply(this, arguments);' +\n        '};'\n    )(fn);\n}\n\nvar isArray = Array.isArray;\nvar typeofObject = 'object';\nvar typeofString = 'string';\n\nfunction getInst(inst) {\n    var typeofInst = typeof inst;\n    var argsLen = arguments.length;\n    if (argsLen === 0) {\n        inst = this;\n    } else if (typeofInst !== typeofString) {\n        if (!inst || typeofInst !== typeofObject) {\n            return inst;\n        }\n    } else if (argsLen !== 1) {\n        return inst;\n    } else {\n        inst = this;\n    }\n    return inst === global ? undefined : inst;\n}\n\nfunction toJSON() {\n    return serialize(getInst.apply(this, arguments), toJSON);\n}\n\nfunction toString(includeMetadata, includeStatus) {\n    return JSON.stringify(serialize(\n        getInst.call(this, this),\n        serialize,\n        includeMetadata === true,\n        false, includeStatus === true\n    ));\n}\n\nfunction toProps(inst) {\n\n    inst = getInst.apply(this, arguments);\n\n    var f_meta_inst, f_meta_json, version = 0;\n    var json = serialize(inst, toProps, true, true);\n\n    if (inst && (f_meta_inst = inst[f_meta_data])) {\n        version = f_meta_inst[f_meta_version];\n    }\n\n    if (!(!json || typeof json !== typeofObject)) {\n        if (f_meta_json = json[f_meta_data]) {\n            f_meta_json[f_meta_version] = version;\n        }\n    }\n\n    return json;\n}\n\nfunction serialize(inst, serializer, includeMetadata, createWithProto, includeStatus) {\n\n    if (!inst || typeof inst !== typeofObject) {\n        return inst;\n    }\n\n    var count, total, f_meta, keys, key, xs, ys;\n\n    if (isArray(inst)) {\n        xs = inst;\n    } else {\n\n        count = -1;\n        keys = Object.keys(inst);\n        total = keys.length;\n        xs = {};\n\n        if (createWithProto) {\n            xs.__proto__ = FalcorJSON.prototype;\n        }\n\n        if (includeMetadata && (f_meta = inst[f_meta_data])) {\n\n            var $code = f_meta['$code'];\n            var status = f_meta[f_meta_status];\n            var abs_path = f_meta[f_meta_abs_path];\n            var deref_to = f_meta[f_meta_deref_to];\n            var deref_from = f_meta[f_meta_deref_from];\n\n            f_meta = {};\n            $code && (f_meta['$code'] = $code);\n            abs_path && (f_meta[f_meta_abs_path] = abs_path);\n            deref_to && (f_meta[f_meta_deref_to] = deref_to);\n            deref_from && (f_meta[f_meta_deref_from] = deref_from);\n            includeStatus && status && (f_meta[f_meta_status] = status);\n\n            xs[f_meta_data] = f_meta;\n\n            if (createWithProto) {\n                ys = {};\n                ys.__proto__ = xs;\n                xs = ys;\n            }\n        }\n\n        while (++count < total) {\n            if ((key = keys[count]) !== f_meta_data) {\n                xs[key] = serializer(inst[key], serializer, includeMetadata, createWithProto, includeStatus);\n            }\n        }\n    }\n\n    return xs;\n}\n\nmodule.exports = FalcorJSON;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/FalcorJSON.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = '`null` is not allowed in branch key positions.';\n\n/**\n * Do not allow null in path.\n */\nmodule.exports = createErrorClass('NullInPathError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/NullInPathError.js","module.exports = createErrorClass;\n\nfunction createErrorClass(name, init) {\n    function E(message) {\n        this.message = message;\n        init && init.apply(this, arguments);\n        if (!Error.captureStackTrace) {\n            this.stack = (new Error()).stack;\n        } else {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n    E.prototype = Object.create(Error.prototype);\n    E.prototype.name = name;\n    E.prototype.constructor = E;\n    E.is = function(x) { return x.name === name; };\n    return E;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/createErrorClass.js","module.exports = isObject;\n\nfunction isObject(value) {\n    return value !== null && typeof value === 'object';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isObject.js","module.exports = { $type: 'atom' };\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/support/materializedAtom.js","var isInternal = require('../internal/isInternal');\n\nmodule.exports = clone;\n\nfunction clone(node) {\n\n    var key, keys = Object.keys(node),\n        json = {}, index = -1, length = keys.length;\n\n    while (++index < length) {\n        key = keys[index];\n        if (isInternal(key)) {\n            continue;\n        }\n        json[key] = node[key];\n    }\n\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/clone.js","module.exports = function createHardlink(from, to) {\n\n    // create a back reference\n    var backRefs = to[f_refs_length] || 0;\n    to[f_ref + backRefs] = from;\n    to[f_refs_length] = backRefs + 1;\n\n    // create a hard reference\n    from[f_ref_index] = backRefs;\n    from[f_context] = to;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/createHardlink.js","var isObject = require('./../support/isObject');\nmodule.exports = function getSize(node) {\n    return isObject(node) && node.$size || 0;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getSize.js","/**\n * getCachePosition makes a fast walk to the bound value since all bound\n * paths are the most possible optimized path.\n *\n * @param {Model} model -\n * @param {Array} path -\n * @returns {Mixed} - undefined if there is nothing in this position.\n * @private\n */\nmodule.exports = getCachePosition;\n\nfunction getCachePosition(cache, path) {\n\n    var node = cache;\n    var type, depth = 0;\n    var maxDepth = path.length;\n\n    if (maxDepth > 0) {\n        do {\n            node = node[path[depth]];\n\n            while (node && (type = node.$type) === $ref) {\n                node = getCachePosition(cache, node.value);\n            }\n        } while (++depth < maxDepth && node && !type);\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getCachePosition.js","var removeNodeAndDescendants = require('./removeNodeAndDescendants');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = updateNodeAncestors;\n\nfunction updateNodeAncestors(node, offset, lru, version) {\n    var curr = node, next = curr[f_parent];\n    do {\n        if ((curr.$size = (curr.$size || 0) - offset) > 0) {\n            if (!(next = curr[f_parent])) {\n                curr[f_version] = version;\n            } else if (curr[f_version] !== version) {\n                updateBackReferenceVersions(curr, version);\n            }\n        } else if (next = curr[f_parent]) {\n            removeNodeAndDescendants(curr, next, curr[f_key], lru, version);\n        }\n    } while (curr = next);\n    return node;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/updateNodeAncestors.js","var createErrorClass = require('./createErrorClass');\n\n/**\n * InvalidKeySetError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidKeySetError', function(path, keysOrRanges) {\n    this.mesage = '' +\n        'The KeySet ' + JSON.stringify(keysOrRanges) +\n        ' in path ' + JSON.stringify(path) + ' contains a KeySet. ' +\n        'Keysets can only contain Keys or Ranges';\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidKeySetError.js","var EXPIRES_NEVER = require('./../values/expires-never');\n\n// [H] -> Next -> ... -> [T]\n// [T] -> Prev -> ... -> [H]\nmodule.exports = function lruPromote(root, object) {\n    // Never promote node.$expires === 1.  They cannot expire.\n    if (object.$expires === EXPIRES_NEVER) {\n        return;\n    }\n\n    var head = root[f_head];\n\n    // Nothing is in the cache.\n    if (!head) {\n        root[f_head] = root[f_tail] = object;\n        return;\n    }\n\n    if (head === object) {\n        return;\n    }\n\n    // The item always exist in the cache since to get anything in the\n    // cache it first must go through set.\n    var prev = object[f_prev];\n    var next = object[f_next];\n    if (next) {\n        next[f_prev] = prev;\n    }\n    if (prev) {\n        prev[f_next] = next;\n    }\n    object[f_prev] = undefined;\n\n    // Insert into head position\n    root[f_head] = object;\n    object[f_next] = head;\n    head[f_prev] = object;\n\n    // If the item we promoted was the tail, then set prev to tail.\n    if (object === root[f_tail]) {\n        root[f_tail] = prev;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/promote.js","var Subscription = require('./Subscription');\n\nmodule.exports = Subscriber;\n\nfunction Subscriber(destination, parent, onCompleted) {\n    if (typeof destination === 'function' ||\n             typeof parent === 'function' ||\n        typeof onCompleted === 'function') {\n        Subscription.call(this, []);\n        this.destination = {\n            error: parent,\n            onError: parent,\n            next: destination,\n            onNext: destination,\n            complete: onCompleted,\n            onCompleted: onCompleted\n        }\n    } else {\n        Subscription.call(this, [], parent);\n        this.parent = parent;\n        this.destination = destination;\n    }\n}\n\nSubscriber.prototype = Object.create(Subscription.prototype);\n\nSubscriber.prototype.next =\nSubscriber.prototype.onNext = function onNext(value) {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onNext) {\n            dest.onNext(value);\n        } else if (dest.next) {\n            dest.next(value);\n        }\n    }\n}\n\nSubscriber.prototype.error =\nSubscriber.prototype.onError = function onError(error) {\n    var signaled = false;\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onError) {\n            signaled = true;\n            dest.onError(error);\n        } else if (dest.error) {\n            signaled = true;\n            dest.error(error);\n        }\n        this.dispose();\n    }\n    if (!signaled) {\n        throw error;\n    }\n}\n\nSubscriber.prototype.complete =\nSubscriber.prototype.onCompleted = function onCompleted() {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onCompleted) {\n            dest.onCompleted();\n        } else if (dest.complete) {\n            dest.complete();\n        }\n        this.dispose();\n    }\n}\n\nSubscriber.prototype.dispose =\nSubscriber.prototype.unsubscribe = function () {\n    this.destination = null;\n    Subscription.prototype.dispose.call(this);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subscriber.js","module.exports = Subscription;\n\nfunction Subscription(subscriptions, parent) {\n    this.parent = parent;\n    this.subscriptions = subscriptions || [];\n}\n\nSubscription.prototype.add = function(subscription) {\n    return this.subscriptions.push(subscription) && this || this;\n}\n\nSubscription.prototype.remove = function(subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.subscriptions.splice(index, 1);\n    }\n    return this;\n}\n\nSubscription.prototype.dispose =\nSubscription.prototype.unsubscribe = function () {\n    var subscription, subscriptions = this.subscriptions;\n    while (subscriptions.length) {\n        (subscription = subscriptions.pop()) &&\n            subscription.dispose &&\n            subscription.dispose();\n    }\n    var parent = this.parent;\n    if (parent) {\n        this.parent = null;\n        parent.remove && parent.remove(this);\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subscription.js","var isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\n\nmodule.exports = onValueType;\n\nfunction onValueType(node, type, json,\n                     path, depth, seed, results,\n                     requestedPath, requestedLength,\n                     optimizedPath, optimizedLength,\n                     fromReference, modelRoot, expired, expireImmediate,\n                     branchSelector, boxValues, materialized, reportMissing,\n                     treatErrorsAsValues, onValue, onMissing, onMaterialize) {\n\n    var reportMaterialized = reportMissing;\n\n    if (type) {\n        if (isExpired(node, expireImmediate)) {\n            if (!node[f_invalidated]) {\n                expireNode(node, expired, modelRoot);\n            }\n        } else {\n            lruPromote(modelRoot, node);\n            if (node.value === undefined) {\n                reportMissing = false;\n                reportMaterialized = materialized;\n            } else {\n                if (seed) {\n                    if (fromReference) {\n                        requestedPath[depth] = null;\n                    }\n                    return onValue(node, type, depth, seed, results,\n                                   requestedPath, optimizedPath, optimizedLength,\n                                   fromReference, boxValues, materialized, treatErrorsAsValues);\n                }\n                return undefined;\n            }\n        }\n    }\n\n    if (materialized) {\n        seed && (results.hasValue = true);\n    } else if (!reportMaterialized) {\n        return undefined;\n    }\n\n    return onMissing(path, depth, results,\n                     requestedPath, requestedLength, fromReference,\n                     optimizedPath, optimizedLength, reportMissing,\n                     materialized, json, branchSelector,\n                     boxValues, onMaterialize, modelRoot);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onValueType.js","var getCachePosition = require('./getCachePosition');\n\nmodule.exports = getBoundCacheNode;\n\nfunction getBoundCacheNode(model, path) {\n    path = path || model._path;\n    var node = model._node;\n    if (!node || node[f_parent] === undefined || node[f_invalidated]) {\n        model._node = null;\n        if (path.length === 0) {\n            node = model._root.cache;\n        } else {\n            node = getCachePosition(model._root.cache, path);\n            if (path === model._path) {\n                model._node = node;\n            }\n        }\n    }\n    return node;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getBoundCacheNode.js","var arr = new Array(5);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar mergeJSONGraphNode = require('../mergeJSONGraphNode');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\n\n/**\n * Merges a list of {@link JSONGraphEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to merge the {@link JSONGraphEnvelope}s.\n * @param {Array.<PathValue>} jsonGraphEnvelopes - the {@link JSONGraphEnvelope}s to merge.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setJSONGraphs(model, jsonGraphEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n\n    var requestedPath = [];\n    var optimizedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var jsonGraphEnvelopeIndex = -1;\n    var jsonGraphEnvelopeCount = jsonGraphEnvelopes.length;\n\n    while (++jsonGraphEnvelopeIndex < jsonGraphEnvelopeCount) {\n\n        var jsonGraphEnvelope = jsonGraphEnvelopes[jsonGraphEnvelopeIndex];\n        var paths = jsonGraphEnvelope.paths;\n        var jsonGraph = jsonGraphEnvelope.jsonGraph;\n\n        var pathIndex = -1;\n        var pathCount = paths.length;\n\n        while (++pathIndex < pathCount) {\n\n            var path = paths[pathIndex];\n            optimizedPath.index = 0;\n\n            setJSONGraphPathSet(\n                path, 0,\n                cache, cache, cache,\n                jsonGraph, jsonGraph, jsonGraph,\n                requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n                version, expired, lru, comparator, errorSelector, expireImmediate\n            );\n        }\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n    arr[3] = undefined;\n    arr[4] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setJSONGraphPathSet(\n    path, depth, root, parent, node,\n    messageRoot, messageParent, message,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n\n        var results = setNode(\n            root, parent, node, messageRoot, messageParent, message,\n            key, branch, false, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = results[0];\n        var nextParent = results[1];\n        var nextOptimizedPath = results[4];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setJSONGraphPathSet(\n                    path, depth + 1, root, nextParent, nextNode,\n                    messageRoot, results[3], results[2],\n                    requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                    version, expired, lru, comparator, errorSelector, expireImmediate\n                );\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(\n    root, node, messageRoot, message, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var messageParent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        messageParent = messageRoot;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var index = 0;\n        var container = node;\n        var count = reference.length - 1;\n        parent = node = root;\n        messageParent = message = messageRoot;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            optimizedPath.index = index;\n\n            var results = setNode(\n                root, parent, node, messageRoot, messageParent, message,\n                key, branch, true, requestedPath, optimizedPath, version,\n                expired, lru, comparator, errorSelector, expireImmediate\n            );\n            node = results[0];\n            optimizedPath = results[4];\n            if (!node || typeof node !== 'object') {\n                optimizedPath.index = index;\n                return results;\n            }\n            parent = results[1];\n            message = results[2];\n            messageParent = results[3];\n        } while (index++ < count);\n\n        optimizedPath.index = index;\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(\n    root, parent, node, messageRoot, messageParent, message,\n    key, branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = setReference(\n            root, node, messageRoot, message, requestedPath, optimizedPath,\n            version, expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        message = results[2];\n        messageParent = results[3];\n        optimizedPath = results[4];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            messageParent = message;\n            node = parent[key];\n            message = messageParent && messageParent[key];\n        }\n\n        node = mergeJSONGraphNode(\n            parent, node, message, key, requestedPath, optimizedPath,\n            version, expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setJSONGraphs.js","var arr = new Array(3);\nvar isArray = Array.isArray;\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar getCachePosition = require('../getCachePosition');\nvar isInternalKey = require('../../support/isInternalKey');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar mergeValueOrInsertBranch = require('../mergeValueOrInsertBranch');\n\n/**\n * Sets a list of {@link PathMapEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of {@link PathMapEnvelope}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setPathMaps(model, pathMapEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[f_parent] || cache;\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathMapIndex = -1;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathMap(\n            pathMapEnvelope.json, 0, cache, parent, node,\n            requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n            version, expired, modelRoot, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setPathMap(\n    pathMap, depth, root, parent, node,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var keys = getKeys(pathMap);\n\n    if (keys && keys.length) {\n\n        var keyIndex = 0;\n        var keyCount = keys.length;\n        var optimizedIndex = optimizedPath.index;\n\n        do {\n            var key = keys[keyIndex];\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n\n            requestedPath.depth = depth;\n\n            var results = setNode(\n                root, parent, node, key, child,\n                branch, false, requestedPath, optimizedPath, version,\n                expired, lru, comparator, errorSelector, expireImmediate\n            );\n\n            requestedPath[depth] = key;\n            requestedPath.index = depth;\n\n            var nextNode = results[0];\n            var nextParent = results[1];\n            var nextOptimizedPath = results[2];\n            nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n            if (nextNode) {\n                if (branch) {\n                    setPathMap(\n                        child, depth + 1,\n                        root, nextParent, nextNode,\n                        requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                        version, expired, lru, comparator, errorSelector, expireImmediate\n                    );\n                } else {\n                    requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                    optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n                }\n            }\n            if (++keyIndex >= keyCount) {\n                break;\n            }\n            optimizedPath.index = optimizedIndex;\n        } while (true);\n    }\n}\n/* eslint-enable */\n\nfunction setReference(\n    value, root, node, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n        var container = node;\n        parent = root;\n\n        node = node[f_context];\n\n        if (node != null) {\n            parent = node[f_parent] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n            optimizedPath.index = index;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                var results = setNode(\n                    root, parent, node, key, value,\n                    branch, true, requestedPath, optimizedPath, version,\n                    expired, lru, comparator, errorSelector, expireImmediate\n                );\n                node = results[0];\n                optimizedPath = results[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return results;\n                }\n                parent = results[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[f_context] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(\n    root, parent, node, key, value,\n    branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = setReference(\n            value, root, node, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        optimizedPath = results[2];\n        type = node && node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(\n            parent, node, key, value,\n            branch, reference, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction getKeys(pathMap) {\n\n    if (!(!pathMap || typeof pathMap !== 'object') && !pathMap.$type) {\n        var keys = [];\n        var itr = 0;\n        if (isArray(pathMap)) {\n            keys[itr++] = 'length';\n        }\n        for (var key in pathMap) {\n            if (isInternalKey(key)) {\n                continue;\n            }\n            keys[itr++] = key;\n        }\n        return keys;\n    }\n\n    return undefined;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setPathMaps.js","/**\n * Determined if the key passed in is an internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nmodule.exports = isInternalKey;\n\nvar isInternal = require('../internal/isInternal');\n\nfunction isInternalKey(key) {\n    return key && key[0] === '$' || isInternal(key);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isInternalKey.js","module.exports = flatBufferToPaths;\n\nfunction flatBufferToPaths(seed, paths, path) {\n\n    path = path || [];\n    paths = paths || [];\n\n    if (!seed) {\n        return paths;\n    }\n\n    var leaf = [];\n    var keys = seed['$keys'];\n    var keysLen = keys.length;\n    var keysIndex = -1, key, len;\n\n    while (++keysIndex < keysLen) {\n\n        var next = seed[keysIndex];\n        var keyset = keys[keysIndex];\n\n        if (!next || typeof next !== 'object') {\n            leaf.push(keyset);\n        } else {\n            flatBufferToPaths(next, paths, path.concat([keyset]));\n        }\n    }\n\n    if (leaf.length === 1) {\n        paths.push(path.concat(leaf));\n    } else if (leaf.length > 1) {\n        paths.push(path.concat([leaf]));\n    }\n\n    return paths;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/flatBufferToPaths.js","module.exports = getHashCode;\n\nfunction getHashCode(str) {\n    var hash = 5381, i = str.length;\n    while (i) {\n        hash = (hash * 33) ^ str.charCodeAt(--i);\n    }\n    // JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n    // integers. Since we want the results to be always positive, convert the\n    // signed int to an unsigned by doing an unsigned bitshift.\n    return hash >>> 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/getHashCode.js","var isArray = Array.isArray;\n\n/**\n * Takes in a keySet and a note attempts to iterate over it.\n * If the value is a primitive, the key will be returned and the note will\n * be marked done\n * If the value is an object, then each value of the range will be returned\n * and when finished the note will be marked done.\n * If the value is an array, each value will be iterated over, if any of the\n * inner values are ranges, those will be iterated over.  When fully done,\n * the note will be marked done.\n *\n * @param {Object|Array|String|Number} keySet -\n * @param {Object} note - The non filled note\n * @returns {String|Number|undefined} - The current iteration value.\n * If undefined, then the keySet is empty\n * @public\n */\nmodule.exports = function iterateKeySet(keySet, note) {\n    if (note.isArray === undefined) {\n        initializeNote(keySet, note);\n    }\n\n    // Array iteration\n    if (note.isArray) {\n        var nextValue;\n\n        // Cycle through the array and pluck out the next value.\n        do {\n            if (note.loaded && note.rangeOffset > note.to) {\n                ++note.arrayOffset;\n                note.loaded = false;\n            }\n\n            var idx = note.arrayOffset, length = keySet.length;\n            if (idx >= length) {\n                note.done = true;\n                break;\n            }\n\n            var el = keySet[note.arrayOffset];\n            var type = typeof el;\n\n            // Inner range iteration.\n            if (type === 'object') {\n                if (!note.loaded) {\n                    initializeRange(el, note);\n                }\n\n                // Empty to/from\n                if (note.empty) {\n                    continue;\n                }\n\n                nextValue = note.rangeOffset++;\n            }\n\n            // Primitive iteration in array.\n            else {\n                ++note.arrayOffset;\n                nextValue = el;\n            }\n        } while (nextValue === undefined);\n\n        return nextValue;\n    }\n\n    // Range iteration\n    else if (note.isObject) {\n        if (!note.loaded) {\n            initializeRange(keySet, note);\n        }\n        if (note.rangeOffset > note.to) {\n            note.done = true;\n            return undefined;\n        }\n\n        return note.rangeOffset++;\n    }\n\n    // Primitive value\n    else {\n        note.done = true;\n        return keySet;\n    }\n};\n\nfunction initializeRange(key, memo) {\n    var from = memo.from = key.from || 0;\n    var to = memo.to = key.to ||\n        (typeof key.length === 'number' &&\n        memo.from + key.length - 1 || 0);\n    memo.rangeOffset = memo.from;\n    memo.loaded = true;\n    if (from > to) {\n        memo.empty = true;\n    }\n}\n\nfunction initializeNote(key, note) {\n    note.done = false;\n    var isObject = note.isObject = !!(key && typeof key === 'object');\n    note.isArray = isObject && isArray(key);\n    note.arrayOffset = 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/iterateKeySet.js","module.exports = require('./getJSON');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/index.js","module.exports = require('./getJSONGraph');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/index.js","module.exports = inlineJSONGraphValue;\n\n/* eslint-disable no-constant-condition */\nfunction inlineJSONGraphValue(node, path, length, seed, branch) {\n\n    var key, depth = 0, prev,\n        curr = seed.jsonGraph;\n\n    if (!curr) {\n        seed.jsonGraph = curr = {};\n    }\n\n    do {\n        prev = curr;\n        key = path[depth++];\n        if (depth >= length) {\n            curr = prev[key] = branch !== true ? node : prev[key] || {};\n            break;\n        }\n        curr = prev[key] || (prev[key] = {});\n    } while (true);\n\n    return curr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/inlineValue.js","var isArray = Array.isArray;\n\nmodule.exports = onMissing;\n\n/* eslint-disable no-constant-condition */\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, json, branchSelector,\n                   boxValues, onMaterialize, modelRoot) {\n\n    if (!reportMissing && !reportMaterialized) {\n        return;\n    }\n\n    var keyset,\n        restPathIndex = -1,\n        restPathCount = requestedLength - depth,\n        restPath = restPathCount && new Array(restPathCount) || undefined;\n\n    while (++restPathIndex < restPathCount) {\n        keyset = path[restPathIndex + depth];\n        if (isEmptyKeySet(keyset)) {\n            return;\n        }\n        restPath[restPathIndex] = keyset;\n    }\n\n    var index, count, mPath;\n    var lastKeyIsNull = keyset === null;\n    var isRequestedPath = reportMissing;\n    var missDepth, missTotal, missingPath, missingPaths;\n\n    if (!reportMissing) {\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } else {\n        missDepth = depth;\n        missTotal = requestedLength;\n        missingPath = requestedPath;\n        missingPaths = results.requested || (results.requested = []);\n    }\n\n    do {\n        if (restPathCount < requestedLength || !isRequestedPath) {\n            index = -1;\n            count = missDepth;\n            mPath = new Array(missTotal);\n            while (++index < count) {\n                mPath[index] = missingPath[index];\n            }\n            restPathIndex = -1;\n            while (index < missTotal) {\n                mPath[index++] = restPath[++restPathIndex];\n            }\n        }\n\n        // break after inserting both requested and optimized missing paths\n        if (isRequestedPath = !isRequestedPath) {\n            if (reportMissing) {\n                missingPaths[missingPaths.length] = mPath;\n            }\n            break;\n        }\n\n        missingPaths[missingPaths.length] = mPath || restPath;\n\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missingPaths = results.missing || (results.missing = []);\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } while (true);\n\n    if (reportMaterialized) {\n        return onMaterialize(json, mPath, missDepth, missTotal, branchSelector, boxValues, modelRoot);\n    }\n}\n/* eslint-enable */\n\nfunction isEmptyKeySet(keyset) {\n\n    // false if the keyset is a primitive\n    if ('object' !== typeof keyset) {\n        return false;\n    } else if (keyset === null) {\n        return false;\n    }\n\n    if (isArray(keyset)) {\n        // return true if the keyset is an empty array\n        return keyset.length === 0;\n    }\n\n    var rangeEnd = keyset.to,\n        from = keyset.from || 0;\n    if ('number' !== typeof rangeEnd) {\n        rangeEnd = from + (keyset.length || 0);\n    }\n\n    // false if trying to request incorrect or empty ranges\n    // e.g. { from: 10, to: 0 } or { from: 5, length: 0 }\n    return from >= rangeEnd;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMissing.js","var arr = new Array(2);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\nvar getSize = require('../../support/getSize');\nvar createHardlink = require('../createHardlink');\nvar getBoundCacheNode = require('../getBoundCacheNode');\nvar updateNodeAncestors = require('../updateNodeAncestors');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\n\n/**\n * Invalidates a list of Paths in a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathValues.\n * @param {Array.<PathValue>} paths - the PathValues to set.\n */\n\nmodule.exports = invalidatePathSets;\n\nfunction invalidatePathSets(model, paths, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n\n    if (!node) {\n        return false;\n    }\n\n    var pathIndex = -1;\n    var pathCount = paths.length;\n    var parent = node[f_parent] || cache;\n\n    while (++pathIndex < pathCount) {\n\n        var path = paths[pathIndex];\n\n        invalidatePathSet(\n            path, 0, cache, parent, node,\n            version, expired, lru, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return true;\n    }\n\n    return false;\n}\n\nfunction invalidatePathSet(\n    path, depth, root, parent, node,\n    version, expired, lru, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n\n    do {\n        arr = invalidateNode(\n            root, parent, node,\n            key, branch, false, version,\n            expired, lru, expireImmediate\n        );\n        var nextNode = arr[0];\n        var nextParent = arr[1];\n        if (nextNode) {\n            if (branch) {\n                invalidatePathSet(\n                    path, depth + 1,\n                    root, nextParent, nextNode,\n                    version, expired, lru, expireImmediate\n                );\n            } else {\n                updateNodeAncestors(nextNode, getSize(nextNode), lru, version);\n            }\n        }\n        key = iterateKeySet(keySet, note);\n    } while (!note.done);\n}\n\nfunction invalidateReference(root, node, version, expired, lru, expireImmediate) {\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return arr;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[f_context];\n\n    if (node != null) {\n        parent = node[f_parent] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            arr = invalidateNode(\n                root, parent, node,\n                key, branch, true, version,\n                expired, lru, expireImmediate\n            );\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return arr;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\nfunction invalidateNode(\n    root, parent, node,\n    key, branch, reference, version,\n    expired, lru, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        arr = invalidateReference(root, node, version, expired, lru, expireImmediate);\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return arr;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new Error('`null` is not allowed in branch key positions.');\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/invalidatePathSets.js","var lruSplice = require('../lru/splice');\nvar isInternalKey = require('../support/isInternalKey');\nvar unlinkBackReferences = require('./unlinkBackReferences');\nvar unlinkForwardReference = require('./unlinkForwardReference');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = removeNodeAndDescendants;\n\nfunction removeNodeAndDescendants(node, parent, key, lru, version) {\n    if (!(!node || typeof node !== 'object')) {\n        var type = node.$type;\n        if (type === undefined) {\n            for (var key2 in node) {\n                if (!isInternalKey(key2)) {\n                    removeNodeAndDescendants(node[key2], node, key2, lru, version);\n                }\n            }\n        } else {\n            if (type === $ref) {\n                unlinkForwardReference(node);\n            }\n            lruSplice(lru, node);\n        }\n        unlinkBackReferences(updateBackReferenceVersions(node, version));\n        parent[key] = node[f_parent] = undefined;\n        return true;\n    }\n    return false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/removeNodeAndDescendants.js","var arr = new Array(3);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar getCachePosition = require('../getCachePosition');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\nvar mergeValueOrInsertBranch = require('../mergeValueOrInsertBranch');\n\n/**\n * Sets a list of {@link PathValue}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the {@link PathValue}s.\n * @param {Array.<PathValue>} pathValues - the list of {@link PathValue}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setPathValues(model, pathValues, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[f_parent] || cache;\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathValueIndex = -1;\n    var pathValueCount = pathValues.length;\n\n    while (++pathValueIndex < pathValueCount) {\n\n        var pathValue = pathValues[pathValueIndex];\n        var path = pathValue.path;\n        var value = pathValue.value;\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathSet(\n            value, path, 0, cache, parent, node,\n            requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n            version, expired, modelRoot, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setPathSet(\n    value, path, depth, root, parent, node,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var results = setNode(\n            root, parent, node, key, value,\n            branch, false, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = results[0];\n        var nextParent = results[1];\n        var nextOptimizedPath = results[2];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setPathSet(\n                    value, path, depth + 1,\n                    root, nextParent, nextNode,\n                    requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                    version, expired, lru, comparator, errorSelector, expireImmediate\n                );\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(\n    value, root, node, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var container = node;\n        parent = root;\n\n        node = node[f_context];\n\n        if (node != null) {\n            parent = node[f_parent] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                optimizedPath.index = index;\n\n                var results = setNode(\n                    root, parent, node, key, value,\n                    branch, true, requestedPath, optimizedPath, version,\n                    expired, lru, comparator, errorSelector, expireImmediate\n                );\n                node = results[0];\n                optimizedPath = results[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return results;\n                }\n                parent = results[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[f_context] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(\n    root, parent, node, key, value,\n    branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = setReference(\n            value, root, node, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        optimizedPath = results[2];\n        type = node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(\n            parent, node, key, value,\n            branch, reference, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setPathValues.js","module.exports = updateBackReferenceVersions;\n\nfunction updateBackReferenceVersions(nodeArg, version) {\n    var node = nodeArg, stack = [], count = 0, ref, i, n;\n    do {\n        i = -1;\n        ref = node[f_parent];\n        node[f_version] = version;\n        n = node[f_refs_length] || 0;\n        do {\n            if (ref && ref[f_version] !== version) {\n                stack[count++] = ref;\n            }\n            if (++i < n) {\n                ref = node[f_ref + i];\n                continue;\n            }\n            break;\n        } while (true);\n    } while (node = stack[--count]);\n    return nodeArg;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/updateBackReferenceVersions.js","/**\n * Determined if the key passed in is an f_ internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nvar f_ = require('./f_');\nvar regexp = new RegExp('^' + f_, 'i', 'g');\n\nmodule.exports = regexp.test.bind(regexp);\n\n\n\n// WEBPACK FOOTER //\n// ./lib/internal/isInternal.js","var isObject = require('./../support/isObject');\nmodule.exports = function getTimestamp(node) {\n    return isObject(node) && node.$timestamp || undefined;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getTimestamp.js","module.exports = 0;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/values/expires-now.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() { return this; })();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 35\n// module chunks = 0","var toPaths = require('./toPaths');\nvar toCollapseMap = require('./toCollapseMap');\nvar toCollapseTrees = require('./toCollapseTrees');\n\nmodule.exports = function collapse(paths) {\n    return toPaths(toCollapseTrees(toCollapseMap(paths)));\n};\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/collapse.js","var isArray = Array.isArray;\nvar flatBufferToPaths = require('./flatBufferToPaths');\n\nmodule.exports = toCollapseMap;\n\nfunction toCollapseMap(paths, collapseMap) {\n    if (!paths) { return collapseMap; }\n    else if (!isArray(paths)) {\n        if (isArray(paths.$keys)) {\n            paths = flatBufferToPaths(paths);\n        }\n    }\n    return paths.reduce(function(acc, path) {\n        var len = path.length;\n        if (!acc[len]) {\n            acc[len] = [];\n        }\n        acc[len].push(path);\n        return acc;\n    }, collapseMap || {});\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toCollapseMap.js","var toTree = require('./toTree');\n\nmodule.exports = toCollapseTrees;\n\nfunction toCollapseTrees(collapseMap, collapseTrees) {\n    return Object.keys(collapseMap).reduce(function(collapseTrees, collapseKey) {\n        collapseTrees[collapseKey] = toTree(\n            collapseMap[collapseKey],\n            collapseTrees[collapseKey]\n        );\n        return collapseTrees;\n    }, collapseTrees || {});\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toCollapseTrees.js","var isArray = Array.isArray;\nvar typeOfObject = 'object';\nvar typeOfString = 'string';\nvar typeOfNumber = 'number';\nvar MAX_SAFE_INTEGER = 9007199254740991; // Number.MAX_SAFE_INTEGER in es6\nvar MAX_SAFE_INTEGER_DIGITS = 16; // String(Number.MAX_SAFE_INTEGER).length\nvar MIN_SAFE_INTEGER_DIGITS = 17; // String(Number.MIN_SAFE_INTEGER).length (including sign)\nvar abs = Math.abs;\nvar safeNumberRegEx = /^(0|(\\-?[1-9][0-9]*))$/;\nvar getHashCode = require('./getHashCode');\nvar materializedAtom = require('./support/materializedAtom');\n\n/* jshint forin: false */\nmodule.exports = function toPaths(lengths) {\n    var pathmap;\n    var allPaths = [];\n    var allPathsLength = 0;\n    for (var length in lengths) {\n        if (isSafeNumber(length) && isObject(pathmap = lengths[length])) {\n            var paths = collapsePathMap(pathmap, 0, parseInt(length, 10)).sets;\n            var pathsIndex = -1;\n            var pathsCount = paths.length;\n            while (++pathsIndex < pathsCount) {\n                allPaths[allPathsLength++] = collapsePathSetIndexes(paths[pathsIndex]);\n            }\n        }\n    }\n    return allPaths;\n};\n\nfunction isObject(value) {\n    return value !== null && typeof value === typeOfObject;\n}\n\nfunction collapsePathMap(pathmap, depth, length) {\n\n    var key;\n    var subs = Object.create(null);\n    var code = '' + getHashCode('' + depth);\n\n    var codes = [];\n    var codesIndex = -1;\n    var codesCount = 0;\n\n    var pathsets = [];\n    var pathsetsCount = 0;\n\n    var subPath, subCode,\n        subKeys, subKeysIndex, subKeysCount,\n        subSets, subSetsIndex, subSetsCount,\n        pathset, pathsetIndex, pathsetCount,\n        firstSubKey, pathsetClone;\n\n    subKeys = [];\n    subKeysIndex = -1;\n\n    if (depth < length - 1) {\n\n        subKeysCount = getSortedKeys(pathmap, subKeys);\n\n        while (++subKeysIndex < subKeysCount) {\n            key = subKeys[subKeysIndex];\n            subPath = collapsePathMap(pathmap[key], depth + 1, length);\n            subCode = subPath.code;\n            if(subs[subCode]) {\n                subPath = subs[subCode];\n            } else {\n                codes[codesCount++] = subCode;\n                subPath = subs[subCode] = {\n                    keys: [],\n                    sets: subPath.sets\n                };\n            }\n            code = '' + getHashCode(code + key + subCode);\n\n            isSafeNumber(key) &&\n                subPath.keys.push(parseInt(key, 10)) ||\n                subPath.keys.push(key);\n        }\n\n        while(++codesIndex < codesCount) {\n\n            key = codes[codesIndex];\n            subPath = subs[key];\n            subKeys = subPath.keys;\n            subKeysCount = subKeys.length;\n\n            if (subKeysCount > 0) {\n\n                subSets = subPath.sets;\n                subSetsIndex = -1;\n                subSetsCount = subSets.length;\n                firstSubKey = subKeys[0];\n\n                while (++subSetsIndex < subSetsCount) {\n\n                    pathset = subSets[subSetsIndex];\n                    pathsetIndex = -1;\n                    pathsetCount = pathset.length;\n                    pathsetClone = new Array(pathsetCount + 1);\n                    pathsetClone[0] = subKeysCount > 1 && subKeys || firstSubKey;\n\n                    while (++pathsetIndex < pathsetCount) {\n                        pathsetClone[pathsetIndex + 1] = pathset[pathsetIndex];\n                    }\n\n                    pathsets[pathsetsCount++] = pathsetClone;\n                }\n            }\n        }\n    } else {\n        subKeysCount = getSortedKeys(pathmap, subKeys);\n        if (subKeysCount > 1) {\n            pathsets[pathsetsCount++] = [subKeys];\n        } else {\n            pathsets[pathsetsCount++] = subKeys;\n        }\n        while (++subKeysIndex < subKeysCount) {\n            code = '' + getHashCode(code + subKeys[subKeysIndex]);\n        }\n    }\n\n    return {\n        code: code,\n        sets: pathsets\n    };\n}\n\nfunction collapsePathSetIndexes(pathset) {\n\n    var keysetIndex = -1;\n    var keysetCount = pathset.length;\n\n    while (++keysetIndex < keysetCount) {\n        var keyset = pathset[keysetIndex];\n        if (isArray(keyset)) {\n            pathset[keysetIndex] = collapseIndex(keyset);\n        }\n    }\n\n    return pathset;\n}\n\n/**\n * Collapse range indexers, e.g. when there is a continuous\n * range in an array, turn it into an object instead:\n *\n * [1,2,3,4,5,6] => {'from':1, 'to':6}\n *\n * @private\n */\nfunction collapseIndex(keyset) {\n\n    // Do we need to dedupe an indexer keyset if they're duplicate consecutive integers?\n    // var hash = {};\n    var keyIndex = -1;\n    var keyCount = keyset.length - 1;\n    var isSparseRange = keyCount > 0;\n\n    while (++keyIndex <= keyCount) {\n\n        var key = keyset[keyIndex];\n\n        if (!isSafeNumber(key) /* || hash[key] === true*/ ) {\n            isSparseRange = false;\n            break;\n        }\n        // hash[key] = true;\n        // Cast number indexes to integers.\n        keyset[keyIndex] = parseInt(key, 10);\n    }\n\n    if (isSparseRange === true) {\n\n        keyset.sort(sortListAscending);\n\n        var from = keyset[0];\n        var to = keyset[keyCount];\n\n        // If we re-introduce deduped integer indexers, change this comparson to '==='.\n        if (to - from <= keyCount) {\n            return { from: from, to: to };\n        }\n    }\n\n    return keyset;\n}\n\nfunction sortListAscending(a, b) {\n    return a - b;\n}\n\n/* jshint forin: false */\nfunction getSortedKeys(map, keys, sort) {\n    var len = 0;\n    if (map === materializedAtom) {\n        keys[len++] = null;\n    } else {\n        for (var key in map) {\n            keys[len++] = key;\n        }\n        if (len > 1) {\n            keys.sort(sort);\n        }\n    }\n    return len;\n}\n\n/**\n * Return true if argument is a number or can be cast to a number which\n * roundtrips to the same string.\n * @private\n */\nfunction isSafeNumber(val) {\n    var num = val;\n    var type = typeof val;\n    if (type === typeOfString) {\n        var length = val.length;\n        // Number.MIN_SAFE_INTEGER is 17 digits including the sign.\n        // Anything longer cannot be safe.\n        if (length === 0 || length > MIN_SAFE_INTEGER_DIGITS) {\n            return false;\n        }\n        if (!safeNumberRegEx.test(val)) {\n            return false;\n        }\n        // Number.MAX_SAFE_INTEGER is 16 digits.\n        // Anything shorter must be safe.\n        if (length < MAX_SAFE_INTEGER_DIGITS) {\n            return true;\n        }\n        num = +val;\n    } else if (type !== typeOfNumber) {\n        return false;\n    }\n    // Number.isSafeInteger(num) in es6.\n    return num % 1 === 0 && abs(num) <= MAX_SAFE_INTEGER;\n}\n\n// export for testing\nmodule.exports._isSafeNumber = isSafeNumber;\n\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toPaths.js","var isArray = Array.isArray;\nvar walkPathAndBuildOutput = require('./walkPath');\nvar walkFlatBufferAndBuildOutput = require('./walkFlatBuffer');\nvar getBoundCacheNode = require('../../getBoundCacheNode');\nvar InvalidModelError = require('../../../errors/InvalidModelError');\nvar toFlatBuffer = require('@graphistry/falcor-path-utils/lib/toFlatBuffer');\nvar computeFlatBufferHash = require('@graphistry/falcor-path-utils/lib/computeFlatBufferHash');\n\nmodule.exports = getJSON;\n\nfunction getJSON(model, paths, seed, progressive, expireImmediate) {\n\n    var node,\n        referenceContainer,\n        boundPath = model._path,\n        modelRoot = model._root,\n        cache = modelRoot.cache,\n        requestedPath, requestedLength,\n        optimizedPath, optimizedLength =\n            boundPath && boundPath.length || 0;\n\n    // If the model is bound, get the cache position.\n    if (optimizedLength) {\n        node = getBoundCacheNode(model);\n        // If there was a short, then we 'throw an error' to the outside\n        // calling function which will onError the observer.\n        if (node && node.$type) {\n            return { error: new InvalidModelError(boundPath, boundPath) };\n        }\n        // We need to get the new cache position and copy the bound path.\n        optimizedPath = [];\n        for (var i = 0; i < optimizedLength; ++i) {\n            optimizedPath[i] = boundPath[i];\n        }\n        referenceContainer = model._referenceContainer;\n    } else {\n        node = cache;\n        optimizedPath = [];\n    }\n\n    requestedPath = [];\n\n    var isFlatBuffer = false,\n        json = seed && seed.json,\n        results = { data: seed },\n        boxValues = model._boxed,\n        expired = modelRoot.expired,\n        recycleJSON = model._recycleJSON,\n        hasDataSource = Boolean(model._source),\n        branchSelector = modelRoot.branchSelector,\n        materialized = seed && model._materialized,\n        treatErrorsAsValues = model._treatErrorsAsValues,\n        allowFromWhenceYouCame = model._allowFromWhenceYouCame;\n\n    var arr, path, pathsIndex = 0, pathsCount = paths.length;\n\n    if (pathsCount > 0) {\n\n        if (recycleJSON) {\n            isFlatBuffer = true;\n            if (pathsCount > 1 || isArray(paths[0])) {\n                pathsCount = 1;\n                paths = [computeFlatBufferHash(toFlatBuffer(paths, {}))];\n            }\n        }\n\n        do {\n            path = paths[pathsIndex];\n            if (isFlatBuffer) {\n                arr = walkFlatBufferAndBuildOutput(cache, node, json, paths[0], 0, seed, results,\n                                                   requestedPath, optimizedPath, optimizedLength,\n                                                   /* fromReference = */ false, referenceContainer,\n                                                   modelRoot, expired, expireImmediate, branchSelector,\n                                                   boxValues, materialized, hasDataSource,\n                                                   treatErrorsAsValues, allowFromWhenceYouCame);\n            } else {\n                requestedLength = path.length;\n                arr = walkPathAndBuildOutput(cache, node, json, path,\n                                          /* depth = */ 0, seed, results,\n                                             requestedPath, requestedLength,\n                                             optimizedPath, optimizedLength,\n                                             /* fromReference = */ false, referenceContainer,\n                                             modelRoot, expired, expireImmediate, branchSelector,\n                                             boxValues, materialized, hasDataSource,\n                                             treatErrorsAsValues, allowFromWhenceYouCame);\n            }\n            json = arr[0];\n            arr[0] = undefined;\n            arr[1] = undefined;\n        } while (++pathsIndex < pathsCount);\n    }\n\n    var requested = results.requested;\n\n    results.args = isFlatBuffer && paths || requested;\n\n    if (requested && requested.length) {\n        results.relative = results.args;\n        if (optimizedLength) {\n            var boundRequested = [];\n            for (var i = 0, len = requested.length; i < len; ++i) {\n                boundRequested[i] = boundPath.concat(requested[i]);\n            }\n            results.requested = boundRequested;\n        }\n    }\n\n    if (results.hasValue) {\n        seed.json = json;\n    }\n\n    return results;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/getJSON.js","var arr = new Array(3);\nvar promote = require('../../../lru/promote');\nvar isExpired = require('../../isExpired');\nvar createHardlink = require('../../createHardlink');\nvar CircularReferenceError = require('../../../errors/CircularReferenceError');\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, ref, modelRoot, expireImmediate) {\n\n    promote(modelRoot, ref);\n\n    var context,\n        key, type, depth = 0,\n        node = root, path = ref.value,\n        copy = path, length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[f_context])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                throw new CircularReferenceError(path);\n            }\n            // If the node we land on isn't the existing ref context,\n            // create a hard-link between the reference and the node\n            // it points to.\n            else if (node !== context) {\n                createHardlink(ref, node);\n            }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === $ref) {\n\n                promote(modelRoot, node);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n    arr[2] = ref;\n\n    return arr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/getReferenceTarget.js","var clone = require('../../clone');\nvar onError = require('./onError');\n\nmodule.exports = onJSONValue;\n\nfunction onJSONValue(node, type, depth, seed, results,\n                     requestedPath, optimizedPath, optimizedLength,\n                     fromReference, boxValues, materialized,\n                     treatErrorsAsValues) {\n\n    if ($error === type && !treatErrorsAsValues) {\n        return onError(node, depth, results, requestedPath,\n                       fromReference, boxValues);\n    }\n\n    results.hasValue = true;\n\n    // boxValues always clones the node\n    return !boxValues ? node.value : clone(node);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/onValue.js","var walkPathAndBuildOutput = require('./walkPath');\nvar BoundJSONGraphModelError = require('../../../errors/BoundJSONGraphModelError');\n\nmodule.exports = getJSONGraph;\n\nfunction getJSONGraph(model, paths, seed, progressive, expireImmediate) {\n\n    var node, cache,\n        boundPath = model._path,\n        modelRoot = model._root,\n        requestedPath, requestedLength,\n        optimizedPath, optimizedLength =\n            boundPath && boundPath.length || 0;\n\n    // If the model is bound, then get that cache position.\n    if (optimizedLength) {\n        // JSONGraph output cannot ever be bound or else it will\n        // throw an error.\n        return { error: new BoundJSONGraphModelError() };\n    } else {\n        optimizedPath = [];\n        cache = node = modelRoot.cache;\n    }\n\n    requestedPath = [];\n\n    var boxValues = model._boxed,\n        expired = modelRoot.expired,\n        materialized = model._materialized,\n        hasDataSource = Boolean(model._source),\n        treatErrorsAsValues = model._treatErrorsAsValues,\n\n        results = { data: seed },\n        pathsIndex = -1, pathsCount = paths.length;\n\n    while (++pathsIndex < pathsCount) {\n        var path = paths[pathsIndex];\n        requestedLength = path.length;\n        walkPathAndBuildOutput(cache, node, path,\n                            /* depth = */ 0, seed, results,\n                               requestedPath, requestedLength,\n                               optimizedPath, optimizedLength,\n              /* fromReference = */ false, modelRoot, expired, expireImmediate,\n                               boxValues, materialized, hasDataSource, treatErrorsAsValues);\n    }\n\n    results.args =\n    results.relative = results.requested;\n\n    return results;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/getJSONGraph.js","var isArray = Array.isArray;\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar clone = require('../clone');\nvar FalcorJSON = require('./json/FalcorJSON');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = onMaterialize;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterialize(json, path, depth, length,\n                       branchSelector, boxValues, modelRoot) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (depth === length) {\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta;\n\n    var nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        keysetIndex = -1, keysetLength = 0;\n\n    keyset = path[depth];\n\n    if (!json || typeofObject !== typeof json) {\n        json = {};\n        json.__proto__ = FalcorJSON.prototype;\n        json[f_meta_data] = f_meta = {};\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[f_meta_data])) {\n        json[f_meta_data] = f_meta = {};\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n    } else {\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            // insert the materialized branch\n            json[nextKey] = onMaterialize(\n                json[nextKey], path,\n                nextDepth, length,\n                branchSelector,\n                boxValues,\n                modelRoot\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMaterialize.js","var isArray = Array.isArray;\nvar isPathValue = require('../support/isPathValue');\nvar isJSONEnvelope = require('../support/isJSONEnvelope');\nvar isJSONGraphEnvelope = require('../support/isJSONGraphEnvelope');\n\nmodule.exports = groupCacheArguments;\n\nfunction groupCacheArguments(args) {\n\n    var groups = [];\n    var argIndex = -1;\n    var argCount = args.length;\n    var group, groupType, arg, argType;\n\n    while (++argIndex < argCount) {\n        arg = args[argIndex];\n        if (isArray(arg)) {\n            arg = { path: arg };\n            argType = 'PathValues';\n        } else if (isPathValue(arg)) {\n            argType = 'PathValues';\n        } else if (isJSONGraphEnvelope(arg)) {\n            argType = 'JSONGraphs';\n        } else if (isJSONEnvelope(arg)) {\n            argType = 'PathMaps';\n        }\n\n        if (groupType !== argType) {\n            groupType = argType;\n            groups.push(group = {\n                arguments: [],\n                inputType: argType\n            });\n        }\n\n        group.arguments.push(arg);\n    }\n\n    return groups;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/groupCacheArguments.js","module.exports = function insertNode(node, parent, key, version, optimizedPath) {\n    node[f_key] = key;\n    node[f_parent] = parent;\n\n    if (version !== undefined) {\n        node[f_version] = version;\n    }\n    if (!node[f_abs_path]) {\n        node[f_abs_path] = optimizedPath.slice(0, optimizedPath.index).concat(key);\n    }\n\n    parent[key] = node;\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/insertNode.js","var arr = new Array(2);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\nvar getSize = require('../../support/getSize');\nvar createHardlink = require('../createHardlink');\nvar getBoundCacheNode = require('../getBoundCacheNode');\nvar isInternalKey = require('../../support/isInternalKey');\nvar updateNodeAncestors = require('../updateNodeAncestors');\n\n/**\n * Sets a list of PathMaps into a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of @PathMapEnvelopes to set.\n */\n\nmodule.exports = invalidatePathMaps;\n\nfunction invalidatePathMaps(model, pathMapEnvelopes, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var comparator = modelRoot._comparator;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n\n    if (!node) {\n        return false;\n    }\n\n    var pathMapIndex = -1;\n    var parent = node[f_parent] || cache;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n\n        invalidatePathMap(\n            pathMapEnvelope.json, 0, cache, parent, node,\n            version, expired, lru, comparator, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return true;\n    }\n\n    return false;\n}\n\nfunction invalidatePathMap(\n    pathMap, depth, root, parent, node, version,\n    expired, lru, comparator, expireImmediate) {\n\n    if (!pathMap || typeof pathMap !== 'object' || pathMap.$type) {\n        return;\n    }\n\n    for (var key in pathMap) {\n        if (!isInternalKey(key)) {\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n            arr = invalidateNode(\n                root, parent, node,\n                key, child, branch, false, version, expired,\n                lru, comparator, expireImmediate\n            );\n            var nextNode = arr[0];\n            var nextParent = arr[1];\n            if (nextNode) {\n                if (branch) {\n                    invalidatePathMap(\n                        child, depth + 1,\n                        root, nextParent, nextNode,\n                        version, expired, lru, comparator, expireImmediate\n                    );\n                } else {\n                    updateNodeAncestors(nextNode, getSize(nextNode), lru, version);\n                }\n            }\n        }\n    }\n}\n\nfunction invalidateReference(\n    value, root, node, version,\n    expired, lru, comparator, expireImmediate) {\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return arr;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[f_context];\n\n    if (node != null) {\n        parent = node[f_parent] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            arr = invalidateNode(\n                root, parent, node,\n                key, value, branch, true, version,\n                expired, lru, comparator, expireImmediate\n            );\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return arr;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\nfunction invalidateNode(\n    root, parent, node,\n    key, value, branch, reference, version,\n    expired, lru, comparator, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        arr = invalidateReference(\n            value, root, node, version, expired,\n            lru, comparator, expireImmediate\n        );\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return arr;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new Error('`null` is not allowed in branch key positions.');\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/invalidatePathMaps.js","var $now = require('../values/expires-now');\nvar getType = require('../support/getType');\nvar getSize = require('../support/getSize');\nvar getTimestamp = require('../support/getTimestamp');\n\nvar wrapNode = require('./wrapNode');\nvar isExpired = require('./isExpired');\nvar expireNode = require('./expireNode');\nvar insertNode = require('./insertNode');\nvar replaceNode = require('./replaceNode');\nvar reconstructPath = require('./reconstructPath');\nvar updateNodeAncestors = require('./updateNodeAncestors');\nvar removeNodeAndDescendants = require('./removeNodeAndDescendants');\n\nmodule.exports = function mergeValueOrInsertBranch(\n    parent, node, key, value,\n    branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var cType = getType(node, reference);\n\n    if (branch || reference) {\n        if (cType && isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge if it expires immediately\n             */\n            true)) {\n            expireNode(node, expired, lru);\n            cType = node.$expires === $now ? cType : 'expired';\n        }\n        if ((cType && cType !== $ref) || (!node || typeof node !== 'object')) {\n            node = replaceNode(node, {}, parent, key, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    } else {\n        var message = value;\n        var isDistinct = true;\n        var mType = getType(message);\n\n        // If both the cache and message are primitives,\n        // insert the message into the cache.\n        if (!cType && !mType) {\n            isDistinct = true;\n        }\n        // Compare the current cache value with the new value. If either of\n        // them don't have a timestamp, or the message's timestamp is newer,\n        // replace the cache value with the message value. If a comparator\n        // is specified, the comparator takes precedence over timestamps.\n        else if (comparator) {\n            isDistinct = !(comparator.length < 3 ?\n                comparator(node, message) : comparator(node, message,\n                    optimizedPath.slice(0, optimizedPath.index))\n            );\n        } else {\n            // Comparing either Number or undefined to undefined always results in false.\n            isDistinct = getTimestamp(message) < getTimestamp(node) === false;\n        }\n\n        if (isDistinct) {\n\n            if (errorSelector && mType === $error) {\n                message = errorSelector(reconstructPath(requestedPath, key), message);\n            }\n\n            var sizeOffset = getSize(node) - getSize(message =\n                wrapNode(message, mType, mType ? message.value : message));\n\n            node = replaceNode(node, message, parent, key, lru, version);\n            parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/mergeValueOrInsertBranch.js","/**\n * Reconstructs the path for the current key, from currentPath (requestedPath)\n * state maintained during set/merge walk operations.\n *\n * During the walk, since the requestedPath array is updated after we attempt to\n * merge/insert nodes during a walk (it reflects the inserted node's parent branch)\n * we need to reconstitute a path from it.\n *\n * @param  {Array} currentPath The current requestedPath state, during the walk\n * @param  {String} key        The current key value, during the walk\n * @return {Array} A new array, with the path which represents the node we're about\n * to insert\n */\nmodule.exports = function reconstructPath(currentPath, key) {\n\n    var path = currentPath.slice(0, currentPath.depth);\n    path[path.length] = key;\n\n    return path;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/reconstructPath.js","var transferBackReferences = require('./transferBackReferences');\nvar removeNodeAndDescendants = require('./removeNodeAndDescendants');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = function replaceNode(node, replacement, parent, key, lru, version) {\n    if (node === replacement) {\n        return node;\n    } else if (!(!node || typeof node !== 'object')) {\n        transferBackReferences(node, replacement);\n        removeNodeAndDescendants(node, parent, key, lru);\n        updateBackReferenceVersions(replacement, version);\n    }\n\n    parent[key] = replacement;\n    return replacement;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/replaceNode.js","var isArray = Array.isArray;\nvar now = require('../support/now');\nvar clone = require('./../support/clone');\nvar getSize = require('./../support/getSize');\nvar getExpires = require('../support/getExpires');\nvar expiresNow = require('../values/expires-now');\n\nvar atomSize = 50;\n\nmodule.exports = function wrapNode(nodeArg, typeArg, value) {\n\n    var size = 0;\n    var node = nodeArg;\n    var type = typeArg;\n\n    if (type) {\n        var modelCreated = node[f_wrapped_value];\n        node = clone(node);\n        size = getSize(node);\n        node.$type = type;\n        node[f_prev] = undefined;\n        node[f_next] = undefined;\n        node[f_wrapped_value] = modelCreated || false;\n    } else {\n        node = { $type: $atom, value: value };\n        node[f_prev] = undefined;\n        node[f_next] = undefined;\n        node[f_wrapped_value] = true;\n    }\n\n    if (value == null) {\n        size = atomSize + 1;\n    } else if (size == null || size <= 0) {\n        switch (typeof value) {\n            case 'object':\n                if (isArray(value)) {\n                    size = atomSize + value.length;\n                } else {\n                    size = atomSize + 1;\n                }\n                break;\n            case 'string':\n                size = atomSize + value.length;\n                break;\n            default:\n                size = atomSize + 1;\n                break;\n        }\n    }\n\n    var expires = getExpires(node);\n\n    if (typeof expires === 'number' && expires < expiresNow) {\n        node.$expires = now() + (expires * -1);\n    }\n\n    node.$size = size;\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/wrapNode.js","var createErrorClass = require('./createErrorClass');\n\nmodule.exports = createErrorClass('CircularReferenceError', function(referencePath) {\n    this.message = 'Encountered circular reference ' + JSON.stringify(referencePath);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/CircularReferenceError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'An exception was thrown when making a request';\n\n/**\n * InvalidSourceError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidSourceError', function(error) {\n    this.message = MESSAGE + ':\\n\\t' + error;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidSourceError.js","module.exports = function lruSplice(root, object) {\n\n    // Its in the cache.  Splice out.\n    var prev = object[f_prev];\n    var next = object[f_next];\n    if (next) {\n        next[f_prev] = prev;\n    }\n    if (prev) {\n        prev[f_next] = next;\n    }\n    object[f_prev] = object[f_next] = undefined;\n\n    if (object === root[f_head]) {\n        root[f_head] = next;\n    }\n    if (object === root[f_tail]) {\n        root[f_tail] = prev;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/splice.js","var Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar $$observable = require('symbol-observable').default;\n\nmodule.exports = Source;\n\nfunction Source(subscribe) {\n    if (!subscribe) {\n        return;\n    }\n    switch (typeof subscribe) {\n        case 'object':\n            this.source = subscribe;\n            break;\n        case 'function':\n            this.source = { subscribe: subscribe };\n            break;\n    }\n}\n\nSource.prototype[$$observable] = function() {\n    return this;\n}\n\nSource.prototype.operator = function(destination) {\n    return this.subscribe(destination);\n}\n\n// Unused\n// Source.prototype.lift = function(operator, source) {\n//     source = new Source(source || this);\n//     source.operator = operator;\n//     source._promise = this._promise;\n//     return source;\n// }\n\nSource.prototype.subscribe = function(destination, x, y) {\n    return new Subscription([\n        this.operator.call(\n            this.source, !(destination instanceof Subscriber) ?\n                new Subscriber(destination, x, y) : destination)\n    ]);\n}\n\nSource.prototype.then = function then(onNext, onError) {\n    /* global Promise */\n    var source = this;\n    if (!this._promise) {\n        this._promise = new global['Promise'](function(resolve, reject) {\n            var values = [], rejected = false;\n            source.subscribe({\n                next: function(value) { values[values.length] = value; },\n                error: function(errors) { (rejected = true) && reject(errors); },\n                complete: function() {\n                    !rejected &&\n                    resolve(values.length <= 1 ? values[0] : values);\n                }\n            });\n        });\n    }\n    return this._promise.then(onNext, onError);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Source.js","var empty = {\n    dispose: function() {},\n    unsubscribe: function() {}\n};\n\nfunction ImmediateScheduler() {}\n\nImmediateScheduler.prototype.schedule = function schedule(action) {\n    action();\n    return empty;\n};\n\nmodule.exports = ImmediateScheduler;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/schedulers/ImmediateScheduler.js","var isObject = require('./../support/isObject');\n\nmodule.exports = function isJSONEnvelope(envelope) {\n    return isObject(envelope) && ('json' in envelope);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isJSONEnvelope.js","var isArray = Array.isArray;\nvar isObject = require('./../support/isObject');\n\nmodule.exports = function isJSONGraphEnvelope(envelope) {\n    return isObject(envelope) && isArray(envelope.paths) && (\n        isObject(envelope.jsonGraph) ||\n        isObject(envelope.jsong) ||\n        isObject(envelope.json) ||\n        isObject(envelope.values) ||\n        isObject(envelope.value)\n    );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isJSONGraphEnvelope.js","module.exports = Date.now;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/now.js","module.exports = 1;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/values/expires-never.js","var Model = require('./Model');\nvar FalcorJSON = require('./cache/get/json/FalcorJSON');\n\nfunction falcor(opts) {\n    if (!(this instanceof Model)) {\n        return new Model(opts);\n    }\n    Model.call(this, opts);\n}\n\nfalcor.prototype = Object.create(Model.prototype);\n\nfalcor['Model'] = Model;\nfalcor['FalcorJSON'] = FalcorJSON;\nfalcor['toProps'] = FalcorJSON.prototype.toProps;\n\nmodule.exports = falcor;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/index.js","var isArray = Array.isArray;\nvar getHashCode = require('./getHashCode');\n\nmodule.exports = computeFlatBufferHash;\n\nfunction computeFlatBufferHash(seed) {\n\n    if (seed === undefined) {\n        return undefined;\n    }\n\n    var code = '';\n    var keys = seed['$keys'];\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    while (++keysIndex < keysLength) {\n\n        var key = keys[keysIndex];\n\n        if (key === null) {\n            code = '' + getHashCode('' + code + 'null');\n            continue;\n        } else if (typeof key === 'object') {\n            key = '[' + key.from + '..' + (key.from + key.length - 1) + ']';\n        }\n\n        var next = computeFlatBufferHash(seed[keysIndex]);\n        if (next === undefined) {\n            code = '' + getHashCode('' + code + key);\n        } else {\n            code = '' + getHashCode('' + code + key + next['$code']);\n        }\n    }\n\n    seed['$code'] = code;\n\n    return seed;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/computeFlatBufferHash.js","var isArray = Array.isArray;\nvar materializedAtom = require('./support/materializedAtom');\n\nmodule.exports = hasIntersection\n\n/**\n * Tests to see if the intersection should be stripped from the\n * total paths.  The only way this happens currently is if the entirety\n * of the path is contained in the tree.\n * @private\n */\n\nfunction hasIntersection(tree, path, depth, length) {\n\n    if (depth === length) {\n        return true;\n    }\n\n    var intersects = true;\n    var keyset, keysetIndex = -1, keysetLength = 0;\n    var next, nextKey, nextDepth = depth + 1,\n        keyIsRange, rangeEnd, keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return tree === materializedAtom;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                break iteratingKeyset;\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        do {\n            if (nextDepth === length) {\n                if (tree[nextKey] !== null) {\n                    return false;\n                }\n            } else {\n                next = tree[nextKey];\n                if (next === null || next === undefined) {\n                    return false;\n                } else if (hasIntersection(next, path, nextDepth, length) === false) {\n                    return false;\n                }\n            }\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/hasIntersection.js","var isArray = Array.isArray;\nvar nullBuffer = { '$keys': [null], '$keysMap': { 'null': 0 } };\nvar flatBufferToPaths = require('./flatBufferToPaths');\n\nmodule.exports = toFlatBuffer;\n\nfunction toFlatBuffer(paths, seed) {\n    return paths.reduce(function(seed, path) {\n        if (isArray(path)) {\n            return pathToFlatBuffer(seed, path, 0, path.length);\n        } else if (isArray(path.$keys)) {\n            return toFlatBuffer(flatBufferToPaths(path), seed);\n        }\n        return seed;\n    }, seed || {});\n}\n\nfunction pathToFlatBuffer(seed, path, depth, length) {\n\n    if (depth === length) {\n        return undefined;\n    }\n\n    seed = seed || {};\n    var keys = seed['$keys'] || (seed['$keys'] = []);\n    var keysMap = seed['$keysMap'] || (seed['$keysMap'] = {});\n    var keysIndex = -1;\n\n    var keyset, keysetIndex = -1, keysetLength = 0;\n    var node, next, nextKey, nextDepth = depth + 1,\n        rangeEnd, keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return nullBuffer;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            if ('undefined' === typeof (keysIndex = keysMap[nextKey])) {\n                keysIndex = keys.length;\n            }\n            keys[keysIndex] = nextKey;\n            keysMap[nextKey] = keysIndex;\n            next = pathToFlatBuffer(seed[keysIndex], path, nextDepth, length);\n            if (next !== undefined) {\n                seed[keysIndex] = next;\n            }\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                break iteratingKeyset;\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyset = { from: nextKey, length: rangeEnd - nextKey + 1 };\n            nextKey = '[' + nextKey + '..' + rangeEnd + ']';\n            if ('undefined' === typeof (keysIndex = keysMap[nextKey])) {\n                keysIndex = keys.length;\n            }\n            keys[keysIndex] = keyset;\n            keysMap[nextKey] = keysIndex;\n            next = pathToFlatBuffer(seed[keysIndex], path, nextDepth, length);\n            if (next !== undefined) {\n                seed[keysIndex] = next;\n            }\n        }\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return seed;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toFlatBuffer.js","var isArray = Array.isArray;\nvar materializedAtom = require('./support/materializedAtom');\n\nmodule.exports = toTree;\n\n/**\n * @param {Array} paths -\n * @returns {Object} -\n */\n\nfunction toTree(paths, seed) {\n    return paths.reduce(function(seed, path) {\n        return pathToTree(seed, path, 0, path.length, null);\n    }, seed || {});\n};\n\nfunction pathToTree(seed, path, depth, length, value) {\n\n    if (depth === length) {\n        return true;\n    }\n\n    seed = seed || {};\n\n    var keyset, keysetIndex = -1, keysetLength = 0;\n    var node, next, nextKey, nextDepth = depth + 1,\n        keyIsRange, rangeEnd, keysOrRanges;\n\n    keyset = path[depth];\n\n    if (keyset === null) {\n        return materializedAtom;\n    }\n\n    iteratingKeyset: do {\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                break iteratingKeyset;\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        do {\n            if (nextDepth === length) {\n                seed[nextKey] = value;\n            } else {\n                node = seed[nextKey];\n                next = pathToTree(node, path, nextDepth, length, value);\n                if (!next) {\n                    seed[nextKey] = value;\n                } else if (!node) {\n                    seed[nextKey] = next;\n                }\n            }\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return seed;\n}\n\n\n\n// WEBPACK FOOTER //\n// .-path-utils/lib/toTree.js","var Call = require('./request/Call');\nvar ModelRoot = require('./ModelRoot');\nvar FalcorJSON = require('./cache/get/json/FalcorJSON');\nvar ModelDataSourceAdapter = require('./ModelDataSourceAdapter');\nvar TimeoutScheduler = require('./schedulers/TimeoutScheduler');\nvar ImmediateScheduler = require('./schedulers/ImmediateScheduler');\nvar collapse = require('@graphistry/falcor-path-utils/lib/collapse');\n\nvar getSize = require('./support/getSize');\nvar isObject = require('./support/isObject');\nvar isJSONEnvelope = require('./support/isJSONEnvelope');\nvar getCachePosition = require('./cache/getCachePosition');\nvar isJSONGraphEnvelope = require('./support/isJSONGraphEnvelope');\n\nvar setCache = require('./cache/set/setPathMaps');\nvar setJSONGraphs = require('./cache/set/setJSONGraphs');\n\nvar getJSON = require('./cache/get/json');\nvar getCache = require('./cache/getCache');\nvar getJSONGraph = require('./cache/get/jsonGraph');\n\nmodule.exports = Model;\n\n/**\n * This callback is invoked when the Model's cache is changed.\n * @callback Model~onChange\n */\n\n /**\n * This function is invoked on every JSONGraph Error retrieved from the DataSource. This function allows Error objects to be transformed before being stored in the Model's cache.\n * @callback Model~errorSelector\n * @param {Object} jsonGraphError - the JSONGraph Error object to transform before it is stored in the Model's cache.\n * @returns {Object} the JSONGraph Error object to store in the Model cache.\n */\n\n /**\n * This function is invoked every time a value in the Model cache is about to be replaced with a new value. If the function returns true, the existing value is replaced with a new value and the version flag on all of the value's ancestors in the tree are incremented.\n * @callback Model~comparator\n * @param {Object} existingValue - the current value in the Model cache.\n * @param {Object} newValue - the value about to be set into the Model cache.\n * @returns {Boolean} the Boolean value indicating whether the new value and the existing value are equal.\n */\n\n/**\n * A Model object is used to execute commands against a {@link JSONGraph} object. {@link Model}s can work with a local JSONGraph cache, or it can work with a remote {@link JSONGraph} object through a {@link DataSource}.\n * @constructor\n * @param {?Object} options - a set of options to customize behavior\n * @param {?DataSource} options.source - a data source to retrieve and manage the {@link JSONGraph}\n * @param {?JSONGraph} options.cache - initial state of the {@link JSONGraph}\n * @param {?number} options.maxSize - the maximum size of the cache. This value roughly correlates to item count (where itemCount = maxSize / 50). Each item by default is given a metadata `$size` of 50 (or its length when it's an array or string). You can get better control of falcor's memory usage by tweaking `$size`\n * @param {?number} options.collectRatio - the ratio of the maximum size to collect when the maxSize is exceeded\n * @param {?Model~errorSelector} options.errorSelector - a function used to translate errors before they are returned\n * @param {?Model~onChange} options.onChange - a function called whenever the Model's cache is changed\n * @param {?Model~comparator} options.comparator - a function called whenever a value in the Model's cache is about to be replaced with a new value.\n */\nfunction Model(opts) {\n\n    var options = opts || {};\n\n    this._node = options._node;\n    this._path = options._path || [];\n    this._source = options.source || options._source;\n    this._root = options._root || new ModelRoot(options, this);\n    this._recycleJSON = options.recycleJSON === true || options._recycleJSON;\n    this._scheduler = options.scheduler || options._scheduler || new ImmediateScheduler();\n\n    if (options._seed) {\n        this._recycleJSON = true;\n        this._seed = options._seed;\n        this._treatErrorsAsValues = true;\n    } else if (this._recycleJSON) {\n        this._treatErrorsAsValues = true;\n        this._seed = {};\n        this._seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    this._boxed = options.boxed === true || options._boxed || false;\n    this._materialized = options.materialized === true || options._materialized || false;\n    this._treatErrorsAsValues = options.treatErrorsAsValues === true || options._treatErrorsAsValues || false;\n    this._allowFromWhenceYouCame = options.allowFromWhenceYouCame === true || options._allowFromWhenceYouCame || false;\n\n    if (options.cache) {\n        this.setCache(options.cache);\n    }\n}\n\nModel.prototype.constructor = Model;\n\n/**\n * The get method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model}. The get method loads each value into a JSON object and returns in a ModelResponse.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - the requested data as JSON\n */\nModel.prototype.get = function get(...args) {\n    var seed = this._seed;\n    if (!seed) {\n        seed = {};\n        seed.__proto__ = FalcorJSON.prototype;\n    }\n    return new Call('get', this, args)._toJSON(seed, []);\n}\n\n/**\n * Sets the value at one or more places in the JSONGraph model. The set method accepts one or more {@link PathValue}s, each of which is a combination of a location in the document and the value to place there.  In addition to accepting  {@link PathValue}s, the set method also returns the values after the set operation is complete.\n * @function\n * @return {ModelResponse.<JSONEnvelope>} - an {@link Observable} stream containing the values in the JSONGraph model after the set was attempted\n */\nModel.prototype.set = function set(...args) {\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n    return new Call('set', this, args)._toJSON(seed, []);\n}\n\n/**\n * The preload method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model} and loads them into the Model cache.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - a ModelResponse that completes when the data has been loaded into the cache.\n */\nModel.prototype.preload = function preload(...args) {\n    return new Call('get', this, args)._toJSON(null, []);\n}\n\n/**\n * Invokes a function in the JSON Graph.\n * @function\n * @param {Path} functionPath - the path to the function to invoke\n * @param {Array.<Object>} args - the arguments to pass to the function\n * @param {Array.<PathSet>} refPaths - the paths to retrieve from the JSON Graph References in the message returned from the function\n * @param {Array.<PathSet>} thisPaths - the paths to retrieve from function's this object after successful function execution\n * @return {ModelResponse.<JSONEnvelope> - a JSONEnvelope contains the values returned from the function\n */\n\nModel.prototype.call = function call(...args) {\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n    return new Call('call', this, args)._toJSON(seed, []);\n}\n\n/**\n * The invalidate method synchronously removes several {@link Path}s or {@link PathSet}s from a {@link Model} cache.\n * @function\n * @param {...PathSet} path - the  paths to remove from the {@link Model}'s cache.\n */\nModel.prototype.invalidate = function invalidate(...args) {\n    return new Call('invalidate', this, args)._toJSON(null, null).then();\n}\n\n/**\n * Returns a new {@link Model} bound to a location within the {@link\n * JSONGraph}. The bound location is never a {@link Reference}: any {@link\n * Reference}s encountered while resolving the bound {@link Path} are always\n * replaced with the {@link Reference}s target value. For subsequent operations\n * on the {@link Model}, all paths will be evaluated relative to the bound\n * path. Deref allows you to:\n * - Expose only a fragment of the {@link JSONGraph} to components, rather than\n *   the entire graph\n * - Hide the location of a {@link JSONGraph} fragment from components\n * - Optimize for executing multiple operations and path looksup at/below the\n *   same location in the {@link JSONGraph}\n * @method\n * @param {Object} responseObject - an object previously retrieved from the\n * Model\n * @return {Model} - the dereferenced {@link Model}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.deref = require('./deref');\n\n/**\n * A dereferenced model can become invalid when the reference from which it was\n * built has been removed/collected/expired/etc etc.  To fix the issue, a from\n * the parent request should be made (no parent, then from the root) for a valid\n * path and re-dereference performed to update what the model is bound too.\n *\n * @method\n * @private\n * @return {Boolean} - If the currently deref'd model is still considered a\n * valid deref.\n */\nModel.prototype._hasValidParentReference = require('./deref/hasValidParentReference');\n\n/**\n * Get data for a single {@link Path}.\n * @param {Path} path - the path to retrieve\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     getValue('user.name').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.getValue = function getValue(path) {\n    return new Call('get', this, [path])\n        ._toJSON({}, [])\n        .lift(function(subscriber) {\n            return this.subscribe({\n                onNext: function(data) {\n                    var depth = -1;\n                    var x = data.json;\n                    var length = path.length;\n                    while (x && !x.$type && ++depth < length) {\n                        x = x[path[depth]];\n                    }\n                    subscriber.onNext(x);\n                },\n                onError: subscriber.onError.bind(subscriber),\n                onCompleted: subscriber.onCompleted.bind(subscriber)\n            })\n        });\n}\n\n/**\n * Set value for a single {@link Path}.\n * @param {Path} path - the path to set\n * @param {Object} value - the value to set\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     setValue('user.name', 'Jim').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.setValue = function setValue(path, value) {\n    path = arguments.length === 1 ? path.path : path;\n    value = arguments.length === 1 ? path : {path:path,value:value};\n    return new Call('set', this, [value])\n        ._toJSON({}, [])\n        .lift(function(subscriber) {\n            return this.subscribe({\n                onNext: function(data) {\n                    var depth = -1;\n                    var x = data.json;\n                    var length = path.length;\n                    while (x && !x.$type && ++depth < length) {\n                        x = x[path[depth]];\n                    }\n                    subscriber.onNext(x);\n                },\n                onError: subscriber.onError.bind(subscriber),\n                onCompleted: subscriber.onCompleted.bind(subscriber)\n            })\n        });\n}\n\n/**\n * Set the local cache to a {@link JSONGraph} fragment. This method can be a useful way of mocking a remote document, or restoring the local cache from a previously stored state.\n * @param {JSONGraph} jsonGraph - the {@link JSONGraph} fragment to use as the local cache\n */\nModel.prototype.setCache = function modelSetCache(cacheOrJSONGraphEnvelope) {\n\n    var modelRoot = this._root;\n    var cache = modelRoot.cache;\n\n    if (cacheOrJSONGraphEnvelope !== cache) {\n\n        var options = {\n            _path: [],\n            _boxed: false,\n            _root: modelRoot,\n            _materialized: false,\n            _treatErrorsAsValues: false\n        };\n\n        modelRoot.cache = this._node = {};\n\n        if (typeof cache !== 'undefined') {\n            modelRoot.expired = [];\n            modelRoot[f_head] = undefined;\n            modelRoot[f_tail] = undefined;\n            if (this._recycleJSON) {\n                this._seed = {};\n                this._seed.__proto__ = FalcorJSON.prototype;\n            }\n        }\n\n        var results, rootOnChangeHandler;\n        if (isJSONGraphEnvelope(cacheOrJSONGraphEnvelope)) {\n            results = setJSONGraphs(options, [cacheOrJSONGraphEnvelope]);\n        } else if (isJSONEnvelope(cacheOrJSONGraphEnvelope)) {\n            results = setCache(options, [cacheOrJSONGraphEnvelope]);\n        } else if (isObject(cacheOrJSONGraphEnvelope)) {\n            results = setCache(options, [{ json: cacheOrJSONGraphEnvelope }]);\n        }\n\n        if (results) {\n            // performs promotion without producing output.\n            if (results[0].length) {\n                getJSON(options, results[0], null, false, false);\n            }\n            if (results[2] && (rootOnChangeHandler = modelRoot.onChange)) {\n                rootOnChangeHandler();\n            }\n        }\n    } else if (typeof cache === 'undefined') {\n        this._root.cache = {};\n    }\n    return this;\n};\n\n/**\n * Get the local {@link JSONGraph} cache. This method can be a useful to store the state of the cache.\n * @param {...Array.<PathSet>} [pathSets] - The path(s) to retrieve. If no paths are specified, the entire {@link JSONGraph} is returned.\n * @return {JSONGraph} all of the {@link JSONGraph} data in the {@link Model} cache.\n * @example\n // Storing the boxshot of the first 10 titles in the first 10 genreLists to local storage.\n localStorage.setItem('cache', JSON.stringify(model.getCache('genreLists[0...10][0...10].boxshot')));\n */\nModel.prototype.getCache = function _getCache() {\n\n    var paths = Array.prototype.slice.call(arguments, 0);\n\n    if (paths.length === 0) {\n        return getCache(this._root.cache);\n    }\n\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n\n    var env = getJSONGraph({\n        _path: [],\n        _root: this._root,\n        _boxed: this._boxed,\n        _materialized: this._materialized,\n        _treatErrorsAsValues: this._treatErrorsAsValues\n    }, paths, seed).data;\n\n    env.paths = collapse(paths);\n\n    return env;\n};\n\n/**\n * Retrieves a number which is incremented every single time a value is changed underneath the Model or the object at an optionally-provided Path beneath the Model.\n * @param {Path?} path - a path at which to retrieve the version number\n * @return {Number} a version number which changes whenever a value is changed underneath the Model or provided Path\n */\nModel.prototype.getVersion = function getVersion(path) {\n    path = path || [];\n    if (Array.isArray(path) === false) {\n        throw new Error('Model#getVersion must be called with an Array path.');\n    }\n    if (this._path.length) {\n        path = this._path.concat(path);\n    }\n    return this._getVersion(this, path);\n};\n\n/* eslint-disable guard-for-in */\nModel.prototype._clone = function cloneModel(opts) {\n    var clone = new Model(this);\n    if (opts) {\n        for (var key in opts) {\n            var value = opts[key];\n            if (value === 'delete') {\n                delete clone[key];\n            } else if (key === '_path') {\n                clone[key] = value;\n                if (false === opts.hasOwnProperty('_node')) {\n                    delete clone['_node'];\n                }\n            } else {\n                clone[key] = value;\n            }\n        }\n    }\n    if (clone._path.length > 0) {\n        clone.setCache = void 0;\n    }\n    return clone;\n};\n/* eslint-enable */\n\n/**\n * Returns a clone of the {@link Model} that enables batching. Within the configured time period, paths for get operations are collected and sent to the {@link DataSource} in a batch. Batching can be more efficient if the {@link DataSource} access the network, potentially reducing the number of HTTP requests to the server.\n * @param {?Scheduler|number} schedulerOrDelay - Either a {@link Scheduler} that determines when to send a batch to the {@link DataSource}, or the number in milliseconds to collect a batch before sending to the {@link DataSource}. If this parameter is omitted, then batch collection ends at the end of the next tick.\n * @return {Model} a Model which schedules a batch of get requests to the DataSource.\n */\nModel.prototype.batch = function batch(schedulerOrDelay) {\n\n    var scheduler;\n\n    if (typeof schedulerOrDelay === 'number') {\n        scheduler = new TimeoutScheduler(Math.round(Math.abs(schedulerOrDelay)));\n    } else if (!schedulerOrDelay) {\n        scheduler = new TimeoutScheduler(1);\n    } else if (typeof schedulerOrDelay.schedule === 'function') {\n        scheduler = schedulerOrDelay;\n    } else if (typeof schedulerOrDelay === 'function') {\n        scheduler = { scheudle: schedulerOrDelay };\n    }\n\n    return this._clone({ _scheduler: scheduler });\n};\n\n/**\n * Returns a clone of the {@link Model} that disables batching. This is the default mode. Each get operation will be executed on the {@link DataSource} separately.\n * @name unbatch\n * @memberof Model.prototype\n * @function\n * @return {Model} a {@link Model} that batches requests of the same type and sends them to the data source together\n */\nModel.prototype.unbatch = function unbatch() {\n    return this._clone({ _scheduler: new ImmediateScheduler() });\n};\n\n/**\n * Returns a clone of the {@link Model} that treats errors as values. Errors will be reported in the same callback used to report data. Errors will appear as objects in responses, rather than being sent to the {@link Observable~onErrorCallback} callback of the {@link ModelResponse}.\n * @return {Model}\n */\nModel.prototype.treatErrorsAsValues = function treatErrorsAsValues() {\n    return this._clone({ _treatErrorsAsValues: true });\n};\n\n/**\n * Adapts a Model to the {@link DataSource} interface.\n * @return {DataSource}\n * @example\nvar model =\n    new falcor.Model({\n        cache: {\n            user: {\n                name: 'Steve',\n                surname: 'McGuire'\n            }\n        }\n    }),\n    proxyModel = new falcor.Model({ source: model.asDataSource() });\n\n// Prints 'Steve'\nproxyModel.getValue('user.name').\n    then(function(name) {\n        console.log(name);\n    });\n */\nModel.prototype.asDataSource = function asDataSource() {\n    return new ModelDataSourceAdapter(this);\n};\n\nModel.prototype._materialize = function materialize() {\n    return this._clone({\n        _materialized: true\n    });\n};\n\nModel.prototype._dematerialize = function dematerialize() {\n    return this._clone({\n        _materialized: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that boxes values returning the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the value inside it. This allows any metadata attached to the wrapper to be inspected.\n * @return {Model}\n */\nModel.prototype.boxValues = function boxValues() {\n    return this._clone({\n        _boxed: true\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that unboxes values, returning the value inside of the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the wrapper itself. This is the default mode.\n * @return {Model}\n */\nModel.prototype.unboxValues = function unboxValues() {\n    return this._clone({\n        _boxed: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that only uses the local {@link JSONGraph} and never uses a {@link DataSource} to retrieve missing paths.\n * @return {Model}\n */\nModel.prototype.withoutDataSource = function withoutDataSource() {\n    return this._clone({\n        _source: 'delete'\n    });\n};\n\n/* implement inspect method for node's inspect utility */\nModel.prototype.inspect = function inspect() {\n    return '{ v: ' + this.getVersion() + ' p: [' + this._path.join(', ') + '] }';\n}\n\nModel.prototype.toJSON = function toJSON() {\n    return {\n        $type: 'ref',\n        value: this.getPath()\n    };\n};\n\n/**\n * Returns the {@link Path} to the object within the JSON Graph that this Model references.\n * @return {Path}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.getPath = function getPath() {\n    return this._path.slice(0);\n};\n\n/**\n * This one is actually private.  I would not use this without talking to\n * jhusain, sdesai, or michaelbpaulson (github).\n * @private\n */\nModel.prototype._fromWhenceYouCame = function fromWhenceYouCame(allow) {\n    return this._clone({\n        _allowFromWhenceYouCame: allow === undefined ? true : allow\n    });\n};\n\nModel.prototype._optimizePath = function _optimizePath(path) {\n    var node = getCachePosition(this._root.cache, path);\n    var abs_path = node && node[f_abs_path] || [];\n    return abs_path.slice(0);\n};\n\nModel.prototype._getVersion = require('./cache/getVersion');\nModel.prototype._getPathValuesAsPathMap = getJSON;\nModel.prototype._getPathValuesAsJSONG = getJSONGraph;\n\nModel.prototype._setPathValues = require('./cache/set/setPathValues');\nModel.prototype._setPathMaps = require('./cache/set/setPathMaps');\nModel.prototype._setJSONGs = require('./cache/set/setJSONGraphs');\nModel.prototype._setCache = require('./cache/set/setPathMaps');\n\nModel.prototype._invalidatePathValues = require('./cache/invalidate/invalidatePathSets');\nModel.prototype._invalidatePathMaps = require('./cache/invalidate/invalidatePathMaps');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Model.js","function ModelDataSourceAdapter(model) {\n    this._model = model\n        // .boxValues()\n        ._materialize().treatErrorsAsValues();\n}\n\nModelDataSourceAdapter.prototype.get = function get(pathSets) {\n    return this._model.get.apply(this._model, pathSets)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.set = function set(jsongResponse) {\n    return this._model.set(jsongResponse)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.call = function call(path, args, suffixes, paths) {\n    return this._model.call.apply(this._model, [\n        path, args, suffixes\n    ].concat(paths))._toJSONG();\n};\n\nmodule.exports = ModelDataSourceAdapter;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ModelDataSourceAdapter.js","var functionTypeof = 'function';\nvar Requests = require('./request/Queue');\nvar getTimestamp = require('./support/getTimestamp');\n\nfunction ModelRoot(o, model) {\n\n    var options = o || {};\n\n    this.cache = {};\n    this.version = -1;\n    this.syncRefCount = 0;\n    this.maxRetryCount = 10;\n    this.topLevelModel = model;\n    this.requests = new Requests(this);\n    this.expired = options.expired || [];\n\n    this.collectRatio = 0.75;\n    this.maxSize = Math.pow(2, 53) - 1;\n\n    if (typeof options.collectRatio === 'number') {\n        this.collectRatio = options.collectRatio;\n    }\n\n    if (typeof options.maxSize === 'number') {\n        this.maxSize = options.maxSize;\n    }\n\n    if (typeof options.comparator === functionTypeof) {\n        this.comparator = options.comparator;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.errorSelector === functionTypeof) {\n        this.errorSelector = options.errorSelector;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.onChange === functionTypeof) {\n        this.onChange = options.onChange;\n    }\n\n    if (typeof options.onChangesCompleted === functionTypeof) {\n        this.onChangesCompleted = options.onChangesCompleted;\n    }\n}\n\nfunction defaultCompare(node, message) {\n    var cType = node && node.$type;\n    var mType = message && message.$type;\n    if (cType) {\n        // If the cache has a type, but the message is a primitive,\n        // the message might be the primitive response from the datasource.\n        // If so, return true, so we don't update the back-reference versions.\n        if (!mType) {\n            return node.value === message;\n        }\n        // If the message is older than the cache node, then isDistinct = false\n        else if (getTimestamp(message) < getTimestamp(node) === true) {\n            return true; // isDistinct = false\n        }\n        // Otherwise they are the same if all the following fields are the same.\n        return !(\n            cType !== mType ||\n            node.value !== message.value ||\n            node.$expires !== message.$expires\n        );\n    }\n    // If cache doesn't have a type but the message\n    // does, they must be different.\n    else if (mType) {\n        return false;\n    }\n    return node === message;\n}\n\nModelRoot.comparator = ModelRoot.prototype.comparator = defaultCompare;\n\nmodule.exports = ModelRoot;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ModelRoot.js","var getJSON = require('../get/json');\nvar getJSONGraph = require('../get/jsonGraph');\n\nmodule.exports = { json: json, jsonGraph: jsonGraph };\n\nfunction json(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue =  getJSON(model, thisPaths, data, progressive, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [\n            path, args, suffixes, thisPaths\n        ]\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed,\n            _materialized: model._materialized,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, thisPaths, data, true, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [\n            path, args, suffixes, thisPaths\n        ]\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/call/index.js","module.exports = {\n    json: require('./json/getJSON'),\n    jsonGraph: require('./jsonGraph/getJSONGraph')\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/index.js","var clone = require('../../clone');\n\nmodule.exports = onError;\n\nfunction onError(node, depth, results,\n                 requestedPath, fromReference, boxValues) {\n\n    var index = -1;\n    var length = depth + !!fromReference; // depth + 1 if fromReference === true\n    var errorPath = new Array(length);\n    var errorValue = !boxValues ? node.value : clone(node);\n\n    while (++index < length) {\n        errorPath[index] = requestedPath[index];\n    }\n\n    (results.errors || (results.errors = [])).push({\n        path: errorPath,\n        value: errorValue\n    });\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/onError.js","var arr = new Array(2);\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar onValue = require('./onValue');\nvar FalcorJSON = require('./FalcorJSON');\nvar isExpired = require('../../isExpired');\nvar onValueType = require('../onValueType');\nvar originalOnMissing = require('../onMissing');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar onMaterialize = require('../onMaterializeFlatBuffer');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar getHashCode = require('@graphistry/falcor-path-utils/lib/getHashCode');\nvar flatBufferToPaths = require('@graphistry/falcor-path-utils/lib/flatBufferToPaths');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, json, path,\n                                depth, seed, results, requestedPath,\n                                optimizedPath, optimizedLength,\n                                fromReference, referenceContainer,\n                                modelRoot, expired, expireImmediate,\n                                branchSelector, boxValues, materialized,\n                                hasDataSource, treatErrorsAsValues,\n                                allowFromWhenceYouCame) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === node ||\n        undefined !== (type = node.$type) ||\n        undefined === path) {\n        arr[1] = hasDataSource && node === undefined;\n        arr[0] = onValueType(node, type, json,\n                             path, depth, seed, results,\n                             requestedPath, depth,\n                             optimizedPath, optimizedLength,\n                             fromReference, modelRoot, expired, expireImmediate,\n                             branchSelector, boxValues, materialized, hasDataSource,\n                             treatErrorsAsValues, onValue, onMissing, onMaterialize);\n        return arr;\n    }\n\n    var f_meta, f_old_keys, f_new_keys, f_code = '';\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        keys = path['$keys'],\n        nodeAbsPath, jsonAbsPath,\n        nextDepth = depth + 1, rangeEnd,\n        nextJSON, nextReferenceContainer,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath, refContainerRefPath;\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[f_abs_path];\n    }\n\n    if (!json || typeofObject !== typeof json) {\n        json = undefined;\n    } else if (f_meta = json[f_meta_data]) {\n\n        nodeAbsPath = node[f_abs_path];\n        jsonAbsPath = f_meta[f_meta_abs_path];\n\n        if (!branchSelector && !(json instanceof FalcorJSON)) {\n            json.__proto__ = {};\n            json.__proto__[f_meta_data] = f_meta;\n            json.__proto__.__proto__ = FalcorJSON.prototype;\n        }\n\n        if (!arrayEqual(nodeAbsPath, jsonAbsPath)) {\n            f_meta['$code'] = '';\n            f_meta[f_meta_status] = 'pending';\n            f_meta[f_meta_abs_path] = nodeAbsPath;\n            f_meta[f_meta_version] = node[f_version];\n            refContainerRefPath && (f_meta[f_meta_deref_to] = refContainerRefPath);\n            refContainerAbsPath && (f_meta[f_meta_deref_from] = refContainerAbsPath);\n            if (f_old_keys = f_meta[f_meta_keys]) {\n                f_meta[f_meta_keys] = Object.create(null);\n                for (nextKey in f_old_keys) {\n                    if (f_old_keys[nextKey]) {\n                        delete json[nextKey];\n                    }\n                }\n            }\n            arr[0] = json;\n            arr[1] = true;\n            return arr;\n        } else if (!(\n            f_meta[f_meta_version]  !== node[f_version]  ||\n            f_meta['$code']         !== path['$code'])) {\n            results.hasValue = true;\n            arr[0] = json;\n            arr[1] = false;\n            return arr;\n        }\n\n        f_old_keys = f_meta[f_meta_keys];\n        f_meta[f_meta_abs_path] = nodeAbsPath;\n        f_meta[f_meta_version] = node[f_version];\n        refContainerRefPath && (f_meta[f_meta_deref_to] = refContainerRefPath);\n        refContainerAbsPath && (f_meta[f_meta_deref_from] = refContainerAbsPath);\n    }\n\n    f_new_keys = Object.create(null);\n\n    var keysIndex = -1;\n    var keysLength = keys.length;\n    var nextPath, nextPathKey,\n        hasMissingPath = false;\n\n    iteratingKeyset:\n    while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            f_code = '' + getHashCode('' + f_code + 'null');\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n            nextPathKey = nextKey;\n        }\n        // If the Keyset isn't null or primitive, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n            nextPathKey = '[' + nextKey + '..' + rangeEnd + ']';\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextPath === undefined) {\n\n                arr = walkPathAndBuildOutput(\n                    root, next, nextJSON, nextPath, nextDepth, seed,\n                    results, requestedPath, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined && !materialized) {\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n            else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                    // If the reference is expired, it will be invalidated and\n                    // reported as missing in the next call to walkPath below.\n                    next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                arr = walkPathAndBuildOutput(\n                    root, next, nextJSON, nextPath, nextDepth, seed,\n                    results, requestedPath, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined) {\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = {};\n                f_meta[f_meta_version] = node[f_version];\n                f_meta[f_meta_abs_path] = node[f_abs_path];\n                refContainerRefPath && (f_meta[f_meta_deref_to] = refContainerRefPath);\n                refContainerAbsPath && (f_meta[f_meta_deref_from] = refContainerAbsPath);\n                json = {};\n                json[f_meta_data] = f_meta;\n                json.__proto__ = FalcorJSON.prototype;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                // node creation to them.\n                if (branchSelector) {\n                    json = branchSelector(json);\n                } else {\n                    var tmp = json;\n                    json = {};\n                    json.__proto__ = tmp;\n                    tmp = undefined;\n                }\n            }\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && (nextKey in f_old_keys)) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        f_code = '' + getHashCode('' + f_code +\n                                 ( !hasMissingPath ? nextPathKey : '') +\n                                 (  nextPath ? nextPath['$code'] : ''));\n    }\n\n    if (f_meta) {\n        f_meta['$code'] = f_code;\n        f_meta[f_meta_keys] = f_new_keys;\n        f_meta[f_meta_status] = hasMissingPath && 'pending' || 'resolved';\n        if (f_old_keys) {\n            for (nextKey in f_old_keys) {\n                if (f_old_keys[nextKey]) {\n                    delete json[nextKey];\n                }\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n\n    arr[0] = json;\n    arr[1] = hasMissingPath;\n\n    return arr;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, json, branchSelector,\n                   boxValues, onMaterialize, modelRoot) {\n\n    if (reportMaterialized) {\n        return onMaterialize(json, path, depth, depth, branchSelector,\n                             boxValues, modelRoot, results, requestedPath, optimizedPath,\n                             optimizedLength, fromReference, reportMissing, onMissing);\n    }\n\n    var paths = path ? flatBufferToPaths(path) : [[]];\n    var rPath = requestedPath.slice(0, requestedLength);\n\n    return paths.forEach(function(restPath) {\n        requestedLength = depth + restPath.length;\n        return originalOnMissing(rPath.concat(restPath), depth, results,\n                                 requestedPath, requestedLength, fromReference,\n                                 optimizedPath, optimizedLength, reportMissing,\n                                 false, json, branchSelector,\n                                 boxValues, onMaterialize, modelRoot);\n    });\n}\n\nfunction arrayEqual(xs, ys) {\n    if (xs === ys) {\n        return true;\n    }\n    var len = xs.length;\n    if (len !== ys.length) {\n        return false;\n    }\n    while (~--len) {\n        if (xs[len] !== ys[len]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/walkFlatBuffer.js","var arr = new Array(2);\nvar isArray = Array.isArray;\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar onValue = require('./onValue');\nvar onMissing = require('../onMissing');\nvar FalcorJSON = require('./FalcorJSON');\nvar onValueType = require('../onValueType');\nvar isExpired = require('../../isExpired');\nvar onMaterialize = require('../onMaterialize');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, json, path,\n                                depth, seed, results,\n                                requestedPath, requestedLength,\n                                optimizedPath, optimizedLength,\n                                fromReference, referenceContainer,\n                                modelRoot, expired, expireImmediate,\n                                branchSelector, boxValues, materialized,\n                                hasDataSource, treatErrorsAsValues,\n                                allowFromWhenceYouCame) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (\n        type = node.$type) || (\n        depth === requestedLength)) {\n        arr[1] = hasDataSource && node === undefined;\n        arr[0] = onValueType(node, type, json,\n                             path, depth, seed, results,\n                             requestedPath, requestedLength,\n                             optimizedPath, optimizedLength,\n                             fromReference, modelRoot, expired, expireImmediate,\n                             branchSelector, boxValues, materialized, hasDataSource,\n                             treatErrorsAsValues, onValue, onMissing, onMaterialize);\n        return arr;\n    }\n\n    var f_meta;\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        nextJSON, nextReferenceContainer,\n        keysetIndex = -1, keysetLength = 0,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath, refContainerRefPath;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        arr[0] = json;\n        arr[1] = false;\n        return arr;\n    }\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[f_abs_path];\n    }\n\n    if (!json || typeofObject !== typeof json) {\n        json = undefined;\n    } else if (f_meta = json[f_meta_data]) {\n        f_meta[f_meta_version] = node[f_version];\n        f_meta[f_meta_abs_path] = node[f_abs_path];\n        refContainerRefPath && (f_meta[f_meta_deref_to] = refContainerRefPath);\n        refContainerAbsPath && (f_meta[f_meta_deref_from] = refContainerAbsPath);\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n     var hasMissingPath = false;\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextDepth === requestedLength) {\n\n                arr = walkPathAndBuildOutput(\n                    root, next, nextJSON, path, nextDepth, seed,\n                    results, requestedPath, requestedLength, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined && !materialized) {\n                    continue;\n                }\n            }\n            else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                    // If the reference is expired, it will be invalidated and\n                    // reported as missing in the next call to walkPath below.\n                    next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                arr = walkPathAndBuildOutput(\n                    root, next, nextJSON, path, nextDepth, seed,\n                    results, requestedPath, requestedLength, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined) {\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = {};\n                f_meta[f_meta_version] = node[f_version];\n                f_meta[f_meta_abs_path] = node[f_abs_path];\n                refContainerRefPath && (f_meta[f_meta_deref_to] = refContainerRefPath);\n                refContainerAbsPath && (f_meta[f_meta_deref_from] = refContainerAbsPath);\n                json = {};\n                json[f_meta_data] = f_meta;\n                json.__proto__ = FalcorJSON.prototype;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                // node creation to them.\n                if (branchSelector) {\n                    json = branchSelector(json);\n                }\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    if (f_meta) {\n        f_meta[f_meta_status] = hasMissingPath && 'pending' || 'resolved';\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    arr[0] = json;\n    arr[1] = hasMissingPath;\n\n    return arr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/walkPath.js","var arr = new Array(2);\nvar clone = require('../../clone');\nvar inlineValue = require('./inlineValue');\nvar promote = require('../../../lru/promote');\nvar isExpired = require('../../isExpired');\nvar createHardlink = require('../../createHardlink');\nvar CircularReferenceError = require('../../../errors/CircularReferenceError');\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, ref, modelRoot, seed, expireImmediate) {\n\n    promote(modelRoot, ref);\n\n    var context,\n        key, type, depth = 0,\n        node = root, path = ref.value,\n        copy = path, length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[f_context])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                throw new CircularReferenceError(path);\n            }\n            // If the node we land on isn't the existing ref context,\n            // create a hard-link between the reference and the node\n            // it points to.\n            else if (node !== context) {\n                createHardlink(ref, node);\n            }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === $ref) {\n\n                promote(modelRoot, node);\n\n                seed && inlineValue(clone(node), path, length, seed);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n\n    return arr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/getReferenceTarget.js","var typeofObject = 'object';\nvar clone = require('../../clone');\nvar inlineValue = require('./inlineValue');\n\nmodule.exports = onJSONGraphValue;\n\nfunction onJSONGraphValue(node, type, depth, seed, results,\n                          requestedPath, optimizedPath, optimizedLength,\n                          fromReference, boxValues, materialized) {\n\n    var value = node.value;\n\n    // boxValues always clones the node\n    if (boxValues || !(\n        /**\n         * JSON Graph should always clone:\n         * - refs\n         * - errors\n         * - atoms we didn't create\n         * - atoms we created to wrap Objects\n         **/\n        $ref !== type &&\n        $error !== type &&\n        node[f_wrapped_value] &&\n        typeofObject !== typeof value)) {\n        value = clone(node);\n    }\n\n    results.hasValue = true;\n    inlineValue(value, optimizedPath, optimizedLength, seed);\n    (seed.paths || (seed.paths = [])).push(\n        requestedPath.slice(0, depth + !!fromReference) // depth + 1 if fromReference === true\n    );\n\n    return value;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/onValue.js","var isArray = Array.isArray;\nvar clone = require('../../clone');\nvar onValue = require('./onValue');\nvar inlineValue = require('./inlineValue');\nvar isExpired = require('../../isExpired');\nvar onValueType = require('../onValueType');\nvar onMaterialize = require('../onMaterialize');\nvar originalOnMissing = require('../onMissing');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, path,\n                                depth, seed, results,\n                                requestedPath, requestedLength,\n                                optimizedPath, optimizedLength,\n                                fromReference, modelRoot, expired, expireImmediate,\n                                boxValues, materialized, hasDataSource, treatErrorsAsValues) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (\n        type = node.$type) || (\n        depth === requestedLength)) {\n        return onValueType(node, type, seed,\n                           path, depth, seed, results,\n                           requestedPath, requestedLength,\n                           optimizedPath, optimizedLength,\n                           fromReference, modelRoot, expired, expireImmediate,\n                           undefined, boxValues, materialized, hasDataSource,\n                           treatErrorsAsValues, onValue, onMissing, onMaterialize);\n    }\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        keysetIndex = -1, keysetLength = 0,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        return undefined;\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            keyset = keysOrRanges[keysetIndex];\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            // If we encounter a ref, inline the reference target and continue\n            // evaluating the path.\n            if (next &&\n                nextDepth < requestedLength &&\n                // If the reference is expired, it will be invalidated and\n                // reported as missing in the next call to walkPath below.\n                next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                // Write the cloned ref value into the jsonGraph at the\n                // optimized path. JSONGraph must always clone references.\n                seed && inlineValue(clone(next), optimizedPath, nextOptimizedLength, seed);\n\n                // Retrieve the reference target and next referenceContainer (if\n                // this reference points to other references) and continue\n                // following the path. If the reference resolves to a missing\n                // path or leaf node, it will be handled in the next call to\n                // walkPath.\n                refTarget = getReferenceTarget(root, next, modelRoot, seed, expireImmediate);\n\n                next = refTarget[0];\n                fromReference = true;\n                nextOptimizedPath = refTarget[1];\n                nextOptimizedLength = nextOptimizedPath.length;\n                refTarget[0] = refTarget[1] = undefined;\n            }\n\n            walkPathAndBuildOutput(\n                root, next, path, nextDepth, seed,\n                results, requestedPath, requestedLength, nextOptimizedPath,\n                nextOptimizedLength, fromReference, modelRoot, expired, expireImmediate,\n                boxValues, materialized, hasDataSource, treatErrorsAsValues\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return undefined;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, seed, branchSelector,\n                   boxValues, onMaterialize, modelRoot) {\n\n    var json, isLeaf;\n\n    if (seed && reportMaterialized) {\n\n        (seed.paths || (seed.paths = [])).push(\n            (isLeaf = 0 === requestedLength - depth) &&\n                                 // depth + 1 if fromReference === true\n                requestedPath.slice(0, depth + !!fromReference) ||\n                requestedPath.slice(0, depth).concat(path\n                    .slice(depth, requestedLength + !!fromReference))\n        );\n\n        json = inlineValue(isLeaf && clone(materializedAtom) || undefined,\n                           optimizedPath, optimizedLength, seed, !isLeaf);\n    }\n\n    return originalOnMissing(path, depth, results,\n                             requestedPath, requestedLength, fromReference,\n                             optimizedPath, optimizedLength, reportMissing,\n                             !isLeaf && reportMaterialized, json,\n                             branchSelector, true, onMaterialize, modelRoot);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/walkPath.js","var typeofNumber = 'number';\nvar typeofObject = 'object';\nvar clone = require('../clone');\nvar onValueType = require('./onValueType');\nvar FalcorJSON = require('./json/FalcorJSON');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = onMaterializeFlatBuffer;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterializeFlatBuffer(json, path, depth, length,\n                                 branchSelector, boxValues, modelRoot, results,\n                                 requestedPath, optimizedPath, optimizedLength,\n                                 fromReference, reportMissing, onMissing) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === path) {\n        onValueType(undefined, undefined, json,\n                    path, depth, undefined, results,\n                    requestedPath, depth, optimizedPath,\n                    optimizedLength, fromReference, modelRoot, undefined,\n                    false, branchSelector, boxValues, false, reportMissing,\n                    false, undefined, onMissing, undefined);\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta, f_old_keys, f_new_keys;\n\n    var nextKey,\n        keyset, keyIsRange,\n        keys = path['$keys'],\n        nextDepth = depth + 1, rangeEnd,\n        nextOptimizedLength = optimizedLength + 1;\n\n    if (!json || typeofObject !== typeof json) {\n        json = {};\n        json.__proto__ = FalcorJSON.prototype;\n        json[f_meta_data] = f_meta = {};\n        f_meta['$code'] = '';\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[f_meta_data])) {\n        json[f_meta_data] = f_meta = {};\n        f_meta['$code'] = '';\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n    } else {\n        f_old_keys = f_meta[f_meta_keys];\n        f_meta['$code'] = '';\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n    }\n\n    f_new_keys = Object.create(null);\n\n    var nextPath;\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    iteratingKeyset:\n    while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If the Keyset isn't null or primitive, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && (nextKey in f_old_keys)) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // insert the materialized branch\n            json[nextKey] = onMaterializeFlatBuffer(\n                json[nextKey], nextPath, nextDepth,\n                nextDepth, branchSelector, boxValues, modelRoot, results,\n                requestedPath, optimizedPath, nextOptimizedLength,\n                fromReference, reportMissing, onMissing\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n    }\n\n    f_meta[f_meta_keys] = f_new_keys;\n    if (f_old_keys) {\n        for (nextKey in f_old_keys) {\n            if (f_old_keys[nextKey]) {\n                delete json[nextKey];\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMaterializeFlatBuffer.js","var isInternalKey = require('../support/isInternalKey');\n\n/**\n * decends and copies the cache.\n */\nmodule.exports = function getCache(cache) {\n    var out = {};\n    _copyCache(cache, out);\n\n    return out;\n};\n\nfunction cloneBoxedValue(boxedValue) {\n    var clonedValue = {};\n\n    var keys = Object.keys(boxedValue);\n    var key;\n    var i;\n    var l;\n\n    for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n\n        if (key === '$type' || !isInternalKey(key)) {\n            clonedValue[key] = boxedValue[key];\n        }\n    }\n\n    return clonedValue;\n}\n\nfunction _copyCache(node, out, fromKey) {\n    // copy and return\n\n    // only copy objects\n    if (!node || typeof node !== 'object') {\n        return;\n    }\n\n    Object.\n        keys(node).\n        filter(function(key) {\n            // Its not an internal key and the node has a value.  In the cache\n            // there are 3 possibilities for values.\n            // 1: A branch node.\n            // 2: A $type-value node.\n            // 3: undefined\n            // We will strip out 3\n            return (key === '$type' || !isInternalKey(key)) && node[key] !== undefined;\n        }).\n        forEach(function(key) {\n            var cacheNext = node[key];\n            var outNext = out[key];\n\n            if (!outNext) {\n                outNext = out[key] = {};\n            }\n\n            // Paste the node into the out cache.\n            if (cacheNext.$type) {\n                var isObject = cacheNext.value && typeof cacheNext.value === 'object';\n                var isUserCreatedcacheNext = !cacheNext[f_wrapped_value];\n                var value;\n                if (isObject || isUserCreatedcacheNext) {\n                    value = cloneBoxedValue(cacheNext);\n                } else {\n                    value = cacheNext.value;\n                }\n\n                out[key] = value;\n                return;\n            }\n\n            _copyCache(cacheNext, outNext, key);\n        });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getCache.js","var getBoundCacheNode = require('./getBoundCacheNode');\n\nmodule.exports = function _getVersion(model, path) {\n    var node = getBoundCacheNode(model, path);\n    var version = node && node[f_version];\n    return (version == null) ? -1 : version;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getVersion.js","var groupCacheArguments = require('../groupCacheArguments');\n\nmodule.exports = {\n    json: invalidate,\n    jsonGraph: invalidate,\n    invalidatePathMaps: require('./invalidatePathMaps'),\n    invalidatePathValues: require('./invalidatePathSets')\n};\n\nfunction invalidate(model, args, seed, progressive, expireImmediate) {\n    if (invalidateArgumentGroups(model, groupCacheArguments(args), expireImmediate)) {\n        var rootChangeHandler = model._root.onChange;\n        rootChangeHandler && rootChangeHandler();\n    }\n    return {};\n}\n\nfunction invalidateArgumentGroups(model, xs, expireImmediate) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            if (inputType === 'PathValues') {\n                groupedArgs = groupedArgs.map(pluckPaths);\n            }\n            var operation = module.exports['invalidate' + inputType];\n            if (operation(model, groupedArgs, expireImmediate)) {\n                changed = true;\n            }\n        }\n    }\n    return changed;\n}\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/index.js","var wrapNode = require('./wrapNode');\nvar isExpired = require('./isExpired');\nvar insertNode = require('./insertNode');\nvar expireNode = require('./expireNode');\nvar replaceNode = require('./replaceNode');\nvar getSize = require('../support/getSize');\nvar reconstructPath = require('./reconstructPath');\nvar getTimestamp = require('../support/getTimestamp');\nvar updateNodeAncestors = require('./updateNodeAncestors');\n\nmodule.exports = function mergeJSONGraphNode(\n    parent, node, message, key, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var sizeOffset;\n\n    var cType, mType,\n        cIsObject, mIsObject,\n        cTimestamp, mTimestamp;\n\n    // If the cache and message are the same, we can probably return early:\n    // - If they're both nullsy,\n    //   - If null then the node needs to be wrapped in an atom and inserted.\n    //     This happens from whole branch merging when a leaf is just a null value\n    //     instead of being wrapped in an atom.\n    //   - If undefined then return null (previous behavior).\n    // - If they're both branches, return the branch.\n    // - If they're both edges, continue below.\n    if (node === message) {\n\n        // The message and cache are both undefined, return undefined.\n        if (message === undefined) {\n            return message;\n        }\n        // There should not be undefined values. Those should always be\n        // wrapped in an $atom\n        else if (message === null) {\n            node = wrapNode(message, undefined, message);\n            parent = updateNodeAncestors(parent, -node.$size, lru, version);\n            node = insertNode(node, parent, key, undefined, optimizedPath);\n            return node;\n        }\n        // Is the cache node a branch? If so, return the cache branch.\n        else if ((\n            cIsObject = !(!node || typeof node !== 'object')) && (\n            cType = node.$type) === undefined) {\n            // Has the branch been introduced to the cache yet? If not,\n            // give it a parent, key, and absolute path.\n            if (node[f_parent] === undefined) {\n                insertNode(node, parent, key, version, optimizedPath);\n            }\n            return node;\n        }\n    } else if (cIsObject = !(!node || typeof node !== 'object')) {\n        cType = node.$type;\n    }\n\n    // If the cache isn't a reference, we might be able to return early.\n    if (cType !== $ref) {\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n        }\n        if (cIsObject && !cType) {\n            // If the cache is a branch and the message is empty or\n            // also a branch, continue with the cache branch.\n            if (message == null || (mIsObject && !mType)) {\n                return node;\n            }\n        }\n    }\n    // If the cache is a reference, we might not need to replace it.\n    else {\n        // If the cache is a reference, but the message is empty,\n        // leave the cache alone...\n        if (message == null) {\n            // ...unless the cache is an expired reference. In that case, expire\n            // the cache node and return undefined.\n            if (isExpired(node, expireImmediate)) {\n                expireNode(node, expired, lru);\n                return void 0;\n            }\n            return node;\n        }\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n            // If the cache and the message are both references,\n            // check if we need to replace the cache reference.\n            if (mType === $ref) {\n                if (node === message) {\n                    // If the cache and message are the same reference,\n                    // we performed a whole-branch merge of one of the\n                    // grandparents. If we've previously graphed this\n                    // reference, break early. Otherwise, continue to\n                    // leaf insertion below.\n                    if (node[f_parent] != null) {\n                        return node;\n                    }\n                } else {\n\n                    cTimestamp = node.$timestamp;\n                    mTimestamp = message.$timestamp;\n\n                    // - If either the cache or message reference is expired,\n                    //   replace the cache reference with the message.\n                    // - If neither of the references are expired, compare their\n                    //   timestamps. If either of them don't have a timestamp,\n                    //   or the message's timestamp is newer, replace the cache\n                    //   reference with the message reference.\n                    // - If the message reference is older than the cache\n                    //   reference, short-circuit.\n                    if (!isExpired(node, expireImmediate) &&\n                        !isExpired(message, expireImmediate) &&\n                        mTimestamp < cTimestamp) {\n                        return void 0;\n                    }\n                }\n            }\n        }\n    }\n\n    // If the cache is a leaf but the message is a branch,\n    // merge the branch over the leaf.\n    if (cType && mIsObject && !mType) {\n        return insertNode(replaceNode(\n                node, message, parent, key, lru, version),\n            parent, key, undefined, optimizedPath\n        );\n    }\n    // If the message is a sentinel or primitive, insert it into the cache.\n    else if (mType || !mIsObject) {\n\n        if (mType === $error && errorSelector) {\n            message = errorSelector(reconstructPath(requestedPath, key), message);\n        }\n\n        // If the cache and the message are the same value, we branch-merged one\n        // of the message's ancestors. If this is the first time we've seen this\n        // leaf, give the message a $size and $type, attach its graph pointers,\n        // and update the cache sizes and versions.\n        if (mType && node === message) {\n            if (!node[f_parent]) {\n                node = wrapNode(node, cType, node.value);\n                parent = updateNodeAncestors(parent, -node.$size, lru, version);\n                node = insertNode(node, parent, key, version, optimizedPath);\n            }\n        }\n        // If the cache and message are different, the cache value is expired,\n        // or the message is a primitive, replace the cache with the message value.\n        // If the message is a sentinel, clone and maintain its type.\n        // If the message is a primitive value, wrap it in an atom.\n        else {\n            var isDistinct = true;\n            // If both the cache and message are primitives, we branch-merged\n            // one of the message's ancestors. Insert the value into the cache.\n            if (!cType && !mType) {\n                isDistinct = true;\n            }\n            // If the cache is a branch, but the message is a leaf, replace the\n            // cache branch with the message leaf.\n            else if (!cIsObject || !isExpired(node, expireImmediate)) {\n                // Compare the current cache value with the new value. If either of\n                // them don't have a timestamp, or the message's timestamp is newer,\n                // replace the cache value with the message value. If a comparator\n                // is specified, the comparator takes precedence over timestamps.\n                if (comparator) {\n                    isDistinct = !(comparator.length < 3 ?\n                        comparator(node, message) : comparator(node, message,\n                            optimizedPath.slice(0, optimizedPath.index))\n                    );\n                } else {\n                    // Comparing either Number or undefined to undefined always results in false.\n                    isDistinct = getTimestamp(message) < getTimestamp(node) === false;\n                }\n            }\n            if (isDistinct) {\n                sizeOffset = getSize(node) - getSize(message =\n                    wrapNode(message, mType, mType ? message.value : message));\n                node = replaceNode(node, message, parent, key, lru, version);\n                parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n                node = insertNode(node, parent, key, version, optimizedPath);\n            }\n        }\n\n        // Promote the message edge in the LRU.\n        if (isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge.\n             */\n            true)) {\n            expireNode(node, expired, lru);\n        }\n    }\n    else if (node == null) {\n        node = insertNode(message, parent, key, undefined, optimizedPath);\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/mergeJSONGraphNode.js","var getJSON = require('../get/json');\nvar getJSONGraph = require('../get/jsonGraph');\nvar groupCacheArguments = require('../groupCacheArguments');\n\nmodule.exports = {\n    json: json,\n    jsonGraph: jsonGraph,\n    setPathMaps: require('./setPathMaps'),\n    setPathValues: require('./setPathValues'),\n    setJSONGraphs: require('./setJSONGraphs')\n};\n\nfunction json(model, _args, data, progressive, expireImmediate) {\n\n    var set, get, jsong,\n        changed, relative, optimized,\n        missing, fragments, requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args, expireImmediate);\n\n    if ((relative = set.requested).length) {\n\n        if (!(changed = set.changed) || progressive) {\n            get = getJSON(model, relative, data, progressive, expireImmediate);\n        }\n\n        if (changed) {\n\n            jsong = getJSONGraph({\n                _root: model._root,\n                _boxed: model._boxed, _materialized: true,\n                _treatErrorsAsValues: model._treatErrorsAsValues\n            }, set.optimized, {}, progressive, expireImmediate);\n\n            fragments = jsong.data;\n            missing = fragments.paths;\n            requested = jsong.requested;\n\n            var rootChangeHandler = model._root.onChange;\n            rootChangeHandler && rootChangeHandler();\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: get && get.error,\n        errors: get && get.errors,\n        hasValue: get && get.hasValue\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive, expireImmediate) {\n\n    var set, jsong,\n        changed, relative, optimized,\n        missing, fragments, requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args, expireImmediate);\n\n    if ((relative = set.requested).length && (\n         progressive || (changed = set.changed))) {\n\n        jsong = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed, _materialized: true,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, set.optimized, data, progressive, expireImmediate);\n\n        fragments = jsong.data;\n        missing = fragments.paths;\n        requested = jsong.requested;\n\n        if (changed) {\n            var rootChangeHandler = model._root.onChange;\n            rootChangeHandler && rootChangeHandler();\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: jsong && jsong.error,\n        hasValue: jsong && jsong.hasValue\n    };\n}\n\nfunction setGroupsIntoCache(model, xs, expireImmediate) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var modelRoot = model._root;\n    var errorSelector = modelRoot.errorSelector;\n\n    expireImmediate = expireImmediate && !Boolean(model._source);\n    var comparator = Boolean(model._source) ? null : modelRoot.comparator;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            var operation = module.exports['set' + inputType];\n            var results = operation(model, groupedArgs, errorSelector, comparator, expireImmediate);\n            changed = changed || results[2];\n            optimizedPaths.push.apply(optimizedPaths, results[1]);\n            if (inputType === 'PathValues') {\n                requestedPaths.push.apply(requestedPaths, groupedArgs.map(pluckPaths));\n            } else if (inputType === 'JSONGraphs') {\n                requestedPaths.push.apply(requestedPaths, arrayFlatMap(groupedArgs, pluckPaths));\n            } else {\n                requestedPaths.push.apply(requestedPaths, results[0]);\n            }\n        }\n    }\n\n    return {\n        changed: changed,\n        requested: requestedPaths,\n        optimized: optimizedPaths\n    };\n}\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\nfunction arrayFlatMap(array, selector) {\n    var index = -1;\n    var i = -1;\n    var n = array.length;\n    var array2 = [];\n    while (++i < n) {\n        var array3 = selector(array[i], i, array);\n        var j = -1;\n        var k = array3.length;\n        while (++j < k) {\n            array2[++index] = array3[j];\n        }\n    }\n    return array2;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/index.js","module.exports = function transferBackReferences(fromNode, destNode) {\n    var fromNodeRefsLength = fromNode[f_refs_length] || 0,\n        destNodeRefsLength = destNode[f_refs_length] || 0,\n        i = -1;\n    while (++i < fromNodeRefsLength) {\n        var ref = fromNode[f_ref + i];\n        if (ref !== undefined) {\n            ref[f_context] = destNode;\n            destNode[f_ref + (destNodeRefsLength + i)] = ref;\n            fromNode[f_ref + i] = undefined;\n        }\n    }\n    destNode[f_refs_length] = fromNodeRefsLength + destNodeRefsLength;\n    fromNode[f_refs_length] = undefined;\n    return destNode;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/transferBackReferences.js","module.exports = function unlinkBackReferences(node) {\n    var i = -1, n = node[f_refs_length] || 0;\n    while (++i < n) {\n        var ref = node[f_ref + i];\n        if (ref != null) {\n            ref[f_context] = ref[f_ref_index] = node[f_ref + i] = void 0;\n        }\n    }\n    node[f_refs_length] = void 0;\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/unlinkBackReferences.js","module.exports = function unlinkForwardReference(reference) {\n    var destination = reference[f_context];\n    if (destination) {\n        var i = (reference[f_ref_index] || 0) - 1,\n            n = (destination[f_refs_length] || 0) - 1;\n        while (++i <= n) {\n            destination[f_ref + i] = destination[f_ref + (i + 1)];\n        }\n        destination[f_refs_length] = n;\n        reference[f_ref_index] = reference[f_context] = destination = void 0;\n    }\n    return reference;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/unlinkForwardReference.js","module.exports = hasValidParentReference;\n\nfunction hasValidParentReference() {\n    var reference = this._referenceContainer;\n\n    // Always true when this mode is false.\n    if (!this._allowFromWhenceYouCame) {\n        return true;\n    }\n\n    // If fromWhenceYouCame is true and the first set of keys did not have\n    // a reference, this case can happen.  They are always valid.\n    if (reference === true) {\n        return true;\n    }\n\n    // was invalid before even derefing.\n    if (reference === false) {\n        return false;\n    }\n\n    // Its been disconnected (set over or collected) from the graph.\n    if (reference && reference[f_parent] === undefined) {\n        return false;\n    }\n\n    // The reference has expired but has not been collected from the graph.\n    if (reference && reference[f_invalidated]) {\n        return false;\n    }\n\n    return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/deref/hasValidParentReference.js","var CONTAINER_DOES_NOT_EXIST = 'e';\nvar FalcorJSON = require('../cache/get/json/FalcorJSON');\nvar getCachePosition = require('../cache/getCachePosition');\nvar InvalidDerefInputError = require('../errors/InvalidDerefInputError');\n\nmodule.exports = function deref(json) {\n\n    var seed, f_meta;\n\n    if (!json || 'object' !== typeof json || !(\n        f_meta = json[f_meta_data]) || 'object' !== typeof f_meta) {\n        return null;\n    }\n\n    var cacheRoot = this._root.cache;\n    var recycleJSON = this._recycleJSON;\n    var absolutePath = f_meta[f_meta_abs_path];\n    var referenceContainer, currentRefPath, i, len;\n\n    if (!absolutePath) {\n        if (recycleJSON) {\n            seed = { json: json };\n            seed.__proto__ = FalcorJSON.prototype;\n        }\n        return this._clone({\n            _node: undefined,\n            _seed: seed\n        });\n    } else if (absolutePath.length === 0) {\n        if (recycleJSON) {\n            seed = { json: json };\n            seed.__proto__ = FalcorJSON.prototype;\n        }\n        return this._clone({\n            _node: cacheRoot,\n            _path: absolutePath,\n            _referenceContainer: true,\n            _seed: seed\n        });\n    }\n\n    var originalRefPath = f_meta[f_meta_deref_to];\n    var originalAbsPath = f_meta[f_meta_deref_from];\n\n    // We deref and then ensure that the reference container is attached to\n    // the model.\n    var cacheNode = getCachePosition(cacheRoot, absolutePath);\n    var validContainer = CONTAINER_DOES_NOT_EXIST;\n\n    if (originalAbsPath) {\n\n        validContainer = false;\n\n        i = -1;\n        len = originalAbsPath.length;\n        referenceContainer = cacheRoot;\n        while (++i < len) {\n            referenceContainer = referenceContainer[originalAbsPath[i]];\n            if (!referenceContainer || referenceContainer.$type) {\n                break;\n            }\n        }\n\n        // If the reference container is still a sentinel value then compare\n        // the reference value with refPath.  If they are the same, then the\n        // model is still valid.\n        if (originalRefPath && referenceContainer && referenceContainer.$type === $ref) {\n            validContainer = true;\n            len = originalRefPath.length;\n            currentRefPath = referenceContainer.value;\n            for (i = 0; i < len; ++i) {\n                if (currentRefPath[i] !== originalRefPath[i]) {\n                    cacheNode = undefined;\n                    validContainer = false;\n                    break;\n                }\n            }\n        }\n    }\n\n    // Signal to the deref'd model that it has been disconnected from the\n    // graph or there is no _fromWhenceYouCame\n    if (!validContainer) {\n        referenceContainer = false;\n    }\n\n    // The container did not exist, therefore there is no reference\n    // container and fromWhenceYouCame should always return true.\n    else if (validContainer === CONTAINER_DOES_NOT_EXIST) {\n        referenceContainer = true;\n    }\n\n    if (recycleJSON) {\n        seed = { json: json };\n        seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    return this._clone({\n        _seed: seed,\n        _node: cacheNode,\n        _path: absolutePath,\n        _referenceContainer: referenceContainer\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/deref/index.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'It is not legal to use the JSON Graph ' +\n    'format from a bound Model. JSON Graph format' +\n    ' can only be used from a root model.';\n\n/**\n * When a bound model attempts to retrieve JSONGraph it should throw an\n * error.\n *\n * @private\n */\nmodule.exports = createErrorClass('BoundJSONGraphModelError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/BoundJSONGraphModelError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'Deref can only be used with a non-primitive object from get, set, or call.';\n\n/**\n * An invalid deref input is when deref is used with input that is not generated\n * from a get, set, or a call.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidDerefInputError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidDerefInputError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'The boundPath of the model is not valid since a value or error was found before the path end.';\n\n/**\n * An InvalidModelError can only happen when a user binds, whether sync\n * or async to shorted value.  See the unit tests for examples.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidModelError', function(boundPath, shortedPath) {\n    this.message = MESSAGE;\n    this.boundPath = boundPath;\n    this.shortedPath = shortedPath;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidModelError.js","var createErrorClass = require('./createErrorClass');\n\n/**\n * A request can only be retried up to a specified limit.  Once that\n * limit is exceeded, then an error will be thrown.\n *\n * @private\n */\nmodule.exports = createErrorClass('MaxRetryExceededError', function(maxRetryCount, absolute, relative, optimized) {\n    this.message = '' +\n        'Exceeded the max retry count (' + maxRetryCount + ') for these paths: \\n' +\n        (absolute &&\n        'absolute: [\\n\\t' + printPaths(absolute) + '\\n]\\n' || '') +\n        (relative &&\n        'relative: [\\n\\t' + printPaths(relative) + '\\n]\\n' || '') +\n        (optimized &&\n        'optimized: [\\n\\t' + printPaths(optimized) + '\\n]\\n' || '');\n});\n\nfunction printPaths(paths) {\n    return paths.map(function(path) {\n        return JSON.stringify(path);\n    }).join(',\\n\\t');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/MaxRetryExceededError.js","module.exports = String.fromCharCode(30) + 'ƒ_';\n\n\n\n// WEBPACK FOOTER //\n// ./lib/internal/f_.js","var updateNodeAncestors = require('../cache/updateNodeAncestors');\n\nmodule.exports = function collect(lru, expired, totalArg, max, ratioArg, version) {\n\n    var total = totalArg;\n    var ratio = ratioArg;\n\n    if (typeof ratio !== 'number') {\n        ratio = 0.75;\n    }\n\n    var node, size, targetSize = max * ratio;\n\n    while (node = expired.pop()) {\n        total -= (size = node.$size || 0);\n        updateNodeAncestors(node, size, lru, version);\n    }\n\n    if (total >= max) {\n        var prev = lru[f_tail];\n        while ((total >= targetSize) && (node = prev)) {\n            prev = prev[f_prev];\n            total -= (size = node.$size || 0);\n            updateNodeAncestors(node, size, lru, version);\n        }\n\n        lru[f_tail] = node;\n        if (node == null) {\n            lru[f_head] = undefined;\n        } else {\n            node[f_next] = undefined;\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/collect.js","var Source = require('./Source');\nvar Subscriber = require('./Subscriber');\nvar lruCollect = require('../lru/collect');\nvar FalcorJSON = require('../cache/get/json/FalcorJSON');\nvar collapse = require('@graphistry/falcor-path-utils/lib/collapse');\nvar InvalidSourceError = require('../errors/InvalidSourceError');\nvar MaxRetryExceededError = require('../errors/MaxRetryExceededError');\n\nmodule.exports = Call;\n\nfunction Call(type, model, _args) {\n    Source.call(this, type);\n    if (model && _args) {\n        this.type = type;\n        this.source = this;\n        this.model = model;\n        this._args = _args;\n    }\n}\n\nCall.prototype = Object.create(Source.prototype);\n\nCall.prototype.lift = function(operator, source) {\n    source = new Call(source || this);\n    source.type = this.type;\n    source.model = this.model;\n    source._args = this._args;\n    source.operator = operator;\n    operator.data = operator.data || this.operator.data;\n    operator.errors = operator.errors || this.operator.errors;\n    operator.operation = operator.operation || this.operator.operation;\n    operator.progressive = operator.progressive || this.operator.progressive;\n    operator.maxRetryCount = operator.maxRetryCount || this.operator.maxRetryCount;\n    return source;\n}\n\nCall.prototype.operator = function(subscriber) {\n    return this._subscribe(subscriber);\n}\n\nCall.prototype._subscribe = function(subscriber) {\n    subscriber.onNext({\n        type: this.type,\n        args: this._args,\n        model: this.model,\n        version: this.model._root.version\n    });\n    subscriber.onCompleted();\n    return subscriber;\n}\n\nCall.prototype._toJSON = function(data, errors) {\n    if (data === undefined) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    return this.lift(new CallOperator(\n        data, errors || this.operator.errors, 'json',\n        this.operator.progressive, this.operator.maxRetryCount\n    ), this.source);\n}\n\nCall.prototype._toJSONG = function(data, errors) {\n    if (data === undefined) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    return this.lift(new CallOperator(\n        data, errors || this.operator.errors, 'jsonGraph',\n        this.operator.progressive, this.operator.maxRetryCount\n    ), this.source);\n}\n\nCall.prototype.retry = function(maxRetryCount) {\n    return this.lift(new CallOperator(\n        this.operator.data,\n        this.operator.errors,\n        this.operator.operation,\n        this.operator.progresive,\n        maxRetryCount\n    ), this.source);\n}\n\nCall.prototype.progressively = function() {\n    return this.lift(new CallOperator(\n        this.operator.data,\n        this.operator.errors,\n        this.operator.operation,\n        true,\n        this.operator.maxRetryCount\n    ), this.source);\n}\n\nfunction CallOperator(data, errors, operation, progressive, maxRetryCount) {\n    this.data = data;\n    this.errors = errors;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallOperator.prototype.call = function(source, destination) {\n    return source.subscribe(new CallSubscriber(\n        destination, this.data, this.errors, this.operation, this.progressive\n    ));\n}\n\nfunction CallSubscriber(destination, data, errors, operation, progressive, maxRetryCount) {\n    Subscriber.call(this, destination);\n    this.data = data;\n    this.retryCount = -1;\n    this.errors = errors;\n    this.hasValue = false;\n    this.completed = false;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallSubscriber.prototype = Object.create(Subscriber.prototype);\nCallSubscriber.prototype.operations = {\n    get: require('../cache/get'),\n    set: require('../cache/set'),\n    call: require('../cache/call'),\n    invalidate: require('../cache/invalidate')\n};\n\nCallSubscriber.prototype.next =\nCallSubscriber.prototype.onNext = function(seed) {\n\n    if (!this.started) {\n        this.args = seed.args;\n        this.type = seed.type;\n        this.model = seed.model;\n        this.version = seed.version;\n        this.maxRetryCount = this.maxRetryCount || this.model._root.maxRetryCount;\n        return;\n    } else if (!this.destination) {\n        return;\n    }\n\n    var missing, fragments;\n    var type = seed.type;\n    var args = seed.args || seed.paths;\n\n    var data = this.data;\n    var model = this.model;\n    var errors = this.errors;\n    var results = this.results;\n    var version = this.version;\n    var hasValue = this.hasValue;\n    var operation = this.operation;\n    var progressive = this.progressive;\n    var seedIsImmutable = progressive && data;\n\n    if (model._recycleJSON && this.type === 'get') {\n        seedIsImmutable = false;\n    }\n\n    // If we request paths as JSON in progressive mode, ensure each progressive\n    // valueNode is immutable. If not in progressive mode, we can write into the\n    // same JSON tree until the request is completed.\n    if (seedIsImmutable) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n\n    if (args && args.length) {\n\n        results = this.operations[type]\n            [operation](model, args, data,\n                        progressive || !model._source,\n                        this.retryCount === -1);\n\n        // We must communicate critical errors from get, such as bound path is\n        // broken or this is a JSONGraph request with a bound path.\n        if (results.error) {\n            return tryOnError(this, results.error);\n        }\n\n        errors && results.errors &&\n            errors.push.apply(errors, results.errors);\n\n        if (fragments = results.fragments) {\n            args = results.args;\n            this.fragments = fragments;\n        }\n\n        this.relative = results.relative;\n        this.requested = results.requested;\n        this.missing = missing = results.missing;\n        this.hasValue = hasValue || (hasValue = results.hasValue);\n    }\n\n    // We are done when there are no missing paths or\n    // the model does not have a dataSource to fetch from.\n    this.completed = !missing || !model._source;\n\n    if (type !== 'set') {\n        this.args = args;\n        if (seedIsImmutable) {\n            this.data = mergeInto(data, this.data);\n        }\n    }\n\n    if (progressive && hasValue && data && (data.json || data.jsonGraph)) {\n        tryOnNext(data, operation, model._root, this.destination);\n    }\n}\n\nCallSubscriber.prototype.error =\nCallSubscriber.prototype.onError = function(error) {\n    if (error instanceof InvalidSourceError) {\n        return Subscriber.prototype.onError.call(this, error);\n    }\n    this.errored = true;\n    this.onCompleted(error);\n}\n\nCallSubscriber.prototype.complete =\nCallSubscriber.prototype.onCompleted = function(error) {\n\n    if (!this.destination) {\n        return;\n    }\n\n    var data, type, errors, errored;\n\n    if (!this.started && (this.started = true)) {\n        this.onNext(this);\n    } else if (errored = this.errored) {\n        this.onNext({ type: 'get', paths: this.relative });\n    }\n\n    if (errored || this.completed) {\n        if (!this.progressive && this.hasValue && (\n            (data = this.data) && data.json || data.jsonGraph)) {\n            tryOnNext(data, this.operation, this.model._root, this.destination);\n        }\n        errors = this.errors;\n        if (errored || error || errors && errors.length) {\n            return tryOnError(this, errors.length && errors || error);\n        }\n\n        return Subscriber.prototype.onCompleted.call(this);\n    }\n\n    if (++this.retryCount >= this.maxRetryCount) {\n        return tryOnError(this, new MaxRetryExceededError(\n            this.retryCount,\n            this.requested,\n            this.relative,\n            this.missing\n        ));\n    }\n\n    this.request = this.model._root.requests[this.type](\n        this.model, this.missing, this.relative, this.fragments\n    ).subscribe(this);\n}\n\nCallSubscriber.prototype.dispose =\nCallSubscriber.prototype.unsubscribe = function() {\n\n    var model = this.model;\n    var version = this.version;\n    var request = this.request;\n\n    this.args = null;\n    this.data = null;\n    this.model = null;\n    this.errors = null;\n    this.errored = false;\n    this.started = false;\n    this.hasValue = false;\n    this.completed = false;\n\n    Subscriber.prototype.dispose.call(this);\n\n    if (request) {\n        this.request = null;\n        request.dispose();\n    }\n\n    if (model) {\n\n        var modelRoot = model._root;\n        var cache = modelRoot.cache;\n        var shouldCollectCache = modelRoot.syncRefCount <= 0 &&\n                                 version !== modelRoot.version;\n\n        // Prune the cache via the LRU if this is the last request.\n        if (shouldCollectCache) {\n\n            if (cache) {\n                lruCollect(modelRoot,\n                           modelRoot.expired,\n                           cache.$size || 0,\n                           modelRoot.maxSize,\n                           modelRoot.collectRatio,\n                           modelRoot.version);\n            }\n\n            var rootOnChangesCompletedHandler = modelRoot.onChangesCompleted;\n\n            if (rootOnChangesCompletedHandler) {\n                rootOnChangesCompletedHandler.call(modelRoot.topLevelModel);\n            }\n        }\n    }\n}\n\nfunction tryOnNext(data, operation, modelRoot, destination) {\n    if (operation === 'jsonGraph' && data.paths) {\n        data.paths = collapse(data.paths);\n    }\n    try {\n        ++modelRoot.syncRefCount;\n        destination.onNext(data);\n    } catch(e) {\n        throw e;\n    } finally {\n        --modelRoot.syncRefCount;\n    }\n}\n\nfunction tryOnError(self, error) {\n    try {\n        throw error;\n    } catch (err) {\n        Subscriber.prototype.onError.call(self, err);\n    }\n}\n\nfunction mergeInto(dest, node) {\n\n    var destValue, nodeValue,\n        key, keys = Object.keys(node),\n        index = -1, length = keys.length;\n\n    while (++index < length) {\n\n        key = keys[index];\n\n        if (key === f_meta_data) {\n            dest[f_meta_data] = node[f_meta_data];\n        } else {\n\n            nodeValue = node[key];\n            destValue = dest[key];\n\n            if (destValue !== nodeValue) {\n                if (!nodeValue || typeof nodeValue !== 'object') {\n                    if (destValue === undefined) {\n                        dest[key] = nodeValue;\n                    }\n                } else if (destValue === undefined) {\n                    dest[key] = nodeValue;\n                } else {\n                    mergeInto(destValue, nodeValue);\n                }\n            }\n        }\n    }\n\n    return dest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Call.js","var Source = require('./Source');\nvar Request = require('./Request');\nvar Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar ImmediateScheduler = require('../schedulers/ImmediateScheduler');\n\nmodule.exports = Queue;\n\nfunction Queue(modelRoot) {\n    Subscription.call(this, []);\n    this.modelRoot = modelRoot;\n}\n\nQueue.prototype = Object.create(Subscription.prototype);\n\nQueue.prototype.set = isolateSet;\nQueue.prototype.call = isolateCall;\nQueue.prototype.get = batchAndDedupeGet;\n\nfunction isolateSet(model, optimized, requested, env) {\n    var queue = this;\n    return new Source(function(destination) {\n\n        var request = new Request('set', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = env.jsonGraph;\n        request.requested.push(requested);\n        request.optimized.push(optimized);\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction isolateCall(model, optimized, requested, callArgs) {\n    var queue = this;\n    return new Source(function(destination) {\n\n        var request = new Request('call', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = callArgs;\n        request.boundPath = model._path;\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction batchAndDedupeGet(model, optimized, requested) {\n    return new Dedupe(\n        this, model._source, model._scheduler, requested, optimized\n    );\n}\n\nfunction Dedupe(queue, source, scheduler, requested, optimized) {\n    this.queue = queue;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n    this.requested = requested;\n    this.optimized = optimized;\n}\n\nDedupe.prototype.subscribe = function(destination) {\n\n    var queue = this.queue;\n    var source = this.dataSource;\n    var requested = this.requested;\n    var optimized = this.optimized;\n    var scheduler = this.scheduler;\n\n    var requestsIndex = -1;\n    var requests  = queue.subscriptions;\n    var requestsCount = requests.length;\n    var subscription = new Subscription([], destination);\n\n    while (++requestsIndex < requestsCount) {\n\n        var request = requests[requestsIndex];\n\n        if (request.type !== 'get') {\n            continue;\n        }\n\n        if (request = request.batch(requested, optimized, requested = [], optimized = [])) {\n            subscription.add(request.subscribe(new Subscriber(destination, request)));\n        }\n\n        if (!optimized.length) {\n            break;\n        }\n    }\n\n    if (optimized.length) {\n        request = requests[requestsIndex] =\n            new Request('get', queue, source, scheduler).batch(requested, optimized);\n        subscription.add(request.subscribe(new Subscriber(destination, request)));\n        request.connect();\n    }\n\n    return subscription;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Queue.js","var isArray = Array.isArray;\nvar Subject = require('./Subject');\nvar Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar InvalidSourceError = require('../errors/InvalidSourceError');\n\nvar setJSONGraphs = require('../cache/set/setJSONGraphs');\nvar setPathValues = require('../cache/set/setPathValues');\nvar invalidatePaths = require('../cache/invalidate/invalidatePathSets');\n\nvar toPaths = require('@graphistry/falcor-path-utils/lib/toPaths');\nvar toCollapseMap = require('@graphistry/falcor-path-utils/lib/toCollapseMap');\nvar toCollapseTrees = require('@graphistry/falcor-path-utils/lib/toCollapseTrees');\nvar hasIntersection = require('@graphistry/falcor-path-utils/lib/hasIntersection');\n\nmodule.exports = Request;\n\nfunction Request(type, queue, source, scheduler) {\n    Subject.call(this, [], queue);\n    this.tree = {};\n    this.paths = [];\n    this.type = type;\n    this.data = null;\n    this.active = false;\n    this.responded = false;\n    this.requested = [];\n    this.optimized = [];\n    this.disposable = null;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n}\n\nRequest.prototype = Object.create(Subject.prototype);\n\nRequest.prototype.next =\nRequest.prototype.onNext = function(env) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    var changed = false;\n    var jsonGraph = env.jsonGraph;\n    var boundPath = this.boundPath;\n    var modelRoot = queue.modelRoot;\n    var invalidated = env.invalidated;\n    var paths = env.paths || this.paths;\n    var requested = this.requested.slice(0);\n    var rootChangeHandler = modelRoot.onChange;\n\n    // Run invalidations first.\n    if (invalidated && invalidated.length) {\n        changed = invalidatePaths({ _root: modelRoot, _path: [] }, invalidated, false);\n    }\n\n    if (paths && paths.length && !(!jsonGraph || typeof jsonGraph !== 'object')) {\n        var results = setJSONGraphs(\n            { _root: modelRoot },\n            [{ paths: paths, jsonGraph: jsonGraph }],\n            modelRoot.errorSelector, modelRoot.comparator, false\n        );\n        paths = results[0];\n        changed = changed || results[2];\n    }\n\n    if (changed && rootChangeHandler) {\n        rootChangeHandler();\n    }\n\n    this.observers.slice(0).forEach(function(observer, index) {\n        observer.onNext({\n            type: 'get', paths: requested[index] ||\n                filterPathsBoundTo(boundPath, paths)\n        });\n    });\n}\n\nRequest.prototype.error =\nRequest.prototype.onError = function(error) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    error = error || {};\n\n    // Converts errors to object we can insert into the cache.\n    error = !(error instanceof Error) ?\n        // if it's $type error, use it raw\n        error.$type === $error && error ||\n        // Otherwise make it an error\n        { $type: $error, value: error } :\n        // If it's instanceof Error, pluck error.message\n        { $type: $error, value: { message: error.message }};\n\n    var modelRoot = queue.modelRoot;\n\n    var errorPathValues = toPaths(toCollapseTrees(\n        this.requested.reduce(function(collapseMap, paths) {\n            return toCollapseMap(paths, collapseMap);\n        }, {})\n    ))\n    .map(function(path) { return { path: path, value: error }; });\n\n    if (errorPathValues.length) {\n        setPathValues(\n            { _root: modelRoot, _path: [] },\n            errorPathValues,\n            modelRoot.errorSelector,\n            modelRoot.comparator,\n            false\n        );\n    }\n\n    Subject.prototype.onError.call(this, error);\n}\n\nRequest.prototype.complete =\nRequest.prototype.onCompleted = function() {\n    if (this.responded === false) {\n        this.onNext({});\n    }\n    Subject.prototype.onCompleted.call(this);\n}\n\nRequest.prototype.remove = function(subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.requested.splice(index, 1);\n        this.optimized.splice(index, 1);\n        this.observers.splice(index, 1);\n        this.subscriptions.splice(index, 1);\n    }\n    if (this.subscriptions.length === 0) {\n        this.dispose();\n    }\n    return this;\n}\n\nRequest.prototype.dispose =\nRequest.prototype.unsubscribe = function () {\n    this.tree = {};\n    this.data = null;\n    this.paths = null;\n    this.active = false;\n    this.boundPath = null;\n    this.requested = [];\n    this.optimized = [];\n    var queue = this.parent;\n    if (queue) {\n        this.parent = null;\n        queue.remove(this);\n    }\n    var disposable = this.disposable;\n    if (disposable) {\n        this.disposable = null;\n        if (disposable.dispose) {\n            disposable.dispose();\n        } else if (disposable.unsubscribe) {\n            disposable.unsubscribe();\n        }\n    }\n    Subject.prototype.dispose.call(this);\n}\n\nRequest.prototype.connect = function() {\n    if (!this.active && !this.disposable) {\n        var scheduledDisposable = this.scheduler.schedule(flush.bind(this));\n        if (!this.disposable) {\n            this.disposable = scheduledDisposable;\n        }\n    }\n    return this;\n}\n\nRequest.prototype.batch = function(requested, optimized,\n                                   requestedComplements,\n                                   optimizedComplements) {\n    if (this.active) {\n        var requestedIntersection = [];\n        var optimizedIntersection = [];\n        if (findIntersections(this.tree,\n                              requested, optimized,\n                              requestedComplements,\n                              optimizedComplements,\n                              requestedIntersection,\n                              optimizedIntersection)) {\n            this.requested.push(requestedIntersection);\n            this.optimized.push(optimizedIntersection);\n            return this;\n        }\n        return null;\n    }\n    this.requested.push(requested);\n    this.optimized.push(optimized);\n    return this;\n}\n\nfunction flush() {\n\n    this.active = true;\n\n    var obs, paths = this.paths = toPaths(this.tree = toCollapseTrees(\n        this.optimized.reduce(function(collapseMap, paths) {\n            return toCollapseMap(paths, collapseMap);\n        }, {})\n    ));\n\n    try {\n        switch (this.type) {\n            case 'get':\n                obs = this.dataSource.get(paths);\n                break;\n            case 'set':\n                obs = this.dataSource.set({ paths: paths, jsonGraph: this.data });\n                break;\n            case 'call':\n                obs = this.dataSource.call.apply(this.dataSource, this.data);\n                break;\n        }\n        this.disposable = obs.subscribe(this);\n    } catch (e) {\n        this.disposable = {};\n        Subject.prototype.onError.call(this, new InvalidSourceError(e));\n    }\n}\n\nfunction findIntersections(tree,\n                           requested, optimized,\n                           requestedComplements,\n                           optimizedComplements,\n                           requestedIntersection,\n                           optimizedIntersection) {\n\n    var index = -1;\n    var complementIndex = -1;\n    var intersectionIndex = -1;\n    var optTotal = optimized.length;\n    var reqTotal = requested.length - 1;\n\n    while (++index < optTotal) {\n        var path = optimized[index];\n        var pathLen = path.length;\n        var subTree = tree[pathLen];\n        if (subTree && hasIntersection(subTree, path, 0, pathLen)) {\n            optimizedIntersection[++intersectionIndex] = path;\n            requestedIntersection[intersectionIndex] = requested[\n                index < reqTotal ? index : reqTotal\n            ];\n        } else {\n            optimizedComplements[++complementIndex] = path;\n            requestedComplements[complementIndex] = requested[\n                index < reqTotal ? index : reqTotal\n            ];\n        }\n    }\n\n    return ~intersectionIndex;\n}\n\nfunction filterPathsBoundTo(boundPath, paths) {\n\n    var boundLength;\n\n    if (!boundPath || (boundLength = boundPath.length) === 0) {\n        return paths;\n    }\n\n    var filtered = [], filteredIndex = -1, keyIndex;\n    var path, pathsIndex = -1, pathsCount = paths.length;\n\n    outer: while (++pathsIndex < pathsCount) {\n        path = paths[pathsIndex];\n        if (path.length > boundLength) {\n            keyIndex = 0;\n            do {\n                if (path[keyIndex] !== boundPath[keyIndex]) {\n                    continue outer;\n                }\n            } while (++keyIndex < boundLength);\n            filtered[++filteredIndex] = path.slice(boundLength);\n        }\n    }\n\n    return filtered;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Request.js","var Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\n\nmodule.exports = Subject;\n\nfunction Subject(observers, parent) {\n    Subscriber.call(this, null, parent);\n    this.observers = observers || [];\n}\n\nSubject.prototype = Object.create(Subscriber.prototype);\n\n// Unused\n// Subject.prototype.onNext = function(value) {\n//     this.observers.slice(0).forEach(function(observer) {\n//         observer.onNext(value);\n//     });\n// }\n\nSubject.prototype.onError = function(error) {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function(observer) {\n        observer.onError(error);\n    });\n}\n\nSubject.prototype.onCompleted = function() {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function(observer) {\n        observer.onCompleted();\n    });\n}\n\nSubject.prototype.subscribe = function(subscriber) {\n    this.observers.push(subscriber);\n    this.subscriptions.push(subscriber = new Subscription([subscriber], this));\n    return subscriber;\n}\n\nSubject.prototype.dispose =\nSubject.prototype.unsubscribe = function () {\n    this.observers = [];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subject.js","function TimeoutScheduler(delay) {\n    this.delay = delay;\n}\n\nvar TimerDisposable = function TimerDisposable(id) {\n    this.id = id;\n    this.disposed = false;\n};\n\nTimeoutScheduler.prototype.schedule = function schedule(action) {\n    return new TimerDisposable(setTimeout(action, this.delay));\n};\n\nTimerDisposable.prototype.dispose =\nTimerDisposable.prototype.unsubscribe = function() {\n    if (!this.disposed) {\n        clearTimeout(this.id);\n        this.id = null;\n        this.disposed = true;\n    }\n};\n\nmodule.exports = TimeoutScheduler;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/schedulers/TimeoutScheduler.js","var isArray = Array.isArray;\nvar isInternal = require('../internal/isInternal');\n\nmodule.exports = clone;\n\nfunction clone(source) {\n    var dest = source;\n    if (!(!dest || typeof dest !== 'object')) {\n        dest = isArray(source) ? [] : {};\n        for (var key in source) {\n            if (isInternal(key)) {\n                continue;\n            }\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/clone.js","var isObject = require('./isObject');\nmodule.exports = function getSize(node) {\n    return isObject(node) && node.$expires || undefined;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getExpires.js","var isObject = require('./../support/isObject');\n\nmodule.exports = function getType(node, anyType) {\n    var type = isObject(node) && node.$type || void 0;\n    if (anyType && type) {\n        return 'branch';\n    }\n    return type;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getType.js","var isArray = Array.isArray;\nvar isObject = require('./../support/isObject');\n\nmodule.exports = function isPathValue(pathValue) {\n    return isObject(pathValue) && (\n        isArray(pathValue.path) || (\n            typeof pathValue.path === 'string'\n        ));\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isPathValue.js","module.exports = require('./lib/index');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/index.js\n// module id = 103\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = require('./ponyfill');\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/lib/index.js\n// module id = 104\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/lib/ponyfill.js\n// module id = 105\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.l; }\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.i; }\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 106\n// module chunks = 0"],"sourceRoot":""}