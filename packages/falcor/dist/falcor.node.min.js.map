{"version":3,"sources":["webpack:///falcor.node.min.js","webpack:///webpack/bootstrap 6ef821c05efebef8ef82","webpack:///./lib/cache/isExpired.js","webpack:///./lib/cache/clone.js","webpack:///./lib/cache/expireNode.js","webpack:///./lib/cache/get/json/FalcorJSON.js","webpack:///./lib/errors/NullInPathError.js","webpack:///./lib/errors/createErrorClass.js","webpack:///./lib/support/isObject.js","webpack:///./lib/cache/createHardlink.js","webpack:///./lib/support/getSize.js","webpack:///./lib/cache/getCachePosition.js","webpack:///./lib/cache/updateNodeAncestors.js","webpack:///./lib/errors/InvalidKeySetError.js","webpack:///./lib/lru/promote.js","webpack:///./lib/request/Subscriber.js","webpack:///./lib/request/Subscription.js","webpack:///./lib/cache/get/onValueType.js","webpack:///./lib/cache/getBoundCacheNode.js","webpack:///./lib/cache/set/setJSONGraphs.js","webpack:///./lib/cache/set/setPathMaps.js","webpack:///./lib/internal/isInternal.js","webpack:///./lib/cache/get/json/index.js","webpack:///./lib/cache/get/jsonGraph/index.js","webpack:///./lib/cache/get/jsonGraph/inlineValue.js","webpack:///./lib/cache/get/onMissing.js","webpack:///./lib/cache/invalidate/invalidatePathSets.js","webpack:///./lib/cache/removeNodeAndDescendants.js","webpack:///./lib/cache/set/setPathValues.js","webpack:///./lib/cache/updateBackReferenceVersions.js","webpack:///./lib/support/getTimestamp.js","webpack:///./lib/support/isInternalKey.js","webpack:///./lib/values/expires-now.js","webpack:///(webpack)/buildin/global.js","webpack:///external \"@graphistry/falcor-path-utils/lib/iterateKeySet\"","webpack:///external \"@graphistry/falcor-path-utils/lib/support/materializedAtom\"","webpack:///./lib/cache/get/json/getJSON.js","webpack:///./lib/cache/get/json/getReferenceTarget.js","webpack:///./lib/cache/get/json/onValue.js","webpack:///./lib/cache/get/jsonGraph/getJSONGraph.js","webpack:///./lib/cache/get/onMaterialize.js","webpack:///./lib/cache/groupCacheArguments.js","webpack:///./lib/cache/insertNode.js","webpack:///./lib/cache/invalidate/invalidatePathMaps.js","webpack:///./lib/cache/mergeValueOrInsertBranch.js","webpack:///./lib/cache/reconstructPath.js","webpack:///./lib/cache/replaceNode.js","webpack:///./lib/cache/wrapNode.js","webpack:///./lib/errors/CircularReferenceError.js","webpack:///./lib/errors/InvalidSourceError.js","webpack:///./lib/lru/splice.js","webpack:///./lib/request/Source.js","webpack:///./lib/schedulers/ImmediateScheduler.js","webpack:///./lib/support/isJSONEnvelope.js","webpack:///./lib/support/isJSONGraphEnvelope.js","webpack:///./lib/support/now.js","webpack:///./lib/values/expires-never.js","webpack:///external \"@graphistry/falcor-path-utils/lib/collapse\"","webpack:///./lib/index.js","webpack:///./lib/Model.js","webpack:///./lib/ModelDataSourceAdapter.js","webpack:///./lib/ModelRoot.js","webpack:///./lib/cache/call/index.js","webpack:///./lib/cache/get/index.js","webpack:///./lib/cache/get/json/onError.js","webpack:///./lib/cache/get/json/walkFlatBuffer.js","webpack:///./lib/cache/get/json/walkPath.js","webpack:///./lib/cache/get/jsonGraph/getReferenceTarget.js","webpack:///./lib/cache/get/jsonGraph/onValue.js","webpack:///./lib/cache/get/jsonGraph/walkPath.js","webpack:///./lib/cache/get/onMaterializeFlatBuffer.js","webpack:///./lib/cache/getCache.js","webpack:///./lib/cache/getVersion.js","webpack:///./lib/cache/invalidate/index.js","webpack:///./lib/cache/mergeJSONGraphNode.js","webpack:///./lib/cache/set/index.js","webpack:///./lib/cache/transferBackReferences.js","webpack:///./lib/cache/unlinkBackReferences.js","webpack:///./lib/cache/unlinkForwardReference.js","webpack:///./lib/deref/hasValidParentReference.js","webpack:///./lib/deref/index.js","webpack:///./lib/errors/BoundJSONGraphModelError.js","webpack:///./lib/errors/InvalidDerefInputError.js","webpack:///./lib/errors/InvalidModelError.js","webpack:///./lib/errors/MaxRetryExceededError.js","webpack:///./lib/internal/f_.js","webpack:///./lib/lru/collect.js","webpack:///./lib/request/Call.js","webpack:///./lib/request/Queue.js","webpack:///./lib/request/Request.js","webpack:///./lib/request/Subject.js","webpack:///./lib/schedulers/TimeoutScheduler.js","webpack:///./lib/support/clone.js","webpack:///./lib/support/getExpires.js","webpack:///./lib/support/getType.js","webpack:///./lib/support/isPathValue.js","webpack:////Users/ptaylor/graphistry/falcor/~/symbol-observable/index.js","webpack:////Users/ptaylor/graphistry/falcor/~/symbol-observable/lib/index.js","webpack:////Users/ptaylor/graphistry/falcor/~/symbol-observable/lib/ponyfill.js","webpack:///(webpack)/buildin/module.js","webpack:///external \"@graphistry/falcor-path-utils/lib/computeFlatBufferHash\"","webpack:///external \"@graphistry/falcor-path-utils/lib/flatBufferToPaths\"","webpack:///external \"@graphistry/falcor-path-utils/lib/getHashCode\"","webpack:///external \"@graphistry/falcor-path-utils/lib/hasIntersection\"","webpack:///external \"@graphistry/falcor-path-utils/lib/toCollapseMap\"","webpack:///external \"@graphistry/falcor-path-utils/lib/toCollapseTrees\"","webpack:///external \"@graphistry/falcor-path-utils/lib/toFlatBuffer\"","webpack:///external \"@graphistry/falcor-path-utils/lib/toPaths\""],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","__webpack_require__.i","value","d","__webpack_require__.d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__webpack_require__.n","__esModule","getDefault","getModuleExports","__webpack_require__.o","object","property","prototype","hasOwnProperty","p","s","now","$now","$never","isExpired","node","expireImmediate","exp","undefined","isInternal","clone","key","keys","json","index","length","splice","expireNode","expired","lru","global","FalcorJSON","f_meta","bindArrayMethod","fn","atom","type","RangeError","arguments","getInst","x","inst","typeofInst","argsLen","toJSON","serialize","toString","includeMetadata","includeStatus","JSON","toProps","f_meta_inst","f_meta_json","version","serializer","createWithProto","count","total","xs","isArray","$code","status","abs_path","deref_to","deref_from","ys","protoBlacklist","constructor","toLocaleString","protoDescriptors","$__hash","$__path","$__status","$__version","Array","descriptors","writable","createErrorClass","message","MESSAGE","init","E","Error","stack","E.is","isObject","createHardlink","from","to","backRefs","getSize","getCachePosition","cache","path","depth","maxDepth","removeNodeAndDescendants","updateBackReferenceVersions","updateNodeAncestors","offset","curr","next","keysOrRanges","mesage","EXPIRES_NEVER","lruPromote","head","prev","Subscriber","destination","parent","onCompleted","Subscription","error","onError","onNext","complete","Subscriber.prototype.onNext","dest","Subscriber.prototype.onError","signaled","dispose","Subscriber.prototype.onCompleted","Subscriber.prototype.unsubscribe","subscriptions","Subscription.prototype.add","subscription","push","Subscription.prototype.remove","indexOf","Subscription.prototype.unsubscribe","onValueType","seed","results","requestedPath","requestedLength","optimizedPath","optimizedLength","fromReference","modelRoot","branchSelector","boxValues","materialized","reportMissing","treatErrorsAsValues","onValue","onMissing","onMaterialize","_reportMissing","reportMaterialized","getBoundCacheNode","model","setJSONGraphPathSet","root","messageRoot","messageParent","requestedPaths","optimizedPaths","comparator","errorSelector","note","branch","keySet","iterateKeySet","optimizedIndex","setNode","nextNode","arr","nextParent","nextOptimizedPath","parentArg","nodeArg","messageParentArg","messageArg","reference","optimizedPathArg","container","NullInPathError","mergeJSONGraphNode","setJSONGraphs","jsonGraphEnvelopes","jsonGraphEnvelopeIndex","jsonGraphEnvelopeCount","jsonGraphEnvelope","paths","jsonGraph","pathIndex","pathCount","setPathMap","pathMap","itr","isInternalKey","keyIndex","keyCount","child","mergeValueOrInsertBranch","setPathMaps","pathMapEnvelopes","bound","pathMapIndex","pathMapCount","pathMapEnvelope","f_","regexp","RegExp","inlineJSONGraphValue","keyset","restPathIndex","restPath","restPathCount","isEmptyKeySet","rangeEnd","mPath","lastKeyIsNull","isRequestedPath","missingPaths","missTotal","missingPath","missDepth","Number","invalidatePathSet","invalidateNode","invalidatePathSets","key2","lruSplice","unlinkForwardReference","unlinkBackReferences","setPathSet","setPathValues","pathValues","pathValueIndex","pathValueCount","pathValue","ref","getTimestamp","g","Function","eval","e","window","require","walkPathAndBuildOutput","walkFlatBufferAndBuildOutput","InvalidModelError","toFlatBuffer","computeFlatBufferHash","getJSON","pathsArg","progressive","referenceContainer","boundPath","isFlatBuffer","recycleJSON","hasDataSource","Boolean","allowFromWhenceYouCame","args","data","hasValue","relative","requested","missing","pathsIndex","pathsCount","boundRequested","len","promote","CircularReferenceError","getReferenceTarget","refArg","context","copy","onJSONValue","BoundJSONGraphModelError","getJSONGraph","jsonArg","materializedAtom","nextDepth","keysetIndex","keysetLength","iteratingKeyset","nextKey","keyIsRange","InvalidKeySetError","isPathValue","isJSONEnvelope","isJSONGraphEnvelope","groupCacheArguments","groups","argIndex","argCount","group","groupType","arg","argType","inputType","insertNode","invalidatePathMap","invalidatePathMaps","getType","wrapNode","replaceNode","reconstructPath","cType","mType","sizeOffset","currentPath","transferBackReferences","replacement","getExpires","expiresNow","typeArg","size","modelCreated","$type","atomSize","expires","referencePath","Source","subscribe","source","$$observable","default","Source.prototype.operator","Source.prototype.subscribe","y","operator","Source.prototype.then","_promise","resolve","reject","values","rejected","errors","then","ImmediateScheduler","empty","unsubscribe","ImmediateScheduler.prototype.schedule","action","envelope","Date","falcor","opts","Model","options","_node","_path","_source","_root","ModelRoot","_recycleJSON","_scheduler","_seed","_treatErrorsAsValues","__proto__","_boxed","_materialized","_allowFromWhenceYouCame","setCache","Call","ModelDataSourceAdapter","TimeoutScheduler","collapse","getCache","Model.prototype.get","_len","_key","_toJSON","Model.prototype.set","_len2","_key2","Model.prototype.preload","_len3","_key3","Model.prototype.call","_len4","_key4","Model.prototype.invalidate","_len5","_key5","Model.prototype.getValue","lift","subscriber","Model.prototype.setValue","Model.prototype.setCache","cacheOrJSONGraphEnvelope","rootOnChangeHandler","Model.prototype.getCache","_len6","_key6","env","Model.prototype.getVersion","concat","_getVersion","Model.prototype._clone","Model.prototype.batch","schedulerOrDelay","scheduler","Math","scheudle","_clone","Model.prototype.unbatch","Model.prototype.treatErrorsAsValues","Model.prototype.asDataSource","Model.prototype._materialize","Model.prototype._dematerialize","Model.prototype.boxValues","Model.prototype.unboxValues","Model.prototype.withoutDataSource","Model.prototype.inspect","getVersion","join","Model.prototype.toJSON","getPath","Model.prototype.getPath","slice","Model.prototype._fromWhenceYouCame","allow","Model.prototype._optimizePath","_model","ModelDataSourceAdapter.prototype.get","pathSets","apply","_toJSONG","ModelDataSourceAdapter.prototype.set","jsongResponse","set","ModelDataSourceAdapter.prototype.call","suffixes","syncRefCount","maxRetryCount","topLevelModel","requests","Requests","collectRatio","maxSize","functionTypeof","onChange","onChangesCompleted","defaultCompare","_args","thisPaths","fragments","errorPath","errorValue","fromReferenceArg","refTarget","f_old_keys","f_new_keys","f_code","nextJSON","nextReferenceContainer","nextOptimizedLength","optimizedLengthNext","refContainerAbsPath","refContainerRefPath","nodeAbsPath","jsonAbsPath","arrayEqual","keysIndex","keysLength","nextPath","nextPathKey","hasMissingPath","getHashCode","tmp","flatBufferToPaths","rPath","originalOnMissing","inlineValue","onJSONGraphValue","isLeaf","onMaterializeFlatBuffer","getCacheInternal","keysLen","invalidate","changed","groupIndex","groupCount","groupedArgs","pluckPaths","operation","rootChangeHandler","invalidatePathValues","cIsObject","mIsObject","cTimestamp","mTimestamp","isDistinct","setGroupsIntoCache","expireImmediate_","arrayFlatMap","optimized","array","selector","array2","array3","j","k","jsong","fromNode","destNode","fromNodeRefsLength","destNodeRefsLength","hasValidParentReference","_referenceContainer","deref","cacheRoot","absolutePath","originalRefPath","originalAbsPath","cacheNode","validContainer","CONTAINER_DOES_NOT_EXIST","currentRefPath","shortedPath","printPaths","absolute","String","collect","totalArg","max","ratioArg","ratio","targetSize","CallOperator","CallSubscriber","request","started","retryCount","errored","completed","tryOnNext","tryOnError","self","err","mergeInto","destValue","nodeValue","lruCollect","InvalidSourceError","MaxRetryExceededError","Call.prototype.lift","Call.prototype.operator","_subscribe","Call.prototype._subscribe","Call.prototype._toJSON","dataArg","Call.prototype._toJSONG","Call.prototype.retry","progresive","Call.prototype.progressively","CallOperator.prototype.call","CallSubscriber.prototype.onNext","seedIsImmutable","operations","CallSubscriber.prototype.onError","CallSubscriber.prototype.onCompleted","CallSubscriber.prototype.unsubscribe","rootOnChangesCompletedHandler","Queue","Dedupe","queue","dataSource","Request","isolateSet","isolateCall","callArgs","batchAndDedupeGet","Dedupe.prototype.subscribe","requestsIndex","requestsCount","batch","Subject","trees","responded","active","disposable","flush","obs","toPaths","toCollapseTrees","reduce","collapseMap","toCollapseMap","map","filterPathsBoundTo","boundLength","filtered","filteredIndex","outer","invalidatePaths","hasIntersection","Request.prototype.onNext","invalidated","observers","observer","Request.prototype.onError","errorPathValues","Request.prototype.onCompleted","Request.prototype.remove","Request.prototype.unsubscribe","Request.prototype.connect","scheduledDisposable","schedule","Request.prototype.batch","requestedComplements","optimizedComplements","requestedIntersection","optimizedIntersection","complementIndex","reqComplementsIdx","intersectionIndex","reqIntersectionIdx","treesLength","optTotal","reqTotal","toNextPath","treesIndex","pathLen","subTree","tree","Subject.prototype.onError","Subject.prototype.onCompleted","Subject.prototype.subscribe","Subject.prototype.unsubscribe","delay","TimerDisposable","id","disposed","TimeoutScheduler.prototype.schedule","setTimeout","TimerDisposable.prototype.unsubscribe","clearTimeout","anyType","_ponyfill","_ponyfill2","result","symbolObservablePonyfill","_Symbol","Symbol","observable","module.exports","webpackPolyfill","deprecate","module.deprecate","children"],"mappings":"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","file":"falcor.node.min.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 106);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar now = __webpack_require__(53);\nvar $now = __webpack_require__(30);\nvar $never = __webpack_require__(54);\n\nmodule.exports = isExpired;\n\nfunction isExpired(node, expireImmediate) {\n    var exp = node.$expires;\n    if (exp === undefined || exp === null || exp === $never) {\n        return false;\n    } else if (exp === $now) {\n        return expireImmediate;\n    }\n    return exp < now();\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isInternal = __webpack_require__(19);\n\nmodule.exports = clone;\n\nfunction clone(node) {\n\n    var key,\n        keys = Object.keys(node),\n        json = {},\n        index = -1,\n        length = keys.length;\n\n    while (++index < length) {\n        key = keys[index];\n        if (key !== '$size' && !isInternal(key)) {\n            json[key] = node[key];\n        }\n    }\n\n    return json;\n}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar splice = __webpack_require__(48);\n\nmodule.exports = expireNode;\n\nfunction expireNode(node, expired, lru) {\n    if (!node[\"\u001ef_invalidated\"]) {\n        node[\"\u001ef_invalidated\"] = true;\n        expired.push(node);\n        splice(lru, node);\n    }\n    return node;\n}\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {function FalcorJSON(f_meta) {\n    if (!f_meta) {\n        this[\"\u001ef_meta\"] = {};\n    } else if (!(this[\"\u001ef_meta\"] = f_meta[\"\u001ef_meta\"])) {\n        this[\"\u001ef_meta\"] = f_meta;\n    }\n}\n\nvar protoBlacklist = {\n    length: true,\n    toString: true,\n    constructor: true,\n    toLocaleString: true\n};\n\nvar protoDescriptors = {\n    toJSON: { enumerable: false, value: toJSON },\n    toProps: { enumerable: false, value: toProps },\n    toString: { enumerable: false, value: toString },\n    toLocaleString: { enumerable: false, value: toString },\n    $__hash: {\n        enumerable: false,\n        get: function () {\n            var f_meta = this[\"\u001ef_meta\"];\n            return f_meta && f_meta['$code'] || '';\n        }\n    },\n    $__path: {\n        enumerable: false,\n        get: function () {\n            var f_meta = this[\"\u001ef_meta\"];\n            return f_meta && f_meta[\"abs_path\"] || [];\n        }\n    },\n    $__status: {\n        enumerable: false,\n        get: function () {\n            var f_meta = this[\"\u001ef_meta\"];\n            return f_meta && f_meta[\"status\"] || 'resolved';\n        }\n    },\n    $__version: {\n        enumerable: false,\n        get: function () {\n            var f_meta = this[\"\u001ef_meta\"];\n            return f_meta && f_meta[\"version\"] || 0;\n        }\n    }\n};\n\nObject.defineProperties(FalcorJSON.prototype, Object.getOwnPropertyNames(Array.prototype).reduce(function (descriptors, name) {\n    if (!protoBlacklist.hasOwnProperty(name)) {\n        var fn = Array.prototype[name];\n        if (typeof fn === 'function') {\n            descriptors[name] = {\n                value: bindArrayMethod(fn),\n                writable: true, enumerable: false\n            };\n        }\n    }\n    return descriptors;\n}, protoDescriptors));\n\nfunction bindArrayMethod(fn) {\n    return function () {\n        var node = this,\n            json = node,\n            atom = node.length,\n            length = atom,\n            type;\n        // If length isn't a number, an $atom with a numeric `value`, or if the\n        // unboxed length isn't a valid Array length, bail early.\n        // If we're still waiting on pending updates, return an empty Array.\n        // Otherwise, throw a RangeError.\n        if ((type = typeof atom) !== 'number' && (!atom || type !== 'object' || atom.$type !== \"atom\" || typeof (length = atom.value) !== 'number') || length < 0 || length !== (length | 0)) {\n            if (node.$__status === 'pending') {\n                return [];\n            }\n            throw new RangeError('Invalid FalcorJSON length');\n        }\n        // Temporarily set length to the unboxed length, call the bound Array\n        // method, then reset the length back to the boxed value. This is\n        // necessary because a few Array methods (like sort) operate on the\n        // Array in-place, so we can't pass a sliced copy of this instance to\n        // the bound Array method. Do this even when the length isn't boxed, so\n        // if calling the bound Array method writes to length, it's reset to the\n        // value in the cache.\n        node.length = length;\n        json = fn.apply(node, arguments);\n        node.length = atom;\n        return json;\n    };\n}\n\nvar isArray = Array.isArray;\n\nfunction getInst(x) {\n    var inst = x;\n    var typeofInst = typeof inst;\n    var argsLen = arguments.length;\n    if (argsLen === 0) {\n        inst = this;\n    } else if (typeofInst !== 'string') {\n        if (!inst || typeofInst !== 'object') {\n            return inst;\n        }\n    } else if (argsLen !== 1) {\n        return inst;\n    } else {\n        inst = this;\n    }\n    return inst === global ? undefined : inst;\n}\n\nfunction toJSON() {\n    return serialize(getInst.apply(this, arguments), toJSON);\n}\n\nfunction toString(includeMetadata, includeStatus) {\n    return JSON.stringify(serialize(getInst.call(this, this), serialize, includeMetadata === true, false, includeStatus === true));\n}\n\nfunction toProps(x) {\n\n    var inst = getInst.apply(this, arguments);\n    var f_meta_inst,\n        f_meta_json,\n        version = 0;\n    var json = serialize(inst, toProps, true, true);\n\n    if (inst && (f_meta_inst = inst[\"\u001ef_meta\"])) {\n        version = f_meta_inst[\"version\"];\n    }\n\n    if (!(!json || typeof json !== 'object')) {\n        if (f_meta_json = json[\"\u001ef_meta\"]) {\n            f_meta_json[\"version\"] = version;\n        }\n    }\n\n    return json;\n}\n\nfunction serialize(inst, serializer, includeMetadata, createWithProto, includeStatus) {\n\n    if (!inst || typeof inst !== 'object') {\n        return inst;\n    }\n\n    var count, total, f_meta, keys, key, xs, ys;\n\n    if (isArray(inst)) {\n        xs = inst;\n    } else {\n\n        count = -1;\n        keys = Object.keys(inst);\n        total = keys.length;\n        xs = {};\n\n        if (createWithProto) {\n            xs.__proto__ = FalcorJSON.prototype;\n        }\n\n        if (includeMetadata && (f_meta = inst[\"\u001ef_meta\"])) {\n\n            var $code = f_meta['$code'];\n            var status = f_meta[\"status\"];\n            var abs_path = f_meta[\"abs_path\"];\n            var deref_to = f_meta[\"deref_to\"];\n            var deref_from = f_meta[\"deref_from\"];\n\n            f_meta = {};\n            $code && (f_meta['$code'] = $code);\n            abs_path && (f_meta[\"abs_path\"] = abs_path);\n            deref_to && (f_meta[\"deref_to\"] = deref_to);\n            deref_from && (f_meta[\"deref_from\"] = deref_from);\n            includeStatus && status && (f_meta[\"status\"] = status);\n\n            xs[\"\u001ef_meta\"] = f_meta;\n\n            if (createWithProto) {\n                ys = {};\n                ys.__proto__ = xs;\n                xs = ys;\n            }\n        }\n\n        while (++count < total) {\n            if ((key = keys[count]) !== \"\u001ef_meta\") {\n                xs[key] = serializer(inst[key], serializer, includeMetadata, createWithProto, includeStatus);\n            }\n        }\n    }\n\n    return xs;\n}\n\nmodule.exports = FalcorJSON;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(31)))\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(5);\nvar MESSAGE = '`null` is not allowed in branch key positions.';\n\n/**\n * Do not allow null in path.\n */\nmodule.exports = createErrorClass('NullInPathError', function () {\n  this.message = MESSAGE;\n});\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = createErrorClass;\n\nfunction createErrorClass(name, init) {\n    function E(message) {\n        this.message = message;\n        init && init.apply(this, arguments);\n        if (!Error.captureStackTrace) {\n            this.stack = new Error().stack;\n        } else {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n    E.prototype = Object.create(Error.prototype);\n    E.prototype.name = name;\n    E.prototype.constructor = E;\n    E.is = function (x) {\n        return x.name === name;\n    };\n    return E;\n}\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = isObject;\n\nfunction isObject(value) {\n    return value !== null && typeof value === 'object';\n}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = createHardlink;\n\nfunction createHardlink(from, to) {\n\n    // create a back reference\n    var backRefs = to[\"\u001ef_refs_length\"] || 0;\n    to[\"\u001ef_ref\" + backRefs] = from;\n    to[\"\u001ef_refs_length\"] = backRefs + 1;\n\n    // create a hard reference\n    from[\"\u001ef_ref_index\"] = backRefs;\n    from[\"\u001ef_context\"] = to;\n}\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(6);\nmodule.exports = getSize;\n\nfunction getSize(node) {\n    return isObject(node) && node.$size || 0;\n}\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * getCachePosition makes a fast walk to the bound value since all bound\n * paths are the most possible optimized path.\n *\n * @param {Model} model -\n * @param {Array} path -\n * @returns {Mixed} - undefined if there is nothing in this position.\n * @private\n */\nmodule.exports = getCachePosition;\n\nfunction getCachePosition(cache, path) {\n\n    var node = cache;\n    var type,\n        depth = 0;\n    var maxDepth = path.length;\n\n    if (maxDepth > 0) {\n        do {\n            node = node[path[depth]];\n\n            while (node && (type = node.$type) === \"ref\") {\n                node = getCachePosition(cache, node.value);\n            }\n        } while (++depth < maxDepth && node && !type);\n    }\n\n    return node;\n};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar removeNodeAndDescendants = __webpack_require__(25);\nvar updateBackReferenceVersions = __webpack_require__(27);\n\nmodule.exports = updateNodeAncestors;\n\nfunction updateNodeAncestors(node, offset, lru, version) {\n    var curr = node,\n        next;\n    do {\n        if ((curr.$size = (curr.$size || 0) - offset) > 0) {\n            if (!(next = curr[\"\u001ef_parent\"])) {\n                curr[\"\u001ef_version\"] = version;\n            } else if (curr[\"\u001ef_version\"] !== version) {\n                updateBackReferenceVersions(curr, version);\n            }\n        } else if (next = curr[\"\u001ef_parent\"]) {\n            removeNodeAndDescendants(curr, next, curr[\"\u001ef_key\"], lru, version);\n        }\n    } while (curr = next);\n    return node;\n}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(5);\n\n/**\n * InvalidKeySetError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidKeySetError', function (path, keysOrRanges) {\n  this.mesage = '' + 'The KeySet ' + JSON.stringify(keysOrRanges) + ' in path ' + JSON.stringify(path) + ' contains a KeySet. ' + 'Keysets can only contain Keys or Ranges';\n});\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar EXPIRES_NEVER = __webpack_require__(54);\n\nmodule.exports = lruPromote;\n\n// [H] -> Next -> ... -> [T]\n// [T] -> Prev -> ... -> [H]\nfunction lruPromote(lru, node) {\n    // Never promote node.$expires === 1.  They cannot expire.\n    if (node.$expires === EXPIRES_NEVER) {\n        return;\n    }\n\n    var head = lru[\"\u001ef_head\"];\n\n    // Nothing is in the cache.\n    if (!head) {\n        lru[\"\u001ef_head\"] = lru[\"\u001ef_tail\"] = node;\n        return;\n    }\n\n    if (head === node) {\n        return;\n    }\n\n    // The item always exist in the cache since to get anything in the\n    // cache it first must go through set.\n    var prev = node[\"\u001ef_prev\"];\n    var next = node[\"\u001ef_next\"];\n    if (next) {\n        next[\"\u001ef_prev\"] = prev;\n    }\n    if (prev) {\n        prev[\"\u001ef_next\"] = next;\n    }\n    node[\"\u001ef_prev\"] = undefined;\n\n    // Insert into head position\n    lru[\"\u001ef_head\"] = node;\n    node[\"\u001ef_next\"] = head;\n    head[\"\u001ef_prev\"] = node;\n\n    // If the item we promoted was the tail, then set prev to tail.\n    if (node === lru[\"\u001ef_tail\"]) {\n        lru[\"\u001ef_tail\"] = prev;\n    }\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Subscription = __webpack_require__(14);\n\nmodule.exports = Subscriber;\n\nfunction Subscriber(destination, parent, onCompleted) {\n    if (typeof destination === 'function' || typeof parent === 'function' || typeof onCompleted === 'function') {\n        Subscription.call(this, []);\n        this.destination = {\n            error: parent,\n            onError: parent,\n            next: destination,\n            onNext: destination,\n            complete: onCompleted,\n            onCompleted: onCompleted\n        };\n    } else {\n        Subscription.call(this, [], parent);\n        this.parent = parent;\n        this.destination = destination;\n    }\n}\n\nSubscriber.prototype = Object.create(Subscription.prototype);\n\nSubscriber.prototype.next = Subscriber.prototype.onNext = function onNext(value) {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onNext) {\n            dest.onNext(value);\n        } else if (dest.next) {\n            dest.next(value);\n        }\n    }\n};\n\nSubscriber.prototype.error = Subscriber.prototype.onError = function onError(error) {\n    var signaled = false;\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onError) {\n            signaled = true;\n            dest.onError(error);\n        } else if (dest.error) {\n            signaled = true;\n            dest.error(error);\n        }\n        this.dispose();\n    }\n    if (!signaled) {\n        throw error;\n    }\n};\n\nSubscriber.prototype.complete = Subscriber.prototype.onCompleted = function onCompleted() {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onCompleted) {\n            dest.onCompleted();\n        } else if (dest.complete) {\n            dest.complete();\n        }\n        this.dispose();\n    }\n};\n\nSubscriber.prototype.dispose = Subscriber.prototype.unsubscribe = function () {\n    this.destination = null;\n    Subscription.prototype.dispose.call(this);\n};\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nmodule.exports = Subscription;\n\nfunction Subscription(subscriptions, parent) {\n    this.parent = parent;\n    this.subscriptions = subscriptions || [];\n}\n\nSubscription.prototype.add = function (subscription) {\n    return this.subscriptions.push(subscription) && this || this;\n};\n\nSubscription.prototype.remove = function (subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.subscriptions.splice(index, 1);\n    }\n    return this;\n};\n\nSubscription.prototype.dispose = Subscription.prototype.unsubscribe = function () {\n    var subscription,\n        subscriptions = this.subscriptions;\n    while (subscriptions.length) {\n        (subscription = subscriptions.pop()) && subscription.dispose && subscription.dispose();\n    }\n    var parent = this.parent;\n    if (parent) {\n        this.parent = null;\n        parent.remove && parent.remove(this);\n    }\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(2);\nvar lruPromote = __webpack_require__(12);\n\nmodule.exports = onValueType;\n\nfunction onValueType(node, type, json, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, reportMissing, treatErrorsAsValues, onValue, onMissing, onMaterialize) {\n\n    var _reportMissing = reportMissing;\n    var reportMaterialized = reportMissing;\n\n    if (type) {\n        if (isExpired(node, expireImmediate)) {\n            if (!node[\"\u001ef_invalidated\"]) {\n                expireNode(node, expired, modelRoot);\n            }\n        } else {\n            lruPromote(modelRoot, node);\n            if (node.value === undefined) {\n                _reportMissing = false;\n                reportMaterialized = materialized;\n            } else {\n                if (seed) {\n                    if (fromReference) {\n                        requestedPath[depth] = null;\n                    }\n                    return onValue(node, type, depth, seed, results, requestedPath, optimizedPath, optimizedLength, fromReference, boxValues, materialized, treatErrorsAsValues);\n                }\n                return undefined;\n            }\n        }\n    }\n\n    if (materialized) {\n        seed && (results.hasValue = true);\n    } else if (!reportMaterialized) {\n        return undefined;\n    }\n\n    return onMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, _reportMissing, materialized, json, branchSelector, boxValues, onMaterialize, modelRoot);\n}\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getCachePosition = __webpack_require__(9);\n\nmodule.exports = getBoundCacheNode;\n\nfunction getBoundCacheNode(model, path) {\n    path = path || model._path;\n    var node = model._node;\n    if (!node || node[\"\u001ef_parent\"] === undefined || node[\"\u001ef_invalidated\"]) {\n        model._node = null;\n        if (path.length === 0) {\n            node = model._root.cache;\n        } else {\n            node = getCachePosition(model._root.cache, path);\n            if (path === model._path) {\n                model._node = node;\n            }\n        }\n    }\n    return node;\n}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arr = new Array(5);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(2);\nvar createHardlink = __webpack_require__(7);\nvar mergeJSONGraphNode = __webpack_require__(72);\nvar NullInPathError = __webpack_require__(4);\nvar iterateKeySet = __webpack_require__(32);\n\n/**\n * Merges a list of {@link JSONGraphEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to merge the {@link JSONGraphEnvelope}s.\n * @param {Array.<PathValue>} jsonGraphEnvelopes - the {@link JSONGraphEnvelope}s to merge.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = setJSONGraphs;\n\nfunction setJSONGraphs(model, jsonGraphEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n\n    var requestedPath = [];\n    var optimizedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var jsonGraphEnvelopeIndex = -1;\n    var jsonGraphEnvelopeCount = jsonGraphEnvelopes.length;\n\n    while (++jsonGraphEnvelopeIndex < jsonGraphEnvelopeCount) {\n\n        var jsonGraphEnvelope = jsonGraphEnvelopes[jsonGraphEnvelopeIndex];\n        var paths = jsonGraphEnvelope.paths;\n        var jsonGraph = jsonGraphEnvelope.jsonGraph;\n\n        var pathIndex = -1;\n        var pathCount = paths.length;\n\n        while (++pathIndex < pathCount) {\n\n            var path = paths[pathIndex];\n            optimizedPath.index = 0;\n\n            setJSONGraphPathSet(path, 0, cache, cache, cache, jsonGraph, jsonGraph, jsonGraph, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n        }\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n    arr[3] = undefined;\n    arr[4] = undefined;\n\n    if (cache[\"\u001ef_version\"] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n}\n\n/* eslint-disable no-constant-condition */\nfunction setJSONGraphPathSet(path, depth, root, parent, node, messageRoot, messageParent, message, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n\n        setNode(root, parent, node, messageRoot, messageParent, message, key, branch, false, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = arr[0];\n        var nextParent = arr[1];\n        var nextOptimizedPath = arr[4];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setJSONGraphPathSet(path, depth + 1, root, nextParent, nextNode, messageRoot, arr[3], arr[2], requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(root, nodeArg, messageRoot, message, requestedPath, optimizedPathArg, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var messageParent;\n    var node = nodeArg;\n    var reference = node.value;\n    var optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        messageParent = messageRoot;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var index = 0;\n        var container = node;\n        var count = reference.length - 1;\n        parent = node = root;\n        messageParent = message = messageRoot;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            optimizedPath.index = index;\n\n            setNode(root, parent, node, messageRoot, messageParent, message, key, branch, true, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n            node = arr[0];\n            optimizedPath = arr[4];\n            if (!node || typeof node !== 'object') {\n                optimizedPath.index = index;\n                return;\n            }\n            parent = arr[1];\n            message = arr[2];\n            messageParent = arr[3];\n        } while (index++ < count);\n\n        optimizedPath.index = index;\n\n        if (container[\"\u001ef_context\"] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n}\n\nfunction setNode(root, parentArg, nodeArg, messageRoot, messageParentArg, messageArg, key, branch, reference, requestedPath, optimizedPathArg, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var node = nodeArg;\n    var type = node.$type;\n    var parent = parentArg;\n    var message = messageArg;\n    var optimizedPath = optimizedPathArg;\n    var messageParent = messageParentArg;\n\n    while (type === \"ref\") {\n\n        setReference(root, node, messageRoot, message, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = arr[0];\n\n        if (!node || typeof node !== 'object') {\n            return;\n        }\n\n        parent = arr[1];\n        message = arr[2];\n        messageParent = arr[3];\n        optimizedPath = arr[4];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[\"\u001ef_key\"];\n            }\n        } else {\n            parent = node;\n            messageParent = message;\n            node = parent[key];\n            message = messageParent && messageParent[key];\n        }\n\n        node = mergeJSONGraphNode(parent, node, message, key, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n}\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arr = new Array(3);\nvar isArray = Array.isArray;\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(2);\nvar createHardlink = __webpack_require__(7);\nvar getCachePosition = __webpack_require__(9);\nvar isInternalKey = __webpack_require__(29);\nvar NullInPathError = __webpack_require__(4);\nvar mergeValueOrInsertBranch = __webpack_require__(42);\n\n/**\n * Sets a list of {@link PathMapEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of {@link PathMapEnvelope}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = setPathMaps;\n\nfunction setPathMaps(model, pathMapEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[\"\u001ef_parent\"] || cache;\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathMapIndex = -1;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathMap(pathMapEnvelope.json, 0, cache, parent, node, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, modelRoot, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    if (cache[\"\u001ef_version\"] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n}\n\n/* eslint-disable no-constant-condition */\nfunction setPathMap(pathMap, depth, root, parent, node, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var keys = getKeys(pathMap);\n\n    if (keys && keys.length) {\n\n        var keyIndex = 0;\n        var keyCount = keys.length;\n        var optimizedIndex = optimizedPath.index;\n\n        do {\n            var key = keys[keyIndex];\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n\n            requestedPath.depth = depth;\n\n            setNode(root, parent, node, key, child, branch, false, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n            requestedPath[depth] = key;\n            requestedPath.index = depth;\n\n            var nextNode = arr[0];\n            var nextParent = arr[1];\n            var nextOptimizedPath = arr[2];\n            nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n            if (nextNode) {\n                if (branch) {\n                    setPathMap(child, depth + 1, root, nextParent, nextNode, requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n                } else {\n                    requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                    optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n                }\n            }\n            if (++keyIndex >= keyCount) {\n                break;\n            }\n            optimizedPath.index = optimizedIndex;\n        } while (true);\n    }\n}\n/* eslint-enable */\n\nfunction setReference(value, root, nodeArg, requestedPath, optimizedPathArg, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var node = nodeArg;\n    var reference = node.value;\n    var optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n        var container = node;\n        parent = root;\n\n        node = node[\"\u001ef_context\"];\n\n        if (node != null) {\n            parent = node[\"\u001ef_parent\"] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n            optimizedPath.index = index;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                var results = setNode(root, parent, node, key, value, branch, true, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n                node = arr[0];\n                optimizedPath = arr[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return;\n                }\n                parent = arr[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[\"\u001ef_context\"] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n}\n\nfunction setNode(root, parentArg, nodeArg, key, value, branch, reference, requestedPath, optimizedPathArg, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var node = nodeArg;\n    var type = node.$type;\n    var parent = parentArg;\n    var optimizedPath = optimizedPathArg;\n\n    while (type === \"ref\") {\n\n        setReference(value, root, node, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = arr[0];\n\n        if (!node || typeof node !== 'object') {\n            return;\n        }\n\n        parent = arr[1];\n        optimizedPath = arr[2];\n        type = node && node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[\"\u001ef_key\"];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n}\n\nfunction getKeys(pathMap) {\n\n    if (!(!pathMap || typeof pathMap !== 'object') && !pathMap.$type) {\n        var keys = [];\n        var itr = 0;\n        if (isArray(pathMap)) {\n            keys[itr++] = 'length';\n        }\n        for (var key in pathMap) {\n            if (isInternalKey(key)) {\n                continue;\n            }\n            keys[itr++] = key;\n        }\n        return keys;\n    }\n\n    return undefined;\n}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Determined if the key passed in is an f_ internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nvar f_ = __webpack_require__(83);\nvar regexp = new RegExp('^' + f_, 'i', 'g');\n\nmodule.exports = regexp.test.bind(regexp);\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(34);\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(37);\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\nmodule.exports = inlineJSONGraphValue;\n\n/* eslint-disable no-constant-condition */\nfunction inlineJSONGraphValue(node, path, length, seed, branch) {\n\n    var key,\n        depth = 0,\n        prev,\n        curr = seed.jsonGraph;\n\n    if (!curr) {\n        seed.jsonGraph = curr = {};\n    }\n\n    do {\n        prev = curr;\n        key = path[depth++];\n        if (depth >= length) {\n            curr = prev[key] = branch !== true ? node : prev[key] || {};\n            break;\n        }\n        curr = prev[key] || (prev[key] = {});\n    } while (true);\n\n    return curr;\n}\n/* eslint-enable */\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\nvar isArray = Array.isArray;\n\nmodule.exports = onMissing;\n\n/* eslint-disable no-constant-condition */\nfunction onMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, reportMaterialized, json, branchSelector, boxValues, onMaterialize, modelRoot) {\n\n    if (!reportMissing && !reportMaterialized) {\n        return;\n    }\n\n    var keyset,\n        restPathIndex = -1,\n        restPathCount = requestedLength - depth,\n        restPath = restPathCount && new Array(restPathCount) || undefined;\n\n    while (++restPathIndex < restPathCount) {\n        keyset = path[restPathIndex + depth];\n        if (isEmptyKeySet(keyset)) {\n            return;\n        }\n        restPath[restPathIndex] = keyset;\n    }\n\n    var index, count, mPath;\n    var lastKeyIsNull = keyset === null;\n    var isRequestedPath = reportMissing;\n    var missDepth, missTotal, missingPath, missingPaths;\n\n    if (!reportMissing) {\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } else {\n        missDepth = depth;\n        missTotal = requestedLength;\n        missingPath = requestedPath;\n        missingPaths = results.requested || (results.requested = []);\n    }\n\n    do {\n        if (restPathCount < requestedLength || !isRequestedPath) {\n            index = -1;\n            count = missDepth;\n            mPath = new Array(missTotal);\n            while (++index < count) {\n                mPath[index] = missingPath[index];\n            }\n            restPathIndex = -1;\n            while (index < missTotal) {\n                mPath[index++] = restPath[++restPathIndex];\n            }\n        }\n\n        // break after inserting both requested and optimized missing paths\n        if (isRequestedPath = !isRequestedPath) {\n            if (reportMissing) {\n                missingPaths[missingPaths.length] = mPath;\n            }\n            break;\n        }\n\n        missingPaths[missingPaths.length] = mPath || restPath;\n\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missingPaths = results.missing || (results.missing = []);\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } while (true);\n\n    if (reportMaterialized) {\n        return onMaterialize(json, mPath, missDepth, missTotal, branchSelector, boxValues, modelRoot);\n    }\n}\n/* eslint-enable */\n\nfunction isEmptyKeySet(keyset) {\n\n    // false if the keyset is a primitive\n    if ('object' !== typeof keyset) {\n        return false;\n    } else if (keyset === null) {\n        return false;\n    }\n\n    if (isArray(keyset)) {\n        // return true if the keyset is an empty array\n        return keyset.length === 0;\n    }\n\n    var rangeEnd = keyset.to,\n        from = keyset.from || 0;\n    if ('number' !== typeof rangeEnd) {\n        rangeEnd = from + (keyset.length || 0);\n    }\n\n    // false if trying to request incorrect or empty ranges\n    // e.g. { from: 10, to: 0 } or { from: 5, length: 0 }\n    return from >= rangeEnd;\n}\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arr = new Array(2);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(2);\nvar lruPromote = __webpack_require__(12);\nvar getSize = __webpack_require__(8);\nvar createHardlink = __webpack_require__(7);\nvar getBoundCacheNode = __webpack_require__(16);\nvar updateNodeAncestors = __webpack_require__(10);\nvar iterateKeySet = __webpack_require__(32);\n\n/**\n * Invalidates a list of Paths in a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathValues.\n * @param {Array.<PathValue>} paths - the PathValues to set.\n */\n\nmodule.exports = invalidatePathSets;\n\nfunction invalidatePathSets(model, paths, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n\n    if (!node) {\n        return false;\n    }\n\n    var pathIndex = -1;\n    var pathCount = paths.length;\n    var parent = node[\"\u001ef_parent\"] || cache;\n\n    while (++pathIndex < pathCount) {\n\n        var path = paths[pathIndex];\n\n        invalidatePathSet(path, 0, cache, parent, node, version, expired, lru, expireImmediate);\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    if (cache[\"\u001ef_version\"] === version) {\n        modelRoot.version = version;\n        return true;\n    }\n\n    return false;\n}\n\nfunction invalidatePathSet(path, depth, root, parent, node, version, expired, lru, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n\n    do {\n        invalidateNode(root, parent, node, key, branch, false, version, expired, lru, expireImmediate);\n        var nextNode = arr[0];\n        var nextParent = arr[1];\n        if (nextNode) {\n            if (branch) {\n                invalidatePathSet(path, depth + 1, root, nextParent, nextNode, version, expired, lru, expireImmediate);\n            } else {\n                updateNodeAncestors(nextNode, getSize(nextNode), lru, version);\n            }\n        }\n        key = iterateKeySet(keySet, note);\n    } while (!note.done);\n}\n\nfunction invalidateReference(root, nodeArg, version, expired, lru, expireImmediate) {\n\n    var node = nodeArg;\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[\"\u001ef_context\"];\n\n    if (node != null) {\n        parent = node[\"\u001ef_parent\"] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            invalidateNode(root, parent, node, key, branch, true, version, expired, lru, expireImmediate);\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[\"\u001ef_context\"] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n}\n\nfunction invalidateNode(root, parentArg, nodeArg, key, branch, reference, version, expired, lru, expireImmediate) {\n\n    var node = nodeArg;\n    var parent = parentArg;\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        invalidateReference(root, node, version, expired, lru, expireImmediate);\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new Error('`null` is not allowed in branch key positions.');\n            } else if (node) {\n                key = node[\"\u001ef_key\"];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n}\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar lruSplice = __webpack_require__(48);\nvar isInternalKey = __webpack_require__(29);\nvar unlinkBackReferences = __webpack_require__(75);\nvar unlinkForwardReference = __webpack_require__(76);\nvar updateBackReferenceVersions = __webpack_require__(27);\n\nmodule.exports = removeNodeAndDescendants;\n\nfunction removeNodeAndDescendants(node, parent, key, lru, version) {\n    if (!(!node || typeof node !== 'object')) {\n        var type = node.$type;\n        if (type === undefined) {\n            for (var key2 in node) {\n                if (!isInternalKey(key2)) {\n                    removeNodeAndDescendants(node[key2], node, key2, lru, version);\n                }\n            }\n        } else {\n            if (type === \"ref\") {\n                unlinkForwardReference(node);\n            }\n            lruSplice(lru, node);\n        }\n        unlinkBackReferences(updateBackReferenceVersions(node, version));\n        parent[key] = node[\"\u001ef_parent\"] = undefined;\n        return true;\n    }\n    return false;\n}\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arr = new Array(3);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(2);\nvar createHardlink = __webpack_require__(7);\nvar getCachePosition = __webpack_require__(9);\nvar NullInPathError = __webpack_require__(4);\nvar iterateKeySet = __webpack_require__(32);\nvar mergeValueOrInsertBranch = __webpack_require__(42);\n\n/**\n * Sets a list of {@link PathValue}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the {@link PathValue}s.\n * @param {Array.<PathValue>} pathValues - the list of {@link PathValue}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = setPathValues;\n\nfunction setPathValues(model, pathValues, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[\"\u001ef_parent\"] || cache;\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathValueIndex = -1;\n    var pathValueCount = pathValues.length;\n\n    while (++pathValueIndex < pathValueCount) {\n\n        var pathValue = pathValues[pathValueIndex];\n        var path = pathValue.path;\n        var value = pathValue.value;\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathSet(value, path, 0, cache, parent, node, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, modelRoot, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    if (cache[\"\u001ef_version\"] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n}\n\n/* eslint-disable no-constant-condition */\nfunction setPathSet(value, path, depth, root, parent, node, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        setNode(root, parent, node, key, value, branch, false, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = arr[0];\n        var nextParent = arr[1];\n        var nextOptimizedPath = arr[2];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setPathSet(value, path, depth + 1, root, nextParent, nextNode, requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(value, root, nodeArg, requestedPath, optimizedPathArg, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var node = nodeArg;\n    var reference = node.value;\n    var optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var container = node;\n        parent = root;\n\n        node = node[\"\u001ef_context\"];\n\n        if (node != null) {\n            parent = node[\"\u001ef_parent\"] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                optimizedPath.index = index;\n\n                setNode(root, parent, node, key, value, branch, true, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n                node = arr[0];\n                optimizedPath = arr[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return;\n                }\n                parent = arr[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[\"\u001ef_context\"] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n}\n\nfunction setNode(root, parentArg, nodeArg, key, value, branch, reference, requestedPath, optimizedPathArg, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var node = nodeArg;\n    var type = node.$type;\n    var parent = parentArg;\n    var optimizedPath = optimizedPathArg;\n\n    while (type === \"ref\") {\n\n        setReference(value, root, node, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = arr[0];\n\n        if (!node || typeof node !== 'object') {\n            return;\n        }\n\n        parent = arr[1];\n        optimizedPath = arr[2];\n        type = node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[\"\u001ef_key\"];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n}\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = updateBackReferenceVersions;\n\nfunction updateBackReferenceVersions(nodeArg, version) {\n    var node = nodeArg,\n        stack = [],\n        count = 0,\n        ref,\n        i,\n        n;\n    do {\n        i = -1;\n        ref = node[\"\u001ef_parent\"];\n        node[\"\u001ef_version\"] = version;\n        n = node[\"\u001ef_refs_length\"] || 0;\n        do {\n            if (ref && ref[\"\u001ef_version\"] !== version) {\n                stack[count++] = ref;\n            }\n            if (++i < n) {\n                ref = node[\"\u001ef_ref\" + i];\n                continue;\n            }\n            break;\n        } while (true);\n    } while (node = stack[--count]);\n    return nodeArg;\n}\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(6);\nmodule.exports = getTimestamp;\n\nfunction getTimestamp(node) {\n    return isObject(node) && node.$timestamp || undefined;\n}\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Determined if the key passed in is an internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nmodule.exports = isInternalKey;\n\nvar isInternal = __webpack_require__(19);\n\nfunction isInternalKey(key) {\n  return key && key[0] === '$' || isInternal(key);\n}\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\nmodule.exports = 0;\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/iterateKeySet\");\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/support/materializedAtom\");\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar walkPathAndBuildOutput = __webpack_require__(64);\nvar walkFlatBufferAndBuildOutput = __webpack_require__(63);\nvar getBoundCacheNode = __webpack_require__(16);\nvar InvalidModelError = __webpack_require__(81);\nvar toFlatBuffer = __webpack_require__(104);\nvar computeFlatBufferHash = __webpack_require__(98);\n\nmodule.exports = getJSON;\n\nfunction getJSON(model, pathsArg, seed, progressive, expireImmediate) {\n\n    var node,\n        paths = pathsArg,\n        referenceContainer,\n        boundPath = model._path,\n        modelRoot = model._root,\n        cache = modelRoot.cache,\n        requestedPath,\n        requestedLength,\n        optimizedPath,\n        optimizedLength = boundPath && boundPath.length || 0;\n\n    // If the model is bound, get the cache position.\n    if (optimizedLength) {\n        node = getBoundCacheNode(model);\n        // If there was a short, then we 'throw an error' to the outside\n        // calling function which will onError the observer.\n        if (node && node.$type) {\n            return { error: new InvalidModelError(boundPath, boundPath) };\n        }\n        // We need to get the new cache position and copy the bound path.\n        optimizedPath = [];\n        for (var i = 0; i < optimizedLength; ++i) {\n            optimizedPath[i] = boundPath[i];\n        }\n        referenceContainer = model._referenceContainer;\n    } else {\n        node = cache;\n        optimizedPath = [];\n    }\n\n    requestedPath = [];\n\n    var isFlatBuffer = false,\n        json = seed && seed.json,\n        boxValues = model._boxed,\n        expired = modelRoot.expired,\n        recycleJSON = model._recycleJSON,\n        hasDataSource = Boolean(model._source),\n        branchSelector = modelRoot.branchSelector,\n        materialized = seed && model._materialized,\n        treatErrorsAsValues = model._treatErrorsAsValues,\n        allowFromWhenceYouCame = model._allowFromWhenceYouCame,\n        results = { args: null, data: seed, hasValue: false,\n        relative: null, requested: null, missing: null };\n\n    var arr,\n        path,\n        pathsIndex = 0,\n        pathsCount = paths.length;\n\n    if (pathsCount > 0) {\n\n        if (recycleJSON) {\n            isFlatBuffer = true;\n            if (pathsCount > 1 && expireImmediate || isArray(paths[0])) {\n                paths = [computeFlatBufferHash(toFlatBuffer(paths, {}))];\n            }\n            pathsCount = 1;\n        }\n\n        do {\n            path = paths[pathsIndex];\n            if (isFlatBuffer) {\n                arr = walkFlatBufferAndBuildOutput(cache, node, json, paths[0], 0, seed, results, requestedPath, optimizedPath, optimizedLength,\n                /* fromReference = */false, referenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n            } else {\n                requestedLength = path.length;\n                arr = walkPathAndBuildOutput(cache, node, json, path,\n                /* depth = */0, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength,\n                /* fromReference = */false, referenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n            }\n            json = arr[0];\n            arr[0] = undefined;\n            arr[1] = undefined;\n        } while (++pathsIndex < pathsCount);\n    }\n\n    var requested = results.requested;\n\n    results.args = isFlatBuffer && paths || requested;\n\n    if (requested && requested.length) {\n        results.relative = results.args;\n        if (optimizedLength) {\n            var boundRequested = [];\n            for (var i = 0, len = requested.length; i < len; ++i) {\n                boundRequested[i] = boundPath.concat(requested[i]);\n            }\n            results.requested = boundRequested;\n        }\n    }\n\n    if (results.hasValue) {\n        seed.json = json;\n    }\n\n    return results;\n}\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arr = new Array(3);\nvar promote = __webpack_require__(12);\nvar isExpired = __webpack_require__(0);\nvar createHardlink = __webpack_require__(7);\nvar CircularReferenceError = __webpack_require__(46);\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, refArg, modelRoot, expireImmediate) {\n\n    promote(modelRoot, refArg);\n\n    var context,\n        ref = refArg,\n        key,\n        type,\n        depth = 0,\n        node = root,\n        path = ref.value,\n        copy = path,\n        length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[\"\u001ef_context\"])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                    throw new CircularReferenceError(path);\n                }\n                // If the node we land on isn't the existing ref context,\n                // create a hard-link between the reference and the node\n                // it points to.\n                else if (node !== context) {\n                        createHardlink(ref, node);\n                    }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === \"ref\") {\n\n                promote(modelRoot, node);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n    arr[2] = ref;\n\n    return arr;\n}\n/* eslint-enable */\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clone = __webpack_require__(1);\nvar onError = __webpack_require__(62);\n\nmodule.exports = onJSONValue;\n\nfunction onJSONValue(node, type, depth, seed, results, requestedPath, optimizedPath, optimizedLength, fromReference, boxValues, materialized, treatErrorsAsValues) {\n\n    if (\"error\" === type && !treatErrorsAsValues) {\n        return onError(node, depth, results, requestedPath, fromReference, boxValues);\n    }\n\n    results.hasValue = true;\n\n    // boxValues always clones the node\n    return !boxValues ? node.value : clone(node);\n}\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar walkPathAndBuildOutput = __webpack_require__(67);\nvar BoundJSONGraphModelError = __webpack_require__(79);\n\nmodule.exports = getJSONGraph;\n\nfunction getJSONGraph(model, paths, seed, progressive, expireImmediate) {\n\n    var node,\n        cache,\n        boundPath = model._path,\n        modelRoot = model._root,\n        requestedPath,\n        requestedLength,\n        optimizedPath,\n        optimizedLength = boundPath && boundPath.length || 0;\n\n    // If the model is bound, then get that cache position.\n    if (optimizedLength) {\n        // JSONGraph output cannot ever be bound or else it will\n        // throw an error.\n        return { error: new BoundJSONGraphModelError() };\n    } else {\n        optimizedPath = [];\n        cache = node = modelRoot.cache;\n    }\n\n    requestedPath = [];\n\n    var boxValues = model._boxed,\n        expired = modelRoot.expired,\n        materialized = model._materialized,\n        hasDataSource = Boolean(model._source),\n        pathsIndex = -1,\n        pathsCount = paths.length,\n        treatErrorsAsValues = model._treatErrorsAsValues,\n        results = { args: null, data: seed, paths: null,\n        relative: null, requested: null, jsonGraph: null };\n\n    while (++pathsIndex < pathsCount) {\n        var path = paths[pathsIndex];\n        requestedLength = path.length;\n        walkPathAndBuildOutput(cache, node, path,\n        /* depth = */0, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength,\n        /* fromReference = */false, modelRoot, expired, expireImmediate, boxValues, materialized, hasDataSource, treatErrorsAsValues);\n    }\n\n    results.args = results.relative = results.requested;\n\n    return results;\n}\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar clone = __webpack_require__(1);\nvar FalcorJSON = __webpack_require__(3);\nvar NullInPathError = __webpack_require__(4);\nvar InvalidKeySetError = __webpack_require__(11);\nvar materializedAtom = __webpack_require__(33);\n\nmodule.exports = onMaterialize;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterialize(jsonArg, path, depth, length, branchSelector, boxValues, modelRoot) {\n\n    var json = jsonArg,\n        type,\n        refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (depth === length) {\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta;\n\n    var nextKey,\n        keyset,\n        keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd,\n        keysOrRanges,\n        keysetIndex = -1,\n        keysetLength = 0;\n\n    keyset = path[depth];\n\n    if (!json || 'object' !== typeof json) {\n        json = {};\n        json.__proto__ = FalcorJSON.prototype;\n        json[\"\u001ef_meta\"] = f_meta = {};\n        f_meta[\"status\"] = 'resolved';\n        f_meta[\"version\"] = modelRoot.version;\n        f_meta[\"abs_path\"] = path.slice(0, depth);\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[\"\u001ef_meta\"])) {\n        json[\"\u001ef_meta\"] = f_meta = {};\n        f_meta[\"status\"] = 'resolved';\n        f_meta[\"version\"] = modelRoot.version;\n        f_meta[\"abs_path\"] = path.slice(0, depth);\n    } else {\n        f_meta[\"status\"] = 'resolved';\n        f_meta[\"version\"] = modelRoot.version;\n        f_meta[\"abs_path\"] = path.slice(0, depth);\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    throw new InvalidKeySetError(path, keysOrRanges);\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                keyset = keysOrRanges[keysetIndex];\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if ('number' !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            // insert the materialized branch\n            json[nextKey] = onMaterialize(json[nextKey], path, nextDepth, length, branchSelector, boxValues, modelRoot);\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar isPathValue = __webpack_require__(93);\nvar isJSONEnvelope = __webpack_require__(51);\nvar isJSONGraphEnvelope = __webpack_require__(52);\n\nmodule.exports = groupCacheArguments;\n\nfunction groupCacheArguments(args) {\n\n    var groups = [];\n    var argIndex = -1;\n    var argCount = args.length;\n    var group, groupType, arg, argType;\n\n    while (++argIndex < argCount) {\n        arg = args[argIndex];\n        if (isArray(arg)) {\n            arg = { path: arg };\n            argType = 'PathValues';\n        } else if (isPathValue(arg)) {\n            argType = 'PathValues';\n        } else if (isJSONGraphEnvelope(arg)) {\n            argType = 'JSONGraphs';\n        } else if (isJSONEnvelope(arg)) {\n            argType = 'PathMaps';\n        }\n\n        if (groupType !== argType) {\n            groupType = argType;\n            groups.push(group = {\n                arguments: [],\n                inputType: argType\n            });\n        }\n\n        group.arguments.push(arg);\n    }\n\n    return groups;\n}\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = insertNode;\n\nfunction insertNode(node, parent, key, version, optimizedPath) {\n    node[\"\u001ef_key\"] = key;\n    node[\"\u001ef_parent\"] = parent;\n\n    if (version !== undefined) {\n        node[\"\u001ef_version\"] = version;\n    }\n    if (!node[\"\u001ef_abs_path\"]) {\n        node[\"\u001ef_abs_path\"] = optimizedPath.slice(0, optimizedPath.index).concat(key);\n    }\n\n    parent[key] = node;\n\n    return node;\n}\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arr = new Array(2);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(2);\nvar lruPromote = __webpack_require__(12);\nvar getSize = __webpack_require__(8);\nvar createHardlink = __webpack_require__(7);\nvar getBoundCacheNode = __webpack_require__(16);\nvar isInternalKey = __webpack_require__(29);\nvar updateNodeAncestors = __webpack_require__(10);\n\n/**\n * Sets a list of PathMaps into a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of @PathMapEnvelopes to set.\n */\n\nmodule.exports = invalidatePathMaps;\n\nfunction invalidatePathMaps(model, pathMapEnvelopes, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var comparator = modelRoot._comparator;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n\n    if (!node) {\n        return false;\n    }\n\n    var pathMapIndex = -1;\n    var parent = node[\"\u001ef_parent\"] || cache;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n\n        invalidatePathMap(pathMapEnvelope.json, 0, cache, parent, node, version, expired, lru, comparator, expireImmediate);\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    if (cache[\"\u001ef_version\"] === version) {\n        modelRoot.version = version;\n        return true;\n    }\n\n    return false;\n}\n\nfunction invalidatePathMap(pathMap, depth, root, parent, node, version, expired, lru, comparator, expireImmediate) {\n\n    if (!pathMap || typeof pathMap !== 'object' || pathMap.$type) {\n        return;\n    }\n\n    for (var key in pathMap) {\n        if (!isInternalKey(key)) {\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n            invalidateNode(root, parent, node, key, child, branch, false, version, expired, lru, comparator, expireImmediate);\n            var nextNode = arr[0];\n            var nextParent = arr[1];\n            if (nextNode) {\n                if (branch) {\n                    invalidatePathMap(child, depth + 1, root, nextParent, nextNode, version, expired, lru, comparator, expireImmediate);\n                } else {\n                    updateNodeAncestors(nextNode, getSize(nextNode), lru, version);\n                }\n            }\n        }\n    }\n}\n\nfunction invalidateReference(value, root, nodeArg, version, expired, lru, comparator, expireImmediate) {\n\n    var node = nodeArg;\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[\"\u001ef_context\"];\n\n    if (node != null) {\n        parent = node[\"\u001ef_parent\"] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            invalidateNode(root, parent, node, key, value, branch, true, version, expired, lru, comparator, expireImmediate);\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[\"\u001ef_context\"] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n}\n\nfunction invalidateNode(root, parentArg, nodeArg, key, value, branch, reference, version, expired, lru, comparator, expireImmediate) {\n\n    var node = nodeArg;\n    var parent = parentArg;\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        invalidateReference(value, root, node, version, expired, lru, comparator, expireImmediate);\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new Error('`null` is not allowed in branch key positions.');\n            } else if (node) {\n                key = node[\"\u001ef_key\"];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n}\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $now = __webpack_require__(30);\nvar getType = __webpack_require__(92);\nvar getSize = __webpack_require__(8);\nvar getTimestamp = __webpack_require__(28);\n\nvar wrapNode = __webpack_require__(45);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(2);\nvar insertNode = __webpack_require__(40);\nvar replaceNode = __webpack_require__(44);\nvar reconstructPath = __webpack_require__(43);\nvar updateNodeAncestors = __webpack_require__(10);\nvar removeNodeAndDescendants = __webpack_require__(25);\n\nmodule.exports = mergeValueOrInsertBranch;\n\nfunction mergeValueOrInsertBranch(parentArg, nodeArg, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var node = nodeArg;\n    var parent = parentArg;\n    var cType = getType(node, reference);\n\n    if (branch || reference) {\n        if (cType && isExpired(node,\n        /* expireImmediate:\n         * force true so the node is marked as\n         * expired but keep using it for the merge if it expires immediately\n         */\n        true)) {\n            expireNode(node, expired, lru);\n            cType = node.$expires === $now ? cType : 'expired';\n        }\n        if (cType && cType !== \"ref\" || !node || typeof node !== 'object') {\n            node = replaceNode(node, {}, parent, key, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    } else {\n        var message = value;\n        var isDistinct = true;\n        var mType = getType(message);\n\n        // If both the cache and message are primitives,\n        // insert the message into the cache.\n        if (!cType && !mType) {\n            isDistinct = true;\n        }\n        // Compare the current cache value with the new value. If either of\n        // them don't have a timestamp, or the message's timestamp is newer,\n        // replace the cache value with the message value. If a comparator\n        // is specified, the comparator takes precedence over timestamps.\n        else if (comparator) {\n                isDistinct = !(comparator.length < 3 ? comparator(node, message) : comparator(node, message, optimizedPath.slice(0, optimizedPath.index)));\n            } else {\n                // Comparing either Number or undefined to undefined always results in false.\n                isDistinct = getTimestamp(message) < getTimestamp(node) === false;\n            }\n\n        if (isDistinct) {\n\n            if (errorSelector && mType === \"error\") {\n                message = errorSelector(reconstructPath(requestedPath, key), message);\n            }\n\n            var sizeOffset = getSize(node) - getSize(message = wrapNode(message, mType, mType ? message.value : message));\n\n            node = replaceNode(node, message, parent, key, lru, version);\n            parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    }\n\n    return node;\n};\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports) {\n\n/**\n * Reconstructs the path for the current key, from currentPath (requestedPath)\n * state maintained during set/merge walk operations.\n *\n * During the walk, since the requestedPath array is updated after we attempt to\n * merge/insert nodes during a walk (it reflects the inserted node's parent branch)\n * we need to reconstitute a path from it.\n *\n * @param  {Array} currentPath The current requestedPath state, during the walk\n * @param  {String} key        The current key value, during the walk\n * @return {Array} A new array, with the path which represents the node we're about\n * to insert\n */\nmodule.exports = reconstructPath;\n\nfunction reconstructPath(currentPath, key) {\n\n  var path = currentPath.slice(0, currentPath.depth);\n  path[path.length] = key;\n\n  return path;\n}\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar transferBackReferences = __webpack_require__(74);\nvar removeNodeAndDescendants = __webpack_require__(25);\nvar updateBackReferenceVersions = __webpack_require__(27);\n\nmodule.exports = replaceNode;\n\nfunction replaceNode(node, replacement, parent, key, lru, version) {\n    if (node === replacement) {\n        return node;\n    } else if (!(!node || typeof node !== 'object')) {\n        transferBackReferences(node, replacement);\n        removeNodeAndDescendants(node, parent, key, lru);\n        updateBackReferenceVersions(replacement, version);\n    }\n\n    parent[key] = replacement;\n    return replacement;\n}\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar now = __webpack_require__(53);\nvar clone = __webpack_require__(90);\nvar getSize = __webpack_require__(8);\nvar getExpires = __webpack_require__(91);\nvar expiresNow = __webpack_require__(30);\n\nvar atomSize = 50;\n\nmodule.exports = wrapNode;\n\nfunction wrapNode(nodeArg, typeArg, value) {\n\n    var size = 0;\n    var node = nodeArg;\n    var type = typeArg;\n\n    if (type) {\n        var modelCreated = node[\"\u001ef_wrapped_value\"];\n        node = clone(node);\n        size = getSize(node);\n        node.$type = type;\n        node[\"\u001ef_prev\"] = undefined;\n        node[\"\u001ef_next\"] = undefined;\n        node[\"\u001ef_wrapped_value\"] = modelCreated || false;\n    } else {\n        node = { $type: \"atom\", value: value };\n        node[\"\u001ef_prev\"] = undefined;\n        node[\"\u001ef_next\"] = undefined;\n        node[\"\u001ef_wrapped_value\"] = true;\n    }\n\n    if (value == null) {\n        size = atomSize + 1;\n    } else if (size == null || size <= 0) {\n        switch (typeof value) {\n            case 'object':\n                if (isArray(value)) {\n                    size = atomSize + value.length;\n                } else {\n                    size = atomSize + 1;\n                }\n                break;\n            case 'string':\n                size = atomSize + value.length;\n                break;\n            default:\n                size = atomSize + 1;\n                break;\n        }\n    }\n\n    var expires = getExpires(node);\n\n    if (typeof expires === 'number' && expires < expiresNow) {\n        node.$expires = now() + expires * -1;\n    }\n\n    node.$size = size;\n\n    return node;\n};\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(5);\n\nmodule.exports = createErrorClass('CircularReferenceError', function (referencePath) {\n    this.message = 'Encountered circular reference ' + JSON.stringify(referencePath);\n});\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(5);\nvar MESSAGE = 'An exception was thrown when making a request';\n\n/**\n * InvalidSourceError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidSourceError', function (error) {\n  this.message = MESSAGE + ':\\n\\t' + error;\n});\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = lruSplice;\n\nfunction lruSplice(lru, node) {\n\n    // Its in the cache.  Splice out.\n    var prev = node[\"\u001ef_prev\"];\n    var next = node[\"\u001ef_next\"];\n    if (next) {\n        next[\"\u001ef_prev\"] = prev;\n    }\n    if (prev) {\n        prev[\"\u001ef_next\"] = next;\n    }\n    node[\"\u001ef_prev\"] = node[\"\u001ef_next\"] = undefined;\n\n    if (node === lru[\"\u001ef_head\"]) {\n        lru[\"\u001ef_head\"] = next;\n    }\n    if (node === lru[\"\u001ef_tail\"]) {\n        lru[\"\u001ef_tail\"] = prev;\n    }\n}\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var Subscriber = __webpack_require__(13);\nvar Subscription = __webpack_require__(14);\nvar $$observable = __webpack_require__(94).default;\n\nmodule.exports = Source;\n\nfunction Source(subscribe) {\n    if (!subscribe) {\n        return;\n    }\n    switch (typeof subscribe) {\n        case 'object':\n            this.source = subscribe;\n            break;\n        case 'function':\n            this.source = { subscribe: subscribe };\n            break;\n    }\n}\n\nSource.prototype[$$observable] = function () {\n    return this;\n};\n\nSource.prototype.operator = function (destination) {\n    return this.subscribe(destination);\n};\n\n// Unused\n// Source.prototype.lift = function(operator, source) {\n//     source = new Source(source || this);\n//     source.operator = operator;\n//     source._promise = this._promise;\n//     return source;\n// }\n\nSource.prototype.subscribe = function (destination, x, y) {\n    return new Subscription([this.operator.call(this.source, !(destination instanceof Subscriber) ? new Subscriber(destination, x, y) : destination)]);\n};\n\nSource.prototype.then = function then(onNext, onError) {\n    /* global Promise */\n    var source = this;\n    if (!this._promise) {\n        this._promise = new global['Promise'](function (resolve, reject) {\n            var values = [],\n                rejected = false;\n            source.subscribe({\n                next: function (value) {\n                    values[values.length] = value;\n                },\n                error: function (errors) {\n                    (rejected = true) && reject(errors);\n                },\n                complete: function () {\n                    !rejected && resolve(values.length <= 1 ? values[0] : values);\n                }\n            });\n        });\n    }\n    return this._promise.then(onNext, onError);\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(31)))\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports) {\n\nvar empty = {\n    dispose: function () {},\n    unsubscribe: function () {}\n};\n\nfunction ImmediateScheduler() {}\n\nImmediateScheduler.prototype.schedule = function schedule(action) {\n    action();\n    return empty;\n};\n\nmodule.exports = ImmediateScheduler;\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(6);\n\nmodule.exports = isJSONEnvelope;\n\nfunction isJSONEnvelope(envelope) {\n    return isObject(envelope) && 'json' in envelope;\n}\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar isObject = __webpack_require__(6);\n\nmodule.exports = isJSONGraphEnvelope;\n\nfunction isJSONGraphEnvelope(envelope) {\n    return isObject(envelope) && isArray(envelope.paths) && (isObject(envelope.jsonGraph) || isObject(envelope.jsong) || isObject(envelope.json) || isObject(envelope.values) || isObject(envelope.value));\n}\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports) {\n\nmodule.exports = Date.now;\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports) {\n\nmodule.exports = 1;\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/collapse\");\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Model = __webpack_require__(57);\nvar FalcorJSON = __webpack_require__(3);\n\nfunction falcor(opts) {\n    if (!(this instanceof Model)) {\n        return new Model(opts);\n    }\n    Model.call(this, opts);\n}\n\nfalcor.prototype = Object.create(Model.prototype);\n\nfalcor['Model'] = Model;\nfalcor['FalcorJSON'] = FalcorJSON;\nfalcor['toProps'] = FalcorJSON.prototype.toProps;\n\nmodule.exports = falcor;\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Call = __webpack_require__(85);\nvar ModelRoot = __webpack_require__(59);\nvar FalcorJSON = __webpack_require__(3);\nvar ModelDataSourceAdapter = __webpack_require__(58);\nvar TimeoutScheduler = __webpack_require__(89);\nvar ImmediateScheduler = __webpack_require__(50);\nvar collapse = __webpack_require__(55);\n\nvar getSize = __webpack_require__(8);\nvar isObject = __webpack_require__(6);\nvar isJSONEnvelope = __webpack_require__(51);\nvar getCachePosition = __webpack_require__(9);\nvar isJSONGraphEnvelope = __webpack_require__(52);\n\nvar setCache = __webpack_require__(18);\nvar setJSONGraphs = __webpack_require__(17);\n\nvar getJSON = __webpack_require__(20);\nvar getCache = __webpack_require__(69);\nvar getJSONGraph = __webpack_require__(21);\n\nmodule.exports = Model;\n\n/**\n * This callback is invoked when the Model's cache is changed.\n * @callback Model~onChange\n */\n\n/**\n* This function is invoked on every JSONGraph Error retrieved from the DataSource. This function allows Error objects to be transformed before being stored in the Model's cache.\n* @callback Model~errorSelector\n* @param {Object} jsonGraphError - the JSONGraph Error object to transform before it is stored in the Model's cache.\n* @returns {Object} the JSONGraph Error object to store in the Model cache.\n*/\n\n/**\n* This function is invoked every time a value in the Model cache is about to be replaced with a new value. If the function returns true, the existing value is replaced with a new value and the version flag on all of the value's ancestors in the tree are incremented.\n* @callback Model~comparator\n* @param {Object} existingValue - the current value in the Model cache.\n* @param {Object} newValue - the value about to be set into the Model cache.\n* @returns {Boolean} the Boolean value indicating whether the new value and the existing value are equal.\n*/\n\n/**\n * A Model object is used to execute commands against a {@link JSONGraph} object. {@link Model}s can work with a local JSONGraph cache, or it can work with a remote {@link JSONGraph} object through a {@link DataSource}.\n * @constructor\n * @param {?Object} options - a set of options to customize behavior\n * @param {?DataSource} options.source - a data source to retrieve and manage the {@link JSONGraph}\n * @param {?JSONGraph} options.cache - initial state of the {@link JSONGraph}\n * @param {?number} options.maxSize - the maximum size of the cache. This value roughly correlates to item count (where itemCount = maxSize / 50). Each item by default is given a metadata `$size` of 50 (or its length when it's an array or string). You can get better control of falcor's memory usage by tweaking `$size`\n * @param {?number} options.collectRatio - the ratio of the maximum size to collect when the maxSize is exceeded\n * @param {?Model~errorSelector} options.errorSelector - a function used to translate errors before they are returned\n * @param {?Model~onChange} options.onChange - a function called whenever the Model's cache is changed\n * @param {?Model~comparator} options.comparator - a function called whenever a value in the Model's cache is about to be replaced with a new value.\n */\nfunction Model(opts) {\n\n    var options = opts || {};\n\n    this._node = options._node;\n    this._path = options._path || [];\n    this._source = options.source || options._source;\n    this._root = options._root || new ModelRoot(options, this);\n    this._recycleJSON = options.recycleJSON === true || options._recycleJSON;\n    this._scheduler = options.scheduler || options._scheduler || new ImmediateScheduler();\n\n    if (options._seed) {\n        this._recycleJSON = true;\n        this._seed = options._seed;\n        this._treatErrorsAsValues = true;\n    } else if (this._recycleJSON) {\n        this._treatErrorsAsValues = true;\n        this._seed = {};\n        this._seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    this._boxed = options.boxed === true || options._boxed || false;\n    this._materialized = options.materialized === true || options._materialized || false;\n    this._treatErrorsAsValues = options.treatErrorsAsValues === true || options._treatErrorsAsValues || false;\n    this._allowFromWhenceYouCame = options.allowFromWhenceYouCame === true || options._allowFromWhenceYouCame || false;\n\n    if (options.cache) {\n        this.setCache(options.cache);\n    }\n}\n\nModel.prototype.constructor = Model;\n\n/**\n * The get method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model}. The get method loads each value into a JSON object and returns in a ModelResponse.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - the requested data as JSON\n */\nModel.prototype.get = function get() {\n    var seed = this._seed;\n    if (!seed) {\n        seed = {};\n        seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n    }\n\n    return new Call('get', this, args)._toJSON(seed, []);\n};\n\n/**\n * Sets the value at one or more places in the JSONGraph model. The set method accepts one or more {@link PathValue}s, each of which is a combination of a location in the document and the value to place there.  In addition to accepting  {@link PathValue}s, the set method also returns the values after the set operation is complete.\n * @function\n * @return {ModelResponse.<JSONEnvelope>} - an {@link Observable} stream containing the values in the JSONGraph model after the set was attempted\n */\nModel.prototype.set = function set() {\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n    }\n\n    return new Call('set', this, args)._toJSON(seed, []);\n};\n\n/**\n * The preload method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model} and loads them into the Model cache.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - a ModelResponse that completes when the data has been loaded into the cache.\n */\nModel.prototype.preload = function preload() {\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n    }\n\n    return new Call('get', this, args)._toJSON(null, []);\n};\n\n/**\n * Invokes a function in the JSON Graph.\n * @function\n * @param {Path} functionPath - the path to the function to invoke\n * @param {Array.<Object>} args - the arguments to pass to the function\n * @param {Array.<PathSet>} refPaths - the paths to retrieve from the JSON Graph References in the message returned from the function\n * @param {Array.<PathSet>} thisPaths - the paths to retrieve from function's this object after successful function execution\n * @return {ModelResponse.<JSONEnvelope> - a JSONEnvelope contains the values returned from the function\n */\n\nModel.prototype.call = function call() {\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n\n    for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n    }\n\n    return new Call('call', this, args)._toJSON(seed, []);\n};\n\n/**\n * The invalidate method synchronously removes several {@link Path}s or {@link PathSet}s from a {@link Model} cache.\n * @function\n * @param {...PathSet} path - the  paths to remove from the {@link Model}'s cache.\n */\nModel.prototype.invalidate = function invalidate() {\n    for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n    }\n\n    return new Call('invalidate', this, args)._toJSON(null, null).then();\n};\n\n/**\n * Returns a new {@link Model} bound to a location within the {@link\n * JSONGraph}. The bound location is never a {@link Reference}: any {@link\n * Reference}s encountered while resolving the bound {@link Path} are always\n * replaced with the {@link Reference}s target value. For subsequent operations\n * on the {@link Model}, all paths will be evaluated relative to the bound\n * path. Deref allows you to:\n * - Expose only a fragment of the {@link JSONGraph} to components, rather than\n *   the entire graph\n * - Hide the location of a {@link JSONGraph} fragment from components\n * - Optimize for executing multiple operations and path looksup at/below the\n *   same location in the {@link JSONGraph}\n * @method\n * @param {Object} responseObject - an object previously retrieved from the\n * Model\n * @return {Model} - the dereferenced {@link Model}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.deref = __webpack_require__(78);\n\n/**\n * A dereferenced model can become invalid when the reference from which it was\n * built has been removed/collected/expired/etc etc.  To fix the issue, a request\n * from the parent should be made (no parent, then from the root) for a valid\n * path and re-dereference performed to update where the model is bound.\n *\n * @method\n * @private\n * @return {Boolean} - If the currently deref'd model is still considered a\n * valid deref.\n */\nModel.prototype._hasValidParentReference = __webpack_require__(77);\n\n/**\n * Get data for a single {@link Path}.\n * @param {Path} path - the path to retrieve\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     getValue('user.name').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.getValue = function getValue(path) {\n    return new Call('get', this, [path])._toJSON({}, []).lift(function (subscriber) {\n        return this.subscribe({\n            onNext: function (data) {\n                var depth = -1;\n                var x = data.json;\n                var length = path.length;\n                while (x && !x.$type && ++depth < length) {\n                    x = x[path[depth]];\n                }\n                subscriber.onNext(x);\n            },\n            onError: subscriber.onError.bind(subscriber),\n            onCompleted: subscriber.onCompleted.bind(subscriber)\n        });\n    });\n};\n\n/**\n * Set value for a single {@link Path}.\n * @param {Path} path - the path to set\n * @param {Object} value - the value to set\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     setValue('user.name', 'Jim').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.setValue = function setValue(path, value) {\n    path = arguments.length === 1 ? path.path : path;\n    value = arguments.length === 1 ? path : { path: path, value: value };\n    return new Call('set', this, [value])._toJSON({}, []).lift(function (subscriber) {\n        return this.subscribe({\n            onNext: function (data) {\n                var depth = -1;\n                var x = data.json;\n                var length = path.length;\n                while (x && !x.$type && ++depth < length) {\n                    x = x[path[depth]];\n                }\n                subscriber.onNext(x);\n            },\n            onError: subscriber.onError.bind(subscriber),\n            onCompleted: subscriber.onCompleted.bind(subscriber)\n        });\n    });\n};\n\n/**\n * Set the local cache to a {@link JSONGraph} fragment. This method can be a useful way of mocking a remote document, or restoring the local cache from a previously stored state.\n * @param {JSONGraph} jsonGraph - the {@link JSONGraph} fragment to use as the local cache\n */\nModel.prototype.setCache = function modelSetCache(cacheOrJSONGraphEnvelope) {\n\n    var modelRoot = this._root;\n    var cache = modelRoot.cache;\n\n    if (cacheOrJSONGraphEnvelope !== cache) {\n\n        var options = {\n            _path: [],\n            _boxed: false,\n            _root: modelRoot,\n            _materialized: false,\n            _treatErrorsAsValues: false\n        };\n\n        modelRoot.cache = this._node = {};\n\n        if (typeof cache !== 'undefined') {\n            modelRoot.expired = [];\n            modelRoot[\"\u001ef_head\"] = undefined;\n            modelRoot[\"\u001ef_tail\"] = undefined;\n            if (this._recycleJSON) {\n                this._seed = {};\n                this._seed.__proto__ = FalcorJSON.prototype;\n            }\n        }\n\n        var results, rootOnChangeHandler;\n        if (isJSONGraphEnvelope(cacheOrJSONGraphEnvelope)) {\n            results = setJSONGraphs(options, [cacheOrJSONGraphEnvelope]);\n        } else if (isJSONEnvelope(cacheOrJSONGraphEnvelope)) {\n            results = setCache(options, [cacheOrJSONGraphEnvelope]);\n        } else if (isObject(cacheOrJSONGraphEnvelope)) {\n            results = setCache(options, [{ json: cacheOrJSONGraphEnvelope }]);\n        }\n\n        if (results) {\n            // performs promotion without producing output.\n            if (results[0].length) {\n                getJSON(options, results[0], null, false, false);\n            }\n            if (results[2] && (rootOnChangeHandler = modelRoot.onChange)) {\n                rootOnChangeHandler.call(modelRoot.topLevelModel);\n            }\n        }\n    } else if (typeof cache === 'undefined') {\n        this._root.cache = {};\n    }\n    return this;\n};\n\n/**\n * Get the local {@link JSONGraph} cache. This method can be a useful to store the state of the cache.\n * @param {...Array.<PathSet>} [pathSets] - The path(s) to retrieve. If no paths are specified, the entire {@link JSONGraph} is returned.\n * @return {JSONGraph} all of the {@link JSONGraph} data in the {@link Model} cache.\n * @example\n // Storing the boxshot of the first 10 titles in the first 10 genreLists to local storage.\n localStorage.setItem('cache', JSON.stringify(model.getCache('genreLists[0...10][0...10].boxshot')));\n */\nModel.prototype.getCache = function _getCache() {\n    for (var _len6 = arguments.length, paths = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        paths[_key6] = arguments[_key6];\n    }\n\n    if (paths.length === 0) {\n        return getCache(this, this._root.cache);\n    }\n\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n\n    var env = getJSONGraph({\n        _path: [],\n        _root: this._root,\n        _boxed: this._boxed,\n        _materialized: this._materialized,\n        _treatErrorsAsValues: this._treatErrorsAsValues\n    }, paths, seed).data;\n\n    env.paths = collapse(paths);\n\n    return env;\n};\n\n/**\n * Retrieves a number which is incremented every single time a value is changed underneath the Model or the object at an optionally-provided Path beneath the Model.\n * @param {Path?} path - a path at which to retrieve the version number\n * @return {Number} a version number which changes whenever a value is changed underneath the Model or provided Path\n */\nModel.prototype.getVersion = function getVersion(path) {\n    path = path || [];\n    if (Array.isArray(path) === false) {\n        throw new Error('Model#getVersion must be called with an Array path.');\n    }\n    if (this._path.length) {\n        path = this._path.concat(path);\n    }\n    return this._getVersion(this, path);\n};\n\n/* eslint-disable guard-for-in */\nModel.prototype._clone = function cloneModel(opts) {\n    var clone = new Model(this);\n    if (opts) {\n        for (var key in opts) {\n            var value = opts[key];\n            if (value === 'delete') {\n                delete clone[key];\n            } else if (key === '_path') {\n                clone[key] = value;\n                if (false === opts.hasOwnProperty('_node')) {\n                    delete clone['_node'];\n                }\n            } else {\n                clone[key] = value;\n            }\n        }\n    }\n    if (clone._path.length > 0) {\n        clone.setCache = void 0;\n    }\n    return clone;\n};\n/* eslint-enable */\n\n/**\n * Returns a clone of the {@link Model} that enables batching. Within the configured time period, paths for get operations are collected and sent to the {@link DataSource} in a batch. Batching can be more efficient if the {@link DataSource} access the network, potentially reducing the number of HTTP requests to the server.\n * @param {?Scheduler|number} schedulerOrDelay - Either a {@link Scheduler} that determines when to send a batch to the {@link DataSource}, or the number in milliseconds to collect a batch before sending to the {@link DataSource}. If this parameter is omitted, then batch collection ends at the end of the next tick.\n * @return {Model} a Model which schedules a batch of get requests to the DataSource.\n */\nModel.prototype.batch = function batch(schedulerOrDelay) {\n\n    var scheduler;\n\n    if (typeof schedulerOrDelay === 'number') {\n        scheduler = new TimeoutScheduler(Math.round(Math.abs(schedulerOrDelay)));\n    } else if (!schedulerOrDelay) {\n        scheduler = new TimeoutScheduler(1);\n    } else if (typeof schedulerOrDelay.schedule === 'function') {\n        scheduler = schedulerOrDelay;\n    } else if (typeof schedulerOrDelay === 'function') {\n        scheduler = { scheudle: schedulerOrDelay };\n    }\n\n    return this._clone({ _scheduler: scheduler });\n};\n\n/**\n * Returns a clone of the {@link Model} that disables batching. This is the default mode. Each get operation will be executed on the {@link DataSource} separately.\n * @name unbatch\n * @memberof Model.prototype\n * @function\n * @return {Model} a {@link Model} that batches requests of the same type and sends them to the data source together\n */\nModel.prototype.unbatch = function unbatch() {\n    return this._clone({ _scheduler: new ImmediateScheduler() });\n};\n\n/**\n * Returns a clone of the {@link Model} that treats errors as values. Errors will be reported in the same callback used to report data. Errors will appear as objects in responses, rather than being sent to the {@link Observable~onErrorCallback} callback of the {@link ModelResponse}.\n * @return {Model}\n */\nModel.prototype.treatErrorsAsValues = function treatErrorsAsValues() {\n    return this._clone({ _treatErrorsAsValues: true });\n};\n\n/**\n * Adapts a Model to the {@link DataSource} interface.\n * @return {DataSource}\n * @example\nvar model =\n    new falcor.Model({\n        cache: {\n            user: {\n                name: 'Steve',\n                surname: 'McGuire'\n            }\n        }\n    }),\n    proxyModel = new falcor.Model({ source: model.asDataSource() });\n\n// Prints 'Steve'\nproxyModel.getValue('user.name').\n    then(function(name) {\n        console.log(name);\n    });\n */\nModel.prototype.asDataSource = function asDataSource() {\n    return new ModelDataSourceAdapter(this);\n};\n\nModel.prototype._materialize = function materialize() {\n    return this._clone({\n        _materialized: true\n    });\n};\n\nModel.prototype._dematerialize = function dematerialize() {\n    return this._clone({\n        _materialized: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that boxes values returning the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the value inside it. This allows any metadata attached to the wrapper to be inspected.\n * @return {Model}\n */\nModel.prototype.boxValues = function boxValues() {\n    return this._clone({\n        _boxed: true\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that unboxes values, returning the value inside of the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the wrapper itself. This is the default mode.\n * @return {Model}\n */\nModel.prototype.unboxValues = function unboxValues() {\n    return this._clone({\n        _boxed: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that only uses the local {@link JSONGraph} and never uses a {@link DataSource} to retrieve missing paths.\n * @return {Model}\n */\nModel.prototype.withoutDataSource = function withoutDataSource() {\n    return this._clone({\n        _source: 'delete'\n    });\n};\n\n/* implement inspect method for node's inspect utility */\nModel.prototype.inspect = function inspect() {\n    return '{ v: ' + this.getVersion() + ' p: [' + this._path.join(', ') + '] }';\n};\n\nModel.prototype.toJSON = function toJSON() {\n    return {\n        $type: 'ref',\n        value: this.getPath()\n    };\n};\n\n/**\n * Returns the {@link Path} to the object within the JSON Graph that this Model references.\n * @return {Path}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.getPath = function getPath() {\n    return this._path.slice(0);\n};\n\n/**\n * This one is actually private.  I would not use this without talking to\n * jhusain, sdesai, or michaelbpaulson (github).\n * @private\n */\nModel.prototype._fromWhenceYouCame = function fromWhenceYouCame(allow) {\n    return this._clone({\n        _allowFromWhenceYouCame: allow === undefined ? true : allow\n    });\n};\n\nModel.prototype._optimizePath = function _optimizePath(path) {\n    var node = getCachePosition(this._root.cache, path);\n    var abs_path = node && node[\"\u001ef_abs_path\"] || [];\n    return abs_path.slice(0);\n};\n\nModel.prototype._getVersion = __webpack_require__(70);\nModel.prototype._getPathValuesAsPathMap = getJSON;\nModel.prototype._getPathValuesAsJSONG = getJSONGraph;\n\nModel.prototype._setPathValues = __webpack_require__(26);\nModel.prototype._setPathMaps = __webpack_require__(18);\nModel.prototype._setJSONGs = __webpack_require__(17);\nModel.prototype._setCache = __webpack_require__(18);\n\nModel.prototype._invalidatePathValues = __webpack_require__(24);\nModel.prototype._invalidatePathMaps = __webpack_require__(41);\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports) {\n\nfunction ModelDataSourceAdapter(model) {\n    this._model = model\n    // .boxValues()\n    ._materialize().treatErrorsAsValues();\n}\n\nModelDataSourceAdapter.prototype.get = function get(pathSets) {\n    return this._model.get.apply(this._model, pathSets)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.set = function set(jsongResponse) {\n    return this._model.set(jsongResponse)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.call = function call(path, args, suffixes, paths) {\n    return this._model.call.apply(this._model, [path, args, suffixes].concat(paths))._toJSONG();\n};\n\nmodule.exports = ModelDataSourceAdapter;\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar functionTypeof = 'function';\nvar Requests = __webpack_require__(86);\nvar getTimestamp = __webpack_require__(28);\n\nfunction ModelRoot(o, model) {\n\n    var options = o || {};\n\n    this.cache = {};\n    this.version = -1;\n    this.syncRefCount = 0;\n    this.maxRetryCount = 10;\n    this.topLevelModel = model;\n    this.requests = new Requests(this);\n    this.expired = options.expired || [];\n\n    this.collectRatio = 0.75;\n    this.maxSize = Math.pow(2, 53) - 1;\n\n    if (typeof options.collectRatio === 'number') {\n        this.collectRatio = options.collectRatio;\n    }\n\n    if (typeof options.maxSize === 'number') {\n        this.maxSize = options.maxSize;\n    }\n\n    if (typeof options.comparator === functionTypeof) {\n        this.comparator = options.comparator;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.errorSelector === functionTypeof) {\n        this.errorSelector = options.errorSelector;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.onChange === functionTypeof) {\n        this.onChange = options.onChange;\n    }\n\n    if (typeof options.onChangesCompleted === functionTypeof) {\n        this.onChangesCompleted = options.onChangesCompleted;\n    }\n}\n\nfunction defaultCompare(node, message) {\n    var cType = node && node.$type;\n    var mType = message && message.$type;\n    if (cType) {\n        // If the cache has a type, but the message is a primitive,\n        // the message might be the primitive response from the datasource.\n        // If so, return true, so we don't update the back-reference versions.\n        if (!mType) {\n            return node.value === message;\n        }\n        // If the message is older than the cache node, then isDistinct = false\n        else if (getTimestamp(message) < getTimestamp(node) === true) {\n                return true; // isDistinct = false\n            }\n        // Otherwise they are the same if all the following fields are the same.\n        return !(cType !== mType || node.value !== message.value || node.$expires !== message.$expires);\n    }\n    // If cache doesn't have a type but the message\n    // does, they must be different.\n    else if (mType) {\n            return false;\n        }\n    return node === message;\n}\n\nModelRoot.comparator = ModelRoot.prototype.comparator = defaultCompare;\n\nmodule.exports = ModelRoot;\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getJSON = __webpack_require__(20);\nvar getJSONGraph = __webpack_require__(21);\n\nmodule.exports = { json: json, jsonGraph: jsonGraph };\n\nfunction json(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue = getJSON(model, thisPaths, data, progressive, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [path, args, suffixes, thisPaths]\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed,\n            _materialized: model._materialized,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, thisPaths, data, true, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [path, args, suffixes, thisPaths]\n    };\n}\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n    json: __webpack_require__(34),\n    jsonGraph: __webpack_require__(37)\n};\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clone = __webpack_require__(1);\n\nmodule.exports = onError;\n\nfunction onError(node, depth, results, requestedPath, fromReference, boxValues) {\n\n    var index = -1;\n    var length = depth + !!fromReference; // depth + 1 if fromReference === true\n    var errorPath = new Array(length);\n    var errorValue = !boxValues ? node.value : clone(node);\n\n    while (++index < length) {\n        errorPath[index] = requestedPath[index];\n    }\n\n    (results.errors || (results.errors = [])).push({\n        path: errorPath,\n        value: errorValue\n    });\n}\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arr = new Array(2);\nvar onValue = __webpack_require__(36);\nvar FalcorJSON = __webpack_require__(3);\nvar isExpired = __webpack_require__(0);\nvar onValueType = __webpack_require__(15);\nvar originalOnMissing = __webpack_require__(23);\nvar getReferenceTarget = __webpack_require__(35);\nvar onMaterialize = __webpack_require__(68);\nvar NullInPathError = __webpack_require__(4);\nvar InvalidKeySetError = __webpack_require__(11);\nvar getHashCode = __webpack_require__(100);\nvar flatBufferToPaths = __webpack_require__(99);\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, jsonArg, path, depth, seed, results, requestedPath, optimizedPath, optimizedLength, fromReferenceArg, referenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame) {\n\n    var json = jsonArg,\n        type,\n        refTarget;\n    var fromReference = fromReferenceArg;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === node || undefined !== (type = node.$type) || undefined === path) {\n        arr[1] = hasDataSource && node === undefined;\n        arr[0] = onValueType(node, type, json, path, depth, seed, results, requestedPath, depth, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, onValue, onMissing, onMaterialize);\n        return arr;\n    }\n\n    var f_meta,\n        f_old_keys,\n        f_new_keys,\n        f_code = '';\n\n    var next,\n        nextKey,\n        keyset,\n        keyIsRange,\n        keys = path['$keys'],\n        nodeAbsPath,\n        jsonAbsPath,\n        nextDepth = depth + 1,\n        rangeEnd,\n        nextJSON,\n        nextReferenceContainer,\n        nextOptimizedLength,\n        nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath,\n        refContainerRefPath;\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[\"\u001ef_abs_path\"];\n    }\n\n    if (!json || 'object' !== typeof json) {\n        json = undefined;\n    } else if (f_meta = json[\"\u001ef_meta\"]) {\n\n        nodeAbsPath = node[\"\u001ef_abs_path\"];\n        jsonAbsPath = f_meta[\"abs_path\"];\n\n        if (!branchSelector && !(json instanceof FalcorJSON)) {\n            json.__proto__ = {};\n            json.__proto__[\"\u001ef_meta\"] = f_meta;\n            json.__proto__.__proto__ = FalcorJSON.prototype;\n        }\n\n        if (!arrayEqual(nodeAbsPath, jsonAbsPath)) {\n            f_meta['$code'] = '';\n            f_meta[\"status\"] = 'pending';\n            f_meta[\"abs_path\"] = nodeAbsPath;\n            f_meta[\"version\"] = node[\"\u001ef_version\"];\n            refContainerRefPath && (f_meta[\"deref_to\"] = refContainerRefPath);\n            refContainerAbsPath && (f_meta[\"deref_from\"] = refContainerAbsPath);\n            if (f_old_keys = f_meta[\"keys\"]) {\n                f_meta[\"keys\"] = Object.create(null);\n                for (nextKey in f_old_keys) {\n                    if (f_old_keys[nextKey]) {\n                        delete json[nextKey];\n                    }\n                }\n            }\n            arr[0] = json;\n            arr[1] = true;\n            return arr;\n        } else if (!(f_meta[\"version\"] !== node[\"\u001ef_version\"] || f_meta['$code'] !== path['$code'])) {\n            results.hasValue = true;\n            arr[0] = json;\n            arr[1] = false;\n            return arr;\n        }\n\n        f_old_keys = f_meta[\"keys\"];\n        f_meta[\"abs_path\"] = nodeAbsPath;\n        f_meta[\"version\"] = node[\"\u001ef_version\"];\n        refContainerRefPath && (f_meta[\"deref_to\"] = refContainerRefPath);\n        refContainerAbsPath && (f_meta[\"deref_from\"] = refContainerAbsPath);\n    }\n\n    f_new_keys = Object.create(null);\n\n    var keysIndex = -1;\n    var keysLength = keys.length;\n    var nextPath,\n        nextPathKey,\n        hasMissingPath = false;\n\n    iteratingKeyset: while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            f_code = '' + getHashCode('' + f_code + 'null');\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if ('object' !== typeof keyset) {\n                nextKey = keyset;\n                rangeEnd = undefined;\n                keyIsRange = false;\n                nextPathKey = nextKey;\n            }\n            // If the Keyset isn't null or primitive, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if ('number' !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                    nextPathKey = '[' + nextKey + '..' + rangeEnd + ']';\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextPath === undefined) {\n\n                walkPathAndBuildOutput(root, next, nextJSON, nextPath, nextDepth, seed, results, requestedPath, nextOptimizedPath, nextOptimizedLength, fromReference, nextReferenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined && !materialized) {\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            } else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                // If the reference is expired, it will be invalidated and\n                // reported as missing in the next call to walkPath below.\n                next.$type === \"ref\" && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                walkPathAndBuildOutput(root, next, nextJSON, nextPath, nextDepth, seed, results, requestedPath, nextOptimizedPath, nextOptimizedLength, fromReference, nextReferenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined) {\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = {};\n                f_meta[\"version\"] = node[\"\u001ef_version\"];\n                f_meta[\"abs_path\"] = node[\"\u001ef_abs_path\"];\n                refContainerRefPath && (f_meta[\"deref_to\"] = refContainerRefPath);\n                refContainerAbsPath && (f_meta[\"deref_from\"] = refContainerAbsPath);\n                json = {};\n                json[\"\u001ef_meta\"] = f_meta;\n                json.__proto__ = FalcorJSON.prototype;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                // node creation to them.\n                if (branchSelector) {\n                    json = branchSelector(json);\n                } else {\n                    var tmp = json;\n                    json = {};\n                    json.__proto__ = tmp;\n                    tmp = undefined;\n                }\n            }\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && nextKey in f_old_keys) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        f_code = '' + getHashCode('' + f_code + (!hasMissingPath ? nextPathKey : '') + (nextPath ? nextPath['$code'] : ''));\n    }\n\n    if (f_meta) {\n        f_meta['$code'] = f_code;\n        f_meta[\"keys\"] = f_new_keys;\n        f_meta[\"status\"] = hasMissingPath && 'pending' || 'resolved';\n        if (f_old_keys) {\n            for (nextKey in f_old_keys) {\n                if (f_old_keys[nextKey]) {\n                    delete json[nextKey];\n                }\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n\n    arr[0] = json;\n    arr[1] = hasMissingPath;\n\n    return arr;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, reportMaterialized, json, branchSelector, boxValues, onMaterialize, modelRoot) {\n\n    if (reportMaterialized) {\n        return onMaterialize(json, path, depth, depth, branchSelector, boxValues, modelRoot, results, requestedPath, optimizedPath, optimizedLength, fromReference, reportMissing, onMissing);\n    }\n\n    var paths = path ? flatBufferToPaths(path) : [[]];\n    var rPath = requestedPath.slice(0, requestedLength);\n\n    return paths.forEach(function (restPath) {\n        requestedLength = depth + restPath.length;\n        return originalOnMissing(rPath.concat(restPath), depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, false, json, branchSelector, boxValues, onMaterialize, modelRoot);\n    });\n}\n\nfunction arrayEqual(xs, ys) {\n    if (xs === ys) {\n        return true;\n    }\n    var len = xs.length;\n    if (len !== ys.length) {\n        return false;\n    }\n    while (~--len) {\n        if (xs[len] !== ys[len]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arr = new Array(2);\nvar isArray = Array.isArray;\nvar onValue = __webpack_require__(36);\nvar onMissing = __webpack_require__(23);\nvar FalcorJSON = __webpack_require__(3);\nvar onValueType = __webpack_require__(15);\nvar isExpired = __webpack_require__(0);\nvar onMaterialize = __webpack_require__(38);\nvar getReferenceTarget = __webpack_require__(35);\nvar NullInPathError = __webpack_require__(4);\nvar InvalidKeySetError = __webpack_require__(11);\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, jsonArg, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReferenceArg, referenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame) {\n\n    var json = jsonArg,\n        type,\n        refTarget;\n    var fromReference = fromReferenceArg;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (type = node.$type) || depth === requestedLength) {\n        arr[1] = hasDataSource && node === undefined;\n        arr[0] = onValueType(node, type, json, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, onValue, onMissing, onMaterialize);\n        return arr;\n    }\n\n    var f_meta;\n\n    var next,\n        nextKey,\n        keyset,\n        keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd,\n        keysOrRanges,\n        nextJSON,\n        nextReferenceContainer,\n        keysetIndex = -1,\n        keysetLength = 0,\n        nextOptimizedLength,\n        nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath,\n        refContainerRefPath;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        arr[0] = json;\n        arr[1] = false;\n        return arr;\n    }\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[\"\u001ef_abs_path\"];\n    }\n\n    if (!json || 'object' !== typeof json) {\n        json = undefined;\n    } else if (f_meta = json[\"\u001ef_meta\"]) {\n        f_meta[\"version\"] = node[\"\u001ef_version\"];\n        f_meta[\"abs_path\"] = node[\"\u001ef_abs_path\"];\n        refContainerRefPath && (f_meta[\"deref_to\"] = refContainerRefPath);\n        refContainerAbsPath && (f_meta[\"deref_from\"] = refContainerAbsPath);\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    var hasMissingPath = false;\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    throw new InvalidKeySetError(path, keysOrRanges);\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                keyset = keysOrRanges[keysetIndex];\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if ('number' !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextDepth === requestedLength) {\n\n                walkPathAndBuildOutput(root, next, nextJSON, path, nextDepth, seed, results, requestedPath, requestedLength, nextOptimizedPath, nextOptimizedLength, fromReference, nextReferenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined && !materialized) {\n                    continue;\n                }\n            } else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                // If the reference is expired, it will be invalidated and\n                // reported as missing in the next call to walkPath below.\n                next.$type === \"ref\" && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                walkPathAndBuildOutput(root, next, nextJSON, path, nextDepth, seed, results, requestedPath, requestedLength, nextOptimizedPath, nextOptimizedLength, fromReference, nextReferenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined) {\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = {};\n                f_meta[\"version\"] = node[\"\u001ef_version\"];\n                f_meta[\"abs_path\"] = node[\"\u001ef_abs_path\"];\n                refContainerRefPath && (f_meta[\"deref_to\"] = refContainerRefPath);\n                refContainerAbsPath && (f_meta[\"deref_from\"] = refContainerAbsPath);\n                json = {};\n                json[\"\u001ef_meta\"] = f_meta;\n                json.__proto__ = FalcorJSON.prototype;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                // node creation to them.\n                if (branchSelector) {\n                    json = branchSelector(json);\n                }\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    if (f_meta) {\n        f_meta[\"status\"] = hasMissingPath && 'pending' || 'resolved';\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    arr[0] = json;\n    arr[1] = hasMissingPath;\n\n    return arr;\n}\n/* eslint-enable */\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arr = new Array(2);\nvar clone = __webpack_require__(1);\nvar inlineValue = __webpack_require__(22);\nvar promote = __webpack_require__(12);\nvar isExpired = __webpack_require__(0);\nvar createHardlink = __webpack_require__(7);\nvar CircularReferenceError = __webpack_require__(46);\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, refArg, modelRoot, seed, expireImmediate) {\n\n    promote(modelRoot, refArg);\n\n    var context,\n        ref = refArg,\n        key,\n        type,\n        depth = 0,\n        node = root,\n        path = ref.value,\n        copy = path,\n        length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[\"\u001ef_context\"])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                    throw new CircularReferenceError(path);\n                }\n                // If the node we land on isn't the existing ref context,\n                // create a hard-link between the reference and the node\n                // it points to.\n                else if (node !== context) {\n                        createHardlink(ref, node);\n                    }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === \"ref\") {\n\n                promote(modelRoot, node);\n\n                seed && inlineValue(clone(node), path, length, seed);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n\n    return arr;\n}\n/* eslint-enable */\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clone = __webpack_require__(1);\nvar inlineValue = __webpack_require__(22);\n\nmodule.exports = onJSONGraphValue;\n\nfunction onJSONGraphValue(node, type, depth, seed, results, requestedPath, optimizedPath, optimizedLength, fromReference, boxValues, materialized) {\n\n    var value = node.value;\n\n    // boxValues always clones the node\n    if (boxValues || !(\n    /**\n     * JSON Graph should always clone:\n     * - refs\n     * - errors\n     * - atoms we didn't create\n     * - atoms we created to wrap Objects\n     **/\n    \"ref\" !== type && \"error\" !== type && node[\"\u001ef_wrapped_value\"] && 'object' !== typeof value)) {\n        value = clone(node);\n    }\n\n    results.hasValue = true;\n    inlineValue(value, optimizedPath, optimizedLength, seed);\n    (seed.paths || (seed.paths = [])).push(requestedPath.slice(0, depth + !!fromReference) // depth + 1 if fromReference === true\n    );\n\n    return value;\n}\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar clone = __webpack_require__(1);\nvar onValue = __webpack_require__(66);\nvar inlineValue = __webpack_require__(22);\nvar isExpired = __webpack_require__(0);\nvar onValueType = __webpack_require__(15);\nvar onMaterialize = __webpack_require__(38);\nvar originalOnMissing = __webpack_require__(23);\nvar getReferenceTarget = __webpack_require__(65);\nvar NullInPathError = __webpack_require__(4);\nvar InvalidKeySetError = __webpack_require__(11);\nvar materializedAtom = __webpack_require__(33);\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReferenceArg, modelRoot, expired, expireImmediate, boxValues, materialized, hasDataSource, treatErrorsAsValues) {\n\n    var type, refTarget;\n    var fromReference = fromReferenceArg;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (type = node.$type) || depth === requestedLength) {\n        return onValueType(node, type, seed, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, undefined, boxValues, materialized, hasDataSource, treatErrorsAsValues, onValue, onMissing, onMaterialize);\n    }\n\n    var next,\n        nextKey,\n        keyset,\n        keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd,\n        keysOrRanges,\n        keysetIndex = -1,\n        keysetLength = 0,\n        nextOptimizedLength,\n        nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        return undefined;\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    throw new InvalidKeySetError(path, keysOrRanges);\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                keyset = keysOrRanges[keysetIndex];\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if ('number' !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            // If we encounter a ref, inline the reference target and continue\n            // evaluating the path.\n            if (next && nextDepth < requestedLength &&\n            // If the reference is expired, it will be invalidated and\n            // reported as missing in the next call to walkPath below.\n            next.$type === \"ref\" && !isExpired(next, expireImmediate)) {\n\n                // Write the cloned ref value into the jsonGraph at the\n                // optimized path. JSONGraph must always clone references.\n                seed && inlineValue(clone(next), optimizedPath, nextOptimizedLength, seed);\n\n                // Retrieve the reference target and next referenceContainer (if\n                // this reference points to other references) and continue\n                // following the path. If the reference resolves to a missing\n                // path or leaf node, it will be handled in the next call to\n                // walkPath.\n                refTarget = getReferenceTarget(root, next, modelRoot, seed, expireImmediate);\n\n                next = refTarget[0];\n                fromReference = true;\n                nextOptimizedPath = refTarget[1];\n                nextOptimizedLength = nextOptimizedPath.length;\n                refTarget[0] = refTarget[1] = undefined;\n            }\n\n            walkPathAndBuildOutput(root, next, path, nextDepth, seed, results, requestedPath, requestedLength, nextOptimizedPath, nextOptimizedLength, fromReference, modelRoot, expired, expireImmediate, boxValues, materialized, hasDataSource, treatErrorsAsValues);\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return undefined;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, reportMaterialized, seed, branchSelector, boxValues, onMaterialize, modelRoot) {\n\n    var json, isLeaf;\n\n    if (seed && reportMaterialized) {\n\n        (seed.paths || (seed.paths = [])).push((isLeaf = 0 === requestedLength - depth) &&\n        // depth + 1 if fromReference === true\n        requestedPath.slice(0, depth + !!fromReference) || requestedPath.slice(0, depth).concat(path.slice(depth, requestedLength + !!fromReference)));\n\n        json = inlineValue(isLeaf && clone(materializedAtom) || undefined, optimizedPath, optimizedLength, seed, !isLeaf);\n    }\n\n    return originalOnMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, !isLeaf && reportMaterialized, json, branchSelector, true, onMaterialize, modelRoot);\n}\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clone = __webpack_require__(1);\nvar onValueType = __webpack_require__(15);\nvar FalcorJSON = __webpack_require__(3);\nvar NullInPathError = __webpack_require__(4);\nvar InvalidKeySetError = __webpack_require__(11);\nvar materializedAtom = __webpack_require__(33);\n\nmodule.exports = onMaterializeFlatBuffer;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterializeFlatBuffer(jsonArg, path, depth, length, branchSelector, boxValues, modelRoot, results, requestedPath, optimizedPath, optimizedLength, fromReference, reportMissing, onMissing) {\n\n    var json = jsonArg,\n        type,\n        refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === path) {\n        onValueType(undefined, undefined, json, path, depth, undefined, results, requestedPath, depth, optimizedPath, optimizedLength, fromReference, modelRoot, undefined, false, branchSelector, boxValues, false, reportMissing, false, undefined, onMissing, undefined);\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta, f_old_keys, f_new_keys;\n\n    var nextKey,\n        keyset,\n        keyIsRange,\n        keys = path['$keys'],\n        nextDepth = depth + 1,\n        rangeEnd,\n        nextOptimizedLength = optimizedLength + 1;\n\n    if (!json || 'object' !== typeof json) {\n        json = {};\n        json.__proto__ = FalcorJSON.prototype;\n        json[\"\u001ef_meta\"] = f_meta = {};\n        f_meta['$code'] = '';\n        f_meta[\"status\"] = 'resolved';\n        f_meta[\"version\"] = modelRoot.version;\n        f_meta[\"abs_path\"] = optimizedPath.slice(0, optimizedLength);\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[\"\u001ef_meta\"])) {\n        json[\"\u001ef_meta\"] = f_meta = {};\n        f_meta['$code'] = '';\n        f_meta[\"status\"] = 'resolved';\n        f_meta[\"version\"] = modelRoot.version;\n        f_meta[\"abs_path\"] = optimizedPath.slice(0, optimizedLength);\n    } else {\n        f_old_keys = f_meta[\"keys\"];\n        f_meta['$code'] = '';\n        f_meta[\"status\"] = 'resolved';\n        f_meta[\"version\"] = modelRoot.version;\n        f_meta[\"abs_path\"] = optimizedPath.slice(0, optimizedLength);\n    }\n\n    f_new_keys = Object.create(null);\n\n    var nextPath;\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    iteratingKeyset: while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if ('object' !== typeof keyset) {\n                nextKey = keyset;\n                rangeEnd = undefined;\n                keyIsRange = false;\n            }\n            // If the Keyset isn't null or primitive, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if ('number' !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && nextKey in f_old_keys) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // insert the materialized branch\n            json[nextKey] = onMaterializeFlatBuffer(json[nextKey], nextPath, nextDepth, nextDepth, branchSelector, boxValues, modelRoot, results, requestedPath, optimizedPath, nextOptimizedLength, fromReference, reportMissing, onMissing);\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n    }\n\n    f_meta[\"keys\"] = f_new_keys;\n    if (f_old_keys) {\n        for (nextKey in f_old_keys) {\n            if (f_old_keys[nextKey]) {\n                delete json[nextKey];\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clone = __webpack_require__(1);\nvar isInternal = __webpack_require__(19);\n\nmodule.exports = getCache;\n\nfunction getCache(model, cache) {\n    return getCacheInternal(cache, {}, model._boxed, model._materialized);\n}\n\nfunction getCacheInternal(node, jsonArg, boxValues, materialized) {\n\n    var json = jsonArg,\n        type,\n        value;\n\n    if (!node || typeof node !== 'object') {\n        return node;\n    } else if (type = node.$type) {\n\n        if (undefined === (value = node.value)) {\n            if (materialized) {\n                value = { $type: \"atom\" };\n            } else if (node[\"\u001ef_wrapped_value\"]) {\n                value = clone(node);\n            }\n        }\n        // boxValues always clones the node\n        else if (boxValues || !(\n            /**\n             * getCache should always clone:\n             * - refs\n             * - errors\n             * - atoms we didn't create\n             * - atoms we created to wrap Objects\n             **/\n            \"ref\" !== type && \"error\" !== type && node[\"\u001ef_wrapped_value\"] && typeof value !== 'object')) {\n                value = clone(node);\n            }\n        return value;\n    }\n\n    var keys = Object.keys(node);\n    var keysLen = keys.length,\n        keyIndex = -1;\n\n    while (++keyIndex < keysLen) {\n        var key = keys[keyIndex];\n        if (key !== '$size' && !isInternal(key) && undefined !== (value = getCacheInternal(node[key], json && json[key], boxValues, materialized))) {\n            if (json === undefined) {\n                json = {};\n            }\n            json[key] = value;\n        }\n    }\n\n    return json;\n}\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getBoundCacheNode = __webpack_require__(16);\n\nmodule.exports = getVersion;\n\nfunction getVersion(model, path) {\n    var node = getBoundCacheNode(model, path);\n    var version = node && node[\"\u001ef_version\"];\n    return version == null ? -1 : version;\n}\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar groupCacheArguments = __webpack_require__(39);\n\nmodule.exports = {\n    json: invalidate,\n    jsonGraph: invalidate,\n    invalidatePathMaps: __webpack_require__(41),\n    invalidatePathValues: __webpack_require__(24)\n};\n\nfunction invalidate(model, args, seed, progressive, expireImmediate) {\n    if (invalidateArgumentGroups(model, groupCacheArguments(args), expireImmediate)) {\n        var rootChangeHandler = model._root.onChange;\n        rootChangeHandler && rootChangeHandler.call(model._root.topLevelModel);\n    }\n    return {};\n}\n\nfunction invalidateArgumentGroups(model, xs, expireImmediate) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            if (inputType === 'PathValues') {\n                groupedArgs = groupedArgs.map(pluckPaths);\n            }\n            var operation = module.exports['invalidate' + inputType];\n            if (operation(model, groupedArgs, expireImmediate)) {\n                changed = true;\n            }\n        }\n    }\n    return changed;\n}\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar wrapNode = __webpack_require__(45);\nvar isExpired = __webpack_require__(0);\nvar insertNode = __webpack_require__(40);\nvar expireNode = __webpack_require__(2);\nvar replaceNode = __webpack_require__(44);\nvar getSize = __webpack_require__(8);\nvar reconstructPath = __webpack_require__(43);\nvar getTimestamp = __webpack_require__(28);\nvar updateNodeAncestors = __webpack_require__(10);\n\nmodule.exports = mergeJSONGraphNode;\n\nfunction mergeJSONGraphNode(parentArg, nodeArg, messageArg, key, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var sizeOffset;\n    var node = nodeArg;\n    var parent = parentArg;\n    var message = messageArg;\n\n    var cType, mType, cIsObject, mIsObject, cTimestamp, mTimestamp;\n\n    // If the cache and message are the same, we can probably return early:\n    // - If they're both nullsy,\n    //   - If null then the node needs to be wrapped in an atom and inserted.\n    //     This happens from whole branch merging when a leaf is just a null value\n    //     instead of being wrapped in an atom.\n    //   - If undefined then return null (previous behavior).\n    // - If they're both branches, return the branch.\n    // - If they're both edges, continue below.\n    if (node === message) {\n\n        // The message and cache are both undefined, return undefined.\n        if (message === undefined) {\n            return message;\n        }\n        // There should not be undefined values. Those should always be\n        // wrapped in an $atom\n        else if (message === null) {\n                node = wrapNode(message, undefined, message);\n                parent = updateNodeAncestors(parent, -node.$size, lru, version);\n                node = insertNode(node, parent, key, undefined, optimizedPath);\n                return node;\n            }\n            // Is the cache node a branch? If so, return the cache branch.\n            else if ((cIsObject = !(!node || typeof node !== 'object')) && (cType = node.$type) === undefined) {\n                    // Has the branch been introduced to the cache yet? If not,\n                    // give it a parent, key, and absolute path.\n                    if (node[\"\u001ef_parent\"] === undefined) {\n                        insertNode(node, parent, key, version, optimizedPath);\n                    }\n                    return node;\n                }\n    } else if (cIsObject = !(!node || typeof node !== 'object')) {\n        cType = node.$type;\n    }\n\n    // If the cache isn't a reference, we might be able to return early.\n    if (cType !== \"ref\") {\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n        }\n        if (cIsObject && !cType) {\n            // If the cache is a branch and the message is empty or\n            // also a branch, continue with the cache branch.\n            if (message == null || mIsObject && !mType) {\n                return node;\n            }\n        }\n    }\n    // If the cache is a reference, we might not need to replace it.\n    else {\n            // If the cache is a reference, but the message is empty,\n            // leave the cache alone...\n            if (message == null) {\n                // ...unless the cache is an expired reference. In that case, expire\n                // the cache node and return undefined.\n                if (isExpired(node, expireImmediate)) {\n                    expireNode(node, expired, lru);\n                    return void 0;\n                }\n                return node;\n            }\n            mIsObject = !(!message || typeof message !== 'object');\n            if (mIsObject) {\n                mType = message.$type;\n                // If the cache and the message are both references,\n                // check if we need to replace the cache reference.\n                if (mType === \"ref\") {\n                    if (node === message) {\n                        // If the cache and message are the same reference,\n                        // we performed a whole-branch merge of one of the\n                        // grandparents. If we've previously graphed this\n                        // reference, break early. Otherwise, continue to\n                        // leaf insertion below.\n                        if (node[\"\u001ef_parent\"] != null) {\n                            return node;\n                        }\n                    } else {\n\n                        cTimestamp = node.$timestamp;\n                        mTimestamp = message.$timestamp;\n\n                        // - If either the cache or message reference is expired,\n                        //   replace the cache reference with the message.\n                        // - If neither of the references are expired, compare their\n                        //   timestamps. If either of them don't have a timestamp,\n                        //   or the message's timestamp is newer, replace the cache\n                        //   reference with the message reference.\n                        // - If the message reference is older than the cache\n                        //   reference, short-circuit.\n                        if (!isExpired(node, expireImmediate) && !isExpired(message, expireImmediate) && mTimestamp < cTimestamp) {\n                            return void 0;\n                        }\n                    }\n                }\n            }\n        }\n\n    // If the cache is a leaf but the message is a branch,\n    // merge the branch over the leaf.\n    if (cType && mIsObject && !mType) {\n        return insertNode(replaceNode(node, message, parent, key, lru, version), parent, key, undefined, optimizedPath);\n    }\n    // If the message is a sentinel or primitive, insert it into the cache.\n    else if (mType || !mIsObject) {\n\n            if (mType === \"error\" && errorSelector) {\n                message = errorSelector(reconstructPath(requestedPath, key), message);\n            }\n\n            // If the cache and the message are the same value, we branch-merged one\n            // of the message's ancestors. If this is the first time we've seen this\n            // leaf, give the message a $size and $type, attach its graph pointers,\n            // and update the cache sizes and versions.\n            if (mType && node === message) {\n                if (!node[\"\u001ef_parent\"]) {\n                    node = wrapNode(node, cType, node.value);\n                    parent = updateNodeAncestors(parent, -node.$size, lru, version);\n                    node = insertNode(node, parent, key, version, optimizedPath);\n                }\n            }\n            // If the cache and message are different, the cache value is expired,\n            // or the message is a primitive, replace the cache with the message value.\n            // If the message is a sentinel, clone and maintain its type.\n            // If the message is a primitive value, wrap it in an atom.\n            else {\n                    var isDistinct = true;\n                    // If both the cache and message are primitives, we branch-merged\n                    // one of the message's ancestors. Insert the value into the cache.\n                    if (!cType && !mType) {\n                        isDistinct = true;\n                    }\n                    // If the cache is a branch, but the message is a leaf, replace the\n                    // cache branch with the message leaf.\n                    else if (!cIsObject || !isExpired(node, expireImmediate)) {\n                            // Compare the current cache value with the new value. If either of\n                            // them don't have a timestamp, or the message's timestamp is newer,\n                            // replace the cache value with the message value. If a comparator\n                            // is specified, the comparator takes precedence over timestamps.\n                            if (comparator) {\n                                isDistinct = !(comparator.length < 3 ? comparator(node, message) : comparator(node, message, optimizedPath.slice(0, optimizedPath.index)));\n                            } else {\n                                // Comparing either Number or undefined to undefined always results in false.\n                                isDistinct = getTimestamp(message) < getTimestamp(node) === false;\n                            }\n                        }\n                    if (isDistinct) {\n                        sizeOffset = getSize(node) - getSize(message = wrapNode(message, mType, mType ? message.value : message));\n                        node = replaceNode(node, message, parent, key, lru, version);\n                        parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n                        node = insertNode(node, parent, key, version, optimizedPath);\n                    }\n                }\n\n            // Promote the message edge in the LRU.\n            if (isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge.\n             */\n            true)) {\n                expireNode(node, expired, lru);\n            }\n        } else if (node == null) {\n            node = insertNode(message, parent, key, undefined, optimizedPath);\n        }\n\n    return node;\n};\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getJSON = __webpack_require__(20);\nvar getJSONGraph = __webpack_require__(21);\nvar groupCacheArguments = __webpack_require__(39);\n\nmodule.exports = {\n    json: json,\n    jsonGraph: jsonGraph,\n    setPathMaps: __webpack_require__(18),\n    setPathValues: __webpack_require__(26),\n    setJSONGraphs: __webpack_require__(17)\n};\n\nfunction json(model, _args, data, progressive, expireImmediate) {\n\n    var set,\n        get,\n        jsong,\n        changed,\n        relative,\n        optimized,\n        missing,\n        fragments,\n        requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args, expireImmediate);\n\n    if ((relative = set.requested).length) {\n\n        if (!(changed = set.changed) || progressive) {\n            get = getJSON(model, relative, data, progressive, expireImmediate);\n        }\n\n        if (changed) {\n\n            jsong = getJSONGraph({\n                _root: model._root,\n                _boxed: model._boxed, _materialized: true,\n                _treatErrorsAsValues: model._treatErrorsAsValues\n            }, set.optimized, {}, progressive, expireImmediate);\n\n            fragments = jsong.data;\n            missing = fragments.paths;\n            requested = jsong.requested;\n\n            var rootChangeHandler = model._root.onChange;\n            rootChangeHandler && rootChangeHandler.call(model._root.topLevelModel);\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: get && get.error,\n        errors: get && get.errors,\n        hasValue: get && get.hasValue\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive, expireImmediate) {\n\n    var set,\n        jsong,\n        changed,\n        relative,\n        optimized,\n        missing,\n        fragments,\n        requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args, expireImmediate);\n\n    if ((relative = set.requested).length && (progressive || (changed = set.changed))) {\n\n        jsong = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed, _materialized: true,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, set.optimized, data, progressive, expireImmediate);\n\n        fragments = jsong.data;\n        missing = fragments.paths;\n        requested = jsong.requested;\n\n        if (changed) {\n            var rootChangeHandler = model._root.onChange;\n            rootChangeHandler && rootChangeHandler.call(model._root.topLevelModel);\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: jsong && jsong.error,\n        hasValue: jsong && jsong.hasValue\n    };\n}\n\nfunction setGroupsIntoCache(model, xs, expireImmediate_) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var modelRoot = model._root;\n    var errorSelector = modelRoot.errorSelector;\n\n    var expireImmediate = expireImmediate_ && !Boolean(model._source);\n    var comparator = Boolean(model._source) ? null : modelRoot.comparator;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            var operation = module.exports['set' + inputType];\n            var results = operation(model, groupedArgs, errorSelector, comparator, expireImmediate);\n            changed = changed || results[2];\n            optimizedPaths.push.apply(optimizedPaths, results[1]);\n            if (inputType === 'PathValues') {\n                requestedPaths.push.apply(requestedPaths, groupedArgs.map(pluckPaths));\n            } else if (inputType === 'JSONGraphs') {\n                requestedPaths.push.apply(requestedPaths, arrayFlatMap(groupedArgs, pluckPaths));\n            } else {\n                requestedPaths.push.apply(requestedPaths, results[0]);\n            }\n        }\n    }\n\n    return {\n        changed: changed,\n        requested: requestedPaths,\n        optimized: optimizedPaths\n    };\n}\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\nfunction arrayFlatMap(array, selector) {\n    var index = -1;\n    var i = -1;\n    var n = array.length;\n    var array2 = [];\n    while (++i < n) {\n        var array3 = selector(array[i], i, array);\n        var j = -1;\n        var k = array3.length;\n        while (++j < k) {\n            array2[++index] = array3[j];\n        }\n    }\n    return array2;\n}\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = transferBackReferences;\n\nfunction transferBackReferences(fromNode, destNode) {\n    var fromNodeRefsLength = fromNode[\"\u001ef_refs_length\"] || 0,\n        destNodeRefsLength = destNode[\"\u001ef_refs_length\"] || 0,\n        i = -1;\n    while (++i < fromNodeRefsLength) {\n        var ref = fromNode[\"\u001ef_ref\" + i];\n        if (ref !== undefined) {\n            ref[\"\u001ef_context\"] = destNode;\n            destNode[\"\u001ef_ref\" + (destNodeRefsLength + i)] = ref;\n            fromNode[\"\u001ef_ref\" + i] = undefined;\n        }\n    }\n    destNode[\"\u001ef_refs_length\"] = fromNodeRefsLength + destNodeRefsLength;\n    fromNode[\"\u001ef_refs_length\"] = undefined;\n    return destNode;\n}\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = unlinkBackReferences;\n\nfunction unlinkBackReferences(node) {\n    var i = -1,\n        n = node[\"\u001ef_refs_length\"] || 0;\n    while (++i < n) {\n        var ref = node[\"\u001ef_ref\" + i];\n        if (ref != null) {\n            ref[\"\u001ef_context\"] = ref[\"\u001ef_ref_index\"] = node[\"\u001ef_ref\" + i] = void 0;\n        }\n    }\n    node[\"\u001ef_refs_length\"] = void 0;\n    return node;\n}\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = unlinkForwardReference;\n\nfunction unlinkForwardReference(reference) {\n    var destination = reference[\"\u001ef_context\"];\n    if (destination) {\n        var i = (reference[\"\u001ef_ref_index\"] || 0) - 1,\n            n = (destination[\"\u001ef_refs_length\"] || 0) - 1;\n        while (++i <= n) {\n            destination[\"\u001ef_ref\" + i] = destination[\"\u001ef_ref\" + (i + 1)];\n        }\n        destination[\"\u001ef_refs_length\"] = n;\n        reference[\"\u001ef_ref_index\"] = reference[\"\u001ef_context\"] = destination = void 0;\n    }\n    return reference;\n}\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = hasValidParentReference;\n\nfunction hasValidParentReference() {\n    var reference = this._referenceContainer;\n\n    // Always true when this mode is false.\n    if (!this._allowFromWhenceYouCame) {\n        return true;\n    }\n\n    // If fromWhenceYouCame is true and the first set of keys did not have\n    // a reference, this case can happen.  They are always valid.\n    if (reference === true) {\n        return true;\n    }\n\n    // was invalid before even derefing.\n    if (reference === false) {\n        return false;\n    }\n\n    // Its been disconnected (set over or collected) from the graph.\n    if (reference && reference[\"\u001ef_parent\"] === undefined) {\n        return false;\n    }\n\n    // The reference has expired but has not been collected from the graph.\n    if (reference && reference[\"\u001ef_invalidated\"]) {\n        return false;\n    }\n\n    return true;\n}\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar CONTAINER_DOES_NOT_EXIST = 'e';\nvar FalcorJSON = __webpack_require__(3);\nvar getCachePosition = __webpack_require__(9);\nvar InvalidDerefInputError = __webpack_require__(80);\n\nmodule.exports = deref;\n\nfunction deref(json) {\n\n    var seed, f_meta;\n\n    if (!json || 'object' !== typeof json || !(f_meta = json[\"\u001ef_meta\"]) || 'object' !== typeof f_meta) {\n        return null;\n    }\n\n    var cacheRoot = this._root.cache;\n    var recycleJSON = this._recycleJSON;\n    var absolutePath = f_meta[\"abs_path\"];\n    var referenceContainer, currentRefPath, i, len;\n\n    if (!absolutePath) {\n        if (recycleJSON) {\n            seed = { json: json };\n            seed.__proto__ = FalcorJSON.prototype;\n        }\n        return this._clone({\n            _node: undefined,\n            _seed: seed\n        });\n    } else if (absolutePath.length === 0) {\n        if (recycleJSON) {\n            seed = { json: json };\n            seed.__proto__ = FalcorJSON.prototype;\n        }\n        return this._clone({\n            _node: cacheRoot,\n            _path: absolutePath,\n            _referenceContainer: true,\n            _seed: seed\n        });\n    }\n\n    var originalRefPath = f_meta[\"deref_to\"];\n    var originalAbsPath = f_meta[\"deref_from\"];\n\n    // We deref and then ensure that the reference container is attached to\n    // the model.\n    var cacheNode = getCachePosition(cacheRoot, absolutePath);\n    var validContainer = CONTAINER_DOES_NOT_EXIST;\n\n    if (originalAbsPath) {\n\n        validContainer = false;\n\n        i = -1;\n        len = originalAbsPath.length;\n        referenceContainer = cacheRoot;\n        while (++i < len) {\n            referenceContainer = referenceContainer[originalAbsPath[i]];\n            if (!referenceContainer || referenceContainer.$type) {\n                break;\n            }\n        }\n\n        // If the reference container is still a sentinel value then compare\n        // the reference value with refPath.  If they are the same, then the\n        // model is still valid.\n        if (originalRefPath && referenceContainer && referenceContainer.$type === \"ref\") {\n            validContainer = true;\n            len = originalRefPath.length;\n            currentRefPath = referenceContainer.value;\n            for (i = 0; i < len; ++i) {\n                if (currentRefPath[i] !== originalRefPath[i]) {\n                    cacheNode = undefined;\n                    validContainer = false;\n                    break;\n                }\n            }\n        }\n    }\n\n    // Signal to the deref'd model that it has been disconnected from the\n    // graph or there is no _fromWhenceYouCame\n    if (!validContainer) {\n        referenceContainer = false;\n    }\n\n    // The container did not exist, therefore there is no reference\n    // container and fromWhenceYouCame should always return true.\n    else if (validContainer === CONTAINER_DOES_NOT_EXIST) {\n            referenceContainer = true;\n        }\n\n    if (recycleJSON) {\n        seed = { json: json };\n        seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    return this._clone({\n        _seed: seed,\n        _node: cacheNode,\n        _path: absolutePath,\n        _referenceContainer: referenceContainer\n    });\n};\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(5);\nvar MESSAGE = 'It is not legal to use the JSON Graph ' + 'format from a bound Model. JSON Graph format' + ' can only be used from a root model.';\n\n/**\n * When a bound model attempts to retrieve JSONGraph it should throw an\n * error.\n *\n * @private\n */\nmodule.exports = createErrorClass('BoundJSONGraphModelError', function () {\n    this.message = MESSAGE;\n});\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(5);\nvar MESSAGE = 'Deref can only be used with a non-primitive object from get, set, or call.';\n\n/**\n * An invalid deref input is when deref is used with input that is not generated\n * from a get, set, or a call.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidDerefInputError', function () {\n  this.message = MESSAGE;\n});\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(5);\nvar MESSAGE = 'The boundPath of the model is not valid since a value or error was found before the path end.';\n\n/**\n * An InvalidModelError can only happen when a user binds, whether sync\n * or async to shorted value.  See the unit tests for examples.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidModelError', function (boundPath, shortedPath) {\n  this.message = MESSAGE;\n  this.boundPath = boundPath;\n  this.shortedPath = shortedPath;\n});\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(5);\n\n/**\n * A request can only be retried up to a specified limit.  Once that\n * limit is exceeded, then an error will be thrown.\n *\n * @private\n */\nmodule.exports = createErrorClass('MaxRetryExceededError', function (maxRetryCount, absolute, relative, optimized) {\n    this.message = '' + 'Exceeded the max retry count (' + maxRetryCount + ') for these paths: \\n' + (absolute && 'absolute: [\\n\\t' + printPaths(absolute) + '\\n]\\n' || '') + (relative && 'relative: [\\n\\t' + printPaths(relative) + '\\n]\\n' || '') + (optimized && 'optimized: [\\n\\t' + printPaths(optimized) + '\\n]\\n' || '');\n});\n\nfunction printPaths(paths) {\n    return paths.map(function (path) {\n        return JSON.stringify(path);\n    }).join(',\\n\\t');\n}\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports) {\n\nmodule.exports = String.fromCharCode(30) + 'f_';\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar updateNodeAncestors = __webpack_require__(10);\n\nmodule.exports = collect;\n\nfunction collect(lru, expired, totalArg, max, ratioArg, version) {\n\n    var total = totalArg;\n    var ratio = ratioArg;\n\n    if (typeof ratio !== 'number') {\n        ratio = 0.75;\n    }\n\n    var node,\n        size,\n        targetSize = max * ratio;\n\n    while (node = expired.pop()) {\n        total -= size = node.$size || 0;\n        updateNodeAncestors(node, size, lru, version);\n    }\n\n    if (total >= max) {\n        var prev = lru[\"\u001ef_tail\"];\n        while (total >= targetSize && (node = prev)) {\n            prev = prev[\"\u001ef_prev\"];\n            total -= size = node.$size || 0;\n            updateNodeAncestors(node, size, lru, version);\n        }\n\n        lru[\"\u001ef_tail\"] = node;\n        if (node == null) {\n            lru[\"\u001ef_head\"] = undefined;\n        } else {\n            node[\"\u001ef_next\"] = undefined;\n        }\n    }\n}\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Source = __webpack_require__(49);\nvar Subscriber = __webpack_require__(13);\nvar lruCollect = __webpack_require__(84);\nvar FalcorJSON = __webpack_require__(3);\nvar collapse = __webpack_require__(55);\nvar InvalidSourceError = __webpack_require__(47);\nvar MaxRetryExceededError = __webpack_require__(82);\n\nmodule.exports = Call;\n\nfunction Call(type, model, _args) {\n    Source.call(this, type);\n    if (model && _args) {\n        this.type = type;\n        this.source = this;\n        this.model = model;\n        this._args = _args;\n    }\n}\n\nCall.prototype = Object.create(Source.prototype);\n\nCall.prototype.lift = function (operator, source) {\n    source = new Call(source || this);\n    source.type = this.type;\n    source.model = this.model;\n    source._args = this._args;\n    source.operator = operator;\n    operator.data = operator.data || this.operator.data;\n    operator.errors = operator.errors || this.operator.errors;\n    operator.operation = operator.operation || this.operator.operation;\n    operator.progressive = operator.progressive || this.operator.progressive;\n    operator.maxRetryCount = operator.maxRetryCount || this.operator.maxRetryCount;\n    return source;\n};\n\nCall.prototype.operator = function (subscriber) {\n    return this._subscribe(subscriber);\n};\n\nCall.prototype._subscribe = function (subscriber) {\n    subscriber.onNext({\n        type: this.type,\n        args: this._args,\n        model: this.model,\n        version: this.model._root.version\n    });\n    subscriber.onCompleted();\n    return subscriber;\n};\n\nCall.prototype._toJSON = function (dataArg, errors) {\n    var data = dataArg;\n    if (data === undefined) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    return this.lift(new CallOperator(data, errors || this.operator.errors, 'json', this.operator.progressive, this.operator.maxRetryCount), this.source);\n};\n\nCall.prototype._toJSONG = function (dataArg, errors) {\n    var data = dataArg;\n    if (data === undefined) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    return this.lift(new CallOperator(data, errors || this.operator.errors, 'jsonGraph', this.operator.progressive, this.operator.maxRetryCount), this.source);\n};\n\nCall.prototype.retry = function (maxRetryCount) {\n    return this.lift(new CallOperator(this.operator.data, this.operator.errors, this.operator.operation, this.operator.progresive, maxRetryCount), this.source);\n};\n\nCall.prototype.progressively = function () {\n    return this.lift(new CallOperator(this.operator.data, this.operator.errors, this.operator.operation, true, this.operator.maxRetryCount), this.source);\n};\n\nfunction CallOperator(data, errors, operation, progressive, maxRetryCount) {\n    this.data = data;\n    this.errors = errors;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallOperator.prototype.call = function (source, destination) {\n    return source.subscribe(new CallSubscriber(destination, this.data, this.errors, this.operation, this.progressive));\n};\n\nfunction CallSubscriber(destination, data, errors, operation, progressive, maxRetryCount) {\n    Subscriber.call(this, destination);\n    this.data = data;\n    this.missing = null;\n    this.request = null;\n    this.started = false;\n    this.retryCount = -1;\n    this.errors = errors;\n    this.errored = false;\n    this.relative = null;\n    this.hasValue = false;\n    this.fragments = null;\n    this.requested = null;\n    this.completed = false;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallSubscriber.prototype = Object.create(Subscriber.prototype);\nCallSubscriber.prototype.operations = {\n    get: __webpack_require__(61),\n    set: __webpack_require__(73),\n    call: __webpack_require__(60),\n    invalidate: __webpack_require__(71)\n};\n\nCallSubscriber.prototype.next = CallSubscriber.prototype.onNext = function (seed) {\n\n    if (!this.started) {\n        this.args = seed.args;\n        this.type = seed.type;\n        this.model = seed.model;\n        this.version = seed.version;\n        this.maxRetryCount = this.maxRetryCount || this.model._root.maxRetryCount;\n        return;\n    } else if (!this.destination) {\n        return;\n    }\n\n    var missing, fragments;\n    var type = seed.type;\n    var args = seed.args || seed.paths;\n\n    var data = this.data;\n    var model = this.model;\n    var errors = this.errors;\n    var results = this.results;\n    var version = this.version;\n    var hasValue = this.hasValue;\n    var operation = this.operation;\n    var progressive = this.progressive;\n    var seedIsImmutable = progressive && data;\n\n    if (model._recycleJSON && this.type === 'get') {\n        seedIsImmutable = false;\n    }\n\n    // If we request paths as JSON in progressive mode, ensure each progressive\n    // valueNode is immutable. If not in progressive mode, we can write into the\n    // same JSON tree until the request is completed.\n    if (seedIsImmutable) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n\n    if (args && args.length) {\n\n        results = this.operations[type][operation](model, args, data, progressive || !model._source, this.retryCount === -1);\n\n        // We must communicate critical errors from get, such as bound path is\n        // broken or this is a JSONGraph request with a bound path.\n        if (results.error) {\n            return tryOnError(this, results.error);\n        }\n\n        errors && results.errors && errors.push.apply(errors, results.errors);\n\n        if (fragments = results.fragments) {\n            args = results.args;\n            this.fragments = fragments;\n        }\n\n        this.relative = results.relative;\n        this.requested = results.requested;\n        this.missing = missing = results.missing;\n        this.hasValue = hasValue || (hasValue = results.hasValue);\n    }\n\n    // We are done when there are no missing paths or\n    // the model does not have a dataSource to fetch from.\n    this.completed = !missing || !model._source;\n\n    if (type !== 'set') {\n        this.args = args;\n        if (seedIsImmutable) {\n            this.data = mergeInto(data, this.data);\n        }\n    }\n\n    if (progressive && hasValue && data && (data.json || data.jsonGraph)) {\n        tryOnNext(data, operation, model._root, this.destination);\n    }\n};\n\nCallSubscriber.prototype.error = CallSubscriber.prototype.onError = function (error) {\n    if (error instanceof InvalidSourceError) {\n        return Subscriber.prototype.onError.call(this, error);\n    }\n    this.errored = true;\n    this.onCompleted(error);\n};\n\nCallSubscriber.prototype.complete = CallSubscriber.prototype.onCompleted = function (error) {\n\n    if (!this.destination) {\n        return;\n    }\n\n    var data, type, errors, errored;\n\n    if (!this.started && (this.started = true)) {\n        this.onNext(this);\n    } else if (errored = this.errored) {\n        this.onNext({ type: 'get', paths: this.relative });\n    }\n\n    if (errored || this.completed) {\n        if (!this.progressive && this.hasValue && ((data = this.data) && data.json || data.jsonGraph)) {\n            tryOnNext(data, this.operation, this.model._root, this.destination);\n        }\n        errors = this.errors;\n        if (errored || error || errors && errors.length) {\n            return tryOnError(this, errors.length && errors || error);\n        }\n\n        return Subscriber.prototype.onCompleted.call(this);\n    }\n\n    if (++this.retryCount >= this.maxRetryCount) {\n        return tryOnError(this, new MaxRetryExceededError(this.retryCount, this.requested, this.relative, this.missing));\n    }\n\n    this.request = this.model._root.requests[this.type](this.model, this.missing, this.relative, this.fragments).subscribe(this);\n};\n\nCallSubscriber.prototype.dispose = CallSubscriber.prototype.unsubscribe = function () {\n\n    var model = this.model;\n    var version = this.version;\n    var request = this.request;\n\n    this.args = null;\n    this.data = null;\n    this.model = null;\n    this.errors = null;\n    this.errored = false;\n    this.started = false;\n    this.hasValue = false;\n    this.completed = false;\n\n    Subscriber.prototype.dispose.call(this);\n\n    if (request) {\n        this.request = null;\n        request.dispose();\n    }\n\n    if (model) {\n\n        var modelRoot = model._root;\n        var cache = modelRoot.cache;\n        var shouldCollectCache = modelRoot.syncRefCount <= 0 && version !== modelRoot.version;\n\n        // Prune the cache via the LRU if this is the last request.\n        if (shouldCollectCache) {\n\n            if (cache) {\n                lruCollect(modelRoot, modelRoot.expired, cache.$size || 0, modelRoot.maxSize, modelRoot.collectRatio, modelRoot.version);\n            }\n\n            var rootOnChangesCompletedHandler = modelRoot.onChangesCompleted;\n\n            if (rootOnChangesCompletedHandler) {\n                rootOnChangesCompletedHandler.call(modelRoot.topLevelModel);\n            }\n        }\n    }\n};\n\nfunction tryOnNext(data, operation, modelRoot, destination) {\n    if (operation === 'jsonGraph' && data.paths) {\n        data.paths = collapse(data.paths);\n    }\n    try {\n        ++modelRoot.syncRefCount;\n        destination.onNext(data);\n    } catch (e) {\n        throw e;\n    } finally {\n        --modelRoot.syncRefCount;\n    }\n}\n\nfunction tryOnError(self, error) {\n    try {\n        throw error;\n    } catch (err) {\n        Subscriber.prototype.onError.call(self, err);\n    }\n}\n\nfunction mergeInto(dest, node) {\n\n    var destValue,\n        nodeValue,\n        key,\n        keys = Object.keys(node),\n        index = -1,\n        length = keys.length;\n\n    while (++index < length) {\n\n        key = keys[index];\n\n        if (key === \"\u001ef_meta\") {\n            dest[\"\u001ef_meta\"] = node[\"\u001ef_meta\"];\n        } else {\n\n            nodeValue = node[key];\n            destValue = dest[key];\n\n            if (destValue !== nodeValue) {\n                if (!nodeValue || typeof nodeValue !== 'object') {\n                    if (destValue === undefined) {\n                        dest[key] = nodeValue;\n                    }\n                } else if (destValue === undefined) {\n                    dest[key] = nodeValue;\n                } else {\n                    mergeInto(destValue, nodeValue);\n                }\n            }\n        }\n    }\n\n    return dest;\n}\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Source = __webpack_require__(49);\nvar Request = __webpack_require__(87);\nvar Subscriber = __webpack_require__(13);\nvar Subscription = __webpack_require__(14);\nvar ImmediateScheduler = __webpack_require__(50);\n\nmodule.exports = Queue;\n\nfunction Queue(modelRoot) {\n    Subscription.call(this, []);\n    this.modelRoot = modelRoot;\n}\n\nQueue.prototype = Object.create(Subscription.prototype);\n\nQueue.prototype.set = isolateSet;\nQueue.prototype.call = isolateCall;\nQueue.prototype.get = batchAndDedupeGet;\n\nfunction isolateSet(model, optimized, requested, env) {\n    var queue = this;\n    return new Source(function (destination) {\n\n        var request = new Request('set', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = env.jsonGraph;\n        request.requested.push(requested);\n        request.optimized.push(optimized);\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction isolateCall(model, optimized, requested, callArgs) {\n    var queue = this;\n    return new Source(function (destination) {\n\n        var request = new Request('call', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = callArgs;\n        request.boundPath = model._path;\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction batchAndDedupeGet(model, optimized, requested) {\n    return new Dedupe(this, model._source, model._scheduler, requested, optimized);\n}\n\nfunction Dedupe(queue, source, scheduler, requested, optimized) {\n    this.queue = queue;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n    this.requested = requested;\n    this.optimized = optimized;\n}\n\nDedupe.prototype.subscribe = function (destination) {\n\n    var queue = this.queue;\n    var source = this.dataSource;\n    var requested = this.requested;\n    var optimized = this.optimized;\n    var scheduler = this.scheduler;\n\n    var requestsIndex = -1;\n    var requests = queue.subscriptions;\n    var requestsCount = requests.length;\n    var subscription = new Subscription([], destination);\n\n    while (++requestsIndex < requestsCount) {\n\n        var request = requests[requestsIndex];\n\n        if (request.type !== 'get') {\n            continue;\n        }\n\n        if (request = request.batch(requested, optimized, requested = [], optimized = [])) {\n            subscription.add(request.subscribe(new Subscriber(destination, request)));\n        }\n\n        if (!optimized.length) {\n            break;\n        }\n    }\n\n    if (optimized.length) {\n        request = requests[requestsIndex] = new Request('get', queue, source, scheduler).batch(requested, optimized);\n        subscription.add(request.subscribe(new Subscriber(destination, request)));\n        request.connect();\n    }\n\n    return subscription;\n};\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar Subject = __webpack_require__(88);\nvar Subscriber = __webpack_require__(13);\nvar Subscription = __webpack_require__(14);\nvar InvalidSourceError = __webpack_require__(47);\n\nvar setJSONGraphs = __webpack_require__(17);\nvar setPathValues = __webpack_require__(26);\nvar invalidatePaths = __webpack_require__(24);\n\nvar toPaths = __webpack_require__(105);\nvar toCollapseMap = __webpack_require__(102);\nvar toCollapseTrees = __webpack_require__(103);\nvar hasIntersection = __webpack_require__(101);\n\nmodule.exports = Request;\n\nfunction Request(type, queue, source, scheduler) {\n    Subject.call(this, [], queue);\n    this.trees = [];\n    this.type = type;\n    this.data = null;\n    this.active = false;\n    this.responded = false;\n    this.paths = null;\n    this.requested = [];\n    this.optimized = [];\n    this.disposable = null;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n}\n\nRequest.prototype = Object.create(Subject.prototype);\n\nRequest.prototype.next = Request.prototype.onNext = function (env) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    this.responded = true;\n    /*\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n    */\n\n    var changed = false;\n    var jsonGraph = env.jsonGraph;\n    var boundPath = this.boundPath;\n    var modelRoot = queue.modelRoot;\n    var invalidated = env.invalidated;\n    var paths = env.paths || this.paths;\n    var requested = this.requested.slice(0);\n    var observers = this.observers.slice(0);\n    var rootChangeHandler = modelRoot.onChange;\n\n    // Run invalidations first.\n    if (invalidated && invalidated.length) {\n        changed = invalidatePaths({ _root: modelRoot, _path: [] }, invalidated, false);\n    }\n\n    if (paths && paths.length && !(!jsonGraph || typeof jsonGraph !== 'object')) {\n        var results = setJSONGraphs({ _root: modelRoot }, [{ paths: paths, jsonGraph: jsonGraph }], modelRoot.errorSelector, modelRoot.comparator, false);\n        paths = results[0];\n        changed = changed || results[2];\n    }\n\n    if (changed && rootChangeHandler) {\n        rootChangeHandler.call(modelRoot.topLevelModel);\n    }\n\n    observers.forEach(function (observer, index) {\n        observer.onNext({\n            type: 'get', paths: requested[index] || filterPathsBoundTo(boundPath, paths)\n        });\n    });\n};\n\nRequest.prototype.error = Request.prototype.onError = function (error) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    error = error || {};\n\n    // Converts errors to object we can insert into the cache.\n    error = !(error instanceof Error) ?\n    // if it's $type error, use it raw\n    error.$type === \"error\" && error ||\n    // Otherwise make it an error\n    { $type: \"error\", value: error } :\n    // If it's instanceof Error, pluck error.message\n    { $type: \"error\", value: { message: error.message } };\n\n    var modelRoot = queue.modelRoot;\n\n    var errorPathValues = toPaths(toCollapseTrees(this.requested.reduce(function (collapseMap, paths) {\n        return toCollapseMap(paths, collapseMap);\n    }, {}))).map(function (path) {\n        return { path: path, value: error };\n    });\n\n    if (errorPathValues.length) {\n        setPathValues({ _root: modelRoot, _path: [] }, errorPathValues, modelRoot.errorSelector, modelRoot.comparator, false);\n    }\n\n    Subject.prototype.onError.call(this, error);\n};\n\nRequest.prototype.complete = Request.prototype.onCompleted = function () {\n    if (this.responded === false) {\n        this.onNext({});\n    }\n    Subject.prototype.onCompleted.call(this);\n};\n\nRequest.prototype.remove = function (subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.trees.splice(index, 1);\n        this.requested.splice(index, 1);\n        this.optimized.splice(index, 1);\n        this.observers.splice(index, 1);\n        this.subscriptions.splice(index, 1);\n    }\n    if (this.subscriptions.length === 0) {\n        this.dispose();\n    }\n    return this;\n};\n\nRequest.prototype.dispose = Request.prototype.unsubscribe = function () {\n    this.trees = [];\n    this.data = null;\n    this.paths = null;\n    this.active = false;\n    this.boundPath = null;\n    this.requested = [];\n    this.optimized = [];\n    var queue = this.parent;\n    if (queue) {\n        this.parent = null;\n        queue.remove(this);\n    }\n    var disposable = this.disposable;\n    if (disposable) {\n        this.disposable = null;\n        if (disposable.dispose) {\n            disposable.dispose();\n        } else if (disposable.unsubscribe) {\n            disposable.unsubscribe();\n        }\n    }\n    Subject.prototype.dispose.call(this);\n};\n\nRequest.prototype.connect = function () {\n    if (!this.active && !this.disposable) {\n        var scheduledDisposable = this.scheduler.schedule(flush.bind(this));\n        if (!this.disposable) {\n            this.disposable = scheduledDisposable;\n        }\n    }\n    return this;\n};\n\nRequest.prototype.batch = function (requested, optimized, requestedComplements, optimizedComplements) {\n    if (this.active) {\n        var requestedIntersection = [];\n        var optimizedIntersection = [];\n        if (findIntersections(this.trees, requested, optimized, requestedComplements, optimizedComplements, requestedIntersection, optimizedIntersection)) {\n            this.requested.push(requestedIntersection);\n            this.optimized.push(optimizedIntersection);\n            this.trees.push(toCollapseTrees(toCollapseMap(optimizedIntersection)));\n            return this;\n        }\n        return null;\n    }\n    this.trees.push({});\n    this.requested.push(requested);\n    this.optimized.push(optimized);\n    return this;\n};\n\nfunction flush() {\n\n    var obs,\n        paths = this.paths = toPaths(toCollapseTrees(this.optimized.reduce(function (collapseMap, paths) {\n        return toCollapseMap(paths, collapseMap);\n    }, {})));\n\n    this.trees = this.optimized.map(function (paths) {\n        return toCollapseTrees(toCollapseMap(paths));\n    });\n\n    this.active = true;\n\n    try {\n        switch (this.type) {\n            case 'get':\n                obs = this.dataSource.get(paths);\n                break;\n            case 'set':\n                obs = this.dataSource.set({ paths: paths, jsonGraph: this.data });\n                break;\n            case 'call':\n                obs = this.dataSource.call.apply(this.dataSource, this.data);\n                break;\n        }\n        this.disposable = obs.subscribe(this);\n    } catch (e) {\n        this.disposable = {};\n        Subject.prototype.onError.call(this, new InvalidSourceError(e));\n    }\n}\nfunction findIntersections(trees, requested, optimized, requestedComplements, optimizedComplements, requestedIntersection, optimizedIntersection) {\n\n    var index = -1;\n    var complementIndex = -1;\n    var reqComplementsIdx = -1;\n    var intersectionIndex = -1;\n    var reqIntersectionIdx = -1;\n    var treesLength = trees.length;\n    var optTotal = optimized.length;\n    var reqTotal = requested.length - 1;\n\n    toNextPath: while (++index < optTotal) {\n\n        var treesIndex = -1;\n        var path = optimized[index];\n        var pathLen = path.length;\n\n        while (++treesIndex < treesLength) {\n            var tree = trees[treesIndex];\n            var subTree = tree[pathLen];\n            if (subTree && hasIntersection(subTree, path, 0, pathLen)) {\n                optimizedIntersection[++intersectionIndex] = path;\n                if (reqIntersectionIdx < reqTotal) {\n                    requestedIntersection[++reqIntersectionIdx] = requested[index < reqTotal ? index : reqTotal];\n                }\n                continue toNextPath;\n            }\n        }\n\n        optimizedComplements[++complementIndex] = path;\n        if (reqComplementsIdx < reqTotal) {\n            requestedComplements[++reqComplementsIdx] = requested[index < reqTotal ? index : reqTotal];\n        }\n    }\n\n    return ~intersectionIndex;\n}\n\nfunction filterPathsBoundTo(boundPath, paths) {\n\n    var boundLength;\n\n    if (!boundPath || (boundLength = boundPath.length) === 0) {\n        return paths;\n    }\n\n    var filtered = [],\n        filteredIndex = -1,\n        keyIndex;\n    var path,\n        pathsIndex = -1,\n        pathsCount = paths.length;\n\n    outer: while (++pathsIndex < pathsCount) {\n        path = paths[pathsIndex];\n        if (path.length > boundLength) {\n            keyIndex = 0;\n            do {\n                if (path[keyIndex] !== boundPath[keyIndex]) {\n                    continue outer;\n                }\n            } while (++keyIndex < boundLength);\n            filtered[++filteredIndex] = path.slice(boundLength);\n        }\n    }\n\n    return filtered;\n}\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Subscriber = __webpack_require__(13);\nvar Subscription = __webpack_require__(14);\n\nmodule.exports = Subject;\n\nfunction Subject(observers, parent) {\n    Subscriber.call(this, null, parent);\n    this.observers = observers || [];\n}\n\nSubject.prototype = Object.create(Subscriber.prototype);\n\n// Unused\n// Subject.prototype.onNext = function(value) {\n//     this.observers.slice(0).forEach(function(observer) {\n//         observer.onNext(value);\n//     });\n// }\n\nSubject.prototype.onError = function (error) {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function (observer) {\n        observer.onError(error);\n    });\n};\n\nSubject.prototype.onCompleted = function () {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function (observer) {\n        observer.onCompleted();\n    });\n};\n\nSubject.prototype.subscribe = function (subscriber) {\n    this.observers.push(subscriber);\n    this.subscriptions.push(subscriber = new Subscription([subscriber], this));\n    return subscriber;\n};\n\nSubject.prototype.dispose = Subject.prototype.unsubscribe = function () {\n    this.observers = [];\n};\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports) {\n\nfunction TimeoutScheduler(delay) {\n    this.delay = delay;\n}\n\nvar TimerDisposable = function TimerDisposable(id) {\n    this.id = id;\n    this.disposed = false;\n};\n\nTimeoutScheduler.prototype.schedule = function schedule(action) {\n    return new TimerDisposable(setTimeout(action, this.delay));\n};\n\nTimerDisposable.prototype.dispose = TimerDisposable.prototype.unsubscribe = function () {\n    if (!this.disposed) {\n        clearTimeout(this.id);\n        this.id = null;\n        this.disposed = true;\n    }\n};\n\nmodule.exports = TimeoutScheduler;\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar isInternal = __webpack_require__(19);\n\nmodule.exports = clone;\n\nfunction clone(source) {\n    var dest = source;\n    if (!(!dest || typeof dest !== 'object')) {\n        dest = isArray(source) ? [] : {};\n        for (var key in source) {\n            if (isInternal(key)) {\n                continue;\n            }\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(6);\nmodule.exports = getSize;\n\nfunction getSize(node) {\n    return isObject(node) && node.$expires || undefined;\n}\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(6);\n\nmodule.exports = getType;\n\nfunction getType(node, anyType) {\n    var type = isObject(node) && node.$type || void 0;\n    if (anyType && type) {\n        return 'branch';\n    }\n    return type;\n}\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar isObject = __webpack_require__(6);\n\nmodule.exports = isPathValue;\n\nfunction isPathValue(pathValue) {\n    return isObject(pathValue) && (isArray(pathValue.path) || typeof pathValue.path === 'string');\n}\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(95);\n\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global, module) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = __webpack_require__(96);\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (true) {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(31), __webpack_require__(97)(module)))\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/computeFlatBufferHash\");\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/flatBufferToPaths\");\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/getHashCode\");\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/hasIntersection\");\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/toCollapseMap\");\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/toCollapseTrees\");\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/toFlatBuffer\");\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/toPaths\");\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(56);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// falcor.node.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 106);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6ef821c05efebef8ef82","var now = require('../support/now');\nvar $now = require('../values/expires-now');\nvar $never = require('../values/expires-never');\n\nmodule.exports = isExpired;\n\nfunction isExpired(node, expireImmediate) {\n    var exp = node.$expires;\n    if (exp === undefined || exp === null || exp === $never) {\n        return false;\n    } else if (exp === $now) {\n        return expireImmediate;\n    }\n    return exp < now();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/isExpired.js","var isInternal = require('../internal/isInternal');\n\nmodule.exports = clone;\n\nfunction clone(node) {\n\n    var key, keys = Object.keys(node),\n        json = {}, index = -1, length = keys.length;\n\n    while (++index < length) {\n        key = keys[index];\n        if (key !== '$size' && !isInternal(key)) {\n            json[key] = node[key];\n        }\n    }\n\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/clone.js","var splice = require('./../lru/splice');\n\nmodule.exports = expireNode;\n\nfunction expireNode(node, expired, lru) {\n    if (!node[f_invalidated]) {\n        node[f_invalidated] = true;\n        expired.push(node);\n        splice(lru, node);\n    }\n    return node;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/expireNode.js","function FalcorJSON(f_meta) {\n    if (!f_meta) {\n        this[f_meta_data] = {};\n    } else if (!(this[f_meta_data] = f_meta[f_meta_data])) {\n        this[f_meta_data] = f_meta;\n    }\n}\n\nvar protoBlacklist = {\n    length: true,\n    toString: true,\n    constructor: true,\n    toLocaleString: true\n};\n\nvar protoDescriptors = {\n    toJSON: { enumerable: false, value: toJSON },\n    toProps: { enumerable: false, value: toProps },\n    toString: { enumerable: false, value: toString },\n    toLocaleString: { enumerable: false, value: toString },\n    $__hash: {\n        enumerable: false,\n        get: function() {\n            var f_meta = this[f_meta_data];\n            return f_meta && f_meta['$code'] || '';\n        }\n    },\n    $__path: {\n        enumerable: false,\n        get: function() {\n            var f_meta = this[f_meta_data];\n            return f_meta && f_meta[f_meta_abs_path] || [];\n        }\n    },\n    $__status: {\n        enumerable: false,\n        get: function() {\n            var f_meta = this[f_meta_data];\n            return f_meta && f_meta[f_meta_status] || 'resolved';\n        }\n    },\n    $__version: {\n        enumerable: false,\n        get: function() {\n            var f_meta = this[f_meta_data];\n            return f_meta && f_meta[f_meta_version] || 0;\n        }\n    }\n};\n\nObject.defineProperties(FalcorJSON.prototype, Object\n    .getOwnPropertyNames(Array.prototype)\n    .reduce(function (descriptors, name) {\n        if (!protoBlacklist.hasOwnProperty(name)) {\n            var fn = Array.prototype[name];\n            if (typeof fn === 'function') {\n                descriptors[name] = {\n                    value: bindArrayMethod(fn),\n                    writable: true, enumerable: false\n                };\n            }\n        }\n        return descriptors;\n    }, protoDescriptors)\n);\n\nfunction bindArrayMethod(fn) {\n    return function() {\n        var node = this, json = node, atom = node.length, length = atom, type;\n        // If length isn't a number, an $atom with a numeric `value`, or if the\n        // unboxed length isn't a valid Array length, bail early.\n        // If we're still waiting on pending updates, return an empty Array.\n        // Otherwise, throw a RangeError.\n        if ((type = typeof atom) !== 'number' && (!atom ||\n              type !== 'object' || atom.$type !== $atom ||\n              typeof (length = atom.value) !== 'number')||\n            length < 0 || length !== (length | 0)) {\n            if (node.$__status === 'pending') {\n                return [];\n            }\n            throw new RangeError('Invalid FalcorJSON length');\n        }\n        // Temporarily set length to the unboxed length, call the bound Array\n        // method, then reset the length back to the boxed value. This is\n        // necessary because a few Array methods (like sort) operate on the\n        // Array in-place, so we can't pass a sliced copy of this instance to\n        // the bound Array method. Do this even when the length isn't boxed, so\n        // if calling the bound Array method writes to length, it's reset to the\n        // value in the cache.\n        node.length = length;\n        json = fn.apply(node, arguments);\n        node.length = atom;\n        return json;\n    }\n}\n\nvar isArray = Array.isArray;\n\nfunction getInst(x) {\n    var inst = x;\n    var typeofInst = typeof inst;\n    var argsLen = arguments.length;\n    if (argsLen === 0) {\n        inst = this;\n    } else if (typeofInst !== 'string') {\n        if (!inst || typeofInst !== 'object') {\n            return inst;\n        }\n    } else if (argsLen !== 1) {\n        return inst;\n    } else {\n        inst = this;\n    }\n    return inst === global ? undefined : inst;\n}\n\nfunction toJSON() {\n    return serialize(getInst.apply(this, arguments), toJSON);\n}\n\nfunction toString(includeMetadata, includeStatus) {\n    return JSON.stringify(serialize(\n        getInst.call(this, this),\n        serialize,\n        includeMetadata === true,\n        false, includeStatus === true\n    ));\n}\n\nfunction toProps(x) {\n\n    var inst = getInst.apply(this, arguments);\n    var f_meta_inst, f_meta_json, version = 0;\n    var json = serialize(inst, toProps, true, true);\n\n    if (inst && (f_meta_inst = inst[f_meta_data])) {\n        version = f_meta_inst[f_meta_version];\n    }\n\n    if (!(!json || typeof json !== 'object')) {\n        if (f_meta_json = json[f_meta_data]) {\n            f_meta_json[f_meta_version] = version;\n        }\n    }\n\n    return json;\n}\n\nfunction serialize(inst, serializer, includeMetadata, createWithProto, includeStatus) {\n\n    if (!inst || typeof inst !== 'object') {\n        return inst;\n    }\n\n    var count, total, f_meta, keys, key, xs, ys;\n\n    if (isArray(inst)) {\n        xs = inst;\n    } else {\n\n        count = -1;\n        keys = Object.keys(inst);\n        total = keys.length;\n        xs = {};\n\n        if (createWithProto) {\n            xs.__proto__ = FalcorJSON.prototype;\n        }\n\n        if (includeMetadata && (f_meta = inst[f_meta_data])) {\n\n            var $code = f_meta['$code'];\n            var status = f_meta[f_meta_status];\n            var abs_path = f_meta[f_meta_abs_path];\n            var deref_to = f_meta[f_meta_deref_to];\n            var deref_from = f_meta[f_meta_deref_from];\n\n            f_meta = {};\n            $code && (f_meta['$code'] = $code);\n            abs_path && (f_meta[f_meta_abs_path] = abs_path);\n            deref_to && (f_meta[f_meta_deref_to] = deref_to);\n            deref_from && (f_meta[f_meta_deref_from] = deref_from);\n            includeStatus && status && (f_meta[f_meta_status] = status);\n\n            xs[f_meta_data] = f_meta;\n\n            if (createWithProto) {\n                ys = {};\n                ys.__proto__ = xs;\n                xs = ys;\n            }\n        }\n\n        while (++count < total) {\n            if ((key = keys[count]) !== f_meta_data) {\n                xs[key] = serializer(inst[key], serializer, includeMetadata, createWithProto, includeStatus);\n            }\n        }\n    }\n\n    return xs;\n}\n\nmodule.exports = FalcorJSON;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/FalcorJSON.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = '`null` is not allowed in branch key positions.';\n\n/**\n * Do not allow null in path.\n */\nmodule.exports = createErrorClass('NullInPathError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/NullInPathError.js","module.exports = createErrorClass;\n\nfunction createErrorClass(name, init) {\n    function E(message) {\n        this.message = message;\n        init && init.apply(this, arguments);\n        if (!Error.captureStackTrace) {\n            this.stack = (new Error()).stack;\n        } else {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n    E.prototype = Object.create(Error.prototype);\n    E.prototype.name = name;\n    E.prototype.constructor = E;\n    E.is = function(x) { return x.name === name; };\n    return E;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/createErrorClass.js","module.exports = isObject;\n\nfunction isObject(value) {\n    return value !== null && typeof value === 'object';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isObject.js","module.exports = createHardlink;\n\nfunction createHardlink(from, to) {\n\n    // create a back reference\n    var backRefs = to[f_refs_length] || 0;\n    to[f_ref + backRefs] = from;\n    to[f_refs_length] = backRefs + 1;\n\n    // create a hard reference\n    from[f_ref_index] = backRefs;\n    from[f_context] = to;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/createHardlink.js","var isObject = require('./../support/isObject');\nmodule.exports = getSize;\n\nfunction getSize(node) {\n    return isObject(node) && node.$size || 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getSize.js","/**\n * getCachePosition makes a fast walk to the bound value since all bound\n * paths are the most possible optimized path.\n *\n * @param {Model} model -\n * @param {Array} path -\n * @returns {Mixed} - undefined if there is nothing in this position.\n * @private\n */\nmodule.exports = getCachePosition;\n\nfunction getCachePosition(cache, path) {\n\n    var node = cache;\n    var type, depth = 0;\n    var maxDepth = path.length;\n\n    if (maxDepth > 0) {\n        do {\n            node = node[path[depth]];\n\n            while (node && (type = node.$type) === $ref) {\n                node = getCachePosition(cache, node.value);\n            }\n        } while (++depth < maxDepth && node && !type);\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getCachePosition.js","var removeNodeAndDescendants = require('./removeNodeAndDescendants');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = updateNodeAncestors;\n\nfunction updateNodeAncestors(node, offset, lru, version) {\n    var curr = node, next;\n    do {\n        if ((curr.$size = (curr.$size || 0) - offset) > 0) {\n            if (!(next = curr[f_parent])) {\n                curr[f_version] = version;\n            } else if (curr[f_version] !== version) {\n                updateBackReferenceVersions(curr, version);\n            }\n        } else if (next = curr[f_parent]) {\n            removeNodeAndDescendants(curr, next, curr[f_key], lru, version);\n        }\n    } while (curr = next);\n    return node;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/updateNodeAncestors.js","var createErrorClass = require('./createErrorClass');\n\n/**\n * InvalidKeySetError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidKeySetError', function(path, keysOrRanges) {\n    this.mesage = '' +\n        'The KeySet ' + JSON.stringify(keysOrRanges) +\n        ' in path ' + JSON.stringify(path) + ' contains a KeySet. ' +\n        'Keysets can only contain Keys or Ranges';\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidKeySetError.js","var EXPIRES_NEVER = require('./../values/expires-never');\n\nmodule.exports = lruPromote;\n\n// [H] -> Next -> ... -> [T]\n// [T] -> Prev -> ... -> [H]\nfunction lruPromote(lru, node) {\n    // Never promote node.$expires === 1.  They cannot expire.\n    if (node.$expires === EXPIRES_NEVER) {\n        return;\n    }\n\n    var head = lru[f_head];\n\n    // Nothing is in the cache.\n    if (!head) {\n        lru[f_head] = lru[f_tail] = node;\n        return;\n    }\n\n    if (head === node) {\n        return;\n    }\n\n    // The item always exist in the cache since to get anything in the\n    // cache it first must go through set.\n    var prev = node[f_prev];\n    var next = node[f_next];\n    if (next) {\n        next[f_prev] = prev;\n    }\n    if (prev) {\n        prev[f_next] = next;\n    }\n    node[f_prev] = undefined;\n\n    // Insert into head position\n    lru[f_head] = node;\n    node[f_next] = head;\n    head[f_prev] = node;\n\n    // If the item we promoted was the tail, then set prev to tail.\n    if (node === lru[f_tail]) {\n        lru[f_tail] = prev;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/promote.js","var Subscription = require('./Subscription');\n\nmodule.exports = Subscriber;\n\nfunction Subscriber(destination, parent, onCompleted) {\n    if (typeof destination === 'function' ||\n             typeof parent === 'function' ||\n        typeof onCompleted === 'function') {\n        Subscription.call(this, []);\n        this.destination = {\n            error: parent,\n            onError: parent,\n            next: destination,\n            onNext: destination,\n            complete: onCompleted,\n            onCompleted: onCompleted\n        }\n    } else {\n        Subscription.call(this, [], parent);\n        this.parent = parent;\n        this.destination = destination;\n    }\n}\n\nSubscriber.prototype = Object.create(Subscription.prototype);\n\nSubscriber.prototype.next =\nSubscriber.prototype.onNext = function onNext(value) {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onNext) {\n            dest.onNext(value);\n        } else if (dest.next) {\n            dest.next(value);\n        }\n    }\n}\n\nSubscriber.prototype.error =\nSubscriber.prototype.onError = function onError(error) {\n    var signaled = false;\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onError) {\n            signaled = true;\n            dest.onError(error);\n        } else if (dest.error) {\n            signaled = true;\n            dest.error(error);\n        }\n        this.dispose();\n    }\n    if (!signaled) {\n        throw error;\n    }\n}\n\nSubscriber.prototype.complete =\nSubscriber.prototype.onCompleted = function onCompleted() {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onCompleted) {\n            dest.onCompleted();\n        } else if (dest.complete) {\n            dest.complete();\n        }\n        this.dispose();\n    }\n}\n\nSubscriber.prototype.dispose =\nSubscriber.prototype.unsubscribe = function () {\n    this.destination = null;\n    Subscription.prototype.dispose.call(this);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subscriber.js","module.exports = Subscription;\n\nfunction Subscription(subscriptions, parent) {\n    this.parent = parent;\n    this.subscriptions = subscriptions || [];\n}\n\nSubscription.prototype.add = function(subscription) {\n    return this.subscriptions.push(subscription) && this || this;\n}\n\nSubscription.prototype.remove = function(subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.subscriptions.splice(index, 1);\n    }\n    return this;\n}\n\nSubscription.prototype.dispose =\nSubscription.prototype.unsubscribe = function () {\n    var subscription, subscriptions = this.subscriptions;\n    while (subscriptions.length) {\n        (subscription = subscriptions.pop()) &&\n            subscription.dispose &&\n            subscription.dispose();\n    }\n    var parent = this.parent;\n    if (parent) {\n        this.parent = null;\n        parent.remove && parent.remove(this);\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subscription.js","var isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\n\nmodule.exports = onValueType;\n\nfunction onValueType(node, type, json,\n                     path, depth, seed, results,\n                     requestedPath, requestedLength,\n                     optimizedPath, optimizedLength,\n                     fromReference, modelRoot, expired, expireImmediate,\n                     branchSelector, boxValues, materialized, reportMissing,\n                     treatErrorsAsValues, onValue, onMissing, onMaterialize) {\n\n    var _reportMissing = reportMissing;\n    var reportMaterialized = reportMissing;\n\n    if (type) {\n        if (isExpired(node, expireImmediate)) {\n            if (!node[f_invalidated]) {\n                expireNode(node, expired, modelRoot);\n            }\n        } else {\n            lruPromote(modelRoot, node);\n            if (node.value === undefined) {\n                _reportMissing = false;\n                reportMaterialized = materialized;\n            } else {\n                if (seed) {\n                    if (fromReference) {\n                        requestedPath[depth] = null;\n                    }\n                    return onValue(node, type, depth, seed, results,\n                                   requestedPath, optimizedPath, optimizedLength,\n                                   fromReference, boxValues, materialized, treatErrorsAsValues);\n                }\n                return undefined;\n            }\n        }\n    }\n\n    if (materialized) {\n        seed && (results.hasValue = true);\n    } else if (!reportMaterialized) {\n        return undefined;\n    }\n\n    return onMissing(path, depth, results,\n                     requestedPath, requestedLength, fromReference,\n                     optimizedPath, optimizedLength, _reportMissing,\n                     materialized, json, branchSelector,\n                     boxValues, onMaterialize, modelRoot);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onValueType.js","var getCachePosition = require('./getCachePosition');\n\nmodule.exports = getBoundCacheNode;\n\nfunction getBoundCacheNode(model, path) {\n    path = path || model._path;\n    var node = model._node;\n    if (!node || node[f_parent] === undefined || node[f_invalidated]) {\n        model._node = null;\n        if (path.length === 0) {\n            node = model._root.cache;\n        } else {\n            node = getCachePosition(model._root.cache, path);\n            if (path === model._path) {\n                model._node = node;\n            }\n        }\n    }\n    return node;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getBoundCacheNode.js","var arr = new Array(5);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar mergeJSONGraphNode = require('../mergeJSONGraphNode');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\n\n/**\n * Merges a list of {@link JSONGraphEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to merge the {@link JSONGraphEnvelope}s.\n * @param {Array.<PathValue>} jsonGraphEnvelopes - the {@link JSONGraphEnvelope}s to merge.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = setJSONGraphs;\n\nfunction setJSONGraphs(model, jsonGraphEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n\n    var requestedPath = [];\n    var optimizedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var jsonGraphEnvelopeIndex = -1;\n    var jsonGraphEnvelopeCount = jsonGraphEnvelopes.length;\n\n    while (++jsonGraphEnvelopeIndex < jsonGraphEnvelopeCount) {\n\n        var jsonGraphEnvelope = jsonGraphEnvelopes[jsonGraphEnvelopeIndex];\n        var paths = jsonGraphEnvelope.paths;\n        var jsonGraph = jsonGraphEnvelope.jsonGraph;\n\n        var pathIndex = -1;\n        var pathCount = paths.length;\n\n        while (++pathIndex < pathCount) {\n\n            var path = paths[pathIndex];\n            optimizedPath.index = 0;\n\n            setJSONGraphPathSet(\n                path, 0,\n                cache, cache, cache,\n                jsonGraph, jsonGraph, jsonGraph,\n                requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n                version, expired, lru, comparator, errorSelector, expireImmediate\n            );\n        }\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n    arr[3] = undefined;\n    arr[4] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n}\n\n/* eslint-disable no-constant-condition */\nfunction setJSONGraphPathSet(\n    path, depth, root, parent, node,\n    messageRoot, messageParent, message,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n\n        setNode(\n            root, parent, node, messageRoot, messageParent, message,\n            key, branch, false, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = arr[0];\n        var nextParent = arr[1];\n        var nextOptimizedPath = arr[4];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setJSONGraphPathSet(\n                    path, depth + 1, root, nextParent, nextNode,\n                    messageRoot, arr[3], arr[2],\n                    requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                    version, expired, lru, comparator, errorSelector, expireImmediate\n                );\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(\n    root, nodeArg, messageRoot, message, requestedPath, optimizedPathArg,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var messageParent;\n    var node = nodeArg;\n    var reference = node.value;\n    var optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        messageParent = messageRoot;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var index = 0;\n        var container = node;\n        var count = reference.length - 1;\n        parent = node = root;\n        messageParent = message = messageRoot;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            optimizedPath.index = index;\n\n            setNode(\n                root, parent, node, messageRoot, messageParent, message,\n                key, branch, true, requestedPath, optimizedPath, version,\n                expired, lru, comparator, errorSelector, expireImmediate\n            );\n            node = arr[0];\n            optimizedPath = arr[4];\n            if (!node || typeof node !== 'object') {\n                optimizedPath.index = index;\n                return;\n            }\n            parent = arr[1];\n            message = arr[2];\n            messageParent = arr[3];\n        } while (index++ < count);\n\n        optimizedPath.index = index;\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n}\n\nfunction setNode(\n    root, parentArg, nodeArg, messageRoot, messageParentArg, messageArg,\n    key, branch, reference, requestedPath, optimizedPathArg, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var node = nodeArg;\n    var type = node.$type;\n    var parent = parentArg;\n    var message = messageArg;\n    var optimizedPath = optimizedPathArg;\n    var messageParent = messageParentArg;\n\n    while (type === $ref) {\n\n        setReference(\n            root, node, messageRoot, message, requestedPath, optimizedPath,\n            version, expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        node = arr[0];\n\n        if (!node || typeof node !== 'object') {\n            return;\n        }\n\n        parent = arr[1];\n        message = arr[2];\n        messageParent = arr[3];\n        optimizedPath = arr[4];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            messageParent = message;\n            node = parent[key];\n            message = messageParent && messageParent[key];\n        }\n\n        node = mergeJSONGraphNode(\n            parent, node, message, key, requestedPath, optimizedPath,\n            version, expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setJSONGraphs.js","var arr = new Array(3);\nvar isArray = Array.isArray;\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar getCachePosition = require('../getCachePosition');\nvar isInternalKey = require('../../support/isInternalKey');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar mergeValueOrInsertBranch = require('../mergeValueOrInsertBranch');\n\n/**\n * Sets a list of {@link PathMapEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of {@link PathMapEnvelope}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = setPathMaps;\n\nfunction setPathMaps(model, pathMapEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[f_parent] || cache;\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathMapIndex = -1;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathMap(\n            pathMapEnvelope.json, 0, cache, parent, node,\n            requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n            version, expired, modelRoot, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n}\n\n/* eslint-disable no-constant-condition */\nfunction setPathMap(\n    pathMap, depth, root, parent, node,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var keys = getKeys(pathMap);\n\n    if (keys && keys.length) {\n\n        var keyIndex = 0;\n        var keyCount = keys.length;\n        var optimizedIndex = optimizedPath.index;\n\n        do {\n            var key = keys[keyIndex];\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n\n            requestedPath.depth = depth;\n\n            setNode(\n                root, parent, node, key, child,\n                branch, false, requestedPath, optimizedPath, version,\n                expired, lru, comparator, errorSelector, expireImmediate\n            );\n\n            requestedPath[depth] = key;\n            requestedPath.index = depth;\n\n            var nextNode = arr[0];\n            var nextParent = arr[1];\n            var nextOptimizedPath = arr[2];\n            nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n            if (nextNode) {\n                if (branch) {\n                    setPathMap(\n                        child, depth + 1,\n                        root, nextParent, nextNode,\n                        requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                        version, expired, lru, comparator, errorSelector, expireImmediate\n                    );\n                } else {\n                    requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                    optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n                }\n            }\n            if (++keyIndex >= keyCount) {\n                break;\n            }\n            optimizedPath.index = optimizedIndex;\n        } while (true);\n    }\n}\n/* eslint-enable */\n\nfunction setReference(\n    value, root, nodeArg, requestedPath, optimizedPathArg, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var node = nodeArg;\n    var reference = node.value;\n    var optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n        var container = node;\n        parent = root;\n\n        node = node[f_context];\n\n        if (node != null) {\n            parent = node[f_parent] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n            optimizedPath.index = index;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                var results = setNode(\n                    root, parent, node, key, value,\n                    branch, true, requestedPath, optimizedPath, version,\n                    expired, lru, comparator, errorSelector, expireImmediate\n                );\n                node = arr[0];\n                optimizedPath = arr[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return;\n                }\n                parent = arr[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[f_context] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n}\n\nfunction setNode(\n    root, parentArg, nodeArg, key, value,\n    branch, reference, requestedPath, optimizedPathArg, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var node = nodeArg;\n    var type = node.$type;\n    var parent = parentArg;\n    var optimizedPath = optimizedPathArg;\n\n    while (type === $ref) {\n\n        setReference(\n            value, root, node, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = arr[0];\n\n        if (!node || typeof node !== 'object') {\n            return;\n        }\n\n        parent = arr[1];\n        optimizedPath = arr[2];\n        type = node && node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(\n            parent, node, key, value,\n            branch, reference, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n}\n\nfunction getKeys(pathMap) {\n\n    if (!(!pathMap || typeof pathMap !== 'object') && !pathMap.$type) {\n        var keys = [];\n        var itr = 0;\n        if (isArray(pathMap)) {\n            keys[itr++] = 'length';\n        }\n        for (var key in pathMap) {\n            if (isInternalKey(key)) {\n                continue;\n            }\n            keys[itr++] = key;\n        }\n        return keys;\n    }\n\n    return undefined;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setPathMaps.js","/**\n * Determined if the key passed in is an f_ internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nvar f_ = require('./f_');\nvar regexp = new RegExp('^' + f_, 'i', 'g');\n\nmodule.exports = regexp.test.bind(regexp);\n\n\n\n// WEBPACK FOOTER //\n// ./lib/internal/isInternal.js","module.exports = require('./getJSON');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/index.js","module.exports = require('./getJSONGraph');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/index.js","module.exports = inlineJSONGraphValue;\n\n/* eslint-disable no-constant-condition */\nfunction inlineJSONGraphValue(node, path, length, seed, branch) {\n\n    var key, depth = 0, prev,\n        curr = seed.jsonGraph;\n\n    if (!curr) {\n        seed.jsonGraph = curr = {};\n    }\n\n    do {\n        prev = curr;\n        key = path[depth++];\n        if (depth >= length) {\n            curr = prev[key] = branch !== true ? node : prev[key] || {};\n            break;\n        }\n        curr = prev[key] || (prev[key] = {});\n    } while (true);\n\n    return curr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/inlineValue.js","var isArray = Array.isArray;\n\nmodule.exports = onMissing;\n\n/* eslint-disable no-constant-condition */\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, json, branchSelector,\n                   boxValues, onMaterialize, modelRoot) {\n\n    if (!reportMissing && !reportMaterialized) {\n        return;\n    }\n\n    var keyset,\n        restPathIndex = -1,\n        restPathCount = requestedLength - depth,\n        restPath = restPathCount && new Array(restPathCount) || undefined;\n\n    while (++restPathIndex < restPathCount) {\n        keyset = path[restPathIndex + depth];\n        if (isEmptyKeySet(keyset)) {\n            return;\n        }\n        restPath[restPathIndex] = keyset;\n    }\n\n    var index, count, mPath;\n    var lastKeyIsNull = keyset === null;\n    var isRequestedPath = reportMissing;\n    var missDepth, missTotal, missingPath, missingPaths;\n\n    if (!reportMissing) {\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } else {\n        missDepth = depth;\n        missTotal = requestedLength;\n        missingPath = requestedPath;\n        missingPaths = results.requested || (results.requested = []);\n    }\n\n    do {\n        if (restPathCount < requestedLength || !isRequestedPath) {\n            index = -1;\n            count = missDepth;\n            mPath = new Array(missTotal);\n            while (++index < count) {\n                mPath[index] = missingPath[index];\n            }\n            restPathIndex = -1;\n            while (index < missTotal) {\n                mPath[index++] = restPath[++restPathIndex];\n            }\n        }\n\n        // break after inserting both requested and optimized missing paths\n        if (isRequestedPath = !isRequestedPath) {\n            if (reportMissing) {\n                missingPaths[missingPaths.length] = mPath;\n            }\n            break;\n        }\n\n        missingPaths[missingPaths.length] = mPath || restPath;\n\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missingPaths = results.missing || (results.missing = []);\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } while (true);\n\n    if (reportMaterialized) {\n        return onMaterialize(json, mPath, missDepth, missTotal, branchSelector, boxValues, modelRoot);\n    }\n}\n/* eslint-enable */\n\nfunction isEmptyKeySet(keyset) {\n\n    // false if the keyset is a primitive\n    if ('object' !== typeof keyset) {\n        return false;\n    } else if (keyset === null) {\n        return false;\n    }\n\n    if (isArray(keyset)) {\n        // return true if the keyset is an empty array\n        return keyset.length === 0;\n    }\n\n    var rangeEnd = keyset.to,\n        from = keyset.from || 0;\n    if ('number' !== typeof rangeEnd) {\n        rangeEnd = from + (keyset.length || 0);\n    }\n\n    // false if trying to request incorrect or empty ranges\n    // e.g. { from: 10, to: 0 } or { from: 5, length: 0 }\n    return from >= rangeEnd;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMissing.js","var arr = new Array(2);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\nvar getSize = require('../../support/getSize');\nvar createHardlink = require('../createHardlink');\nvar getBoundCacheNode = require('../getBoundCacheNode');\nvar updateNodeAncestors = require('../updateNodeAncestors');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\n\n/**\n * Invalidates a list of Paths in a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathValues.\n * @param {Array.<PathValue>} paths - the PathValues to set.\n */\n\nmodule.exports = invalidatePathSets;\n\nfunction invalidatePathSets(model, paths, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n\n    if (!node) {\n        return false;\n    }\n\n    var pathIndex = -1;\n    var pathCount = paths.length;\n    var parent = node[f_parent] || cache;\n\n    while (++pathIndex < pathCount) {\n\n        var path = paths[pathIndex];\n\n        invalidatePathSet(\n            path, 0, cache, parent, node,\n            version, expired, lru, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return true;\n    }\n\n    return false;\n}\n\nfunction invalidatePathSet(\n    path, depth, root, parent, node,\n    version, expired, lru, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n\n    do {\n        invalidateNode(\n            root, parent, node,\n            key, branch, false, version,\n            expired, lru, expireImmediate\n        );\n        var nextNode = arr[0];\n        var nextParent = arr[1];\n        if (nextNode) {\n            if (branch) {\n                invalidatePathSet(\n                    path, depth + 1,\n                    root, nextParent, nextNode,\n                    version, expired, lru, expireImmediate\n                );\n            } else {\n                updateNodeAncestors(nextNode, getSize(nextNode), lru, version);\n            }\n        }\n        key = iterateKeySet(keySet, note);\n    } while (!note.done);\n}\n\nfunction invalidateReference(root, nodeArg, version, expired, lru, expireImmediate) {\n\n    var node = nodeArg;\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[f_context];\n\n    if (node != null) {\n        parent = node[f_parent] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            invalidateNode(\n                root, parent, node,\n                key, branch, true, version,\n                expired, lru, expireImmediate\n            );\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n}\n\nfunction invalidateNode(\n    root, parentArg, nodeArg,\n    key, branch, reference, version,\n    expired, lru, expireImmediate) {\n\n    var node = nodeArg;\n    var parent = parentArg;\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        invalidateReference(root, node, version, expired, lru, expireImmediate);\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new Error('`null` is not allowed in branch key positions.');\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/invalidatePathSets.js","var lruSplice = require('../lru/splice');\nvar isInternalKey = require('../support/isInternalKey');\nvar unlinkBackReferences = require('./unlinkBackReferences');\nvar unlinkForwardReference = require('./unlinkForwardReference');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = removeNodeAndDescendants;\n\nfunction removeNodeAndDescendants(node, parent, key, lru, version) {\n    if (!(!node || typeof node !== 'object')) {\n        var type = node.$type;\n        if (type === undefined) {\n            for (var key2 in node) {\n                if (!isInternalKey(key2)) {\n                    removeNodeAndDescendants(node[key2], node, key2, lru, version);\n                }\n            }\n        } else {\n            if (type === $ref) {\n                unlinkForwardReference(node);\n            }\n            lruSplice(lru, node);\n        }\n        unlinkBackReferences(updateBackReferenceVersions(node, version));\n        parent[key] = node[f_parent] = undefined;\n        return true;\n    }\n    return false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/removeNodeAndDescendants.js","var arr = new Array(3);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar getCachePosition = require('../getCachePosition');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\nvar mergeValueOrInsertBranch = require('../mergeValueOrInsertBranch');\n\n/**\n * Sets a list of {@link PathValue}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the {@link PathValue}s.\n * @param {Array.<PathValue>} pathValues - the list of {@link PathValue}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = setPathValues;\n\nfunction setPathValues(model, pathValues, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[f_parent] || cache;\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathValueIndex = -1;\n    var pathValueCount = pathValues.length;\n\n    while (++pathValueIndex < pathValueCount) {\n\n        var pathValue = pathValues[pathValueIndex];\n        var path = pathValue.path;\n        var value = pathValue.value;\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathSet(\n            value, path, 0, cache, parent, node,\n            requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n            version, expired, modelRoot, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return [requestedPaths, optimizedPaths, true];\n    }\n\n    return [requestedPaths, optimizedPaths, false];\n}\n\n/* eslint-disable no-constant-condition */\nfunction setPathSet(\n    value, path, depth, root, parent, node,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        setNode(\n            root, parent, node, key, value,\n            branch, false, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = arr[0];\n        var nextParent = arr[1];\n        var nextOptimizedPath = arr[2];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setPathSet(\n                    value, path, depth + 1,\n                    root, nextParent, nextNode,\n                    requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                    version, expired, lru, comparator, errorSelector, expireImmediate\n                );\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(\n    value, root, nodeArg, requestedPath, optimizedPathArg, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var node = nodeArg;\n    var reference = node.value;\n    var optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var container = node;\n        parent = root;\n\n        node = node[f_context];\n\n        if (node != null) {\n            parent = node[f_parent] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                optimizedPath.index = index;\n\n                setNode(\n                    root, parent, node, key, value,\n                    branch, true, requestedPath, optimizedPath, version,\n                    expired, lru, comparator, errorSelector, expireImmediate\n                );\n                node = arr[0];\n                optimizedPath = arr[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return;\n                }\n                parent = arr[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[f_context] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n}\n\nfunction setNode(\n    root, parentArg, nodeArg, key, value,\n    branch, reference, requestedPath, optimizedPathArg, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var node = nodeArg;\n    var type = node.$type;\n    var parent = parentArg;\n    var optimizedPath = optimizedPathArg;\n\n    while (type === $ref) {\n\n        setReference(\n            value, root, node, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        node = arr[0];\n\n        if (!node || typeof node !== 'object') {\n            return;\n        }\n\n        parent = arr[1];\n        optimizedPath = arr[2];\n        type = node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(\n            parent, node, key, value,\n            branch, reference, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setPathValues.js","module.exports = updateBackReferenceVersions;\n\nfunction updateBackReferenceVersions(nodeArg, version) {\n    var node = nodeArg, stack = [], count = 0, ref, i, n;\n    do {\n        i = -1;\n        ref = node[f_parent];\n        node[f_version] = version;\n        n = node[f_refs_length] || 0;\n        do {\n            if (ref && ref[f_version] !== version) {\n                stack[count++] = ref;\n            }\n            if (++i < n) {\n                ref = node[f_ref + i];\n                continue;\n            }\n            break;\n        } while (true);\n    } while (node = stack[--count]);\n    return nodeArg;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/updateBackReferenceVersions.js","var isObject = require('./../support/isObject');\nmodule.exports = getTimestamp;\n\nfunction getTimestamp(node) {\n    return isObject(node) && node.$timestamp || undefined;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getTimestamp.js","/**\n * Determined if the key passed in is an internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nmodule.exports = isInternalKey;\n\nvar isInternal = require('../internal/isInternal');\n\nfunction isInternalKey(key) {\n    return key && key[0] === '$' || isInternal(key);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isInternalKey.js","module.exports = 0;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/values/expires-now.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 31\n// module chunks = 0","module.exports = require(\"@graphistry/falcor-path-utils/lib/iterateKeySet\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/iterateKeySet\"\n// module id = 32\n// module chunks = 0","module.exports = require(\"@graphistry/falcor-path-utils/lib/support/materializedAtom\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/support/materializedAtom\"\n// module id = 33\n// module chunks = 0","var isArray = Array.isArray;\nvar walkPathAndBuildOutput = require('./walkPath');\nvar walkFlatBufferAndBuildOutput = require('./walkFlatBuffer');\nvar getBoundCacheNode = require('../../getBoundCacheNode');\nvar InvalidModelError = require('../../../errors/InvalidModelError');\nvar toFlatBuffer = require('@graphistry/falcor-path-utils/lib/toFlatBuffer');\nvar computeFlatBufferHash = require('@graphistry/falcor-path-utils/lib/computeFlatBufferHash');\n\nmodule.exports = getJSON;\n\nfunction getJSON(model, pathsArg, seed, progressive, expireImmediate) {\n\n    var node,\n        paths = pathsArg,\n        referenceContainer,\n        boundPath = model._path,\n        modelRoot = model._root,\n        cache = modelRoot.cache,\n        requestedPath, requestedLength,\n        optimizedPath, optimizedLength =\n            boundPath && boundPath.length || 0;\n\n    // If the model is bound, get the cache position.\n    if (optimizedLength) {\n        node = getBoundCacheNode(model);\n        // If there was a short, then we 'throw an error' to the outside\n        // calling function which will onError the observer.\n        if (node && node.$type) {\n            return { error: new InvalidModelError(boundPath, boundPath) };\n        }\n        // We need to get the new cache position and copy the bound path.\n        optimizedPath = [];\n        for (var i = 0; i < optimizedLength; ++i) {\n            optimizedPath[i] = boundPath[i];\n        }\n        referenceContainer = model._referenceContainer;\n    } else {\n        node = cache;\n        optimizedPath = [];\n    }\n\n    requestedPath = [];\n\n    var isFlatBuffer = false,\n        json = seed && seed.json,\n        boxValues = model._boxed,\n        expired = modelRoot.expired,\n        recycleJSON = model._recycleJSON,\n        hasDataSource = Boolean(model._source),\n        branchSelector = modelRoot.branchSelector,\n        materialized = seed && model._materialized,\n        treatErrorsAsValues = model._treatErrorsAsValues,\n        allowFromWhenceYouCame = model._allowFromWhenceYouCame,\n        results = { args: null, data: seed, hasValue: false,\n                    relative: null, requested: null, missing: null };\n\n    var arr, path, pathsIndex = 0, pathsCount = paths.length;\n\n    if (pathsCount > 0) {\n\n        if (recycleJSON) {\n            isFlatBuffer = true;\n            if ((pathsCount > 1 && expireImmediate) || isArray(paths[0])) {\n                paths = [computeFlatBufferHash(toFlatBuffer(paths, {}))];\n            }\n            pathsCount = 1;\n        }\n\n        do {\n            path = paths[pathsIndex];\n            if (isFlatBuffer) {\n                arr = walkFlatBufferAndBuildOutput(cache, node, json, paths[0], 0, seed, results,\n                                                   requestedPath, optimizedPath, optimizedLength,\n                                                   /* fromReference = */ false, referenceContainer,\n                                                   modelRoot, expired, expireImmediate, branchSelector,\n                                                   boxValues, materialized, hasDataSource,\n                                                   treatErrorsAsValues, allowFromWhenceYouCame);\n            } else {\n                requestedLength = path.length;\n                arr = walkPathAndBuildOutput(cache, node, json, path,\n                                          /* depth = */ 0, seed, results,\n                                             requestedPath, requestedLength,\n                                             optimizedPath, optimizedLength,\n                                             /* fromReference = */ false, referenceContainer,\n                                             modelRoot, expired, expireImmediate, branchSelector,\n                                             boxValues, materialized, hasDataSource,\n                                             treatErrorsAsValues, allowFromWhenceYouCame);\n            }\n            json = arr[0];\n            arr[0] = undefined;\n            arr[1] = undefined;\n        } while (++pathsIndex < pathsCount);\n    }\n\n    var requested = results.requested;\n\n    results.args = isFlatBuffer && paths || requested;\n\n    if (requested && requested.length) {\n        results.relative = results.args;\n        if (optimizedLength) {\n            var boundRequested = [];\n            for (var i = 0, len = requested.length; i < len; ++i) {\n                boundRequested[i] = boundPath.concat(requested[i]);\n            }\n            results.requested = boundRequested;\n        }\n    }\n\n    if (results.hasValue) {\n        seed.json = json;\n    }\n\n    return results;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/getJSON.js","var arr = new Array(3);\nvar promote = require('../../../lru/promote');\nvar isExpired = require('../../isExpired');\nvar createHardlink = require('../../createHardlink');\nvar CircularReferenceError = require('../../../errors/CircularReferenceError');\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, refArg, modelRoot, expireImmediate) {\n\n    promote(modelRoot, refArg);\n\n    var context,\n        ref = refArg,\n        key, type, depth = 0,\n        node = root, path = ref.value,\n        copy = path, length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[f_context])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                throw new CircularReferenceError(path);\n            }\n            // If the node we land on isn't the existing ref context,\n            // create a hard-link between the reference and the node\n            // it points to.\n            else if (node !== context) {\n                createHardlink(ref, node);\n            }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === $ref) {\n\n                promote(modelRoot, node);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n    arr[2] = ref;\n\n    return arr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/getReferenceTarget.js","var clone = require('../../clone');\nvar onError = require('./onError');\n\nmodule.exports = onJSONValue;\n\nfunction onJSONValue(node, type, depth, seed, results,\n                     requestedPath, optimizedPath, optimizedLength,\n                     fromReference, boxValues, materialized,\n                     treatErrorsAsValues) {\n\n    if ($error === type && !treatErrorsAsValues) {\n        return onError(node, depth, results, requestedPath,\n                       fromReference, boxValues);\n    }\n\n    results.hasValue = true;\n\n    // boxValues always clones the node\n    return !boxValues ? node.value : clone(node);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/onValue.js","var walkPathAndBuildOutput = require('./walkPath');\nvar BoundJSONGraphModelError = require('../../../errors/BoundJSONGraphModelError');\n\nmodule.exports = getJSONGraph;\n\nfunction getJSONGraph(model, paths, seed, progressive, expireImmediate) {\n\n    var node, cache,\n        boundPath = model._path,\n        modelRoot = model._root,\n        requestedPath, requestedLength,\n        optimizedPath, optimizedLength =\n            boundPath && boundPath.length || 0;\n\n    // If the model is bound, then get that cache position.\n    if (optimizedLength) {\n        // JSONGraph output cannot ever be bound or else it will\n        // throw an error.\n        return { error: new BoundJSONGraphModelError() };\n    } else {\n        optimizedPath = [];\n        cache = node = modelRoot.cache;\n    }\n\n    requestedPath = [];\n\n    var boxValues = model._boxed,\n        expired = modelRoot.expired,\n        materialized = model._materialized,\n        hasDataSource = Boolean(model._source),\n        pathsIndex = -1, pathsCount = paths.length,\n        treatErrorsAsValues = model._treatErrorsAsValues,\n        results = { args: null, data: seed, paths: null,\n                    relative: null, requested: null, jsonGraph: null };\n\n    while (++pathsIndex < pathsCount) {\n        var path = paths[pathsIndex];\n        requestedLength = path.length;\n        walkPathAndBuildOutput(cache, node, path,\n                            /* depth = */ 0, seed, results,\n                               requestedPath, requestedLength,\n                               optimizedPath, optimizedLength,\n              /* fromReference = */ false, modelRoot, expired, expireImmediate,\n                               boxValues, materialized, hasDataSource, treatErrorsAsValues);\n    }\n\n    results.args = results.relative = results.requested;\n\n    return results;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/getJSONGraph.js","var isArray = Array.isArray;\nvar clone = require('../clone');\nvar FalcorJSON = require('./json/FalcorJSON');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = onMaterialize;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterialize(jsonArg, path, depth, length,\n                       branchSelector, boxValues, modelRoot) {\n\n    var json = jsonArg, type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (depth === length) {\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta;\n\n    var nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        keysetIndex = -1, keysetLength = 0;\n\n    keyset = path[depth];\n\n    if (!json || 'object' !== typeof json) {\n        json = {};\n        json.__proto__ = FalcorJSON.prototype;\n        json[f_meta_data] = f_meta = {};\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[f_meta_data])) {\n        json[f_meta_data] = f_meta = {};\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n    } else {\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            // insert the materialized branch\n            json[nextKey] = onMaterialize(\n                json[nextKey], path,\n                nextDepth, length,\n                branchSelector,\n                boxValues,\n                modelRoot\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMaterialize.js","var isArray = Array.isArray;\nvar isPathValue = require('../support/isPathValue');\nvar isJSONEnvelope = require('../support/isJSONEnvelope');\nvar isJSONGraphEnvelope = require('../support/isJSONGraphEnvelope');\n\nmodule.exports = groupCacheArguments;\n\nfunction groupCacheArguments(args) {\n\n    var groups = [];\n    var argIndex = -1;\n    var argCount = args.length;\n    var group, groupType, arg, argType;\n\n    while (++argIndex < argCount) {\n        arg = args[argIndex];\n        if (isArray(arg)) {\n            arg = { path: arg };\n            argType = 'PathValues';\n        } else if (isPathValue(arg)) {\n            argType = 'PathValues';\n        } else if (isJSONGraphEnvelope(arg)) {\n            argType = 'JSONGraphs';\n        } else if (isJSONEnvelope(arg)) {\n            argType = 'PathMaps';\n        }\n\n        if (groupType !== argType) {\n            groupType = argType;\n            groups.push(group = {\n                arguments: [],\n                inputType: argType\n            });\n        }\n\n        group.arguments.push(arg);\n    }\n\n    return groups;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/groupCacheArguments.js","module.exports = insertNode;\n\nfunction insertNode(node, parent, key, version, optimizedPath) {\n    node[f_key] = key;\n    node[f_parent] = parent;\n\n    if (version !== undefined) {\n        node[f_version] = version;\n    }\n    if (!node[f_abs_path]) {\n        node[f_abs_path] = optimizedPath.slice(0, optimizedPath.index).concat(key);\n    }\n\n    parent[key] = node;\n\n    return node;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/insertNode.js","var arr = new Array(2);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\nvar getSize = require('../../support/getSize');\nvar createHardlink = require('../createHardlink');\nvar getBoundCacheNode = require('../getBoundCacheNode');\nvar isInternalKey = require('../../support/isInternalKey');\nvar updateNodeAncestors = require('../updateNodeAncestors');\n\n/**\n * Sets a list of PathMaps into a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of @PathMapEnvelopes to set.\n */\n\nmodule.exports = invalidatePathMaps;\n\nfunction invalidatePathMaps(model, pathMapEnvelopes, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var comparator = modelRoot._comparator;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n\n    if (!node) {\n        return false;\n    }\n\n    var pathMapIndex = -1;\n    var parent = node[f_parent] || cache;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n\n        invalidatePathMap(\n            pathMapEnvelope.json, 0, cache, parent, node,\n            version, expired, lru, comparator, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    if (cache[f_version] === version) {\n        modelRoot.version = version;\n        return true;\n    }\n\n    return false;\n}\n\nfunction invalidatePathMap(\n    pathMap, depth, root, parent, node, version,\n    expired, lru, comparator, expireImmediate) {\n\n    if (!pathMap || typeof pathMap !== 'object' || pathMap.$type) {\n        return;\n    }\n\n    for (var key in pathMap) {\n        if (!isInternalKey(key)) {\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n            invalidateNode(\n                root, parent, node,\n                key, child, branch, false, version, expired,\n                lru, comparator, expireImmediate\n            );\n            var nextNode = arr[0];\n            var nextParent = arr[1];\n            if (nextNode) {\n                if (branch) {\n                    invalidatePathMap(\n                        child, depth + 1,\n                        root, nextParent, nextNode,\n                        version, expired, lru, comparator, expireImmediate\n                    );\n                } else {\n                    updateNodeAncestors(nextNode, getSize(nextNode), lru, version);\n                }\n            }\n        }\n    }\n}\n\nfunction invalidateReference(\n    value, root, nodeArg, version,\n    expired, lru, comparator, expireImmediate) {\n\n    var node = nodeArg;\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[f_context];\n\n    if (node != null) {\n        parent = node[f_parent] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            invalidateNode(\n                root, parent, node,\n                key, value, branch, true, version,\n                expired, lru, comparator, expireImmediate\n            );\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n}\n\nfunction invalidateNode(\n    root, parentArg, nodeArg,\n    key, value, branch, reference, version,\n    expired, lru, comparator, expireImmediate) {\n\n    var node = nodeArg;\n    var parent = parentArg;\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        invalidateReference(\n            value, root, node, version, expired,\n            lru, comparator, expireImmediate\n        );\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new Error('`null` is not allowed in branch key positions.');\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/invalidatePathMaps.js","var $now = require('../values/expires-now');\nvar getType = require('../support/getType');\nvar getSize = require('../support/getSize');\nvar getTimestamp = require('../support/getTimestamp');\n\nvar wrapNode = require('./wrapNode');\nvar isExpired = require('./isExpired');\nvar expireNode = require('./expireNode');\nvar insertNode = require('./insertNode');\nvar replaceNode = require('./replaceNode');\nvar reconstructPath = require('./reconstructPath');\nvar updateNodeAncestors = require('./updateNodeAncestors');\nvar removeNodeAndDescendants = require('./removeNodeAndDescendants');\n\nmodule.exports = mergeValueOrInsertBranch;\n\nfunction mergeValueOrInsertBranch(\n    parentArg, nodeArg, key, value,\n    branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var node = nodeArg;\n    var parent = parentArg;\n    var cType = getType(node, reference);\n\n    if (branch || reference) {\n        if (cType && isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge if it expires immediately\n             */\n            true)) {\n            expireNode(node, expired, lru);\n            cType = node.$expires === $now ? cType : 'expired';\n        }\n        if ((cType && cType !== $ref) || (!node || typeof node !== 'object')) {\n            node = replaceNode(node, {}, parent, key, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    } else {\n        var message = value;\n        var isDistinct = true;\n        var mType = getType(message);\n\n        // If both the cache and message are primitives,\n        // insert the message into the cache.\n        if (!cType && !mType) {\n            isDistinct = true;\n        }\n        // Compare the current cache value with the new value. If either of\n        // them don't have a timestamp, or the message's timestamp is newer,\n        // replace the cache value with the message value. If a comparator\n        // is specified, the comparator takes precedence over timestamps.\n        else if (comparator) {\n            isDistinct = !(comparator.length < 3 ?\n                comparator(node, message) : comparator(node, message,\n                    optimizedPath.slice(0, optimizedPath.index))\n            );\n        } else {\n            // Comparing either Number or undefined to undefined always results in false.\n            isDistinct = getTimestamp(message) < getTimestamp(node) === false;\n        }\n\n        if (isDistinct) {\n\n            if (errorSelector && mType === $error) {\n                message = errorSelector(reconstructPath(requestedPath, key), message);\n            }\n\n            var sizeOffset = getSize(node) - getSize(message =\n                wrapNode(message, mType, mType ? message.value : message));\n\n            node = replaceNode(node, message, parent, key, lru, version);\n            parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/mergeValueOrInsertBranch.js","/**\n * Reconstructs the path for the current key, from currentPath (requestedPath)\n * state maintained during set/merge walk operations.\n *\n * During the walk, since the requestedPath array is updated after we attempt to\n * merge/insert nodes during a walk (it reflects the inserted node's parent branch)\n * we need to reconstitute a path from it.\n *\n * @param  {Array} currentPath The current requestedPath state, during the walk\n * @param  {String} key        The current key value, during the walk\n * @return {Array} A new array, with the path which represents the node we're about\n * to insert\n */\nmodule.exports = reconstructPath;\n\nfunction reconstructPath(currentPath, key) {\n\n    var path = currentPath.slice(0, currentPath.depth);\n    path[path.length] = key;\n\n    return path;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/reconstructPath.js","var transferBackReferences = require('./transferBackReferences');\nvar removeNodeAndDescendants = require('./removeNodeAndDescendants');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = replaceNode;\n\nfunction replaceNode(node, replacement, parent, key, lru, version) {\n    if (node === replacement) {\n        return node;\n    } else if (!(!node || typeof node !== 'object')) {\n        transferBackReferences(node, replacement);\n        removeNodeAndDescendants(node, parent, key, lru);\n        updateBackReferenceVersions(replacement, version);\n    }\n\n    parent[key] = replacement;\n    return replacement;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/replaceNode.js","var isArray = Array.isArray;\nvar now = require('../support/now');\nvar clone = require('./../support/clone');\nvar getSize = require('./../support/getSize');\nvar getExpires = require('../support/getExpires');\nvar expiresNow = require('../values/expires-now');\n\nvar atomSize = 50;\n\nmodule.exports = wrapNode;\n\nfunction wrapNode(nodeArg, typeArg, value) {\n\n    var size = 0;\n    var node = nodeArg;\n    var type = typeArg;\n\n    if (type) {\n        var modelCreated = node[f_wrapped_value];\n        node = clone(node);\n        size = getSize(node);\n        node.$type = type;\n        node[f_prev] = undefined;\n        node[f_next] = undefined;\n        node[f_wrapped_value] = modelCreated || false;\n    } else {\n        node = { $type: $atom, value: value };\n        node[f_prev] = undefined;\n        node[f_next] = undefined;\n        node[f_wrapped_value] = true;\n    }\n\n    if (value == null) {\n        size = atomSize + 1;\n    } else if (size == null || size <= 0) {\n        switch (typeof value) {\n            case 'object':\n                if (isArray(value)) {\n                    size = atomSize + value.length;\n                } else {\n                    size = atomSize + 1;\n                }\n                break;\n            case 'string':\n                size = atomSize + value.length;\n                break;\n            default:\n                size = atomSize + 1;\n                break;\n        }\n    }\n\n    var expires = getExpires(node);\n\n    if (typeof expires === 'number' && expires < expiresNow) {\n        node.$expires = now() + (expires * -1);\n    }\n\n    node.$size = size;\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/wrapNode.js","var createErrorClass = require('./createErrorClass');\n\nmodule.exports = createErrorClass('CircularReferenceError', function(referencePath) {\n    this.message = 'Encountered circular reference ' + JSON.stringify(referencePath);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/CircularReferenceError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'An exception was thrown when making a request';\n\n/**\n * InvalidSourceError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidSourceError', function(error) {\n    this.message = MESSAGE + ':\\n\\t' + error;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidSourceError.js","module.exports = lruSplice;\n\nfunction lruSplice(lru, node) {\n\n    // Its in the cache.  Splice out.\n    var prev = node[f_prev];\n    var next = node[f_next];\n    if (next) {\n        next[f_prev] = prev;\n    }\n    if (prev) {\n        prev[f_next] = next;\n    }\n    node[f_prev] = node[f_next] = undefined;\n\n    if (node === lru[f_head]) {\n        lru[f_head] = next;\n    }\n    if (node === lru[f_tail]) {\n        lru[f_tail] = prev;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/splice.js","var Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar $$observable = require('symbol-observable').default;\n\nmodule.exports = Source;\n\nfunction Source(subscribe) {\n    if (!subscribe) {\n        return;\n    }\n    switch (typeof subscribe) {\n        case 'object':\n            this.source = subscribe;\n            break;\n        case 'function':\n            this.source = { subscribe: subscribe };\n            break;\n    }\n}\n\nSource.prototype[$$observable] = function() {\n    return this;\n}\n\nSource.prototype.operator = function(destination) {\n    return this.subscribe(destination);\n}\n\n// Unused\n// Source.prototype.lift = function(operator, source) {\n//     source = new Source(source || this);\n//     source.operator = operator;\n//     source._promise = this._promise;\n//     return source;\n// }\n\nSource.prototype.subscribe = function(destination, x, y) {\n    return new Subscription([\n        this.operator.call(\n            this.source, !(destination instanceof Subscriber) ?\n                new Subscriber(destination, x, y) : destination)\n    ]);\n}\n\nSource.prototype.then = function then(onNext, onError) {\n    /* global Promise */\n    var source = this;\n    if (!this._promise) {\n        this._promise = new global['Promise'](function(resolve, reject) {\n            var values = [], rejected = false;\n            source.subscribe({\n                next: function(value) { values[values.length] = value; },\n                error: function(errors) { (rejected = true) && reject(errors); },\n                complete: function() {\n                    !rejected &&\n                    resolve(values.length <= 1 ? values[0] : values);\n                }\n            });\n        });\n    }\n    return this._promise.then(onNext, onError);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Source.js","var empty = {\n    dispose: function() {},\n    unsubscribe: function() {}\n};\n\nfunction ImmediateScheduler() {}\n\nImmediateScheduler.prototype.schedule = function schedule(action) {\n    action();\n    return empty;\n};\n\nmodule.exports = ImmediateScheduler;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/schedulers/ImmediateScheduler.js","var isObject = require('./../support/isObject');\n\nmodule.exports = isJSONEnvelope;\n\nfunction isJSONEnvelope(envelope) {\n    return isObject(envelope) && ('json' in envelope);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isJSONEnvelope.js","var isArray = Array.isArray;\nvar isObject = require('./../support/isObject');\n\nmodule.exports = isJSONGraphEnvelope;\n\nfunction isJSONGraphEnvelope(envelope) {\n    return isObject(envelope) && isArray(envelope.paths) && (\n        isObject(envelope.jsonGraph) ||\n        isObject(envelope.jsong) ||\n        isObject(envelope.json) ||\n        isObject(envelope.values) ||\n        isObject(envelope.value)\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isJSONGraphEnvelope.js","module.exports = Date.now;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/now.js","module.exports = 1;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/values/expires-never.js","module.exports = require(\"@graphistry/falcor-path-utils/lib/collapse\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/collapse\"\n// module id = 55\n// module chunks = 0","var Model = require('./Model');\nvar FalcorJSON = require('./cache/get/json/FalcorJSON');\n\nfunction falcor(opts) {\n    if (!(this instanceof Model)) {\n        return new Model(opts);\n    }\n    Model.call(this, opts);\n}\n\nfalcor.prototype = Object.create(Model.prototype);\n\nfalcor['Model'] = Model;\nfalcor['FalcorJSON'] = FalcorJSON;\nfalcor['toProps'] = FalcorJSON.prototype.toProps;\n\nmodule.exports = falcor;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/index.js","var Call = require('./request/Call');\nvar ModelRoot = require('./ModelRoot');\nvar FalcorJSON = require('./cache/get/json/FalcorJSON');\nvar ModelDataSourceAdapter = require('./ModelDataSourceAdapter');\nvar TimeoutScheduler = require('./schedulers/TimeoutScheduler');\nvar ImmediateScheduler = require('./schedulers/ImmediateScheduler');\nvar collapse = require('@graphistry/falcor-path-utils/lib/collapse');\n\nvar getSize = require('./support/getSize');\nvar isObject = require('./support/isObject');\nvar isJSONEnvelope = require('./support/isJSONEnvelope');\nvar getCachePosition = require('./cache/getCachePosition');\nvar isJSONGraphEnvelope = require('./support/isJSONGraphEnvelope');\n\nvar setCache = require('./cache/set/setPathMaps');\nvar setJSONGraphs = require('./cache/set/setJSONGraphs');\n\nvar getJSON = require('./cache/get/json');\nvar getCache = require('./cache/getCache');\nvar getJSONGraph = require('./cache/get/jsonGraph');\n\nmodule.exports = Model;\n\n/**\n * This callback is invoked when the Model's cache is changed.\n * @callback Model~onChange\n */\n\n /**\n * This function is invoked on every JSONGraph Error retrieved from the DataSource. This function allows Error objects to be transformed before being stored in the Model's cache.\n * @callback Model~errorSelector\n * @param {Object} jsonGraphError - the JSONGraph Error object to transform before it is stored in the Model's cache.\n * @returns {Object} the JSONGraph Error object to store in the Model cache.\n */\n\n /**\n * This function is invoked every time a value in the Model cache is about to be replaced with a new value. If the function returns true, the existing value is replaced with a new value and the version flag on all of the value's ancestors in the tree are incremented.\n * @callback Model~comparator\n * @param {Object} existingValue - the current value in the Model cache.\n * @param {Object} newValue - the value about to be set into the Model cache.\n * @returns {Boolean} the Boolean value indicating whether the new value and the existing value are equal.\n */\n\n/**\n * A Model object is used to execute commands against a {@link JSONGraph} object. {@link Model}s can work with a local JSONGraph cache, or it can work with a remote {@link JSONGraph} object through a {@link DataSource}.\n * @constructor\n * @param {?Object} options - a set of options to customize behavior\n * @param {?DataSource} options.source - a data source to retrieve and manage the {@link JSONGraph}\n * @param {?JSONGraph} options.cache - initial state of the {@link JSONGraph}\n * @param {?number} options.maxSize - the maximum size of the cache. This value roughly correlates to item count (where itemCount = maxSize / 50). Each item by default is given a metadata `$size` of 50 (or its length when it's an array or string). You can get better control of falcor's memory usage by tweaking `$size`\n * @param {?number} options.collectRatio - the ratio of the maximum size to collect when the maxSize is exceeded\n * @param {?Model~errorSelector} options.errorSelector - a function used to translate errors before they are returned\n * @param {?Model~onChange} options.onChange - a function called whenever the Model's cache is changed\n * @param {?Model~comparator} options.comparator - a function called whenever a value in the Model's cache is about to be replaced with a new value.\n */\nfunction Model(opts) {\n\n    var options = opts || {};\n\n    this._node = options._node;\n    this._path = options._path || [];\n    this._source = options.source || options._source;\n    this._root = options._root || new ModelRoot(options, this);\n    this._recycleJSON = options.recycleJSON === true || options._recycleJSON;\n    this._scheduler = options.scheduler || options._scheduler || new ImmediateScheduler();\n\n    if (options._seed) {\n        this._recycleJSON = true;\n        this._seed = options._seed;\n        this._treatErrorsAsValues = true;\n    } else if (this._recycleJSON) {\n        this._treatErrorsAsValues = true;\n        this._seed = {};\n        this._seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    this._boxed = options.boxed === true || options._boxed || false;\n    this._materialized = options.materialized === true || options._materialized || false;\n    this._treatErrorsAsValues = options.treatErrorsAsValues === true || options._treatErrorsAsValues || false;\n    this._allowFromWhenceYouCame = options.allowFromWhenceYouCame === true || options._allowFromWhenceYouCame || false;\n\n    if (options.cache) {\n        this.setCache(options.cache);\n    }\n}\n\nModel.prototype.constructor = Model;\n\n/**\n * The get method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model}. The get method loads each value into a JSON object and returns in a ModelResponse.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - the requested data as JSON\n */\nModel.prototype.get = function get(...args) {\n    var seed = this._seed;\n    if (!seed) {\n        seed = {};\n        seed.__proto__ = FalcorJSON.prototype;\n    }\n    return new Call('get', this, args)._toJSON(seed, []);\n}\n\n/**\n * Sets the value at one or more places in the JSONGraph model. The set method accepts one or more {@link PathValue}s, each of which is a combination of a location in the document and the value to place there.  In addition to accepting  {@link PathValue}s, the set method also returns the values after the set operation is complete.\n * @function\n * @return {ModelResponse.<JSONEnvelope>} - an {@link Observable} stream containing the values in the JSONGraph model after the set was attempted\n */\nModel.prototype.set = function set(...args) {\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n    return new Call('set', this, args)._toJSON(seed, []);\n}\n\n/**\n * The preload method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model} and loads them into the Model cache.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - a ModelResponse that completes when the data has been loaded into the cache.\n */\nModel.prototype.preload = function preload(...args) {\n    return new Call('get', this, args)._toJSON(null, []);\n}\n\n/**\n * Invokes a function in the JSON Graph.\n * @function\n * @param {Path} functionPath - the path to the function to invoke\n * @param {Array.<Object>} args - the arguments to pass to the function\n * @param {Array.<PathSet>} refPaths - the paths to retrieve from the JSON Graph References in the message returned from the function\n * @param {Array.<PathSet>} thisPaths - the paths to retrieve from function's this object after successful function execution\n * @return {ModelResponse.<JSONEnvelope> - a JSONEnvelope contains the values returned from the function\n */\n\nModel.prototype.call = function call(...args) {\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n    return new Call('call', this, args)._toJSON(seed, []);\n}\n\n/**\n * The invalidate method synchronously removes several {@link Path}s or {@link PathSet}s from a {@link Model} cache.\n * @function\n * @param {...PathSet} path - the  paths to remove from the {@link Model}'s cache.\n */\nModel.prototype.invalidate = function invalidate(...args) {\n    return new Call('invalidate', this, args)._toJSON(null, null).then();\n}\n\n/**\n * Returns a new {@link Model} bound to a location within the {@link\n * JSONGraph}. The bound location is never a {@link Reference}: any {@link\n * Reference}s encountered while resolving the bound {@link Path} are always\n * replaced with the {@link Reference}s target value. For subsequent operations\n * on the {@link Model}, all paths will be evaluated relative to the bound\n * path. Deref allows you to:\n * - Expose only a fragment of the {@link JSONGraph} to components, rather than\n *   the entire graph\n * - Hide the location of a {@link JSONGraph} fragment from components\n * - Optimize for executing multiple operations and path looksup at/below the\n *   same location in the {@link JSONGraph}\n * @method\n * @param {Object} responseObject - an object previously retrieved from the\n * Model\n * @return {Model} - the dereferenced {@link Model}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.deref = require('./deref');\n\n/**\n * A dereferenced model can become invalid when the reference from which it was\n * built has been removed/collected/expired/etc etc.  To fix the issue, a request\n * from the parent should be made (no parent, then from the root) for a valid\n * path and re-dereference performed to update where the model is bound.\n *\n * @method\n * @private\n * @return {Boolean} - If the currently deref'd model is still considered a\n * valid deref.\n */\nModel.prototype._hasValidParentReference = require('./deref/hasValidParentReference');\n\n/**\n * Get data for a single {@link Path}.\n * @param {Path} path - the path to retrieve\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     getValue('user.name').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.getValue = function getValue(path) {\n    return new Call('get', this, [path])\n        ._toJSON({}, [])\n        .lift(function(subscriber) {\n            return this.subscribe({\n                onNext: function(data) {\n                    var depth = -1;\n                    var x = data.json;\n                    var length = path.length;\n                    while (x && !x.$type && ++depth < length) {\n                        x = x[path[depth]];\n                    }\n                    subscriber.onNext(x);\n                },\n                onError: subscriber.onError.bind(subscriber),\n                onCompleted: subscriber.onCompleted.bind(subscriber)\n            })\n        });\n}\n\n/**\n * Set value for a single {@link Path}.\n * @param {Path} path - the path to set\n * @param {Object} value - the value to set\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     setValue('user.name', 'Jim').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.setValue = function setValue(path, value) {\n    path = arguments.length === 1 ? path.path : path;\n    value = arguments.length === 1 ? path : {path:path,value:value};\n    return new Call('set', this, [value])\n        ._toJSON({}, [])\n        .lift(function(subscriber) {\n            return this.subscribe({\n                onNext: function(data) {\n                    var depth = -1;\n                    var x = data.json;\n                    var length = path.length;\n                    while (x && !x.$type && ++depth < length) {\n                        x = x[path[depth]];\n                    }\n                    subscriber.onNext(x);\n                },\n                onError: subscriber.onError.bind(subscriber),\n                onCompleted: subscriber.onCompleted.bind(subscriber)\n            })\n        });\n}\n\n/**\n * Set the local cache to a {@link JSONGraph} fragment. This method can be a useful way of mocking a remote document, or restoring the local cache from a previously stored state.\n * @param {JSONGraph} jsonGraph - the {@link JSONGraph} fragment to use as the local cache\n */\nModel.prototype.setCache = function modelSetCache(cacheOrJSONGraphEnvelope) {\n\n    var modelRoot = this._root;\n    var cache = modelRoot.cache;\n\n    if (cacheOrJSONGraphEnvelope !== cache) {\n\n        var options = {\n            _path: [],\n            _boxed: false,\n            _root: modelRoot,\n            _materialized: false,\n            _treatErrorsAsValues: false\n        };\n\n        modelRoot.cache = this._node = {};\n\n        if (typeof cache !== 'undefined') {\n            modelRoot.expired = [];\n            modelRoot[f_head] = undefined;\n            modelRoot[f_tail] = undefined;\n            if (this._recycleJSON) {\n                this._seed = {};\n                this._seed.__proto__ = FalcorJSON.prototype;\n            }\n        }\n\n        var results, rootOnChangeHandler;\n        if (isJSONGraphEnvelope(cacheOrJSONGraphEnvelope)) {\n            results = setJSONGraphs(options, [cacheOrJSONGraphEnvelope]);\n        } else if (isJSONEnvelope(cacheOrJSONGraphEnvelope)) {\n            results = setCache(options, [cacheOrJSONGraphEnvelope]);\n        } else if (isObject(cacheOrJSONGraphEnvelope)) {\n            results = setCache(options, [{ json: cacheOrJSONGraphEnvelope }]);\n        }\n\n        if (results) {\n            // performs promotion without producing output.\n            if (results[0].length) {\n                getJSON(options, results[0], null, false, false);\n            }\n            if (results[2] && (rootOnChangeHandler = modelRoot.onChange)) {\n                rootOnChangeHandler.call(modelRoot.topLevelModel);\n            }\n        }\n    } else if (typeof cache === 'undefined') {\n        this._root.cache = {};\n    }\n    return this;\n};\n\n/**\n * Get the local {@link JSONGraph} cache. This method can be a useful to store the state of the cache.\n * @param {...Array.<PathSet>} [pathSets] - The path(s) to retrieve. If no paths are specified, the entire {@link JSONGraph} is returned.\n * @return {JSONGraph} all of the {@link JSONGraph} data in the {@link Model} cache.\n * @example\n // Storing the boxshot of the first 10 titles in the first 10 genreLists to local storage.\n localStorage.setItem('cache', JSON.stringify(model.getCache('genreLists[0...10][0...10].boxshot')));\n */\nModel.prototype.getCache = function _getCache(...paths) {\n\n    if (paths.length === 0) {\n        return getCache(this, this._root.cache);\n    }\n\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n\n    var env = getJSONGraph({\n        _path: [],\n        _root: this._root,\n        _boxed: this._boxed,\n        _materialized: this._materialized,\n        _treatErrorsAsValues: this._treatErrorsAsValues\n    }, paths, seed).data;\n\n    env.paths = collapse(paths);\n\n    return env;\n};\n\n/**\n * Retrieves a number which is incremented every single time a value is changed underneath the Model or the object at an optionally-provided Path beneath the Model.\n * @param {Path?} path - a path at which to retrieve the version number\n * @return {Number} a version number which changes whenever a value is changed underneath the Model or provided Path\n */\nModel.prototype.getVersion = function getVersion(path) {\n    path = path || [];\n    if (Array.isArray(path) === false) {\n        throw new Error('Model#getVersion must be called with an Array path.');\n    }\n    if (this._path.length) {\n        path = this._path.concat(path);\n    }\n    return this._getVersion(this, path);\n};\n\n/* eslint-disable guard-for-in */\nModel.prototype._clone = function cloneModel(opts) {\n    var clone = new Model(this);\n    if (opts) {\n        for (var key in opts) {\n            var value = opts[key];\n            if (value === 'delete') {\n                delete clone[key];\n            } else if (key === '_path') {\n                clone[key] = value;\n                if (false === opts.hasOwnProperty('_node')) {\n                    delete clone['_node'];\n                }\n            } else {\n                clone[key] = value;\n            }\n        }\n    }\n    if (clone._path.length > 0) {\n        clone.setCache = void 0;\n    }\n    return clone;\n};\n/* eslint-enable */\n\n/**\n * Returns a clone of the {@link Model} that enables batching. Within the configured time period, paths for get operations are collected and sent to the {@link DataSource} in a batch. Batching can be more efficient if the {@link DataSource} access the network, potentially reducing the number of HTTP requests to the server.\n * @param {?Scheduler|number} schedulerOrDelay - Either a {@link Scheduler} that determines when to send a batch to the {@link DataSource}, or the number in milliseconds to collect a batch before sending to the {@link DataSource}. If this parameter is omitted, then batch collection ends at the end of the next tick.\n * @return {Model} a Model which schedules a batch of get requests to the DataSource.\n */\nModel.prototype.batch = function batch(schedulerOrDelay) {\n\n    var scheduler;\n\n    if (typeof schedulerOrDelay === 'number') {\n        scheduler = new TimeoutScheduler(Math.round(Math.abs(schedulerOrDelay)));\n    } else if (!schedulerOrDelay) {\n        scheduler = new TimeoutScheduler(1);\n    } else if (typeof schedulerOrDelay.schedule === 'function') {\n        scheduler = schedulerOrDelay;\n    } else if (typeof schedulerOrDelay === 'function') {\n        scheduler = { scheudle: schedulerOrDelay };\n    }\n\n    return this._clone({ _scheduler: scheduler });\n};\n\n/**\n * Returns a clone of the {@link Model} that disables batching. This is the default mode. Each get operation will be executed on the {@link DataSource} separately.\n * @name unbatch\n * @memberof Model.prototype\n * @function\n * @return {Model} a {@link Model} that batches requests of the same type and sends them to the data source together\n */\nModel.prototype.unbatch = function unbatch() {\n    return this._clone({ _scheduler: new ImmediateScheduler() });\n};\n\n/**\n * Returns a clone of the {@link Model} that treats errors as values. Errors will be reported in the same callback used to report data. Errors will appear as objects in responses, rather than being sent to the {@link Observable~onErrorCallback} callback of the {@link ModelResponse}.\n * @return {Model}\n */\nModel.prototype.treatErrorsAsValues = function treatErrorsAsValues() {\n    return this._clone({ _treatErrorsAsValues: true });\n};\n\n/**\n * Adapts a Model to the {@link DataSource} interface.\n * @return {DataSource}\n * @example\nvar model =\n    new falcor.Model({\n        cache: {\n            user: {\n                name: 'Steve',\n                surname: 'McGuire'\n            }\n        }\n    }),\n    proxyModel = new falcor.Model({ source: model.asDataSource() });\n\n// Prints 'Steve'\nproxyModel.getValue('user.name').\n    then(function(name) {\n        console.log(name);\n    });\n */\nModel.prototype.asDataSource = function asDataSource() {\n    return new ModelDataSourceAdapter(this);\n};\n\nModel.prototype._materialize = function materialize() {\n    return this._clone({\n        _materialized: true\n    });\n};\n\nModel.prototype._dematerialize = function dematerialize() {\n    return this._clone({\n        _materialized: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that boxes values returning the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the value inside it. This allows any metadata attached to the wrapper to be inspected.\n * @return {Model}\n */\nModel.prototype.boxValues = function boxValues() {\n    return this._clone({\n        _boxed: true\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that unboxes values, returning the value inside of the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the wrapper itself. This is the default mode.\n * @return {Model}\n */\nModel.prototype.unboxValues = function unboxValues() {\n    return this._clone({\n        _boxed: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that only uses the local {@link JSONGraph} and never uses a {@link DataSource} to retrieve missing paths.\n * @return {Model}\n */\nModel.prototype.withoutDataSource = function withoutDataSource() {\n    return this._clone({\n        _source: 'delete'\n    });\n};\n\n/* implement inspect method for node's inspect utility */\nModel.prototype.inspect = function inspect() {\n    return '{ v: ' + this.getVersion() + ' p: [' + this._path.join(', ') + '] }';\n}\n\nModel.prototype.toJSON = function toJSON() {\n    return {\n        $type: 'ref',\n        value: this.getPath()\n    };\n};\n\n/**\n * Returns the {@link Path} to the object within the JSON Graph that this Model references.\n * @return {Path}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.getPath = function getPath() {\n    return this._path.slice(0);\n};\n\n/**\n * This one is actually private.  I would not use this without talking to\n * jhusain, sdesai, or michaelbpaulson (github).\n * @private\n */\nModel.prototype._fromWhenceYouCame = function fromWhenceYouCame(allow) {\n    return this._clone({\n        _allowFromWhenceYouCame: allow === undefined ? true : allow\n    });\n};\n\nModel.prototype._optimizePath = function _optimizePath(path) {\n    var node = getCachePosition(this._root.cache, path);\n    var abs_path = node && node[f_abs_path] || [];\n    return abs_path.slice(0);\n};\n\nModel.prototype._getVersion = require('./cache/getVersion');\nModel.prototype._getPathValuesAsPathMap = getJSON;\nModel.prototype._getPathValuesAsJSONG = getJSONGraph;\n\nModel.prototype._setPathValues = require('./cache/set/setPathValues');\nModel.prototype._setPathMaps = require('./cache/set/setPathMaps');\nModel.prototype._setJSONGs = require('./cache/set/setJSONGraphs');\nModel.prototype._setCache = require('./cache/set/setPathMaps');\n\nModel.prototype._invalidatePathValues = require('./cache/invalidate/invalidatePathSets');\nModel.prototype._invalidatePathMaps = require('./cache/invalidate/invalidatePathMaps');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Model.js","function ModelDataSourceAdapter(model) {\n    this._model = model\n        // .boxValues()\n        ._materialize().treatErrorsAsValues();\n}\n\nModelDataSourceAdapter.prototype.get = function get(pathSets) {\n    return this._model.get.apply(this._model, pathSets)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.set = function set(jsongResponse) {\n    return this._model.set(jsongResponse)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.call = function call(path, args, suffixes, paths) {\n    return this._model.call.apply(this._model, [\n        path, args, suffixes\n    ].concat(paths))._toJSONG();\n};\n\nmodule.exports = ModelDataSourceAdapter;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ModelDataSourceAdapter.js","var functionTypeof = 'function';\nvar Requests = require('./request/Queue');\nvar getTimestamp = require('./support/getTimestamp');\n\nfunction ModelRoot(o, model) {\n\n    var options = o || {};\n\n    this.cache = {};\n    this.version = -1;\n    this.syncRefCount = 0;\n    this.maxRetryCount = 10;\n    this.topLevelModel = model;\n    this.requests = new Requests(this);\n    this.expired = options.expired || [];\n\n    this.collectRatio = 0.75;\n    this.maxSize = Math.pow(2, 53) - 1;\n\n    if (typeof options.collectRatio === 'number') {\n        this.collectRatio = options.collectRatio;\n    }\n\n    if (typeof options.maxSize === 'number') {\n        this.maxSize = options.maxSize;\n    }\n\n    if (typeof options.comparator === functionTypeof) {\n        this.comparator = options.comparator;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.errorSelector === functionTypeof) {\n        this.errorSelector = options.errorSelector;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.onChange === functionTypeof) {\n        this.onChange = options.onChange;\n    }\n\n    if (typeof options.onChangesCompleted === functionTypeof) {\n        this.onChangesCompleted = options.onChangesCompleted;\n    }\n}\n\nfunction defaultCompare(node, message) {\n    var cType = node && node.$type;\n    var mType = message && message.$type;\n    if (cType) {\n        // If the cache has a type, but the message is a primitive,\n        // the message might be the primitive response from the datasource.\n        // If so, return true, so we don't update the back-reference versions.\n        if (!mType) {\n            return node.value === message;\n        }\n        // If the message is older than the cache node, then isDistinct = false\n        else if (getTimestamp(message) < getTimestamp(node) === true) {\n            return true; // isDistinct = false\n        }\n        // Otherwise they are the same if all the following fields are the same.\n        return !(\n            cType !== mType ||\n            node.value !== message.value ||\n            node.$expires !== message.$expires\n        );\n    }\n    // If cache doesn't have a type but the message\n    // does, they must be different.\n    else if (mType) {\n        return false;\n    }\n    return node === message;\n}\n\nModelRoot.comparator = ModelRoot.prototype.comparator = defaultCompare;\n\nmodule.exports = ModelRoot;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ModelRoot.js","var getJSON = require('../get/json');\nvar getJSONGraph = require('../get/jsonGraph');\n\nmodule.exports = { json: json, jsonGraph: jsonGraph };\n\nfunction json(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue =  getJSON(model, thisPaths, data, progressive, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [\n            path, args, suffixes, thisPaths\n        ]\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed,\n            _materialized: model._materialized,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, thisPaths, data, true, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [\n            path, args, suffixes, thisPaths\n        ]\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/call/index.js","module.exports = {\n    json: require('./json/getJSON'),\n    jsonGraph: require('./jsonGraph/getJSONGraph')\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/index.js","var clone = require('../../clone');\n\nmodule.exports = onError;\n\nfunction onError(node, depth, results,\n                 requestedPath, fromReference, boxValues) {\n\n    var index = -1;\n    var length = depth + !!fromReference; // depth + 1 if fromReference === true\n    var errorPath = new Array(length);\n    var errorValue = !boxValues ? node.value : clone(node);\n\n    while (++index < length) {\n        errorPath[index] = requestedPath[index];\n    }\n\n    (results.errors || (results.errors = [])).push({\n        path: errorPath,\n        value: errorValue\n    });\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/onError.js","var arr = new Array(2);\nvar onValue = require('./onValue');\nvar FalcorJSON = require('./FalcorJSON');\nvar isExpired = require('../../isExpired');\nvar onValueType = require('../onValueType');\nvar originalOnMissing = require('../onMissing');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar onMaterialize = require('../onMaterializeFlatBuffer');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar getHashCode = require('@graphistry/falcor-path-utils/lib/getHashCode');\nvar flatBufferToPaths = require('@graphistry/falcor-path-utils/lib/flatBufferToPaths');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, jsonArg, path,\n                                depth, seed, results, requestedPath,\n                                optimizedPath, optimizedLength,\n                                fromReferenceArg, referenceContainer,\n                                modelRoot, expired, expireImmediate,\n                                branchSelector, boxValues, materialized,\n                                hasDataSource, treatErrorsAsValues,\n                                allowFromWhenceYouCame) {\n\n    var json = jsonArg, type, refTarget;\n    var fromReference = fromReferenceArg;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === node ||\n        undefined !== (type = node.$type) ||\n        undefined === path) {\n        arr[1] = hasDataSource && node === undefined;\n        arr[0] = onValueType(node, type, json,\n                             path, depth, seed, results,\n                             requestedPath, depth,\n                             optimizedPath, optimizedLength,\n                             fromReference, modelRoot, expired, expireImmediate,\n                             branchSelector, boxValues, materialized, hasDataSource,\n                             treatErrorsAsValues, onValue, onMissing, onMaterialize);\n        return arr;\n    }\n\n    var f_meta, f_old_keys, f_new_keys, f_code = '';\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        keys = path['$keys'],\n        nodeAbsPath, jsonAbsPath,\n        nextDepth = depth + 1, rangeEnd,\n        nextJSON, nextReferenceContainer,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath, refContainerRefPath;\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[f_abs_path];\n    }\n\n    if (!json || 'object' !== typeof json) {\n        json = undefined;\n    } else if (f_meta = json[f_meta_data]) {\n\n        nodeAbsPath = node[f_abs_path];\n        jsonAbsPath = f_meta[f_meta_abs_path];\n\n        if (!branchSelector && !(json instanceof FalcorJSON)) {\n            json.__proto__ = {};\n            json.__proto__[f_meta_data] = f_meta;\n            json.__proto__.__proto__ = FalcorJSON.prototype;\n        }\n\n        if (!arrayEqual(nodeAbsPath, jsonAbsPath)) {\n            f_meta['$code'] = '';\n            f_meta[f_meta_status] = 'pending';\n            f_meta[f_meta_abs_path] = nodeAbsPath;\n            f_meta[f_meta_version] = node[f_version];\n            refContainerRefPath && (f_meta[f_meta_deref_to] = refContainerRefPath);\n            refContainerAbsPath && (f_meta[f_meta_deref_from] = refContainerAbsPath);\n            if (f_old_keys = f_meta[f_meta_keys]) {\n                f_meta[f_meta_keys] = Object.create(null);\n                for (nextKey in f_old_keys) {\n                    if (f_old_keys[nextKey]) {\n                        delete json[nextKey];\n                    }\n                }\n            }\n            arr[0] = json;\n            arr[1] = true;\n            return arr;\n        } else if (!(\n            f_meta[f_meta_version]  !== node[f_version]  ||\n            f_meta['$code']         !== path['$code'])) {\n            results.hasValue = true;\n            arr[0] = json;\n            arr[1] = false;\n            return arr;\n        }\n\n        f_old_keys = f_meta[f_meta_keys];\n        f_meta[f_meta_abs_path] = nodeAbsPath;\n        f_meta[f_meta_version] = node[f_version];\n        refContainerRefPath && (f_meta[f_meta_deref_to] = refContainerRefPath);\n        refContainerAbsPath && (f_meta[f_meta_deref_from] = refContainerAbsPath);\n    }\n\n    f_new_keys = Object.create(null);\n\n    var keysIndex = -1;\n    var keysLength = keys.length;\n    var nextPath, nextPathKey,\n        hasMissingPath = false;\n\n    iteratingKeyset:\n    while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            f_code = '' + getHashCode('' + f_code + 'null');\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n            nextPathKey = nextKey;\n        }\n        // If the Keyset isn't null or primitive, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n            nextPathKey = '[' + nextKey + '..' + rangeEnd + ']';\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextPath === undefined) {\n\n                walkPathAndBuildOutput(\n                    root, next, nextJSON, nextPath, nextDepth, seed,\n                    results, requestedPath, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined && !materialized) {\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n            else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                    // If the reference is expired, it will be invalidated and\n                    // reported as missing in the next call to walkPath below.\n                    next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                walkPathAndBuildOutput(\n                    root, next, nextJSON, nextPath, nextDepth, seed,\n                    results, requestedPath, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined) {\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = {};\n                f_meta[f_meta_version] = node[f_version];\n                f_meta[f_meta_abs_path] = node[f_abs_path];\n                refContainerRefPath && (f_meta[f_meta_deref_to] = refContainerRefPath);\n                refContainerAbsPath && (f_meta[f_meta_deref_from] = refContainerAbsPath);\n                json = {};\n                json[f_meta_data] = f_meta;\n                json.__proto__ = FalcorJSON.prototype;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                // node creation to them.\n                if (branchSelector) {\n                    json = branchSelector(json);\n                } else {\n                    var tmp = json;\n                    json = {};\n                    json.__proto__ = tmp;\n                    tmp = undefined;\n                }\n            }\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && (nextKey in f_old_keys)) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        f_code = '' + getHashCode('' + f_code +\n                                 ( !hasMissingPath ? nextPathKey : '') +\n                                 (  nextPath ? nextPath['$code'] : ''));\n    }\n\n    if (f_meta) {\n        f_meta['$code'] = f_code;\n        f_meta[f_meta_keys] = f_new_keys;\n        f_meta[f_meta_status] = hasMissingPath && 'pending' || 'resolved';\n        if (f_old_keys) {\n            for (nextKey in f_old_keys) {\n                if (f_old_keys[nextKey]) {\n                    delete json[nextKey];\n                }\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n\n    arr[0] = json;\n    arr[1] = hasMissingPath;\n\n    return arr;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, json, branchSelector,\n                   boxValues, onMaterialize, modelRoot) {\n\n    if (reportMaterialized) {\n        return onMaterialize(json, path, depth, depth, branchSelector,\n                             boxValues, modelRoot, results, requestedPath, optimizedPath,\n                             optimizedLength, fromReference, reportMissing, onMissing);\n    }\n\n    var paths = path ? flatBufferToPaths(path) : [[]];\n    var rPath = requestedPath.slice(0, requestedLength);\n\n    return paths.forEach(function(restPath) {\n        requestedLength = depth + restPath.length;\n        return originalOnMissing(rPath.concat(restPath), depth, results,\n                                 requestedPath, requestedLength, fromReference,\n                                 optimizedPath, optimizedLength, reportMissing,\n                                 false, json, branchSelector,\n                                 boxValues, onMaterialize, modelRoot);\n    });\n}\n\nfunction arrayEqual(xs, ys) {\n    if (xs === ys) {\n        return true;\n    }\n    var len = xs.length;\n    if (len !== ys.length) {\n        return false;\n    }\n    while (~--len) {\n        if (xs[len] !== ys[len]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/walkFlatBuffer.js","var arr = new Array(2);\nvar isArray = Array.isArray;\nvar onValue = require('./onValue');\nvar onMissing = require('../onMissing');\nvar FalcorJSON = require('./FalcorJSON');\nvar onValueType = require('../onValueType');\nvar isExpired = require('../../isExpired');\nvar onMaterialize = require('../onMaterialize');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, jsonArg, path,\n                                depth, seed, results,\n                                requestedPath, requestedLength,\n                                optimizedPath, optimizedLength,\n                                fromReferenceArg, referenceContainer,\n                                modelRoot, expired, expireImmediate,\n                                branchSelector, boxValues, materialized,\n                                hasDataSource, treatErrorsAsValues,\n                                allowFromWhenceYouCame) {\n\n    var json = jsonArg, type, refTarget;\n    var fromReference = fromReferenceArg;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (\n        type = node.$type) || (\n        depth === requestedLength)) {\n        arr[1] = hasDataSource && node === undefined;\n        arr[0] = onValueType(node, type, json,\n                             path, depth, seed, results,\n                             requestedPath, requestedLength,\n                             optimizedPath, optimizedLength,\n                             fromReference, modelRoot, expired, expireImmediate,\n                             branchSelector, boxValues, materialized, hasDataSource,\n                             treatErrorsAsValues, onValue, onMissing, onMaterialize);\n        return arr;\n    }\n\n    var f_meta;\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        nextJSON, nextReferenceContainer,\n        keysetIndex = -1, keysetLength = 0,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath, refContainerRefPath;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        arr[0] = json;\n        arr[1] = false;\n        return arr;\n    }\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[f_abs_path];\n    }\n\n    if (!json || 'object' !== typeof json) {\n        json = undefined;\n    } else if (f_meta = json[f_meta_data]) {\n        f_meta[f_meta_version] = node[f_version];\n        f_meta[f_meta_abs_path] = node[f_abs_path];\n        refContainerRefPath && (f_meta[f_meta_deref_to] = refContainerRefPath);\n        refContainerAbsPath && (f_meta[f_meta_deref_from] = refContainerAbsPath);\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    var hasMissingPath = false;\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextDepth === requestedLength) {\n\n                walkPathAndBuildOutput(\n                    root, next, nextJSON, path, nextDepth, seed,\n                    results, requestedPath, requestedLength, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined && !materialized) {\n                    continue;\n                }\n            }\n            else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                    // If the reference is expired, it will be invalidated and\n                    // reported as missing in the next call to walkPath below.\n                    next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                walkPathAndBuildOutput(\n                    root, next, nextJSON, path, nextDepth, seed,\n                    results, requestedPath, requestedLength, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                if (arr[1] === true) {\n                    hasMissingPath = true;\n                }\n\n                if ((nextJSON = arr[0]) === undefined) {\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = {};\n                f_meta[f_meta_version] = node[f_version];\n                f_meta[f_meta_abs_path] = node[f_abs_path];\n                refContainerRefPath && (f_meta[f_meta_deref_to] = refContainerRefPath);\n                refContainerAbsPath && (f_meta[f_meta_deref_from] = refContainerAbsPath);\n                json = {};\n                json[f_meta_data] = f_meta;\n                json.__proto__ = FalcorJSON.prototype;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                // node creation to them.\n                if (branchSelector) {\n                    json = branchSelector(json);\n                }\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    if (f_meta) {\n        f_meta[f_meta_status] = hasMissingPath && 'pending' || 'resolved';\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    arr[0] = json;\n    arr[1] = hasMissingPath;\n\n    return arr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/walkPath.js","var arr = new Array(2);\nvar clone = require('../../clone');\nvar inlineValue = require('./inlineValue');\nvar promote = require('../../../lru/promote');\nvar isExpired = require('../../isExpired');\nvar createHardlink = require('../../createHardlink');\nvar CircularReferenceError = require('../../../errors/CircularReferenceError');\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, refArg, modelRoot, seed, expireImmediate) {\n\n    promote(modelRoot, refArg);\n\n    var context,\n        ref = refArg,\n        key, type, depth = 0,\n        node = root, path = ref.value,\n        copy = path, length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[f_context])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                throw new CircularReferenceError(path);\n            }\n            // If the node we land on isn't the existing ref context,\n            // create a hard-link between the reference and the node\n            // it points to.\n            else if (node !== context) {\n                createHardlink(ref, node);\n            }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === $ref) {\n\n                promote(modelRoot, node);\n\n                seed && inlineValue(clone(node), path, length, seed);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n\n    return arr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/getReferenceTarget.js","var clone = require('../../clone');\nvar inlineValue = require('./inlineValue');\n\nmodule.exports = onJSONGraphValue;\n\nfunction onJSONGraphValue(node, type, depth, seed, results,\n                          requestedPath, optimizedPath, optimizedLength,\n                          fromReference, boxValues, materialized) {\n\n    var value = node.value;\n\n    // boxValues always clones the node\n    if (boxValues || !(\n        /**\n         * JSON Graph should always clone:\n         * - refs\n         * - errors\n         * - atoms we didn't create\n         * - atoms we created to wrap Objects\n         **/\n        $ref !== type &&\n        $error !== type &&\n        node[f_wrapped_value] &&\n        'object' !== typeof value)) {\n        value = clone(node);\n    }\n\n    results.hasValue = true;\n    inlineValue(value, optimizedPath, optimizedLength, seed);\n    (seed.paths || (seed.paths = [])).push(\n        requestedPath.slice(0, depth + !!fromReference) // depth + 1 if fromReference === true\n    );\n\n    return value;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/onValue.js","var isArray = Array.isArray;\nvar clone = require('../../clone');\nvar onValue = require('./onValue');\nvar inlineValue = require('./inlineValue');\nvar isExpired = require('../../isExpired');\nvar onValueType = require('../onValueType');\nvar onMaterialize = require('../onMaterialize');\nvar originalOnMissing = require('../onMissing');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, path,\n                                depth, seed, results,\n                                requestedPath, requestedLength,\n                                optimizedPath, optimizedLength,\n                                fromReferenceArg, modelRoot, expired, expireImmediate,\n                                boxValues, materialized, hasDataSource, treatErrorsAsValues) {\n\n    var type, refTarget;\n    var fromReference = fromReferenceArg;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (\n        type = node.$type) || (\n        depth === requestedLength)) {\n        return onValueType(node, type, seed,\n                           path, depth, seed, results,\n                           requestedPath, requestedLength,\n                           optimizedPath, optimizedLength,\n                           fromReference, modelRoot, expired, expireImmediate,\n                           undefined, boxValues, materialized, hasDataSource,\n                           treatErrorsAsValues, onValue, onMissing, onMaterialize);\n    }\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        keysetIndex = -1, keysetLength = 0,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        return undefined;\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            keyset = keysOrRanges[keysetIndex];\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            // If we encounter a ref, inline the reference target and continue\n            // evaluating the path.\n            if (next &&\n                nextDepth < requestedLength &&\n                // If the reference is expired, it will be invalidated and\n                // reported as missing in the next call to walkPath below.\n                next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                // Write the cloned ref value into the jsonGraph at the\n                // optimized path. JSONGraph must always clone references.\n                seed && inlineValue(clone(next), optimizedPath, nextOptimizedLength, seed);\n\n                // Retrieve the reference target and next referenceContainer (if\n                // this reference points to other references) and continue\n                // following the path. If the reference resolves to a missing\n                // path or leaf node, it will be handled in the next call to\n                // walkPath.\n                refTarget = getReferenceTarget(root, next, modelRoot, seed, expireImmediate);\n\n                next = refTarget[0];\n                fromReference = true;\n                nextOptimizedPath = refTarget[1];\n                nextOptimizedLength = nextOptimizedPath.length;\n                refTarget[0] = refTarget[1] = undefined;\n            }\n\n            walkPathAndBuildOutput(\n                root, next, path, nextDepth, seed,\n                results, requestedPath, requestedLength, nextOptimizedPath,\n                nextOptimizedLength, fromReference, modelRoot, expired, expireImmediate,\n                boxValues, materialized, hasDataSource, treatErrorsAsValues\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return undefined;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, seed, branchSelector,\n                   boxValues, onMaterialize, modelRoot) {\n\n    var json, isLeaf;\n\n    if (seed && reportMaterialized) {\n\n        (seed.paths || (seed.paths = [])).push(\n            (isLeaf = 0 === requestedLength - depth) &&\n                                 // depth + 1 if fromReference === true\n                requestedPath.slice(0, depth + !!fromReference) ||\n                requestedPath.slice(0, depth).concat(path\n                    .slice(depth, requestedLength + !!fromReference))\n        );\n\n        json = inlineValue(isLeaf && clone(materializedAtom) || undefined,\n                           optimizedPath, optimizedLength, seed, !isLeaf);\n    }\n\n    return originalOnMissing(path, depth, results,\n                             requestedPath, requestedLength, fromReference,\n                             optimizedPath, optimizedLength, reportMissing,\n                             !isLeaf && reportMaterialized, json,\n                             branchSelector, true, onMaterialize, modelRoot);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/walkPath.js","var clone = require('../clone');\nvar onValueType = require('./onValueType');\nvar FalcorJSON = require('./json/FalcorJSON');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = onMaterializeFlatBuffer;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterializeFlatBuffer(jsonArg, path, depth, length,\n                                 branchSelector, boxValues, modelRoot, results,\n                                 requestedPath, optimizedPath, optimizedLength,\n                                 fromReference, reportMissing, onMissing) {\n\n    var json = jsonArg, type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === path) {\n        onValueType(undefined, undefined, json,\n                    path, depth, undefined, results,\n                    requestedPath, depth, optimizedPath,\n                    optimizedLength, fromReference, modelRoot, undefined,\n                    false, branchSelector, boxValues, false, reportMissing,\n                    false, undefined, onMissing, undefined);\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta, f_old_keys, f_new_keys;\n\n    var nextKey,\n        keyset, keyIsRange,\n        keys = path['$keys'],\n        nextDepth = depth + 1, rangeEnd,\n        nextOptimizedLength = optimizedLength + 1;\n\n    if (!json || 'object' !== typeof json) {\n        json = {};\n        json.__proto__ = FalcorJSON.prototype;\n        json[f_meta_data] = f_meta = {};\n        f_meta['$code'] = '';\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[f_meta_data])) {\n        json[f_meta_data] = f_meta = {};\n        f_meta['$code'] = '';\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n    } else {\n        f_old_keys = f_meta[f_meta_keys];\n        f_meta['$code'] = '';\n        f_meta[f_meta_status] = 'resolved';\n        f_meta[f_meta_version] = modelRoot.version;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n    }\n\n    f_new_keys = Object.create(null);\n\n    var nextPath;\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    iteratingKeyset:\n    while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If the Keyset isn't null or primitive, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && (nextKey in f_old_keys)) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // insert the materialized branch\n            json[nextKey] = onMaterializeFlatBuffer(\n                json[nextKey], nextPath, nextDepth,\n                nextDepth, branchSelector, boxValues, modelRoot, results,\n                requestedPath, optimizedPath, nextOptimizedLength,\n                fromReference, reportMissing, onMissing\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n    }\n\n    f_meta[f_meta_keys] = f_new_keys;\n    if (f_old_keys) {\n        for (nextKey in f_old_keys) {\n            if (f_old_keys[nextKey]) {\n                delete json[nextKey];\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMaterializeFlatBuffer.js","var clone = require('./clone');\nvar isInternal = require('../internal/isInternal');\n\nmodule.exports = getCache;\n\nfunction getCache(model, cache) {\n    return getCacheInternal(cache, {}, model._boxed, model._materialized);\n}\n\nfunction getCacheInternal(node, jsonArg, boxValues, materialized) {\n\n    var json = jsonArg, type, value;\n\n    if (!node || typeof node !== 'object') {\n        return node;\n    } else if (type = node.$type) {\n\n        if (undefined === (value = node.value)) {\n            if (materialized) {\n                value = { $type: $atom };\n            } else if (node[f_wrapped_value]) {\n                value = clone(node);\n            }\n        }\n        // boxValues always clones the node\n        else if (boxValues || !(\n            /**\n             * getCache should always clone:\n             * - refs\n             * - errors\n             * - atoms we didn't create\n             * - atoms we created to wrap Objects\n             **/\n            $ref !== type &&\n            $error !== type &&\n            node[f_wrapped_value] &&\n            typeof value !== 'object')) {\n            value = clone(node);\n        }\n        return value;\n    }\n\n    var keys = Object.keys(node);\n    var keysLen = keys.length, keyIndex = -1;\n\n    while (++keyIndex < keysLen) {\n        var key = keys[keyIndex];\n        if (key !== '$size' && !isInternal(key) && undefined !== (value =\n            getCacheInternal(node[key], json && json[key], boxValues, materialized))) {\n            if (json === undefined) {\n                json = {};\n            }\n            json[key] = value;\n        }\n    }\n\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getCache.js","var getBoundCacheNode = require('./getBoundCacheNode');\n\nmodule.exports = getVersion;\n\nfunction getVersion(model, path) {\n    var node = getBoundCacheNode(model, path);\n    var version = node && node[f_version];\n    return (version == null) ? -1 : version;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getVersion.js","var groupCacheArguments = require('../groupCacheArguments');\n\nmodule.exports = {\n    json: invalidate,\n    jsonGraph: invalidate,\n    invalidatePathMaps: require('./invalidatePathMaps'),\n    invalidatePathValues: require('./invalidatePathSets')\n};\n\nfunction invalidate(model, args, seed, progressive, expireImmediate) {\n    if (invalidateArgumentGroups(model, groupCacheArguments(args), expireImmediate)) {\n        var rootChangeHandler = model._root.onChange;\n        rootChangeHandler && rootChangeHandler.call(model._root.topLevelModel);\n    }\n    return {};\n}\n\nfunction invalidateArgumentGroups(model, xs, expireImmediate) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            if (inputType === 'PathValues') {\n                groupedArgs = groupedArgs.map(pluckPaths);\n            }\n            var operation = module.exports['invalidate' + inputType];\n            if (operation(model, groupedArgs, expireImmediate)) {\n                changed = true;\n            }\n        }\n    }\n    return changed;\n}\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/index.js","var wrapNode = require('./wrapNode');\nvar isExpired = require('./isExpired');\nvar insertNode = require('./insertNode');\nvar expireNode = require('./expireNode');\nvar replaceNode = require('./replaceNode');\nvar getSize = require('../support/getSize');\nvar reconstructPath = require('./reconstructPath');\nvar getTimestamp = require('../support/getTimestamp');\nvar updateNodeAncestors = require('./updateNodeAncestors');\n\nmodule.exports = mergeJSONGraphNode;\n\nfunction mergeJSONGraphNode(\n    parentArg, nodeArg, messageArg, key, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var sizeOffset;\n    var node = nodeArg;\n    var parent = parentArg;\n    var message = messageArg;\n\n    var cType, mType,\n        cIsObject, mIsObject,\n        cTimestamp, mTimestamp;\n\n    // If the cache and message are the same, we can probably return early:\n    // - If they're both nullsy,\n    //   - If null then the node needs to be wrapped in an atom and inserted.\n    //     This happens from whole branch merging when a leaf is just a null value\n    //     instead of being wrapped in an atom.\n    //   - If undefined then return null (previous behavior).\n    // - If they're both branches, return the branch.\n    // - If they're both edges, continue below.\n    if (node === message) {\n\n        // The message and cache are both undefined, return undefined.\n        if (message === undefined) {\n            return message;\n        }\n        // There should not be undefined values. Those should always be\n        // wrapped in an $atom\n        else if (message === null) {\n            node = wrapNode(message, undefined, message);\n            parent = updateNodeAncestors(parent, -node.$size, lru, version);\n            node = insertNode(node, parent, key, undefined, optimizedPath);\n            return node;\n        }\n        // Is the cache node a branch? If so, return the cache branch.\n        else if ((\n            cIsObject = !(!node || typeof node !== 'object')) && (\n            cType = node.$type) === undefined) {\n            // Has the branch been introduced to the cache yet? If not,\n            // give it a parent, key, and absolute path.\n            if (node[f_parent] === undefined) {\n                insertNode(node, parent, key, version, optimizedPath);\n            }\n            return node;\n        }\n    } else if (cIsObject = !(!node || typeof node !== 'object')) {\n        cType = node.$type;\n    }\n\n    // If the cache isn't a reference, we might be able to return early.\n    if (cType !== $ref) {\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n        }\n        if (cIsObject && !cType) {\n            // If the cache is a branch and the message is empty or\n            // also a branch, continue with the cache branch.\n            if (message == null || (mIsObject && !mType)) {\n                return node;\n            }\n        }\n    }\n    // If the cache is a reference, we might not need to replace it.\n    else {\n        // If the cache is a reference, but the message is empty,\n        // leave the cache alone...\n        if (message == null) {\n            // ...unless the cache is an expired reference. In that case, expire\n            // the cache node and return undefined.\n            if (isExpired(node, expireImmediate)) {\n                expireNode(node, expired, lru);\n                return void 0;\n            }\n            return node;\n        }\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n            // If the cache and the message are both references,\n            // check if we need to replace the cache reference.\n            if (mType === $ref) {\n                if (node === message) {\n                    // If the cache and message are the same reference,\n                    // we performed a whole-branch merge of one of the\n                    // grandparents. If we've previously graphed this\n                    // reference, break early. Otherwise, continue to\n                    // leaf insertion below.\n                    if (node[f_parent] != null) {\n                        return node;\n                    }\n                } else {\n\n                    cTimestamp = node.$timestamp;\n                    mTimestamp = message.$timestamp;\n\n                    // - If either the cache or message reference is expired,\n                    //   replace the cache reference with the message.\n                    // - If neither of the references are expired, compare their\n                    //   timestamps. If either of them don't have a timestamp,\n                    //   or the message's timestamp is newer, replace the cache\n                    //   reference with the message reference.\n                    // - If the message reference is older than the cache\n                    //   reference, short-circuit.\n                    if (!isExpired(node, expireImmediate) &&\n                        !isExpired(message, expireImmediate) &&\n                        mTimestamp < cTimestamp) {\n                        return void 0;\n                    }\n                }\n            }\n        }\n    }\n\n    // If the cache is a leaf but the message is a branch,\n    // merge the branch over the leaf.\n    if (cType && mIsObject && !mType) {\n        return insertNode(replaceNode(\n                node, message, parent, key, lru, version),\n            parent, key, undefined, optimizedPath\n        );\n    }\n    // If the message is a sentinel or primitive, insert it into the cache.\n    else if (mType || !mIsObject) {\n\n        if (mType === $error && errorSelector) {\n            message = errorSelector(reconstructPath(requestedPath, key), message);\n        }\n\n        // If the cache and the message are the same value, we branch-merged one\n        // of the message's ancestors. If this is the first time we've seen this\n        // leaf, give the message a $size and $type, attach its graph pointers,\n        // and update the cache sizes and versions.\n        if (mType && node === message) {\n            if (!node[f_parent]) {\n                node = wrapNode(node, cType, node.value);\n                parent = updateNodeAncestors(parent, -node.$size, lru, version);\n                node = insertNode(node, parent, key, version, optimizedPath);\n            }\n        }\n        // If the cache and message are different, the cache value is expired,\n        // or the message is a primitive, replace the cache with the message value.\n        // If the message is a sentinel, clone and maintain its type.\n        // If the message is a primitive value, wrap it in an atom.\n        else {\n            var isDistinct = true;\n            // If both the cache and message are primitives, we branch-merged\n            // one of the message's ancestors. Insert the value into the cache.\n            if (!cType && !mType) {\n                isDistinct = true;\n            }\n            // If the cache is a branch, but the message is a leaf, replace the\n            // cache branch with the message leaf.\n            else if (!cIsObject || !isExpired(node, expireImmediate)) {\n                // Compare the current cache value with the new value. If either of\n                // them don't have a timestamp, or the message's timestamp is newer,\n                // replace the cache value with the message value. If a comparator\n                // is specified, the comparator takes precedence over timestamps.\n                if (comparator) {\n                    isDistinct = !(comparator.length < 3 ?\n                        comparator(node, message) : comparator(node, message,\n                            optimizedPath.slice(0, optimizedPath.index))\n                    );\n                } else {\n                    // Comparing either Number or undefined to undefined always results in false.\n                    isDistinct = getTimestamp(message) < getTimestamp(node) === false;\n                }\n            }\n            if (isDistinct) {\n                sizeOffset = getSize(node) - getSize(message =\n                    wrapNode(message, mType, mType ? message.value : message));\n                node = replaceNode(node, message, parent, key, lru, version);\n                parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n                node = insertNode(node, parent, key, version, optimizedPath);\n            }\n        }\n\n        // Promote the message edge in the LRU.\n        if (isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge.\n             */\n            true)) {\n            expireNode(node, expired, lru);\n        }\n    }\n    else if (node == null) {\n        node = insertNode(message, parent, key, undefined, optimizedPath);\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/mergeJSONGraphNode.js","var getJSON = require('../get/json');\nvar getJSONGraph = require('../get/jsonGraph');\nvar groupCacheArguments = require('../groupCacheArguments');\n\nmodule.exports = {\n    json: json,\n    jsonGraph: jsonGraph,\n    setPathMaps: require('./setPathMaps'),\n    setPathValues: require('./setPathValues'),\n    setJSONGraphs: require('./setJSONGraphs')\n};\n\nfunction json(model, _args, data, progressive, expireImmediate) {\n\n    var set, get, jsong,\n        changed, relative, optimized,\n        missing, fragments, requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args, expireImmediate);\n\n    if ((relative = set.requested).length) {\n\n        if (!(changed = set.changed) || progressive) {\n            get = getJSON(model, relative, data, progressive, expireImmediate);\n        }\n\n        if (changed) {\n\n            jsong = getJSONGraph({\n                _root: model._root,\n                _boxed: model._boxed, _materialized: true,\n                _treatErrorsAsValues: model._treatErrorsAsValues\n            }, set.optimized, {}, progressive, expireImmediate);\n\n            fragments = jsong.data;\n            missing = fragments.paths;\n            requested = jsong.requested;\n\n            var rootChangeHandler = model._root.onChange;\n            rootChangeHandler && rootChangeHandler.call(model._root.topLevelModel);\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: get && get.error,\n        errors: get && get.errors,\n        hasValue: get && get.hasValue\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive, expireImmediate) {\n\n    var set, jsong,\n        changed, relative, optimized,\n        missing, fragments, requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args, expireImmediate);\n\n    if ((relative = set.requested).length && (\n         progressive || (changed = set.changed))) {\n\n        jsong = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed, _materialized: true,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, set.optimized, data, progressive, expireImmediate);\n\n        fragments = jsong.data;\n        missing = fragments.paths;\n        requested = jsong.requested;\n\n        if (changed) {\n            var rootChangeHandler = model._root.onChange;\n            rootChangeHandler && rootChangeHandler.call(model._root.topLevelModel);\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: jsong && jsong.error,\n        hasValue: jsong && jsong.hasValue\n    };\n}\n\nfunction setGroupsIntoCache(model, xs, expireImmediate_) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var modelRoot = model._root;\n    var errorSelector = modelRoot.errorSelector;\n\n    var expireImmediate = expireImmediate_ && !Boolean(model._source);\n    var comparator = Boolean(model._source) ? null : modelRoot.comparator;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            var operation = module.exports['set' + inputType];\n            var results = operation(model, groupedArgs, errorSelector, comparator, expireImmediate);\n            changed = changed || results[2];\n            optimizedPaths.push.apply(optimizedPaths, results[1]);\n            if (inputType === 'PathValues') {\n                requestedPaths.push.apply(requestedPaths, groupedArgs.map(pluckPaths));\n            } else if (inputType === 'JSONGraphs') {\n                requestedPaths.push.apply(requestedPaths, arrayFlatMap(groupedArgs, pluckPaths));\n            } else {\n                requestedPaths.push.apply(requestedPaths, results[0]);\n            }\n        }\n    }\n\n    return {\n        changed: changed,\n        requested: requestedPaths,\n        optimized: optimizedPaths\n    };\n}\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\nfunction arrayFlatMap(array, selector) {\n    var index = -1;\n    var i = -1;\n    var n = array.length;\n    var array2 = [];\n    while (++i < n) {\n        var array3 = selector(array[i], i, array);\n        var j = -1;\n        var k = array3.length;\n        while (++j < k) {\n            array2[++index] = array3[j];\n        }\n    }\n    return array2;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/index.js","module.exports = transferBackReferences;\n\nfunction transferBackReferences(fromNode, destNode) {\n    var fromNodeRefsLength = fromNode[f_refs_length] || 0,\n        destNodeRefsLength = destNode[f_refs_length] || 0,\n        i = -1;\n    while (++i < fromNodeRefsLength) {\n        var ref = fromNode[f_ref + i];\n        if (ref !== undefined) {\n            ref[f_context] = destNode;\n            destNode[f_ref + (destNodeRefsLength + i)] = ref;\n            fromNode[f_ref + i] = undefined;\n        }\n    }\n    destNode[f_refs_length] = fromNodeRefsLength + destNodeRefsLength;\n    fromNode[f_refs_length] = undefined;\n    return destNode;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/transferBackReferences.js","module.exports = unlinkBackReferences;\n\nfunction unlinkBackReferences(node) {\n    var i = -1, n = node[f_refs_length] || 0;\n    while (++i < n) {\n        var ref = node[f_ref + i];\n        if (ref != null) {\n            ref[f_context] = ref[f_ref_index] = node[f_ref + i] = void 0;\n        }\n    }\n    node[f_refs_length] = void 0;\n    return node;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/unlinkBackReferences.js","module.exports = unlinkForwardReference;\n\nfunction unlinkForwardReference(reference) {\n    var destination = reference[f_context];\n    if (destination) {\n        var i = (reference[f_ref_index] || 0) - 1,\n            n = (destination[f_refs_length] || 0) - 1;\n        while (++i <= n) {\n            destination[f_ref + i] = destination[f_ref + (i + 1)];\n        }\n        destination[f_refs_length] = n;\n        reference[f_ref_index] = reference[f_context] = destination = void 0;\n    }\n    return reference;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/unlinkForwardReference.js","module.exports = hasValidParentReference;\n\nfunction hasValidParentReference() {\n    var reference = this._referenceContainer;\n\n    // Always true when this mode is false.\n    if (!this._allowFromWhenceYouCame) {\n        return true;\n    }\n\n    // If fromWhenceYouCame is true and the first set of keys did not have\n    // a reference, this case can happen.  They are always valid.\n    if (reference === true) {\n        return true;\n    }\n\n    // was invalid before even derefing.\n    if (reference === false) {\n        return false;\n    }\n\n    // Its been disconnected (set over or collected) from the graph.\n    if (reference && reference[f_parent] === undefined) {\n        return false;\n    }\n\n    // The reference has expired but has not been collected from the graph.\n    if (reference && reference[f_invalidated]) {\n        return false;\n    }\n\n    return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/deref/hasValidParentReference.js","var CONTAINER_DOES_NOT_EXIST = 'e';\nvar FalcorJSON = require('../cache/get/json/FalcorJSON');\nvar getCachePosition = require('../cache/getCachePosition');\nvar InvalidDerefInputError = require('../errors/InvalidDerefInputError');\n\nmodule.exports = deref;\n\nfunction deref(json) {\n\n    var seed, f_meta;\n\n    if (!json || 'object' !== typeof json || !(\n        f_meta = json[f_meta_data]) || 'object' !== typeof f_meta) {\n        return null;\n    }\n\n    var cacheRoot = this._root.cache;\n    var recycleJSON = this._recycleJSON;\n    var absolutePath = f_meta[f_meta_abs_path];\n    var referenceContainer, currentRefPath, i, len;\n\n    if (!absolutePath) {\n        if (recycleJSON) {\n            seed = { json: json };\n            seed.__proto__ = FalcorJSON.prototype;\n        }\n        return this._clone({\n            _node: undefined,\n            _seed: seed\n        });\n    } else if (absolutePath.length === 0) {\n        if (recycleJSON) {\n            seed = { json: json };\n            seed.__proto__ = FalcorJSON.prototype;\n        }\n        return this._clone({\n            _node: cacheRoot,\n            _path: absolutePath,\n            _referenceContainer: true,\n            _seed: seed\n        });\n    }\n\n    var originalRefPath = f_meta[f_meta_deref_to];\n    var originalAbsPath = f_meta[f_meta_deref_from];\n\n    // We deref and then ensure that the reference container is attached to\n    // the model.\n    var cacheNode = getCachePosition(cacheRoot, absolutePath);\n    var validContainer = CONTAINER_DOES_NOT_EXIST;\n\n    if (originalAbsPath) {\n\n        validContainer = false;\n\n        i = -1;\n        len = originalAbsPath.length;\n        referenceContainer = cacheRoot;\n        while (++i < len) {\n            referenceContainer = referenceContainer[originalAbsPath[i]];\n            if (!referenceContainer || referenceContainer.$type) {\n                break;\n            }\n        }\n\n        // If the reference container is still a sentinel value then compare\n        // the reference value with refPath.  If they are the same, then the\n        // model is still valid.\n        if (originalRefPath && referenceContainer && referenceContainer.$type === $ref) {\n            validContainer = true;\n            len = originalRefPath.length;\n            currentRefPath = referenceContainer.value;\n            for (i = 0; i < len; ++i) {\n                if (currentRefPath[i] !== originalRefPath[i]) {\n                    cacheNode = undefined;\n                    validContainer = false;\n                    break;\n                }\n            }\n        }\n    }\n\n    // Signal to the deref'd model that it has been disconnected from the\n    // graph or there is no _fromWhenceYouCame\n    if (!validContainer) {\n        referenceContainer = false;\n    }\n\n    // The container did not exist, therefore there is no reference\n    // container and fromWhenceYouCame should always return true.\n    else if (validContainer === CONTAINER_DOES_NOT_EXIST) {\n        referenceContainer = true;\n    }\n\n    if (recycleJSON) {\n        seed = { json: json };\n        seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    return this._clone({\n        _seed: seed,\n        _node: cacheNode,\n        _path: absolutePath,\n        _referenceContainer: referenceContainer\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/deref/index.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'It is not legal to use the JSON Graph ' +\n    'format from a bound Model. JSON Graph format' +\n    ' can only be used from a root model.';\n\n/**\n * When a bound model attempts to retrieve JSONGraph it should throw an\n * error.\n *\n * @private\n */\nmodule.exports = createErrorClass('BoundJSONGraphModelError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/BoundJSONGraphModelError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'Deref can only be used with a non-primitive object from get, set, or call.';\n\n/**\n * An invalid deref input is when deref is used with input that is not generated\n * from a get, set, or a call.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidDerefInputError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidDerefInputError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'The boundPath of the model is not valid since a value or error was found before the path end.';\n\n/**\n * An InvalidModelError can only happen when a user binds, whether sync\n * or async to shorted value.  See the unit tests for examples.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidModelError', function(boundPath, shortedPath) {\n    this.message = MESSAGE;\n    this.boundPath = boundPath;\n    this.shortedPath = shortedPath;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidModelError.js","var createErrorClass = require('./createErrorClass');\n\n/**\n * A request can only be retried up to a specified limit.  Once that\n * limit is exceeded, then an error will be thrown.\n *\n * @private\n */\nmodule.exports = createErrorClass('MaxRetryExceededError', function(maxRetryCount, absolute, relative, optimized) {\n    this.message = '' +\n        'Exceeded the max retry count (' + maxRetryCount + ') for these paths: \\n' +\n        (absolute &&\n        'absolute: [\\n\\t' + printPaths(absolute) + '\\n]\\n' || '') +\n        (relative &&\n        'relative: [\\n\\t' + printPaths(relative) + '\\n]\\n' || '') +\n        (optimized &&\n        'optimized: [\\n\\t' + printPaths(optimized) + '\\n]\\n' || '');\n});\n\nfunction printPaths(paths) {\n    return paths.map(function(path) {\n        return JSON.stringify(path);\n    }).join(',\\n\\t');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/MaxRetryExceededError.js","module.exports = String.fromCharCode(30) + 'f_';\n\n\n\n// WEBPACK FOOTER //\n// ./lib/internal/f_.js","var updateNodeAncestors = require('../cache/updateNodeAncestors');\n\nmodule.exports = collect;\n\nfunction collect(lru, expired, totalArg, max, ratioArg, version) {\n\n    var total = totalArg;\n    var ratio = ratioArg;\n\n    if (typeof ratio !== 'number') {\n        ratio = 0.75;\n    }\n\n    var node, size, targetSize = max * ratio;\n\n    while (node = expired.pop()) {\n        total -= (size = node.$size || 0);\n        updateNodeAncestors(node, size, lru, version);\n    }\n\n    if (total >= max) {\n        var prev = lru[f_tail];\n        while ((total >= targetSize) && (node = prev)) {\n            prev = prev[f_prev];\n            total -= (size = node.$size || 0);\n            updateNodeAncestors(node, size, lru, version);\n        }\n\n        lru[f_tail] = node;\n        if (node == null) {\n            lru[f_head] = undefined;\n        } else {\n            node[f_next] = undefined;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/collect.js","var Source = require('./Source');\nvar Subscriber = require('./Subscriber');\nvar lruCollect = require('../lru/collect');\nvar FalcorJSON = require('../cache/get/json/FalcorJSON');\nvar collapse = require('@graphistry/falcor-path-utils/lib/collapse');\nvar InvalidSourceError = require('../errors/InvalidSourceError');\nvar MaxRetryExceededError = require('../errors/MaxRetryExceededError');\n\nmodule.exports = Call;\n\nfunction Call(type, model, _args) {\n    Source.call(this, type);\n    if (model && _args) {\n        this.type = type;\n        this.source = this;\n        this.model = model;\n        this._args = _args;\n    }\n}\n\nCall.prototype = Object.create(Source.prototype);\n\nCall.prototype.lift = function(operator, source) {\n    source = new Call(source || this);\n    source.type = this.type;\n    source.model = this.model;\n    source._args = this._args;\n    source.operator = operator;\n    operator.data = operator.data || this.operator.data;\n    operator.errors = operator.errors || this.operator.errors;\n    operator.operation = operator.operation || this.operator.operation;\n    operator.progressive = operator.progressive || this.operator.progressive;\n    operator.maxRetryCount = operator.maxRetryCount || this.operator.maxRetryCount;\n    return source;\n}\n\nCall.prototype.operator = function(subscriber) {\n    return this._subscribe(subscriber);\n}\n\nCall.prototype._subscribe = function(subscriber) {\n    subscriber.onNext({\n        type: this.type,\n        args: this._args,\n        model: this.model,\n        version: this.model._root.version\n    });\n    subscriber.onCompleted();\n    return subscriber;\n}\n\nCall.prototype._toJSON = function(dataArg, errors) {\n    var data = dataArg;\n    if (data === undefined) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    return this.lift(new CallOperator(\n        data, errors || this.operator.errors, 'json',\n        this.operator.progressive, this.operator.maxRetryCount\n    ), this.source);\n}\n\nCall.prototype._toJSONG = function(dataArg, errors) {\n    var data = dataArg;\n    if (data === undefined) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    return this.lift(new CallOperator(\n        data, errors || this.operator.errors, 'jsonGraph',\n        this.operator.progressive, this.operator.maxRetryCount\n    ), this.source);\n}\n\nCall.prototype.retry = function(maxRetryCount) {\n    return this.lift(new CallOperator(\n        this.operator.data,\n        this.operator.errors,\n        this.operator.operation,\n        this.operator.progresive,\n        maxRetryCount\n    ), this.source);\n}\n\nCall.prototype.progressively = function() {\n    return this.lift(new CallOperator(\n        this.operator.data,\n        this.operator.errors,\n        this.operator.operation,\n        true,\n        this.operator.maxRetryCount\n    ), this.source);\n}\n\nfunction CallOperator(data, errors, operation, progressive, maxRetryCount) {\n    this.data = data;\n    this.errors = errors;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallOperator.prototype.call = function(source, destination) {\n    return source.subscribe(new CallSubscriber(\n        destination, this.data, this.errors, this.operation, this.progressive\n    ));\n}\n\nfunction CallSubscriber(destination, data, errors, operation, progressive, maxRetryCount) {\n    Subscriber.call(this, destination);\n    this.data = data;\n    this.missing = null;\n    this.request = null;\n    this.started = false;\n    this.retryCount = -1;\n    this.errors = errors;\n    this.errored = false;\n    this.relative = null;\n    this.hasValue = false;\n    this.fragments = null;\n    this.requested = null;\n    this.completed = false;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallSubscriber.prototype = Object.create(Subscriber.prototype);\nCallSubscriber.prototype.operations = {\n    get: require('../cache/get'),\n    set: require('../cache/set'),\n    call: require('../cache/call'),\n    invalidate: require('../cache/invalidate')\n};\n\nCallSubscriber.prototype.next =\nCallSubscriber.prototype.onNext = function(seed) {\n\n    if (!this.started) {\n        this.args = seed.args;\n        this.type = seed.type;\n        this.model = seed.model;\n        this.version = seed.version;\n        this.maxRetryCount = this.maxRetryCount || this.model._root.maxRetryCount;\n        return;\n    } else if (!this.destination) {\n        return;\n    }\n\n    var missing, fragments;\n    var type = seed.type;\n    var args = seed.args || seed.paths;\n\n    var data = this.data;\n    var model = this.model;\n    var errors = this.errors;\n    var results = this.results;\n    var version = this.version;\n    var hasValue = this.hasValue;\n    var operation = this.operation;\n    var progressive = this.progressive;\n    var seedIsImmutable = progressive && data;\n\n    if (model._recycleJSON && this.type === 'get') {\n        seedIsImmutable = false;\n    }\n\n    // If we request paths as JSON in progressive mode, ensure each progressive\n    // valueNode is immutable. If not in progressive mode, we can write into the\n    // same JSON tree until the request is completed.\n    if (seedIsImmutable) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n\n    if (args && args.length) {\n\n        results = this.operations[type]\n            [operation](model, args, data,\n                        progressive || !model._source,\n                        this.retryCount === -1);\n\n        // We must communicate critical errors from get, such as bound path is\n        // broken or this is a JSONGraph request with a bound path.\n        if (results.error) {\n            return tryOnError(this, results.error);\n        }\n\n        errors && results.errors &&\n            errors.push.apply(errors, results.errors);\n\n        if (fragments = results.fragments) {\n            args = results.args;\n            this.fragments = fragments;\n        }\n\n        this.relative = results.relative;\n        this.requested = results.requested;\n        this.missing = missing = results.missing;\n        this.hasValue = hasValue || (hasValue = results.hasValue);\n    }\n\n    // We are done when there are no missing paths or\n    // the model does not have a dataSource to fetch from.\n    this.completed = !missing || !model._source;\n\n    if (type !== 'set') {\n        this.args = args;\n        if (seedIsImmutable) {\n            this.data = mergeInto(data, this.data);\n        }\n    }\n\n    if (progressive && hasValue && data && (data.json || data.jsonGraph)) {\n        tryOnNext(data, operation, model._root, this.destination);\n    }\n}\n\nCallSubscriber.prototype.error =\nCallSubscriber.prototype.onError = function(error) {\n    if (error instanceof InvalidSourceError) {\n        return Subscriber.prototype.onError.call(this, error);\n    }\n    this.errored = true;\n    this.onCompleted(error);\n}\n\nCallSubscriber.prototype.complete =\nCallSubscriber.prototype.onCompleted = function(error) {\n\n    if (!this.destination) {\n        return;\n    }\n\n    var data, type, errors, errored;\n\n    if (!this.started && (this.started = true)) {\n        this.onNext(this);\n    } else if (errored = this.errored) {\n        this.onNext({ type: 'get', paths: this.relative });\n    }\n\n    if (errored || this.completed) {\n        if (!this.progressive && this.hasValue && (\n            (data = this.data) && data.json || data.jsonGraph)) {\n            tryOnNext(data, this.operation, this.model._root, this.destination);\n        }\n        errors = this.errors;\n        if (errored || error || errors && errors.length) {\n            return tryOnError(this, errors.length && errors || error);\n        }\n\n        return Subscriber.prototype.onCompleted.call(this);\n    }\n\n    if (++this.retryCount >= this.maxRetryCount) {\n        return tryOnError(this, new MaxRetryExceededError(\n            this.retryCount,\n            this.requested,\n            this.relative,\n            this.missing\n        ));\n    }\n\n    this.request = this.model._root.requests[this.type](\n        this.model, this.missing, this.relative, this.fragments\n    ).subscribe(this);\n}\n\nCallSubscriber.prototype.dispose =\nCallSubscriber.prototype.unsubscribe = function() {\n\n    var model = this.model;\n    var version = this.version;\n    var request = this.request;\n\n    this.args = null;\n    this.data = null;\n    this.model = null;\n    this.errors = null;\n    this.errored = false;\n    this.started = false;\n    this.hasValue = false;\n    this.completed = false;\n\n    Subscriber.prototype.dispose.call(this);\n\n    if (request) {\n        this.request = null;\n        request.dispose();\n    }\n\n    if (model) {\n\n        var modelRoot = model._root;\n        var cache = modelRoot.cache;\n        var shouldCollectCache = modelRoot.syncRefCount <= 0 &&\n                                 version !== modelRoot.version;\n\n        // Prune the cache via the LRU if this is the last request.\n        if (shouldCollectCache) {\n\n            if (cache) {\n                lruCollect(modelRoot,\n                           modelRoot.expired,\n                           cache.$size || 0,\n                           modelRoot.maxSize,\n                           modelRoot.collectRatio,\n                           modelRoot.version);\n            }\n\n            var rootOnChangesCompletedHandler = modelRoot.onChangesCompleted;\n\n            if (rootOnChangesCompletedHandler) {\n                rootOnChangesCompletedHandler.call(modelRoot.topLevelModel);\n            }\n        }\n    }\n}\n\nfunction tryOnNext(data, operation, modelRoot, destination) {\n    if (operation === 'jsonGraph' && data.paths) {\n        data.paths = collapse(data.paths);\n    }\n    try {\n        ++modelRoot.syncRefCount;\n        destination.onNext(data);\n    } catch(e) {\n        throw e;\n    } finally {\n        --modelRoot.syncRefCount;\n    }\n}\n\nfunction tryOnError(self, error) {\n    try {\n        throw error;\n    } catch (err) {\n        Subscriber.prototype.onError.call(self, err);\n    }\n}\n\nfunction mergeInto(dest, node) {\n\n    var destValue, nodeValue,\n        key, keys = Object.keys(node),\n        index = -1, length = keys.length;\n\n    while (++index < length) {\n\n        key = keys[index];\n\n        if (key === f_meta_data) {\n            dest[f_meta_data] = node[f_meta_data];\n        } else {\n\n            nodeValue = node[key];\n            destValue = dest[key];\n\n            if (destValue !== nodeValue) {\n                if (!nodeValue || typeof nodeValue !== 'object') {\n                    if (destValue === undefined) {\n                        dest[key] = nodeValue;\n                    }\n                } else if (destValue === undefined) {\n                    dest[key] = nodeValue;\n                } else {\n                    mergeInto(destValue, nodeValue);\n                }\n            }\n        }\n    }\n\n    return dest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Call.js","var Source = require('./Source');\nvar Request = require('./Request');\nvar Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar ImmediateScheduler = require('../schedulers/ImmediateScheduler');\n\nmodule.exports = Queue;\n\nfunction Queue(modelRoot) {\n    Subscription.call(this, []);\n    this.modelRoot = modelRoot;\n}\n\nQueue.prototype = Object.create(Subscription.prototype);\n\nQueue.prototype.set = isolateSet;\nQueue.prototype.call = isolateCall;\nQueue.prototype.get = batchAndDedupeGet;\n\nfunction isolateSet(model, optimized, requested, env) {\n    var queue = this;\n    return new Source(function(destination) {\n\n        var request = new Request('set', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = env.jsonGraph;\n        request.requested.push(requested);\n        request.optimized.push(optimized);\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction isolateCall(model, optimized, requested, callArgs) {\n    var queue = this;\n    return new Source(function(destination) {\n\n        var request = new Request('call', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = callArgs;\n        request.boundPath = model._path;\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction batchAndDedupeGet(model, optimized, requested) {\n    return new Dedupe(\n        this, model._source, model._scheduler, requested, optimized\n    );\n}\n\nfunction Dedupe(queue, source, scheduler, requested, optimized) {\n    this.queue = queue;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n    this.requested = requested;\n    this.optimized = optimized;\n}\n\nDedupe.prototype.subscribe = function(destination) {\n\n    var queue = this.queue;\n    var source = this.dataSource;\n    var requested = this.requested;\n    var optimized = this.optimized;\n    var scheduler = this.scheduler;\n\n    var requestsIndex = -1;\n    var requests  = queue.subscriptions;\n    var requestsCount = requests.length;\n    var subscription = new Subscription([], destination);\n\n    while (++requestsIndex < requestsCount) {\n\n        var request = requests[requestsIndex];\n\n        if (request.type !== 'get') {\n            continue;\n        }\n\n        if (request = request.batch(requested, optimized, requested = [], optimized = [])) {\n            subscription.add(request.subscribe(new Subscriber(destination, request)));\n        }\n\n        if (!optimized.length) {\n            break;\n        }\n    }\n\n    if (optimized.length) {\n        request = requests[requestsIndex] =\n            new Request('get', queue, source, scheduler).batch(requested, optimized);\n        subscription.add(request.subscribe(new Subscriber(destination, request)));\n        request.connect();\n    }\n\n    return subscription;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Queue.js","var isArray = Array.isArray;\nvar Subject = require('./Subject');\nvar Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar InvalidSourceError = require('../errors/InvalidSourceError');\n\nvar setJSONGraphs = require('../cache/set/setJSONGraphs');\nvar setPathValues = require('../cache/set/setPathValues');\nvar invalidatePaths = require('../cache/invalidate/invalidatePathSets');\n\nvar toPaths = require('@graphistry/falcor-path-utils/lib/toPaths');\nvar toCollapseMap = require('@graphistry/falcor-path-utils/lib/toCollapseMap');\nvar toCollapseTrees = require('@graphistry/falcor-path-utils/lib/toCollapseTrees');\nvar hasIntersection = require('@graphistry/falcor-path-utils/lib/hasIntersection');\n\nmodule.exports = Request;\n\nfunction Request(type, queue, source, scheduler) {\n    Subject.call(this, [], queue);\n    this.trees = [];\n    this.type = type;\n    this.data = null;\n    this.active = false;\n    this.responded = false;\n    this.paths = null;\n    this.requested = [];\n    this.optimized = [];\n    this.disposable = null;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n}\n\nRequest.prototype = Object.create(Subject.prototype);\n\nRequest.prototype.next =\nRequest.prototype.onNext = function(env) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    this.responded = true;\n    /*\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n    */\n\n    var changed = false;\n    var jsonGraph = env.jsonGraph;\n    var boundPath = this.boundPath;\n    var modelRoot = queue.modelRoot;\n    var invalidated = env.invalidated;\n    var paths = env.paths || this.paths;\n    var requested = this.requested.slice(0);\n    var observers = this.observers.slice(0);\n    var rootChangeHandler = modelRoot.onChange;\n\n    // Run invalidations first.\n    if (invalidated && invalidated.length) {\n        changed = invalidatePaths({ _root: modelRoot, _path: [] }, invalidated, false);\n    }\n\n    if (paths && paths.length && !(!jsonGraph || typeof jsonGraph !== 'object')) {\n        var results = setJSONGraphs(\n            { _root: modelRoot },\n            [{ paths: paths, jsonGraph: jsonGraph }],\n            modelRoot.errorSelector, modelRoot.comparator, false\n        );\n        paths = results[0];\n        changed = changed || results[2];\n    }\n\n    if (changed && rootChangeHandler) {\n        rootChangeHandler.call(modelRoot.topLevelModel);\n    }\n\n    observers.forEach(function(observer, index) {\n        observer.onNext({\n            type: 'get', paths: requested[index] ||\n                filterPathsBoundTo(boundPath, paths)\n        });\n    });\n}\n\nRequest.prototype.error =\nRequest.prototype.onError = function(error) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    error = error || {};\n\n    // Converts errors to object we can insert into the cache.\n    error = !(error instanceof Error) ?\n        // if it's $type error, use it raw\n        error.$type === $error && error ||\n        // Otherwise make it an error\n        { $type: $error, value: error } :\n        // If it's instanceof Error, pluck error.message\n        { $type: $error, value: { message: error.message }};\n\n    var modelRoot = queue.modelRoot;\n\n    var errorPathValues = toPaths(toCollapseTrees(\n        this.requested.reduce(function(collapseMap, paths) {\n            return toCollapseMap(paths, collapseMap);\n        }, {})\n    ))\n    .map(function(path) { return { path: path, value: error }; });\n\n    if (errorPathValues.length) {\n        setPathValues(\n            { _root: modelRoot, _path: [] },\n            errorPathValues,\n            modelRoot.errorSelector,\n            modelRoot.comparator,\n            false\n        );\n    }\n\n    Subject.prototype.onError.call(this, error);\n}\n\nRequest.prototype.complete =\nRequest.prototype.onCompleted = function() {\n    if (this.responded === false) {\n        this.onNext({});\n    }\n    Subject.prototype.onCompleted.call(this);\n}\n\nRequest.prototype.remove = function(subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.trees.splice(index, 1);\n        this.requested.splice(index, 1);\n        this.optimized.splice(index, 1);\n        this.observers.splice(index, 1);\n        this.subscriptions.splice(index, 1);\n    }\n    if (this.subscriptions.length === 0) {\n        this.dispose();\n    }\n    return this;\n}\n\nRequest.prototype.dispose =\nRequest.prototype.unsubscribe = function () {\n    this.trees = [];\n    this.data = null;\n    this.paths = null;\n    this.active = false;\n    this.boundPath = null;\n    this.requested = [];\n    this.optimized = [];\n    var queue = this.parent;\n    if (queue) {\n        this.parent = null;\n        queue.remove(this);\n    }\n    var disposable = this.disposable;\n    if (disposable) {\n        this.disposable = null;\n        if (disposable.dispose) {\n            disposable.dispose();\n        } else if (disposable.unsubscribe) {\n            disposable.unsubscribe();\n        }\n    }\n    Subject.prototype.dispose.call(this);\n}\n\nRequest.prototype.connect = function() {\n    if (!this.active && !this.disposable) {\n        var scheduledDisposable = this.scheduler.schedule(flush.bind(this));\n        if (!this.disposable) {\n            this.disposable = scheduledDisposable;\n        }\n    }\n    return this;\n}\n\nRequest.prototype.batch = function(requested, optimized,\n                                   requestedComplements,\n                                   optimizedComplements) {\n    if (this.active) {\n        var requestedIntersection = [];\n        var optimizedIntersection = [];\n        if (findIntersections(this.trees,\n                              requested, optimized,\n                              requestedComplements,\n                              optimizedComplements,\n                              requestedIntersection,\n                              optimizedIntersection)) {\n            this.requested.push(requestedIntersection);\n            this.optimized.push(optimizedIntersection);\n            this.trees.push(toCollapseTrees(toCollapseMap(\n                optimizedIntersection\n            )));\n            return this;\n        }\n        return null;\n    }\n    this.trees.push({});\n    this.requested.push(requested);\n    this.optimized.push(optimized);\n    return this;\n}\n\nfunction flush() {\n\n    var obs, paths = this.paths = toPaths(toCollapseTrees(\n        this.optimized.reduce(function(collapseMap, paths) {\n            return toCollapseMap(paths, collapseMap);\n        }, {})\n    ));\n\n    this.trees = this.optimized.map(function(paths) {\n        return toCollapseTrees(toCollapseMap(paths));\n    });\n\n    this.active = true;\n\n    try {\n        switch (this.type) {\n            case 'get':\n                obs = this.dataSource.get(paths);\n                break;\n            case 'set':\n                obs = this.dataSource.set({ paths: paths, jsonGraph: this.data });\n                break;\n            case 'call':\n                obs = this.dataSource.call.apply(this.dataSource, this.data);\n                break;\n        }\n        this.disposable = obs.subscribe(this);\n    } catch (e) {\n        this.disposable = {};\n        Subject.prototype.onError.call(this, new InvalidSourceError(e));\n    }\n}\nfunction findIntersections(trees,\n                           requested, optimized,\n                           requestedComplements,\n                           optimizedComplements,\n                           requestedIntersection,\n                           optimizedIntersection) {\n\n    var index = -1;\n    var complementIndex = -1;\n    var reqComplementsIdx = -1;\n    var intersectionIndex = -1;\n    var reqIntersectionIdx = -1;\n    var treesLength = trees.length;\n    var optTotal = optimized.length;\n    var reqTotal = requested.length - 1;\n\n    toNextPath:\n    while (++index < optTotal) {\n\n        var treesIndex = -1;\n        var path = optimized[index];\n        var pathLen = path.length;\n\n        while (++treesIndex < treesLength) {\n            var tree = trees[treesIndex];\n            var subTree = tree[pathLen];\n            if (subTree && hasIntersection(subTree, path, 0, pathLen)) {\n                optimizedIntersection[++intersectionIndex] = path;\n                if (reqIntersectionIdx < reqTotal) {\n                    requestedIntersection[++reqIntersectionIdx] = requested[\n                        index < reqTotal ? index : reqTotal\n                    ];\n                }\n                continue toNextPath;\n            }\n        }\n\n        optimizedComplements[++complementIndex] = path;\n        if (reqComplementsIdx < reqTotal) {\n            requestedComplements[++reqComplementsIdx] = requested[\n                index < reqTotal ? index : reqTotal\n            ];\n        }\n    }\n\n    return ~intersectionIndex;\n}\n\nfunction filterPathsBoundTo(boundPath, paths) {\n\n    var boundLength;\n\n    if (!boundPath || (boundLength = boundPath.length) === 0) {\n        return paths;\n    }\n\n    var filtered = [], filteredIndex = -1, keyIndex;\n    var path, pathsIndex = -1, pathsCount = paths.length;\n\n    outer: while (++pathsIndex < pathsCount) {\n        path = paths[pathsIndex];\n        if (path.length > boundLength) {\n            keyIndex = 0;\n            do {\n                if (path[keyIndex] !== boundPath[keyIndex]) {\n                    continue outer;\n                }\n            } while (++keyIndex < boundLength);\n            filtered[++filteredIndex] = path.slice(boundLength);\n        }\n    }\n\n    return filtered;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Request.js","var Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\n\nmodule.exports = Subject;\n\nfunction Subject(observers, parent) {\n    Subscriber.call(this, null, parent);\n    this.observers = observers || [];\n}\n\nSubject.prototype = Object.create(Subscriber.prototype);\n\n// Unused\n// Subject.prototype.onNext = function(value) {\n//     this.observers.slice(0).forEach(function(observer) {\n//         observer.onNext(value);\n//     });\n// }\n\nSubject.prototype.onError = function(error) {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function(observer) {\n        observer.onError(error);\n    });\n}\n\nSubject.prototype.onCompleted = function() {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function(observer) {\n        observer.onCompleted();\n    });\n}\n\nSubject.prototype.subscribe = function(subscriber) {\n    this.observers.push(subscriber);\n    this.subscriptions.push(subscriber = new Subscription([subscriber], this));\n    return subscriber;\n}\n\nSubject.prototype.dispose =\nSubject.prototype.unsubscribe = function () {\n    this.observers = [];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subject.js","function TimeoutScheduler(delay) {\n    this.delay = delay;\n}\n\nvar TimerDisposable = function TimerDisposable(id) {\n    this.id = id;\n    this.disposed = false;\n};\n\nTimeoutScheduler.prototype.schedule = function schedule(action) {\n    return new TimerDisposable(setTimeout(action, this.delay));\n};\n\nTimerDisposable.prototype.dispose =\nTimerDisposable.prototype.unsubscribe = function() {\n    if (!this.disposed) {\n        clearTimeout(this.id);\n        this.id = null;\n        this.disposed = true;\n    }\n};\n\nmodule.exports = TimeoutScheduler;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/schedulers/TimeoutScheduler.js","var isArray = Array.isArray;\nvar isInternal = require('../internal/isInternal');\n\nmodule.exports = clone;\n\nfunction clone(source) {\n    var dest = source;\n    if (!(!dest || typeof dest !== 'object')) {\n        dest = isArray(source) ? [] : {};\n        for (var key in source) {\n            if (isInternal(key)) {\n                continue;\n            }\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/clone.js","var isObject = require('./isObject');\nmodule.exports = getSize;\n\nfunction getSize(node) {\n    return isObject(node) && node.$expires || undefined;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getExpires.js","var isObject = require('./../support/isObject');\n\nmodule.exports = getType;\n\nfunction getType(node, anyType) {\n    var type = isObject(node) && node.$type || void 0;\n    if (anyType && type) {\n        return 'branch';\n    }\n    return type;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getType.js","var isArray = Array.isArray;\nvar isObject = require('./../support/isObject');\n\nmodule.exports = isPathValue;\n\nfunction isPathValue(pathValue) {\n    return isObject(pathValue) && (\n        isArray(pathValue.path) || (\n            typeof pathValue.path === 'string'\n        ));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isPathValue.js","module.exports = require('./lib/index');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ptaylor/graphistry/falcor/~/symbol-observable/index.js\n// module id = 94\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = require('./ponyfill');\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ptaylor/graphistry/falcor/~/symbol-observable/lib/index.js\n// module id = 95\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ptaylor/graphistry/falcor/~/symbol-observable/lib/ponyfill.js\n// module id = 96\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 97\n// module chunks = 0","module.exports = require(\"@graphistry/falcor-path-utils/lib/computeFlatBufferHash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/computeFlatBufferHash\"\n// module id = 98\n// module chunks = 0","module.exports = require(\"@graphistry/falcor-path-utils/lib/flatBufferToPaths\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/flatBufferToPaths\"\n// module id = 99\n// module chunks = 0","module.exports = require(\"@graphistry/falcor-path-utils/lib/getHashCode\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/getHashCode\"\n// module id = 100\n// module chunks = 0","module.exports = require(\"@graphistry/falcor-path-utils/lib/hasIntersection\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/hasIntersection\"\n// module id = 101\n// module chunks = 0","module.exports = require(\"@graphistry/falcor-path-utils/lib/toCollapseMap\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/toCollapseMap\"\n// module id = 102\n// module chunks = 0","module.exports = require(\"@graphistry/falcor-path-utils/lib/toCollapseTrees\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/toCollapseTrees\"\n// module id = 103\n// module chunks = 0","module.exports = require(\"@graphistry/falcor-path-utils/lib/toFlatBuffer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/toFlatBuffer\"\n// module id = 104\n// module chunks = 0","module.exports = require(\"@graphistry/falcor-path-utils/lib/toPaths\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/toPaths\"\n// module id = 105\n// module chunks = 0"],"sourceRoot":""}