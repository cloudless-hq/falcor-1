{"version":3,"sources":["webpack:///falcor.node.min.js","webpack:///webpack/bootstrap 7e761371508c317a8b8e","webpack:///./lib/cache/isExpired.js","webpack:///./lib/cache/expireNode.js","webpack:///./lib/cache/get/json/FalcorJSON.js","webpack:///./lib/errors/NullInPathError.js","webpack:///./lib/errors/createErrorClass.js","webpack:///./lib/support/isObject.js","webpack:///./lib/cache/clone.js","webpack:///./lib/cache/createHardlink.js","webpack:///./lib/support/getSize.js","webpack:///./lib/cache/getCachePosition.js","webpack:///./lib/cache/updateNodeAncestors.js","webpack:///./lib/errors/InvalidKeySetError.js","webpack:///./lib/lru/promote.js","webpack:///./lib/request/Subscriber.js","webpack:///./lib/request/Subscription.js","webpack:///./lib/cache/get/onValueType.js","webpack:///./lib/cache/getBoundCacheNode.js","webpack:///./lib/cache/removeNodeAndDescendants.js","webpack:///./lib/cache/set/setJSONGraphs.js","webpack:///./lib/cache/set/setPathMaps.js","webpack:///./lib/support/isInternalKey.js","webpack:///external \"@graphistry/falcor-path-utils/lib/support/materializedAtom\"","webpack:///./lib/cache/get/json/index.js","webpack:///./lib/cache/get/jsonGraph/index.js","webpack:///./lib/cache/get/jsonGraph/inlineValue.js","webpack:///./lib/cache/get/onMissing.js","webpack:///./lib/cache/invalidate/invalidatePathSets.js","webpack:///./lib/cache/removeNode.js","webpack:///./lib/cache/set/setPathValues.js","webpack:///./lib/internal/isInternal.js","webpack:///./lib/support/getTimestamp.js","webpack:///./lib/values/expires-now.js","webpack:///(webpack)/buildin/global.js","webpack:///external \"@graphistry/falcor-path-utils/lib/iterateKeySet\"","webpack:///./lib/cache/get/json/getJSON.js","webpack:///./lib/cache/get/json/getReferenceTarget.js","webpack:///./lib/cache/get/json/onValue.js","webpack:///./lib/cache/get/jsonGraph/getJSONGraph.js","webpack:///./lib/cache/get/onMaterialize.js","webpack:///./lib/cache/groupCacheArguments.js","webpack:///./lib/cache/insertNode.js","webpack:///./lib/cache/invalidate/invalidatePathMaps.js","webpack:///./lib/cache/mergeValueOrInsertBranch.js","webpack:///./lib/cache/reconstructPath.js","webpack:///./lib/cache/replaceNode.js","webpack:///./lib/cache/updateBackReferenceVersions.js","webpack:///./lib/cache/wrapNode.js","webpack:///./lib/errors/CircularReferenceError.js","webpack:///./lib/errors/InvalidSourceError.js","webpack:///./lib/lru/collect.js","webpack:///./lib/lru/splice.js","webpack:///./lib/request/Source.js","webpack:///./lib/schedulers/ImmediateScheduler.js","webpack:///./lib/support/isJSONEnvelope.js","webpack:///./lib/support/isJSONGraphEnvelope.js","webpack:///./lib/support/now.js","webpack:///./lib/values/expires-never.js","webpack:///external \"@graphistry/falcor-path-utils/lib/collapse\"","webpack:///./lib/index.js","webpack:///./lib/Model.js","webpack:///./lib/ModelDataSourceAdapter.js","webpack:///./lib/ModelRoot.js","webpack:///./lib/cache/call/index.js","webpack:///./lib/cache/get/index.js","webpack:///./lib/cache/get/json/onError.js","webpack:///./lib/cache/get/json/walkFlatBuffer.js","webpack:///./lib/cache/get/json/walkPath.js","webpack:///./lib/cache/get/jsonGraph/getReferenceTarget.js","webpack:///./lib/cache/get/jsonGraph/onValue.js","webpack:///./lib/cache/get/jsonGraph/walkPath.js","webpack:///./lib/cache/get/onMaterializeFlatBuffer.js","webpack:///./lib/cache/getCache.js","webpack:///./lib/cache/getVersion.js","webpack:///./lib/cache/invalidate/index.js","webpack:///./lib/cache/mergeJSONGraphNode.js","webpack:///./lib/cache/set/index.js","webpack:///./lib/cache/transferBackReferences.js","webpack:///./lib/cache/unlinkBackReferences.js","webpack:///./lib/cache/unlinkForwardReference.js","webpack:///./lib/deref/hasValidParentReference.js","webpack:///./lib/deref/index.js","webpack:///./lib/errors/BoundJSONGraphModelError.js","webpack:///./lib/errors/InvalidDerefInputError.js","webpack:///./lib/errors/InvalidModelError.js","webpack:///./lib/errors/MaxRetryExceededError.js","webpack:///./lib/internal/f_.js","webpack:///./lib/request/Call.js","webpack:///./lib/request/Queue.js","webpack:///./lib/request/Request.js","webpack:///./lib/request/Subject.js","webpack:///./lib/schedulers/TimeoutScheduler.js","webpack:///./lib/support/array-flat-map.js","webpack:///./lib/support/clone.js","webpack:///./lib/support/getExpires.js","webpack:///./lib/support/getType.js","webpack:///./lib/support/isPathValue.js","webpack:///./~/symbol-observable/index.js","webpack:///./~/symbol-observable/lib/index.js","webpack:///./~/symbol-observable/lib/ponyfill.js","webpack:///(webpack)/buildin/module.js","webpack:///external \"@graphistry/falcor-path-utils/lib/computeFlatBufferHash\"","webpack:///external \"@graphistry/falcor-path-utils/lib/flatBufferToPaths\"","webpack:///external \"@graphistry/falcor-path-utils/lib/getHashCode\"","webpack:///external \"@graphistry/falcor-path-utils/lib/hasIntersection\"","webpack:///external \"@graphistry/falcor-path-utils/lib/toCollapseMap\"","webpack:///external \"@graphistry/falcor-path-utils/lib/toCollapseTrees\"","webpack:///external \"@graphistry/falcor-path-utils/lib/toFlatBuffer\"","webpack:///external \"@graphistry/falcor-path-utils/lib/toPaths\""],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","__webpack_require__.i","value","d","__webpack_require__.d","name","getter","Object","defineProperty","configurable","enumerable","get","n","__webpack_require__.n","__esModule","getDefault","getModuleExports","o","__webpack_require__.o","object","property","prototype","hasOwnProperty","p","s","now","$now","$never","module.exports","node","expireImmediate","exp","undefined","splice","expired","lru","global","FalcorJSON","f_meta","bindArrayMethod","fn","bound","arguments","getInst","inst","typeofInst","argsLen","typeofString","typeofObject","toJSON","serialize","toProps","f_meta_inst","f_meta_json","version","json","serializer","includeMetadata","createWithProto","count","total","keys","key","xs","isArray","$code","abs_path","deref_to","deref_from","ys","reduce","descriptors","writable","Array","toString","JSON","$__hash","$__path","$__version","createErrorClass","message","MESSAGE","init","E","Error","constructor","stack","E.is","x","objTypeof","isInternal","clone","index","length","from","to","backRefs","isObject","getCachePosition","cache","path","type","depth","maxDepth","removeNode","updateBackReferenceVersions","nodeArg","offset","child","keysOrRanges","mesage","EXPIRES_NEVER","root","head","prev","next","Subscriber","destination","parent","onCompleted","Subscription","error","onError","onNext","complete","Subscriber.prototype.onNext","dest","Subscriber.prototype.onError","signaled","dispose","Subscriber.prototype.onCompleted","Subscriber.prototype.unsubscribe","subscriptions","Subscription.prototype.add","subscription","push","Subscription.prototype.remove","indexOf","Subscription.prototype.unsubscribe","isExpired","expireNode","lruPromote","onValueType","seed","results","requestedPath","requestedLength","optimizedPath","optimizedLength","fromReference","modelRoot","branchSelector","boxValues","materialized","reportMissing","treatErrorsAsValues","onValue","onMissing","onMaterialize","reportMaterialized","getBoundCacheNode","model","isInternalKey","removeNodeAndDescendants","key2","setJSONGraphPathSet","messageRoot","messageParent","requestedPaths","optimizedPaths","comparator","errorSelector","note","branch","keySet","iterateKeySet","optimizedIndex","setNode","nextNode","nextParent","nextOptimizedPath","reference","container","createHardlink","arr","NullInPathError","mergeJSONGraphNode","jsonGraphEnvelopes","initialVersion","jsonGraphEnvelopeIndex","jsonGraphEnvelopeCount","jsonGraphEnvelope","paths","jsonGraph","pathIndex","pathCount","newVersion","rootChangeHandler","setPathMap","pathMap","itr","keyIndex","keyCount","mergeValueOrInsertBranch","pathMapEnvelopes","pathMapIndex","pathMapCount","pathMapEnvelope","require","inlineJSONGraphValue","curr","keyset","restPathIndex","restPath","restPathCount","isEmptyKeySet","rangeEnd","mPath","lastKeyIsNull","isRequestedPath","missingPaths","missTotal","missingPath","missDepth","Number","invalidatePathSet","invalidateNode","updateNodeAncestors","getSize","lruSplice","unlinkBackReferences","unlinkForwardReference","setPathSet","pathValues","pathValueIndex","pathValueCount","pathValue","f_","regexp","RegExp","g","Function","eval","e","window","walkPathAndBuildOutput","walkFlatBufferAndBuildOutput","InvalidModelError","toFlatBuffer","computeFlatBufferHash","getJSON","progressive","referenceContainer","boundPath","isFlatBuffer","data","recycleJSON","hasDataSource","Boolean","allowFromWhenceYouCame","pathsIndex","pathsCount","requested","boundRequested","len","promote","CircularReferenceError","getReferenceTarget","ref","context","copy","onJSONValue","BoundJSONGraphModelError","getJSONGraph","materializedAtom","nextDepth","keysetIndex","keysetLength","iteratingKeyset","nextKey","keyIsRange","InvalidKeySetError","typeofNumber","isPathValue","isJSONEnvelope","isJSONGraphEnvelope","groupCacheArguments","args","groups","argIndex","argCount","group","groupType","arg","argType","inputType","invalidatePathMap","getType","getTimestamp","wrapNode","insertNode","replaceNode","reconstructPath","cType","mType","sizeOffset","currentPath","transferBackReferences","replacement","getExpires","expiresNow","typeArg","size","modelCreated","$type","atomSize","expires","referencePath","totalArg","max","ratioArg","ratio","shouldUpdate","targetSize","Source","subscribe","source","$$observable","default","Source.prototype.operator","Source.prototype.subscribe","y","operator","Source.prototype.then","_promise","resolve","reject","values","rejected","errors","then","ImmediateScheduler","empty","unsubscribe","ImmediateScheduler.prototype.schedule","action","envelope","Date","falcor","opts","Model","options","_node","_path","_source","_root","ModelRoot","_recycleJSON","_scheduler","_seed","_treatErrorsAsValues","__proto__","_boxed","_materialized","_allowFromWhenceYouCame","setCache","Call","ModelDataSourceAdapter","TimeoutScheduler","collapse","lruCollect","setJSONGraphs","getCache","Model.prototype.get","_len","_key","_toJSON","Model.prototype.set","_len2","_key2","Model.prototype.preload","_len3","_key3","Model.prototype.call","_len4","_key4","Model.prototype.invalidate","_len5","_key5","Model.prototype.getValue","lift","subscriber","Model.prototype.setValue","Model.prototype.setCache","cacheOrJSONGraphEnvelope","Model.prototype.getCache","env","Model.prototype.getVersion","concat","_getVersion","Model.prototype._clone","Model.prototype.batch","schedulerOrDelay","scheduler","Math","scheudle","_clone","Model.prototype.unbatch","Model.prototype.treatErrorsAsValues","Model.prototype.asDataSource","Model.prototype._materialize","Model.prototype._dematerialize","Model.prototype.boxValues","Model.prototype.unboxValues","Model.prototype.withoutDataSource","Model.prototype.toJSON","getPath","Model.prototype.getPath","slice","Model.prototype._fromWhenceYouCame","allow","Model.prototype._optimizePath","_model","ModelDataSourceAdapter.prototype.get","pathSets","apply","_toJSONG","ModelDataSourceAdapter.prototype.set","jsongResponse","set","ModelDataSourceAdapter.prototype.call","suffixes","syncRefCount","maxRetryCount","topLevelModel","requests","Requests","collectRatio","maxSize","functionTypeof","onChange","onChangesCompleted","defaultCompare","_args","hasValue","missing","thisPaths","fragments","errorPath","errorValue","refTarget","f_old_keys","f_new_keys","f_code","nextJSON","nextReferenceContainer","nextOptimizedLength","optimizedLengthNext","refContainerAbsPath","refContainerRefPath","nodeAbsPath","jsonAbsPath","keysIndex","keysLength","nextPath","nextPathKey","hasMissingPath","getHashCode","tmp","flatBufferToPaths","rPath","originalOnMissing","inlineValue","onJSONGraphValue","isLeaf","onMaterializeFlatBuffer","_copyCache","out","fromKey","cacheNext","outNext","isUserCreatedcacheNext","clonedValue","boxedValue","invalidate","groupIndex","groupCount","groupedArgs","pluckPaths","invalidatePathMaps","invalidatePathValues","cIsObject","mIsObject","cTimestamp","mTimestamp","isDistinct","setGroupsIntoCache","changed","operation","arrayFlatMap","optimized","relative","jsong","setPathMaps","setPathValues","fromNode","destNode","fromNodeRefsLength","destNodeRefsLength","hasValidParentReference","_referenceContainer","cacheRoot","absolutePath","originalRefPath","originalAbsPath","cacheNode","validContainer","CONTAINER_DOES_NOT_EXIST","currentRefPath","shortedPath","printPaths","absolute","String","CallOperator","CallSubscriber","retryCount","completed","tryOnNext","tryOnError","self","err","mergeInto","destValue","nodeValue","InvalidSourceError","MaxRetryExceededError","Call.prototype.lift","Call.prototype.operator","_subscribe","Call.prototype._subscribe","Call.prototype._toJSON","Call.prototype._toJSONG","Call.prototype.retry","progresive","Call.prototype.progressively","CallOperator.prototype.call","CallSubscriber.prototype.onNext","started","seedIsImmutable","operations","CallSubscriber.prototype.onError","errored","CallSubscriber.prototype.onCompleted","request","CallSubscriber.prototype.unsubscribe","rootOnChangesCompletedHandler","Queue","Dedupe","queue","dataSource","Request","isolateSet","isolateCall","callArgs","batchAndDedupeGet","Dedupe.prototype.subscribe","requestsIndex","requestsCount","batch","Subject","tree","responded","active","disposable","flush","obs","toPaths","toCollapseTrees","collapseMap","toCollapseMap","filterPathsBoundTo","boundLength","filtered","filteredIndex","outer","invalidatePaths","hasIntersection","Request.prototype.onNext","envelopes","envelopeIndex","envelopeCount","invalidated","observers","forEach","observer","Request.prototype.onError","errorPathValues","Request.prototype.onCompleted","Request.prototype.remove","Request.prototype.unsubscribe","Request.prototype.connect","scheduledDisposable","schedule","Request.prototype.batch","requestedComplements","optimizedComplements","requestedIntersection","optimizedIntersection","complementIndex","intersectionIndex","optTotal","reqTotal","pathLen","subTree","Subject.prototype.onError","Subject.prototype.onCompleted","Subject.prototype.subscribe","Subject.prototype.unsubscribe","delay","TimerDisposable","id","disposed","TimeoutScheduler.prototype.schedule","setTimeout","TimerDisposable.prototype.unsubscribe","clearTimeout","array","selector","array2","array3","j","k","anyType","_ponyfill","_ponyfill2","result","symbolObservablePonyfill","_Symbol","Symbol","observable","webpackPolyfill","deprecate","module.deprecate","children"],"mappings":"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","file":"falcor.node.min.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmory imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmory exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tObject.defineProperty(exports, name, {\n/******/ \t\t\tconfigurable: false,\n/******/ \t\t\tenumerable: true,\n/******/ \t\t\tget: getter\n/******/ \t\t});\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 108);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar now = __webpack_require__(55);\nvar $now = __webpack_require__(31);\nvar $never = __webpack_require__(56);\n\nmodule.exports = function isExpired(node, expireImmediate) {\n    var exp = node.$expires;\n    if (exp === undefined || exp === null || exp === $never) {\n        return false;\n    } else if (exp === $now) {\n        return expireImmediate;\n    }\n    return exp < now();\n};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar splice = __webpack_require__(50);\n\nmodule.exports = function expireNode(node, expired, lru) {\n    if (!node[\"\u001eƒ_invalidated\"]) {\n        node[\"\u001eƒ_invalidated\"] = true;\n        expired.push(node);\n        splice(lru, node);\n    }\n    return node;\n};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {function FalcorJSON(f_meta) {\n    if (!f_meta) {\n        this[\"\u001eƒ_meta\"] = {};\n    } else if (!(this[\"\u001eƒ_meta\"] = f_meta[\"\u001eƒ_meta\"])) {\n        this[\"\u001eƒ_meta\"] = f_meta;\n    }\n}\n\nObject.defineProperties(FalcorJSON.prototype, ['concat', 'copyWithin', 'entries', 'every', 'fill', 'filter', 'find', 'findIndex', 'forEach', 'includes', 'indexOf', 'join', 'keys', 'lastIndexOf', 'map', 'pop', 'push', 'reduce', 'reduceRight', 'reverse', 'shift', 'slice', 'some', 'sort', 'splice', 'unshift', 'values'].reduce(function (descriptors, name) {\n    descriptors[name] = {\n        writable: true, enumerable: false,\n        value: bindArrayMethod(Array.prototype[name])\n    };\n    return descriptors;\n}, {\n    toJSON: { enumerable: false, value: toJSON },\n    toProps: { enumerable: false, value: toProps },\n    toString: { enumerable: false, value: toString },\n    $__hash: {\n        enumerable: false,\n        get: function () {\n            var f_meta = this[\"\u001eƒ_meta\"];\n            return f_meta && f_meta['$code'] || '';\n        }\n    },\n    $__path: {\n        enumerable: false,\n        get: function () {\n            var f_meta = this[\"\u001eƒ_meta\"];\n            return f_meta && f_meta[\"abs_path\"] || [];\n        }\n    },\n    $__version: {\n        enumerable: false,\n        get: function () {\n            var f_meta = this[\"\u001eƒ_meta\"];\n            return f_meta && f_meta[\"version\"] || 0;\n        }\n    }\n}));\n\nfunction bindArrayMethod(fn) {\n    return (bound.fn = fn) && bound;\n    function bound() {\n        return bound.fn.apply(this, arguments);\n    }\n}\n\nvar isArray = Array.isArray;\nvar typeofObject = 'object';\nvar typeofString = 'string';\n\nfunction getInst(inst) {\n    var typeofInst = typeof inst;\n    var argsLen = arguments.length;\n    if (argsLen === 0) {\n        inst = this;\n    } else if (typeofInst !== typeofString) {\n        if (!inst || typeofInst !== typeofObject) {\n            return inst;\n        }\n    } else if (argsLen !== 1) {\n        return inst;\n    } else {\n        inst = this;\n    }\n    return inst === global ? undefined : inst;\n}\n\nfunction toJSON() {\n    return serialize(getInst.apply(this, arguments), toJSON);\n}\n\nfunction toString(includeMetadata) {\n    return JSON.stringify(serialize(getInst.call(this, this), serialize, includeMetadata === true));\n}\n\nfunction toProps(inst) {\n\n    inst = getInst.apply(this, arguments);\n\n    var f_meta_inst,\n        f_meta_json,\n        version = 0;\n    var json = serialize(inst, toProps, true, true);\n\n    if (inst && (f_meta_inst = inst[\"\u001eƒ_meta\"])) {\n        version = f_meta_inst[\"version\"];\n    }\n\n    if (!(!json || typeof json !== typeofObject)) {\n        if (f_meta_json = json[\"\u001eƒ_meta\"]) {\n            f_meta_json[\"version\"] = version;\n        }\n    }\n\n    return json;\n}\n\nfunction serialize(inst, serializer, includeMetadata, createWithProto) {\n\n    if (!inst || typeof inst !== typeofObject) {\n        return inst;\n    }\n\n    var count, total, f_meta, keys, key, xs, ys;\n\n    if (isArray(inst)) {\n        xs = inst;\n    } else {\n\n        count = -1;\n        keys = Object.keys(inst);\n        total = keys.length;\n        xs = {};\n\n        if (createWithProto) {\n            xs.__proto__ = FalcorJSON.prototype;\n        }\n\n        if (includeMetadata && (f_meta = inst[\"\u001eƒ_meta\"])) {\n\n            var $code = f_meta['$code'];\n            var abs_path = f_meta[\"abs_path\"];\n            var deref_to = f_meta[\"deref_to\"];\n            var deref_from = f_meta[\"deref_from\"];\n\n            f_meta = {};\n            $code && (f_meta['$code'] = $code);\n            abs_path && (f_meta[\"abs_path\"] = abs_path);\n            deref_to && (f_meta[\"deref_to\"] = deref_to);\n            deref_from && (f_meta[\"deref_from\"] = deref_from);\n\n            xs[\"\u001eƒ_meta\"] = f_meta;\n\n            if (createWithProto) {\n                ys = {};\n                ys.__proto__ = xs;\n                xs = ys;\n            }\n        }\n\n        while (++count < total) {\n            if ((key = keys[count]) !== \"\u001eƒ_meta\") {\n                xs[key] = serializer(inst[key], serializer, includeMetadata);\n            }\n        }\n    }\n\n    return xs;\n}\n\nmodule.exports = FalcorJSON;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\nvar MESSAGE = '`null` is not allowed in branch key positions.';\n\n/**\n * Do not allow null in path.\n */\nmodule.exports = createErrorClass('NullInPathError', function () {\n  this.message = MESSAGE;\n});\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\nmodule.exports = createErrorClass;\n\nfunction createErrorClass(name, init) {\n    function E(message) {\n        this.message = message;\n        init && init.apply(this, arguments);\n        if (!Error.captureStackTrace) {\n            this.stack = new Error().stack;\n        } else {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n    E.prototype = Object.create(Error.prototype);\n    E.prototype.name = name;\n    E.prototype.constructor = E;\n    E.is = function (x) {\n        return x.name === name;\n    };\n    return E;\n}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\nvar objTypeof = 'object';\nmodule.exports = function isObject(value) {\n    return value !== null && typeof value === objTypeof;\n};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isInternal = __webpack_require__(29);\n\nmodule.exports = clone;\n\nfunction clone(node) {\n\n    var key,\n        keys = Object.keys(node),\n        json = {},\n        index = -1,\n        length = keys.length;\n\n    while (++index < length) {\n        key = keys[index];\n        if (isInternal(key)) {\n            continue;\n        }\n        json[key] = node[key];\n    }\n\n    return json;\n}\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function createHardlink(from, to) {\n\n    // create a back reference\n    var backRefs = to[\"\u001eƒ_refs_length\"] || 0;\n    to[\"\u001eƒ_ref\" + backRefs] = from;\n    to[\"\u001eƒ_refs_length\"] = backRefs + 1;\n\n    // create a hard reference\n    from[\"\u001eƒ_ref_index\"] = backRefs;\n    from[\"\u001eƒ_context\"] = to;\n};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(5);\nmodule.exports = function getSize(node) {\n    return isObject(node) && node.$size || 0;\n};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * getCachePosition makes a fast walk to the bound value since all bound\n * paths are the most possible optimized path.\n *\n * @param {Model} model -\n * @param {Array} path -\n * @returns {Mixed} - undefined if there is nothing in this position.\n * @private\n */\nmodule.exports = getCachePosition;\n\nfunction getCachePosition(cache, path) {\n\n    var node = cache;\n    var type,\n        depth = 0;\n    var maxDepth = path.length;\n\n    if (maxDepth > 0) {\n        do {\n            node = node[path[depth]];\n\n            while (node && (type = node.$type) === \"ref\") {\n                node = getCachePosition(cache, node.value);\n            }\n        } while (++depth < maxDepth && node && !type);\n    }\n\n    return node;\n};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar removeNode = __webpack_require__(27);\nvar updateBackReferenceVersions = __webpack_require__(45);\n\nmodule.exports = function updateNodeAncestors(nodeArg, offset, lru, version) {\n    var child = nodeArg;\n    do {\n        var node = child[\"\u001eƒ_parent\"];\n        var size = child.$size = (child.$size || 0) - offset;\n        if (size <= 0 && node != null) {\n            removeNode(child, node, child[\"\u001eƒ_key\"], lru);\n        } else if (child[\"\u001eƒ_version\"] !== version) {\n            updateBackReferenceVersions(child, version);\n        }\n        child = node;\n    } while (child);\n    return nodeArg;\n};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\n\n/**\n * InvalidKeySetError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidKeySetError', function (path, keysOrRanges) {\n  this.mesage = '' + 'The KeySet ' + JSON.stringify(keysOrRanges) + ' in path ' + JSON.stringify(path) + ' contains a KeySet. ' + 'Keysets can only contain Keys or Ranges';\n});\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar EXPIRES_NEVER = __webpack_require__(56);\n\n// [H] -> Next -> ... -> [T]\n// [T] -> Prev -> ... -> [H]\nmodule.exports = function lruPromote(root, object) {\n    // Never promote node.$expires === 1.  They cannot expire.\n    if (object.$expires === EXPIRES_NEVER) {\n        return;\n    }\n\n    var head = root[\"\u001eƒ_head\"];\n\n    // Nothing is in the cache.\n    if (!head) {\n        root[\"\u001eƒ_head\"] = root[\"\u001eƒ_tail\"] = object;\n        return;\n    }\n\n    if (head === object) {\n        return;\n    }\n\n    // The item always exist in the cache since to get anything in the\n    // cache it first must go through set.\n    var prev = object[\"\u001eƒ_prev\"];\n    var next = object[\"\u001eƒ_next\"];\n    if (next) {\n        next[\"\u001eƒ_prev\"] = prev;\n    }\n    if (prev) {\n        prev[\"\u001eƒ_next\"] = next;\n    }\n    object[\"\u001eƒ_prev\"] = undefined;\n\n    // Insert into head position\n    root[\"\u001eƒ_head\"] = object;\n    object[\"\u001eƒ_next\"] = head;\n    head[\"\u001eƒ_prev\"] = object;\n\n    // If the item we promoted was the tail, then set prev to tail.\n    if (object === root[\"\u001eƒ_tail\"]) {\n        root[\"\u001eƒ_tail\"] = prev;\n    }\n};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Subscription = __webpack_require__(14);\n\nmodule.exports = Subscriber;\n\nfunction Subscriber(destination, parent, onCompleted) {\n    if (typeof destination === 'function' || typeof parent === 'function' || typeof onCompleted === 'function') {\n        Subscription.call(this, []);\n        this.destination = {\n            error: parent,\n            onError: parent,\n            next: destination,\n            onNext: destination,\n            complete: onCompleted,\n            onCompleted: onCompleted\n        };\n    } else {\n        Subscription.call(this, [], parent);\n        this.parent = parent;\n        this.destination = destination;\n    }\n}\n\nSubscriber.prototype = Object.create(Subscription.prototype);\n\nSubscriber.prototype.next = Subscriber.prototype.onNext = function onNext(value) {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onNext) {\n            dest.onNext(value);\n        } else if (dest.next) {\n            dest.next(value);\n        }\n    }\n};\n\nSubscriber.prototype.error = Subscriber.prototype.onError = function onError(error) {\n    var signaled = false;\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onError) {\n            signaled = true;\n            dest.onError(error);\n        } else if (dest.error) {\n            signaled = true;\n            dest.error(error);\n        }\n        this.dispose();\n    }\n    if (!signaled) {\n        throw error;\n    }\n};\n\nSubscriber.prototype.complete = Subscriber.prototype.onCompleted = function onCompleted() {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onCompleted) {\n            dest.onCompleted();\n        } else if (dest.complete) {\n            dest.complete();\n        }\n        this.dispose();\n    }\n};\n\nSubscriber.prototype.dispose = Subscriber.prototype.unsubscribe = function () {\n    this.destination = null;\n    Subscription.prototype.dispose.call(this);\n};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\nmodule.exports = Subscription;\n\nfunction Subscription(subscriptions, parent) {\n    this.parent = parent;\n    this.subscriptions = subscriptions || [];\n}\n\nSubscription.prototype.add = function (subscription) {\n    return this.subscriptions.push(subscription) && this || this;\n};\n\nSubscription.prototype.remove = function (subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.subscriptions.splice(index, 1);\n    }\n    return this;\n};\n\nSubscription.prototype.dispose = Subscription.prototype.unsubscribe = function () {\n    var subscription,\n        subscriptions = this.subscriptions;\n    while (subscriptions.length) {\n        (subscription = subscriptions.pop()) && subscription.dispose && subscription.dispose();\n    }\n    var parent = this.parent;\n    if (parent) {\n        this.parent = null;\n        parent.remove && parent.remove(this);\n    }\n};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar lruPromote = __webpack_require__(12);\n\nmodule.exports = onValueType;\n\nfunction onValueType(node, type, json, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, reportMissing, treatErrorsAsValues, onValue, onMissing, onMaterialize) {\n\n    var reportMaterialized = reportMissing;\n\n    if (type) {\n        if (isExpired(node, expireImmediate)) {\n            if (!node[\"\u001eƒ_invalidated\"]) {\n                expireNode(node, expired, modelRoot);\n            }\n        } else {\n            lruPromote(modelRoot, node);\n            if (node.value === undefined) {\n                reportMissing = false;\n                reportMaterialized = materialized;\n            } else {\n                if (seed) {\n                    if (fromReference) {\n                        requestedPath[depth] = null;\n                    }\n                    return onValue(node, type, depth, seed, results, requestedPath, optimizedPath, optimizedLength, fromReference, boxValues, materialized, treatErrorsAsValues);\n                }\n                return undefined;\n            }\n        }\n    }\n\n    if (materialized) {\n        seed && (results.hasValue = true);\n    } else if (!reportMaterialized) {\n        return undefined;\n    }\n\n    return onMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, materialized, json, branchSelector, boxValues, onMaterialize);\n}\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar getCachePosition = __webpack_require__(9);\n\nmodule.exports = getBoundCacheNode;\n\nfunction getBoundCacheNode(model, path) {\n    path = path || model._path;\n    var node = model._node;\n    if (!node || node[\"\u001eƒ_parent\"] === undefined || node[\"\u001eƒ_invalidated\"]) {\n        model._node = null;\n        if (path.length === 0) {\n            node = model._root.cache;\n        } else {\n            node = getCachePosition(model._root.cache, path);\n            if (path === model._path) {\n                model._node = node;\n            }\n        }\n    }\n    return node;\n}\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar removeNode = __webpack_require__(27);\nvar isInternalKey = __webpack_require__(20);\n\nmodule.exports = function removeNodeAndDescendants(node, parent, key, lru) {\n    if (removeNode(node, parent, key, lru)) {\n        if (node.$type == null) {\n            for (var key2 in node) {\n                if (!isInternalKey(key2)) {\n                    removeNodeAndDescendants(node[key2], node, key2, lru);\n                }\n            }\n        }\n        return true;\n    }\n    return false;\n};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(5);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar createHardlink = __webpack_require__(7);\nvar mergeJSONGraphNode = __webpack_require__(74);\nvar NullInPathError = __webpack_require__(3);\nvar iterateKeySet = __webpack_require__(33);\n\n/**\n * Merges a list of {@link JSONGraphEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to merge the {@link JSONGraphEnvelope}s.\n * @param {Array.<PathValue>} jsonGraphEnvelopes - the {@link JSONGraphEnvelope}s to merge.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setJSONGraphs(model, jsonGraphEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n    var initialVersion = cache[\"\u001eƒ_version\"];\n\n    var requestedPath = [];\n    var optimizedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var jsonGraphEnvelopeIndex = -1;\n    var jsonGraphEnvelopeCount = jsonGraphEnvelopes.length;\n\n    while (++jsonGraphEnvelopeIndex < jsonGraphEnvelopeCount) {\n\n        var jsonGraphEnvelope = jsonGraphEnvelopes[jsonGraphEnvelopeIndex];\n        var paths = jsonGraphEnvelope.paths;\n        var jsonGraph = jsonGraphEnvelope.jsonGraph;\n\n        var pathIndex = -1;\n        var pathCount = paths.length;\n\n        while (++pathIndex < pathCount) {\n\n            var path = paths[pathIndex];\n            optimizedPath.index = 0;\n\n            setJSONGraphPathSet(path, 0, cache, cache, cache, jsonGraph, jsonGraph, jsonGraph, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n        }\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n    arr[3] = undefined;\n    arr[4] = undefined;\n\n    var newVersion = cache[\"\u001eƒ_version\"];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (initialVersion !== newVersion) {\n        modelRoot.version = version;\n        rootChangeHandler && rootChangeHandler();\n    }\n\n    return [requestedPaths, optimizedPaths, initialVersion !== newVersion];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setJSONGraphPathSet(path, depth, root, parent, node, messageRoot, messageParent, message, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n\n        var results = setNode(root, parent, node, messageRoot, messageParent, message, key, branch, false, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = results[0];\n        var nextParent = results[1];\n        var nextOptimizedPath = results[4];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setJSONGraphPathSet(path, depth + 1, root, nextParent, nextNode, messageRoot, results[3], results[2], requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(root, node, messageRoot, message, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var messageParent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        messageParent = messageRoot;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var index = 0;\n        var container = node;\n        var count = reference.length - 1;\n        parent = node = root;\n        messageParent = message = messageRoot;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            optimizedPath.index = index;\n\n            var results = setNode(root, parent, node, messageRoot, messageParent, message, key, branch, true, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n            node = results[0];\n            optimizedPath = results[4];\n            if (!node || typeof node !== 'object') {\n                optimizedPath.index = index;\n                return results;\n            }\n            parent = results[1];\n            message = results[2];\n            messageParent = results[3];\n        } while (index++ < count);\n\n        optimizedPath.index = index;\n\n        if (container[\"\u001eƒ_context\"] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(root, parent, node, messageRoot, messageParent, message, key, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        var results = setReference(root, node, messageRoot, message, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        message = results[2];\n        messageParent = results[3];\n        optimizedPath = results[4];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[\"\u001eƒ_key\"];\n            }\n        } else {\n            parent = node;\n            messageParent = message;\n            node = parent[key];\n            message = messageParent && messageParent[key];\n        }\n\n        node = mergeJSONGraphNode(parent, node, message, key, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n\n    return arr;\n}\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(3);\nvar isArray = Array.isArray;\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar createHardlink = __webpack_require__(7);\nvar getCachePosition = __webpack_require__(9);\nvar isInternalKey = __webpack_require__(20);\nvar NullInPathError = __webpack_require__(3);\nvar mergeValueOrInsertBranch = __webpack_require__(42);\n\n/**\n * Sets a list of {@link PathMapEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of {@link PathMapEnvelope}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setPathMaps(model, pathMapEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[\"\u001eƒ_parent\"] || cache;\n    var initialVersion = cache[\"\u001eƒ_version\"];\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathMapIndex = -1;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathMap(pathMapEnvelope.json, 0, cache, parent, node, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, modelRoot, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    var newVersion = cache[\"\u001eƒ_version\"];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (initialVersion !== newVersion) {\n        modelRoot.version = version;\n        rootChangeHandler && rootChangeHandler();\n    }\n\n    return [requestedPaths, optimizedPaths, initialVersion !== newVersion];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setPathMap(pathMap, depth, root, parent, node, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var keys = getKeys(pathMap);\n\n    if (keys && keys.length) {\n\n        var keyIndex = 0;\n        var keyCount = keys.length;\n        var optimizedIndex = optimizedPath.index;\n\n        do {\n            var key = keys[keyIndex];\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n\n            requestedPath.depth = depth;\n\n            var results = setNode(root, parent, node, key, child, branch, false, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n            requestedPath[depth] = key;\n            requestedPath.index = depth;\n\n            var nextNode = results[0];\n            var nextParent = results[1];\n            var nextOptimizedPath = results[2];\n            nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n            if (nextNode) {\n                if (branch) {\n                    setPathMap(child, depth + 1, root, nextParent, nextNode, requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n                } else {\n                    requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                    optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n                }\n            }\n            if (++keyIndex >= keyCount) {\n                break;\n            }\n            optimizedPath.index = optimizedIndex;\n        } while (true);\n    }\n}\n/* eslint-enable */\n\nfunction setReference(value, root, node, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n        var container = node;\n        parent = root;\n\n        node = node[\"\u001eƒ_context\"];\n\n        if (node != null) {\n            parent = node[\"\u001eƒ_parent\"] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n            optimizedPath.index = index;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                var results = setNode(root, parent, node, key, value, branch, true, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n                node = results[0];\n                optimizedPath = results[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return results;\n                }\n                parent = results[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[\"\u001eƒ_context\"] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(root, parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        var results = setReference(value, root, node, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        optimizedPath = results[2];\n        type = node && node.$type;\n    }\n\n    if (type === void 0) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[\"\u001eƒ_key\"];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction getKeys(pathMap) {\n\n    if (!(!pathMap || typeof pathMap !== 'object') && !pathMap.$type) {\n        var keys = [];\n        var itr = 0;\n        if (isArray(pathMap)) {\n            keys[itr++] = 'length';\n        }\n        for (var key in pathMap) {\n            if (isInternalKey(key)) {\n                continue;\n            }\n            keys[itr++] = key;\n        }\n        return keys;\n    }\n\n    return void 0;\n}\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Determined if the key passed in is an internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nmodule.exports = isInternalKey;\n\nvar isInternal = __webpack_require__(29);\n\nfunction isInternalKey(key) {\n  return key && key[0] === '$' || isInternal(key);\n}\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/support/materializedAtom\");\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(34);\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(37);\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\nmodule.exports = inlineJSONGraphValue;\n\n/* eslint-disable no-constant-condition */\nfunction inlineJSONGraphValue(node, path, length, seed, branch) {\n\n    var key,\n        depth = 0,\n        prev,\n        curr = seed.jsonGraph;\n\n    if (!curr) {\n        seed.jsonGraph = curr = {};\n    }\n\n    do {\n        prev = curr;\n        key = path[depth++];\n        if (depth >= length) {\n            curr = prev[key] = branch !== true ? node : prev[key] || {};\n            break;\n        }\n        curr = prev[key] || (prev[key] = {});\n    } while (true);\n\n    return curr;\n}\n/* eslint-enable */\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\nvar isArray = Array.isArray;\n\nmodule.exports = onMissing;\n\n/* eslint-disable no-constant-condition */\nfunction onMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, reportMaterialized, json, branchSelector, boxValues, onMaterialize) {\n\n    if (!reportMissing && !reportMaterialized) {\n        return;\n    }\n\n    var keyset,\n        restPathIndex = -1,\n        restPathCount = requestedLength - depth,\n        restPath = restPathCount && new Array(restPathCount) || undefined;\n\n    while (++restPathIndex < restPathCount) {\n        keyset = path[restPathIndex + depth];\n        if (isEmptyKeySet(keyset)) {\n            return;\n        }\n        restPath[restPathIndex] = keyset;\n    }\n\n    var index, count, mPath;\n    var lastKeyIsNull = keyset === null;\n    var isRequestedPath = reportMissing;\n    var missDepth, missTotal, missingPath, missingPaths;\n\n    if (!reportMissing) {\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } else {\n        missDepth = depth;\n        missTotal = requestedLength;\n        missingPath = requestedPath;\n        missingPaths = results.requested || (results.requested = []);\n    }\n\n    do {\n        if (restPathCount < requestedLength || !isRequestedPath) {\n            index = -1;\n            count = missDepth;\n            mPath = new Array(missTotal);\n            while (++index < count) {\n                mPath[index] = missingPath[index];\n            }\n            restPathIndex = -1;\n            while (index < missTotal) {\n                mPath[index++] = restPath[++restPathIndex];\n            }\n        }\n\n        // break after inserting both requested and optimized missing paths\n        if (isRequestedPath = !isRequestedPath) {\n            if (reportMissing) {\n                missingPaths[missingPaths.length] = mPath;\n            }\n            break;\n        }\n\n        missingPaths[missingPaths.length] = mPath || restPath;\n\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missingPaths = results.missing || (results.missing = []);\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } while (true);\n\n    if (reportMaterialized) {\n        return onMaterialize(json, mPath, missDepth, missTotal, branchSelector, boxValues);\n    }\n}\n/* eslint-enable */\n\nfunction isEmptyKeySet(keyset) {\n\n    // false if the keyset is a primitive\n    if ('object' !== typeof keyset) {\n        return false;\n    } else if (keyset === null) {\n        return false;\n    }\n\n    if (isArray(keyset)) {\n        // return true if the keyset is an empty array\n        return keyset.length === 0;\n    }\n\n    var rangeEnd = keyset.to,\n        from = keyset.from || 0;\n    if ('number' !== typeof rangeEnd) {\n        rangeEnd = from + (keyset.length || 0);\n    }\n\n    // false if trying to request incorrect or empty ranges\n    // e.g. { from: 10, to: 0 } or { from: 5, length: 0 }\n    return from >= rangeEnd;\n}\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(2);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar lruPromote = __webpack_require__(12);\nvar getSize = __webpack_require__(8);\nvar createHardlink = __webpack_require__(7);\nvar getBoundCacheNode = __webpack_require__(16);\nvar updateNodeAncestors = __webpack_require__(10);\nvar removeNodeAndDescendants = __webpack_require__(17);\nvar iterateKeySet = __webpack_require__(33);\n\n/**\n * Invalidates a list of Paths in a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathValues.\n * @param {Array.<PathValue>} paths - the PathValues to set.\n */\n\nmodule.exports = function invalidatePathSets(model, paths, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version++;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n\n    if (!node) {\n        return;\n    }\n\n    var parent = node[\"\u001eƒ_parent\"] || cache;\n    var initialVersion = cache[\"\u001eƒ_version\"];\n\n    var pathIndex = -1;\n    var pathCount = paths.length;\n\n    while (++pathIndex < pathCount) {\n\n        var path = paths[pathIndex];\n\n        invalidatePathSet(path, 0, cache, parent, node, version, expired, lru, expireImmediate);\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    var newVersion = cache[\"\u001eƒ_version\"];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (rootChangeHandler && initialVersion !== newVersion) {\n        rootChangeHandler();\n    }\n};\n\nfunction invalidatePathSet(path, depth, root, parent, node, version, expired, lru, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n\n    do {\n        arr = invalidateNode(root, parent, node, key, branch, false, version, expired, lru, expireImmediate);\n        var nextNode = arr[0];\n        var nextParent = arr[1];\n        if (nextNode) {\n            if (branch) {\n                invalidatePathSet(path, depth + 1, root, nextParent, nextNode, version, expired, lru, expireImmediate);\n            } else if (removeNodeAndDescendants(nextNode, nextParent, key, lru)) {\n                updateNodeAncestors(nextParent, getSize(nextNode), lru, version);\n            }\n        }\n        key = iterateKeySet(keySet, note);\n    } while (!note.done);\n}\n\nfunction invalidateReference(root, node, version, expired, lru, expireImmediate) {\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return arr;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[\"\u001eƒ_context\"];\n\n    if (node != null) {\n        parent = node[\"\u001eƒ_parent\"] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            arr = invalidateNode(root, parent, node, key, branch, true, version, expired, lru, expireImmediate);\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return arr;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[\"\u001eƒ_context\"] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\nfunction invalidateNode(root, parent, node, key, branch, reference, version, expired, lru, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        arr = invalidateReference(root, node, version, expired, lru, expireImmediate);\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return arr;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type !== void 0) {\n        return [node, parent];\n    }\n\n    if (key == null) {\n        if (branch) {\n            throw new Error('`null` is not allowed in branch key positions.');\n        } else if (node) {\n            key = node[\"\u001eƒ_key\"];\n        }\n    } else {\n        parent = node;\n        node = parent[key];\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar lruSplice = __webpack_require__(50);\nvar unlinkBackReferences = __webpack_require__(77);\nvar unlinkForwardReference = __webpack_require__(78);\n\nmodule.exports = function removeNode(node, parent, key, lru) {\n    if (!(!node || typeof node !== 'object')) {\n        var type = node.$type;\n        if (type) {\n            if (type === \"ref\") {\n                unlinkForwardReference(node);\n            }\n            lruSplice(lru, node);\n        }\n        unlinkBackReferences(node);\n        parent[key] = node[\"\u001eƒ_parent\"] = void 0;\n        return true;\n    }\n    return false;\n};\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(3);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar createHardlink = __webpack_require__(7);\nvar getCachePosition = __webpack_require__(9);\nvar NullInPathError = __webpack_require__(3);\nvar iterateKeySet = __webpack_require__(33);\nvar mergeValueOrInsertBranch = __webpack_require__(42);\n\n/**\n * Sets a list of {@link PathValue}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the {@link PathValue}s.\n * @param {Array.<PathValue>} pathValues - the list of {@link PathValue}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setPathValues(model, pathValues, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[\"\u001eƒ_parent\"] || cache;\n    var initialVersion = cache[\"\u001eƒ_version\"];\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathValueIndex = -1;\n    var pathValueCount = pathValues.length;\n\n    while (++pathValueIndex < pathValueCount) {\n\n        var pathValue = pathValues[pathValueIndex];\n        var path = pathValue.path;\n        var value = pathValue.value;\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathSet(value, path, 0, cache, parent, node, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, modelRoot, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    var newVersion = cache[\"\u001eƒ_version\"];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (initialVersion !== newVersion) {\n        modelRoot.version = version;\n        rootChangeHandler && rootChangeHandler();\n    }\n\n    return [requestedPaths, optimizedPaths, initialVersion !== newVersion];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setPathSet(value, path, depth, root, parent, node, requestedPaths, optimizedPaths, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var results = setNode(root, parent, node, key, value, branch, false, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = results[0];\n        var nextParent = results[1];\n        var nextOptimizedPath = results[2];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setPathSet(value, path, depth + 1, root, nextParent, nextNode, requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(value, root, node, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var container = node;\n        parent = root;\n\n        node = node[\"\u001eƒ_context\"];\n\n        if (node != null) {\n            parent = node[\"\u001eƒ_parent\"] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                optimizedPath.index = index;\n\n                var results = setNode(root, parent, node, key, value, branch, true, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n                node = results[0];\n                optimizedPath = results[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return results;\n                }\n                parent = results[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[\"\u001eƒ_context\"] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(root, parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        var results = setReference(value, root, node, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        optimizedPath = results[2];\n        type = node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[\"\u001eƒ_key\"];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate);\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Determined if the key passed in is an f_ internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nvar f_ = __webpack_require__(85);\nvar regexp = new RegExp('^' + f_, 'i', 'g');\n\nmodule.exports = regexp.test.bind(regexp);\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(5);\nmodule.exports = function getTimestamp(node) {\n    return isObject(node) && node.$timestamp || undefined;\n};\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\nmodule.exports = 0;\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() { return this; })();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/iterateKeySet\");\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar walkPathAndBuildOutput = __webpack_require__(66);\nvar walkFlatBufferAndBuildOutput = __webpack_require__(65);\nvar getBoundCacheNode = __webpack_require__(16);\nvar InvalidModelError = __webpack_require__(83);\nvar toFlatBuffer = __webpack_require__(106);\nvar computeFlatBufferHash = __webpack_require__(100);\n\nmodule.exports = getJSON;\n\nfunction getJSON(model, paths, seed, progressive, expireImmediate) {\n\n    var node,\n        referenceContainer,\n        boundPath = model._path,\n        modelRoot = model._root,\n        cache = modelRoot.cache,\n        requestedPath,\n        requestedLength,\n        optimizedPath,\n        optimizedLength = boundPath && boundPath.length || 0;\n\n    // If the model is bound, get the cache position.\n    if (optimizedLength) {\n        node = getBoundCacheNode(model);\n        // If there was a short, then we 'throw an error' to the outside\n        // calling function which will onError the observer.\n        if (node && node.$type) {\n            return { error: new InvalidModelError(boundPath, boundPath) };\n        }\n        // We need to get the new cache position and copy the bound path.\n        optimizedPath = [];\n        for (var i = 0; i < optimizedLength; ++i) {\n            optimizedPath[i] = boundPath[i];\n        }\n        referenceContainer = model._referenceContainer;\n    } else {\n        node = cache;\n        optimizedPath = [];\n    }\n\n    requestedPath = [];\n\n    var isFlatBuffer = false,\n        json = seed && seed.json,\n        results = { data: seed },\n        boxValues = model._boxed,\n        expired = modelRoot.expired,\n        recycleJSON = model._recycleJSON,\n        hasDataSource = Boolean(model._source),\n        branchSelector = modelRoot.branchSelector,\n        materialized = seed && model._materialized,\n        treatErrorsAsValues = model._treatErrorsAsValues,\n        allowFromWhenceYouCame = model._allowFromWhenceYouCame;\n\n    var arr,\n        path,\n        pathsIndex = 0,\n        pathsCount = paths.length;\n\n    if (pathsCount > 0) {\n        if (recycleJSON) {\n            isFlatBuffer = true;\n            if (pathsCount > 1 || isArray(paths[0])) {\n                paths = [computeFlatBufferHash(toFlatBuffer(paths, {}))];\n            }\n            arr = walkFlatBufferAndBuildOutput(cache, node, json, paths[0], 0, seed, results, requestedPath, optimizedPath, optimizedLength,\n            /* fromReference = */false, referenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n            json = arr[0];\n            arr[0] = undefined;\n            arr[1] = undefined;\n        } else {\n            do {\n                path = paths[pathsIndex];\n                requestedLength = path.length;\n                json = walkPathAndBuildOutput(cache, node, json, path,\n                /* depth = */0, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength,\n                /* fromReference = */false, referenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n            } while (++pathsIndex < pathsCount);\n        }\n    }\n\n    var requested = results.requested;\n\n    results.args = isFlatBuffer && paths || requested;\n\n    if (requested && requested.length) {\n        results.relative = results.args;\n        if (optimizedLength) {\n            var boundRequested = [];\n            for (var i = 0, len = requested.length; i < len; ++i) {\n                boundRequested[i] = boundPath.concat(requested[i]);\n            }\n            results.requested = boundRequested;\n        }\n    }\n\n    if (results.hasValue) {\n        seed.json = json;\n    }\n\n    return results;\n}\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(3);\nvar promote = __webpack_require__(12);\nvar isExpired = __webpack_require__(0);\nvar createHardlink = __webpack_require__(7);\nvar CircularReferenceError = __webpack_require__(47);\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, ref, modelRoot, expireImmediate) {\n\n    promote(modelRoot, ref);\n\n    var context,\n        key,\n        type,\n        depth = 0,\n        node = root,\n        path = ref.value,\n        copy = path,\n        length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[\"\u001eƒ_context\"])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                    throw new CircularReferenceError(path);\n                }\n                // If the node we land on isn't the existing ref context,\n                // create a hard-link between the reference and the node\n                // it points to.\n                else if (node !== context) {\n                        createHardlink(ref, node);\n                    }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === \"ref\") {\n\n                promote(modelRoot, node);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n    arr[2] = ref;\n\n    return arr;\n}\n/* eslint-enable */\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar clone = __webpack_require__(6);\nvar onError = __webpack_require__(64);\n\nmodule.exports = onJSONValue;\n\nfunction onJSONValue(node, type, depth, seed, results, requestedPath, optimizedPath, optimizedLength, fromReference, boxValues, materialized, treatErrorsAsValues) {\n\n    if (\"error\" === type && !treatErrorsAsValues) {\n        return onError(node, depth, results, requestedPath, fromReference, boxValues);\n    }\n\n    results.hasValue = true;\n\n    // boxValues always clones the node\n    return !boxValues ? node.value : clone(node);\n}\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar walkPathAndBuildOutput = __webpack_require__(69);\nvar BoundJSONGraphModelError = __webpack_require__(81);\n\nmodule.exports = getJSONGraph;\n\nfunction getJSONGraph(model, paths, seed, progressive, expireImmediate) {\n\n    var node,\n        cache,\n        boundPath = model._path,\n        modelRoot = model._root,\n        requestedPath,\n        requestedLength,\n        optimizedPath,\n        optimizedLength = boundPath && boundPath.length || 0;\n\n    // If the model is bound, then get that cache position.\n    if (optimizedLength) {\n        // JSONGraph output cannot ever be bound or else it will\n        // throw an error.\n        return { error: new BoundJSONGraphModelError() };\n    } else {\n        optimizedPath = [];\n        cache = node = modelRoot.cache;\n    }\n\n    requestedPath = [];\n\n    var boxValues = model._boxed,\n        expired = modelRoot.expired,\n        materialized = model._materialized,\n        hasDataSource = Boolean(model._source),\n        treatErrorsAsValues = model._treatErrorsAsValues,\n        results = { data: seed },\n        pathsIndex = -1,\n        pathsCount = paths.length;\n\n    while (++pathsIndex < pathsCount) {\n        var path = paths[pathsIndex];\n        requestedLength = path.length;\n        walkPathAndBuildOutput(cache, node, path,\n        /* depth = */0, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength,\n        /* fromReference = */false, modelRoot, expired, expireImmediate, boxValues, materialized, hasDataSource, treatErrorsAsValues);\n    }\n\n    results.args = results.relative = results.requested;\n\n    return results;\n}\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar clone = __webpack_require__(6);\nvar FalcorJSON = __webpack_require__(2);\nvar NullInPathError = __webpack_require__(3);\nvar InvalidKeySetError = __webpack_require__(11);\nvar materializedAtom = __webpack_require__(21);\n\nmodule.exports = onMaterialize;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterialize(json, path, depth, length, branchSelector, boxValues) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (depth === length) {\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta;\n\n    var nextKey,\n        keyset,\n        keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd,\n        keysOrRanges,\n        keysetIndex = -1,\n        keysetLength = 0;\n\n    keyset = path[depth];\n\n    if (!json || typeofObject !== typeof json) {\n        json = {};\n        json.__proto__ = FalcorJSON.prototype;\n        json[\"\u001eƒ_meta\"] = f_meta = {};\n        f_meta[\"version\"] = 0;\n        f_meta[\"abs_path\"] = path.slice(0, depth);\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[\"\u001eƒ_meta\"])) {\n        json[\"\u001eƒ_meta\"] = f_meta = {};\n        f_meta[\"version\"] = 0;\n        f_meta[\"abs_path\"] = path.slice(0, depth);\n    } else {\n        f_meta[\"version\"] = 0;\n        f_meta[\"abs_path\"] = path.slice(0, depth);\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    throw new InvalidKeySetError(path, keysOrRanges);\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                keyset = keysOrRanges[keysetIndex];\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if (typeofNumber !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            // insert the materialized branch\n            json[nextKey] = onMaterialize(json[nextKey], path, nextDepth, length, branchSelector, boxValues);\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar isPathValue = __webpack_require__(95);\nvar isJSONEnvelope = __webpack_require__(53);\nvar isJSONGraphEnvelope = __webpack_require__(54);\n\nmodule.exports = groupCacheArguments;\n\nfunction groupCacheArguments(args) {\n\n    var groups = [];\n    var argIndex = -1;\n    var argCount = args.length;\n    var group, groupType, arg, argType;\n\n    while (++argIndex < argCount) {\n        arg = args[argIndex];\n        if (isArray(arg)) {\n            arg = { path: arg };\n            argType = 'PathValues';\n        } else if (isPathValue(arg)) {\n            argType = 'PathValues';\n        } else if (isJSONGraphEnvelope(arg)) {\n            argType = 'JSONGraphs';\n        } else if (isJSONEnvelope(arg)) {\n            argType = 'PathMaps';\n        }\n\n        if (groupType !== argType) {\n            groupType = argType;\n            groups.push(group = {\n                arguments: [],\n                inputType: argType\n            });\n        }\n\n        group.arguments.push(arg);\n    }\n\n    return groups;\n}\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function insertNode(node, parent, key, version, optimizedPath) {\n    node[\"\u001eƒ_key\"] = key;\n    node[\"\u001eƒ_parent\"] = parent;\n\n    if (version !== undefined) {\n        node[\"\u001eƒ_version\"] = version;\n    }\n    if (!node[\"\u001eƒ_abs_path\"]) {\n        node[\"\u001eƒ_abs_path\"] = optimizedPath.slice(0, optimizedPath.index).concat(key);\n    }\n\n    parent[key] = node;\n\n    return node;\n};\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar lruPromote = __webpack_require__(12);\nvar getSize = __webpack_require__(8);\nvar createHardlink = __webpack_require__(7);\nvar getBoundCacheNode = __webpack_require__(16);\nvar isInternalKey = __webpack_require__(20);\nvar updateNodeAncestors = __webpack_require__(10);\nvar removeNodeAndDescendants = __webpack_require__(17);\n\n/**\n * Sets a list of PathMaps into a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of @PathMapEnvelopes to set.\n */\n\nmodule.exports = function invalidatePathMaps(model, pathMapEnvelopes, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version++;\n    var comparator = modelRoot._comparator;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n\n    if (!node) {\n        return;\n    }\n\n    var parent = node[\"\u001eƒ_parent\"] || cache;\n    var initialVersion = cache[\"\u001eƒ_version\"];\n\n    var pathMapIndex = -1;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n\n        invalidatePathMap(pathMapEnvelope.json, 0, cache, parent, node, version, expired, lru, comparator, expireImmediate);\n    }\n\n    var newVersion = cache[\"\u001eƒ_version\"];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (rootChangeHandler && initialVersion !== newVersion) {\n        rootChangeHandler();\n    }\n};\n\nfunction invalidatePathMap(pathMap, depth, root, parent, node, version, expired, lru, comparator, expireImmediate) {\n\n    if (!pathMap || typeof pathMap !== 'object' || pathMap.$type) {\n        return;\n    }\n\n    for (var key in pathMap) {\n        if (!isInternalKey(key)) {\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n            var results = invalidateNode(root, parent, node, key, child, branch, false, version, expired, lru, comparator, expireImmediate);\n            var nextNode = results[0];\n            var nextParent = results[1];\n            if (nextNode) {\n                if (branch) {\n                    invalidatePathMap(child, depth + 1, root, nextParent, nextNode, version, expired, lru, comparator, expireImmediate);\n                } else if (removeNodeAndDescendants(nextNode, nextParent, key, lru)) {\n                    updateNodeAncestors(nextParent, getSize(nextNode), lru, version);\n                }\n            }\n        }\n    }\n}\n\nfunction invalidateReference(value, root, node, version, expired, lru, comparator, expireImmediate) {\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        return [undefined, root];\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[\"\u001eƒ_context\"];\n\n    if (node != null) {\n        parent = node[\"\u001eƒ_parent\"] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            var results = invalidateNode(root, parent, node, key, value, branch, true, version, expired, lru, comparator, expireImmediate);\n            node = results[0];\n            if (!node || typeof node !== 'object') {\n                return results;\n            }\n            parent = results[1];\n        } while (index++ < count);\n\n        if (container[\"\u001eƒ_context\"] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    return [node, parent];\n}\n\nfunction invalidateNode(root, parent, node, key, value, branch, reference, version, expired, lru, comparator, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === \"ref\") {\n\n        var results = invalidateReference(value, root, node, version, expired, lru, comparator, expireImmediate);\n\n        node = results[0];\n\n        if (!node && typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        type = node && node.$type;\n    }\n\n    if (type !== void 0) {\n        return [node, parent];\n    }\n\n    if (key == null) {\n        if (branch) {\n            throw new Error('`null` is not allowed in branch key positions.');\n        } else if (node) {\n            key = node[\"\u001eƒ_key\"];\n        }\n    } else {\n        parent = node;\n        node = parent[key];\n    }\n\n    return [node, parent];\n}\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar $now = __webpack_require__(31);\nvar getType = __webpack_require__(94);\nvar getSize = __webpack_require__(8);\nvar getTimestamp = __webpack_require__(30);\n\nvar wrapNode = __webpack_require__(46);\nvar isExpired = __webpack_require__(0);\nvar expireNode = __webpack_require__(1);\nvar insertNode = __webpack_require__(40);\nvar replaceNode = __webpack_require__(44);\nvar reconstructPath = __webpack_require__(43);\nvar updateNodeAncestors = __webpack_require__(10);\nvar removeNodeAndDescendants = __webpack_require__(17);\n\nmodule.exports = function mergeValueOrInsertBranch(parent, node, key, value, branch, reference, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var cType = getType(node, reference);\n\n    if (branch || reference) {\n        if (cType && isExpired(node,\n        /* expireImmediate:\n         * force true so the node is marked as\n         * expired but keep using it for the merge if it expires immediately\n         */\n        true)) {\n            expireNode(node, expired, lru);\n            cType = node.$expires === $now ? cType : 'expired';\n        }\n        if (cType && cType !== \"ref\" || !node || typeof node !== 'object') {\n            node = replaceNode(node, {}, parent, key, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    } else {\n        var message = value;\n        var isDistinct = true;\n        var mType = getType(message);\n\n        // If both the cache and message are primitives,\n        // insert the message into the cache.\n        if (!cType && !mType) {\n            isDistinct = true;\n        }\n        // Compare the current cache value with the new value. If either of\n        // them don't have a timestamp, or the message's timestamp is newer,\n        // replace the cache value with the message value. If a comparator\n        // is specified, the comparator takes precedence over timestamps.\n        else if (comparator) {\n                isDistinct = !(comparator.length < 3 ? comparator(node, message) : comparator(node, message, optimizedPath.slice(0, optimizedPath.index)));\n            } else {\n                // Comparing either Number or undefined to undefined always results in false.\n                isDistinct = getTimestamp(message) < getTimestamp(node) === false;\n            }\n\n        if (isDistinct) {\n\n            if (errorSelector && mType === \"error\") {\n                message = errorSelector(reconstructPath(requestedPath, key), message);\n            }\n\n            var sizeOffset = getSize(node) - getSize(message = wrapNode(message, mType, mType ? message.value : message));\n\n            node = replaceNode(node, message, parent, key, lru, version);\n            parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    }\n\n    return node;\n};\n\n/***/ },\n/* 43 */\n/***/ function(module, exports) {\n\n/**\n * Reconstructs the path for the current key, from currentPath (requestedPath)\n * state maintained during set/merge walk operations.\n *\n * During the walk, since the requestedPath array is updated after we attempt to\n * merge/insert nodes during a walk (it reflects the inserted node's parent branch)\n * we need to reconstitute a path from it.\n *\n * @param  {Array} currentPath The current requestedPath state, during the walk\n * @param  {String} key        The current key value, during the walk\n * @return {Array} A new array, with the path which represents the node we're about\n * to insert\n */\nmodule.exports = function reconstructPath(currentPath, key) {\n\n  var path = currentPath.slice(0, currentPath.depth);\n  path[path.length] = key;\n\n  return path;\n};\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar transferBackReferences = __webpack_require__(76);\nvar removeNodeAndDescendants = __webpack_require__(17);\nvar updateBackReferenceVersions = __webpack_require__(45);\n\nmodule.exports = function replaceNode(node, replacement, parent, key, lru, version) {\n    if (node === replacement) {\n        return node;\n    } else if (!(!node || typeof node !== 'object')) {\n        transferBackReferences(node, replacement);\n        removeNodeAndDescendants(node, parent, key, lru);\n        updateBackReferenceVersions(replacement, version);\n    }\n\n    parent[key] = replacement;\n    return replacement;\n};\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function updateBackReferenceVersions(nodeArg, version) {\n    var stack = [nodeArg];\n    var count = 0;\n    do {\n        var node = stack[count];\n        if (node && node[\"\u001eƒ_version\"] !== version) {\n            node[\"\u001eƒ_version\"] = version;\n            stack[count++] = node[\"\u001eƒ_parent\"];\n            var i = -1;\n            var n = node[\"\u001eƒ_refs_length\"] || 0;\n            while (++i < n) {\n                stack[count++] = node[\"\u001eƒ_ref\" + i];\n            }\n        }\n    } while (--count > -1);\n    return nodeArg;\n};\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar now = __webpack_require__(55);\nvar clone = __webpack_require__(92);\nvar getSize = __webpack_require__(8);\nvar getExpires = __webpack_require__(93);\nvar expiresNow = __webpack_require__(31);\n\nvar atomSize = 50;\n\nmodule.exports = function wrapNode(nodeArg, typeArg, value) {\n\n    var size = 0;\n    var node = nodeArg;\n    var type = typeArg;\n\n    if (type) {\n        var modelCreated = node[\"\u001eƒ_wrapped_value\"];\n        node = clone(node);\n        size = getSize(node);\n        node.$type = type;\n        node[\"\u001eƒ_prev\"] = undefined;\n        node[\"\u001eƒ_next\"] = undefined;\n        node[\"\u001eƒ_wrapped_value\"] = modelCreated || false;\n    } else {\n        node = { $type: \"atom\", value: value };\n        node[\"\u001eƒ_prev\"] = undefined;\n        node[\"\u001eƒ_next\"] = undefined;\n        node[\"\u001eƒ_wrapped_value\"] = true;\n    }\n\n    if (value == null) {\n        size = atomSize + 1;\n    } else if (size == null || size <= 0) {\n        switch (typeof value) {\n            case 'object':\n                if (isArray(value)) {\n                    size = atomSize + value.length;\n                } else {\n                    size = atomSize + 1;\n                }\n                break;\n            case 'string':\n                size = atomSize + value.length;\n                break;\n            default:\n                size = atomSize + 1;\n                break;\n        }\n    }\n\n    var expires = getExpires(node);\n\n    if (typeof expires === 'number' && expires < expiresNow) {\n        node.$expires = now() + expires * -1;\n    }\n\n    node.$size = size;\n\n    return node;\n};\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\n\nmodule.exports = createErrorClass('CircularReferenceError', function (referencePath) {\n    this.message = 'Encountered circular reference ' + JSON.stringify(referencePath);\n});\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\nvar MESSAGE = 'An exception was thrown when making a request';\n\n/**\n * InvalidSourceError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidSourceError', function (error) {\n  this.message = MESSAGE + ':\\n\\t' + error;\n});\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar removeNode = __webpack_require__(27);\nvar updateNodeAncestors = __webpack_require__(10);\n\nmodule.exports = function collect(lru, expired, totalArg, max, ratioArg, version) {\n\n    var total = totalArg;\n    var ratio = ratioArg;\n\n    if (typeof ratio !== 'number') {\n        ratio = 0.75;\n    }\n\n    var shouldUpdate = typeof version === 'number';\n    var targetSize = max * ratio;\n    var parent, node, size;\n\n    node = expired.pop();\n\n    while (node) {\n        size = node.$size || 0;\n        total -= size;\n        if (shouldUpdate === true) {\n            updateNodeAncestors(node, size, lru, version);\n        } else if (parent = node[\"\u001eƒ_parent\"]) {\n            // eslint-disable-line no-cond-assign\n            removeNode(node, parent, node[\"\u001eƒ_key\"], lru);\n        }\n        node = expired.pop();\n    }\n\n    if (total >= max) {\n        var prev = lru[\"\u001eƒ_tail\"];\n        node = prev;\n        while (total >= targetSize && node) {\n            prev = prev[\"\u001eƒ_prev\"];\n            size = node.$size || 0;\n            total -= size;\n            if (shouldUpdate === true) {\n                updateNodeAncestors(node, size, lru, version);\n            }\n            node = prev;\n        }\n\n        lru[\"\u001eƒ_tail\"] = lru[\"\u001eƒ_prev\"] = node;\n        if (node == null) {\n            lru[\"\u001eƒ_head\"] = lru[\"\u001eƒ_next\"] = undefined;\n        } else {\n            node[\"\u001eƒ_next\"] = undefined;\n        }\n    }\n};\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function lruSplice(root, object) {\n\n    // Its in the cache.  Splice out.\n    var prev = object[\"\u001eƒ_prev\"];\n    var next = object[\"\u001eƒ_next\"];\n    if (next) {\n        next[\"\u001eƒ_prev\"] = prev;\n    }\n    if (prev) {\n        prev[\"\u001eƒ_next\"] = next;\n    }\n    object[\"\u001eƒ_prev\"] = object[\"\u001eƒ_next\"] = undefined;\n\n    if (object === root[\"\u001eƒ_head\"]) {\n        root[\"\u001eƒ_head\"] = next;\n    }\n    if (object === root[\"\u001eƒ_tail\"]) {\n        root[\"\u001eƒ_tail\"] = prev;\n    }\n};\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var Subscriber = __webpack_require__(13);\nvar Subscription = __webpack_require__(14);\nvar $$observable = __webpack_require__(96).default;\n\nmodule.exports = Source;\n\nfunction Source(subscribe) {\n    if (!subscribe) {\n        return;\n    }\n    switch (typeof subscribe) {\n        case 'object':\n            this.source = subscribe;\n            break;\n        case 'function':\n            this.source = { subscribe: subscribe };\n            break;\n    }\n}\n\nSource.prototype[$$observable] = function () {\n    return this;\n};\n\nSource.prototype.operator = function (destination) {\n    return this.subscribe(destination);\n};\n\n// Unused\n// Source.prototype.lift = function(operator, source) {\n//     source = new Source(source || this);\n//     source.operator = operator;\n//     source._promise = this._promise;\n//     return source;\n// }\n\nSource.prototype.subscribe = function (destination, x, y) {\n    return new Subscription([this.operator.call(this.source, !(destination instanceof Subscriber) ? new Subscriber(destination, x, y) : destination)]);\n};\n\nSource.prototype.then = function then(onNext, onError) {\n    /* global Promise */\n    var source = this;\n    if (!this._promise) {\n        this._promise = new global['Promise'](function (resolve, reject) {\n            var values = [],\n                rejected = false;\n            source.subscribe({\n                next: function (value) {\n                    values[values.length] = value;\n                },\n                error: function (errors) {\n                    (rejected = true) && reject(errors);\n                },\n                complete: function () {\n                    !rejected && resolve(values.length <= 1 ? values[0] : values);\n                }\n            });\n        });\n    }\n    return this._promise.then(onNext, onError);\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ },\n/* 52 */\n/***/ function(module, exports) {\n\nvar empty = {\n    dispose: function () {},\n    unsubscribe: function () {}\n};\n\nfunction ImmediateScheduler() {}\n\nImmediateScheduler.prototype.schedule = function schedule(action) {\n    action();\n    return empty;\n};\n\nmodule.exports = ImmediateScheduler;\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(5);\n\nmodule.exports = function isJSONEnvelope(envelope) {\n    return isObject(envelope) && 'json' in envelope;\n};\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar isObject = __webpack_require__(5);\n\nmodule.exports = function isJSONGraphEnvelope(envelope) {\n    return isObject(envelope) && isArray(envelope.paths) && (isObject(envelope.jsonGraph) || isObject(envelope.jsong) || isObject(envelope.json) || isObject(envelope.values) || isObject(envelope.value));\n};\n\n/***/ },\n/* 55 */\n/***/ function(module, exports) {\n\nmodule.exports = Date.now;\n\n/***/ },\n/* 56 */\n/***/ function(module, exports) {\n\nmodule.exports = 1;\n\n/***/ },\n/* 57 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/collapse\");\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Model = __webpack_require__(59);\nvar FalcorJSON = __webpack_require__(2);\n\nfunction falcor(opts) {\n    if (!(this instanceof Model)) {\n        return new Model(opts);\n    }\n    Model.call(this, opts);\n}\n\nfalcor.prototype = Object.create(Model.prototype);\n\nfalcor['Model'] = Model;\nfalcor['FalcorJSON'] = FalcorJSON;\nfalcor['toProps'] = FalcorJSON.prototype.toProps;\n\nmodule.exports = falcor;\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Call = __webpack_require__(86);\nvar ModelRoot = __webpack_require__(61);\nvar FalcorJSON = __webpack_require__(2);\nvar ModelDataSourceAdapter = __webpack_require__(60);\nvar TimeoutScheduler = __webpack_require__(90);\nvar ImmediateScheduler = __webpack_require__(52);\nvar collapse = __webpack_require__(57);\n\nvar lruCollect = __webpack_require__(49);\nvar getSize = __webpack_require__(8);\nvar isObject = __webpack_require__(5);\nvar isJSONEnvelope = __webpack_require__(53);\nvar getCachePosition = __webpack_require__(9);\nvar isJSONGraphEnvelope = __webpack_require__(54);\n\nvar setCache = __webpack_require__(19);\nvar setJSONGraphs = __webpack_require__(18);\n\nvar getJSON = __webpack_require__(22);\nvar getCache = __webpack_require__(71);\nvar getJSONGraph = __webpack_require__(23);\n\nmodule.exports = Model;\n\n/**\n * This callback is invoked when the Model's cache is changed.\n * @callback Model~onChange\n */\n\n/**\n* This function is invoked on every JSONGraph Error retrieved from the DataSource. This function allows Error objects to be transformed before being stored in the Model's cache.\n* @callback Model~errorSelector\n* @param {Object} jsonGraphError - the JSONGraph Error object to transform before it is stored in the Model's cache.\n* @returns {Object} the JSONGraph Error object to store in the Model cache.\n*/\n\n/**\n* This function is invoked every time a value in the Model cache is about to be replaced with a new value. If the function returns true, the existing value is replaced with a new value and the version flag on all of the value's ancestors in the tree are incremented.\n* @callback Model~comparator\n* @param {Object} existingValue - the current value in the Model cache.\n* @param {Object} newValue - the value about to be set into the Model cache.\n* @returns {Boolean} the Boolean value indicating whether the new value and the existing value are equal.\n*/\n\n/**\n * A Model object is used to execute commands against a {@link JSONGraph} object. {@link Model}s can work with a local JSONGraph cache, or it can work with a remote {@link JSONGraph} object through a {@link DataSource}.\n * @constructor\n * @param {?Object} options - a set of options to customize behavior\n * @param {?DataSource} options.source - a data source to retrieve and manage the {@link JSONGraph}\n * @param {?JSONGraph} options.cache - initial state of the {@link JSONGraph}\n * @param {?number} options.maxSize - the maximum size of the cache. This value roughly correlates to item count (where itemCount = maxSize / 50). Each item by default is given a metadata `$size` of 50 (or its length when it's an array or string). You can get better control of falcor's memory usage by tweaking `$size`\n * @param {?number} options.collectRatio - the ratio of the maximum size to collect when the maxSize is exceeded\n * @param {?Model~errorSelector} options.errorSelector - a function used to translate errors before they are returned\n * @param {?Model~onChange} options.onChange - a function called whenever the Model's cache is changed\n * @param {?Model~comparator} options.comparator - a function called whenever a value in the Model's cache is about to be replaced with a new value.\n */\nfunction Model(opts) {\n\n    var options = opts || {};\n\n    this._node = options._node;\n    this._path = options._path || [];\n    this._source = options.source || options._source;\n    this._root = options._root || new ModelRoot(options, this);\n    this._recycleJSON = options.recycleJSON === true || options._recycleJSON;\n    this._scheduler = options.scheduler || options._scheduler || new ImmediateScheduler();\n\n    if (options._seed) {\n        this._recycleJSON = true;\n        this._seed = options._seed;\n        this._treatErrorsAsValues = true;\n    } else if (this._recycleJSON) {\n        this._treatErrorsAsValues = true;\n        this._seed = {};\n        this._seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    this._boxed = options.boxed === true || options._boxed || false;\n    this._materialized = options.materialized === true || options._materialized || false;\n    this._treatErrorsAsValues = options.treatErrorsAsValues === true || options._treatErrorsAsValues || false;\n    this._allowFromWhenceYouCame = options.allowFromWhenceYouCame === true || options._allowFromWhenceYouCame || false;\n\n    if (options.cache) {\n        this.setCache(options.cache);\n    }\n}\n\nModel.prototype.constructor = Model;\n\n/**\n * The get method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model}. The get method loads each value into a JSON object and returns in a ModelResponse.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - the requested data as JSON\n */\nModel.prototype.get = function get() {\n    var seed = this._seed;\n    if (!seed) {\n        seed = {};\n        seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n    }\n\n    return new Call('get', this, args)._toJSON(seed, []);\n};\n\n/**\n * Sets the value at one or more places in the JSONGraph model. The set method accepts one or more {@link PathValue}s, each of which is a combination of a location in the document and the value to place there.  In addition to accepting  {@link PathValue}s, the set method also returns the values after the set operation is complete.\n * @function\n * @return {ModelResponse.<JSONEnvelope>} - an {@link Observable} stream containing the values in the JSONGraph model after the set was attempted\n */\nModel.prototype.set = function set() {\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n    }\n\n    return new Call('set', this, args)._toJSON(seed, []);\n};\n\n/**\n * The preload method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model} and loads them into the Model cache.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - a ModelResponse that completes when the data has been loaded into the cache.\n */\nModel.prototype.preload = function preload() {\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n    }\n\n    return new Call('get', this, args)._toJSON(null, []);\n};\n\n/**\n * Invokes a function in the JSON Graph.\n * @function\n * @param {Path} functionPath - the path to the function to invoke\n * @param {Array.<Object>} args - the arguments to pass to the function\n * @param {Array.<PathSet>} refPaths - the paths to retrieve from the JSON Graph References in the message returned from the function\n * @param {Array.<PathSet>} thisPaths - the paths to retrieve from function's this object after successful function execution\n * @return {ModelResponse.<JSONEnvelope> - a JSONEnvelope contains the values returned from the function\n */\n\nModel.prototype.call = function call() {\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n\n    for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n    }\n\n    return new Call('call', this, args)._toJSON(seed, []);\n};\n\n/**\n * The invalidate method synchronously removes several {@link Path}s or {@link PathSet}s from a {@link Model} cache.\n * @function\n * @param {...PathSet} path - the  paths to remove from the {@link Model}'s cache.\n */\nModel.prototype.invalidate = function invalidate() {\n    for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n    }\n\n    return new Call('invalidate', this, args)._toJSON(null, null).then();\n};\n\n/**\n * Returns a new {@link Model} bound to a location within the {@link\n * JSONGraph}. The bound location is never a {@link Reference}: any {@link\n * Reference}s encountered while resolving the bound {@link Path} are always\n * replaced with the {@link Reference}s target value. For subsequent operations\n * on the {@link Model}, all paths will be evaluated relative to the bound\n * path. Deref allows you to:\n * - Expose only a fragment of the {@link JSONGraph} to components, rather than\n *   the entire graph\n * - Hide the location of a {@link JSONGraph} fragment from components\n * - Optimize for executing multiple operations and path looksup at/below the\n *   same location in the {@link JSONGraph}\n * @method\n * @param {Object} responseObject - an object previously retrieved from the\n * Model\n * @return {Model} - the dereferenced {@link Model}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.deref = __webpack_require__(80);\n\n/**\n * A dereferenced model can become invalid when the reference from which it was\n * built has been removed/collected/expired/etc etc.  To fix the issue, a from\n * the parent request should be made (no parent, then from the root) for a valid\n * path and re-dereference performed to update what the model is bound too.\n *\n * @method\n * @private\n * @return {Boolean} - If the currently deref'd model is still considered a\n * valid deref.\n */\nModel.prototype._hasValidParentReference = __webpack_require__(79);\n\n/**\n * Get data for a single {@link Path}.\n * @param {Path} path - the path to retrieve\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     getValue('user.name').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.getValue = function getValue(path) {\n    return new Call('get', this, [path])._toJSON({}, []).lift(function (subscriber) {\n        return this.subscribe({\n            onNext: function (data) {\n                var depth = -1;\n                var x = data.json;\n                var length = path.length;\n                while (x && !x.$type && ++depth < length) {\n                    x = x[path[depth]];\n                }\n                subscriber.onNext(x);\n            },\n            onError: subscriber.onError.bind(subscriber),\n            onCompleted: subscriber.onCompleted.bind(subscriber)\n        });\n    });\n};\n\n/**\n * Set value for a single {@link Path}.\n * @param {Path} path - the path to set\n * @param {Object} value - the value to set\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     setValue('user.name', 'Jim').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.setValue = function setValue(path, value) {\n    path = arguments.length === 1 ? path.path : path;\n    value = arguments.length === 1 ? path : { path: path, value: value };\n    return new Call('set', this, [value])._toJSON({}, []).lift(function (subscriber) {\n        return this.subscribe({\n            onNext: function (data) {\n                var depth = -1;\n                var x = data.json;\n                var length = path.length;\n                while (x && !x.$type && ++depth < length) {\n                    x = x[path[depth]];\n                }\n                subscriber.onNext(x);\n            },\n            onError: subscriber.onError.bind(subscriber),\n            onCompleted: subscriber.onCompleted.bind(subscriber)\n        });\n    });\n};\n\n/**\n * Set the local cache to a {@link JSONGraph} fragment. This method can be a useful way of mocking a remote document, or restoring the local cache from a previously stored state.\n * @param {JSONGraph} jsonGraph - the {@link JSONGraph} fragment to use as the local cache\n */\nModel.prototype.setCache = function modelSetCache(cacheOrJSONGraphEnvelope) {\n\n    var modelRoot = this._root;\n    var cache = modelRoot.cache;\n\n    if (cacheOrJSONGraphEnvelope !== cache) {\n\n        var options = {\n            _path: [],\n            _boxed: false,\n            _root: modelRoot,\n            _materialized: false,\n            _treatErrorsAsValues: false\n        };\n\n        modelRoot.cache = this._node = {};\n\n        if (typeof cache !== 'undefined') {\n            lruCollect(modelRoot, modelRoot.expired, getSize(cache), 0);\n            if (this._recycleJSON) {\n                this._seed = {};\n                this._seed.__proto__ = FalcorJSON.prototype;\n            }\n        }\n\n        var paths;\n        if (isJSONGraphEnvelope(cacheOrJSONGraphEnvelope)) {\n            paths = setJSONGraphs(options, [cacheOrJSONGraphEnvelope])[0];\n        } else if (isJSONEnvelope(cacheOrJSONGraphEnvelope)) {\n            paths = setCache(options, [cacheOrJSONGraphEnvelope])[0];\n        } else if (isObject(cacheOrJSONGraphEnvelope)) {\n            paths = setCache(options, [{ json: cacheOrJSONGraphEnvelope }])[0];\n        }\n\n        // performs promotion without producing output.\n        if (paths) {\n            getJSON(options, paths, null, false, false);\n        }\n    } else if (typeof cache === 'undefined') {\n        this._root.cache = {};\n    }\n    return this;\n};\n\n/**\n * Get the local {@link JSONGraph} cache. This method can be a useful to store the state of the cache.\n * @param {...Array.<PathSet>} [pathSets] - The path(s) to retrieve. If no paths are specified, the entire {@link JSONGraph} is returned.\n * @return {JSONGraph} all of the {@link JSONGraph} data in the {@link Model} cache.\n * @example\n // Storing the boxshot of the first 10 titles in the first 10 genreLists to local storage.\n localStorage.setItem('cache', JSON.stringify(model.getCache('genreLists[0...10][0...10].boxshot')));\n */\nModel.prototype.getCache = function _getCache() {\n\n    var paths = Array.prototype.slice.call(arguments, 0);\n\n    if (paths.length === 0) {\n        return getCache(this._root.cache);\n    }\n\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n\n    var env = getJSONGraph({\n        _path: [],\n        _root: this._root,\n        _boxed: this._boxed,\n        _materialized: this._materialized,\n        _treatErrorsAsValues: this._treatErrorsAsValues\n    }, paths, seed).data;\n\n    env.paths = collapse(paths);\n\n    return env;\n};\n\n/**\n * Retrieves a number which is incremented every single time a value is changed underneath the Model or the object at an optionally-provided Path beneath the Model.\n * @param {Path?} path - a path at which to retrieve the version number\n * @return {Number} a version number which changes whenever a value is changed underneath the Model or provided Path\n */\nModel.prototype.getVersion = function getVersion(path) {\n    path = path || [];\n    if (Array.isArray(path) === false) {\n        throw new Error('Model#getVersion must be called with an Array path.');\n    }\n    if (this._path.length) {\n        path = this._path.concat(path);\n    }\n    return this._getVersion(this, path);\n};\n\n/* eslint-disable guard-for-in */\nModel.prototype._clone = function cloneModel(opts) {\n    var clone = new Model(this);\n    if (opts) {\n        for (var key in opts) {\n            var value = opts[key];\n            if (value === 'delete') {\n                delete clone[key];\n            } else if (key === '_path') {\n                clone[key] = value;\n                if (false === opts.hasOwnProperty('_node')) {\n                    delete clone['_node'];\n                }\n            } else {\n                clone[key] = value;\n            }\n        }\n    }\n    if (clone._path.length > 0) {\n        clone.setCache = void 0;\n    }\n    return clone;\n};\n/* eslint-enable */\n\n/**\n * Returns a clone of the {@link Model} that enables batching. Within the configured time period, paths for get operations are collected and sent to the {@link DataSource} in a batch. Batching can be more efficient if the {@link DataSource} access the network, potentially reducing the number of HTTP requests to the server.\n * @param {?Scheduler|number} schedulerOrDelay - Either a {@link Scheduler} that determines when to send a batch to the {@link DataSource}, or the number in milliseconds to collect a batch before sending to the {@link DataSource}. If this parameter is omitted, then batch collection ends at the end of the next tick.\n * @return {Model} a Model which schedules a batch of get requests to the DataSource.\n */\nModel.prototype.batch = function batch(schedulerOrDelay) {\n\n    var scheduler;\n\n    if (typeof schedulerOrDelay === 'number') {\n        scheduler = new TimeoutScheduler(Math.round(Math.abs(schedulerOrDelay)));\n    } else if (!schedulerOrDelay) {\n        scheduler = new TimeoutScheduler(1);\n    } else if (typeof schedulerOrDelay.schedule === 'function') {\n        scheduler = schedulerOrDelay;\n    } else if (typeof schedulerOrDelay === 'function') {\n        scheduler = { scheudle: schedulerOrDelay };\n    }\n\n    return this._clone({ _scheduler: scheduler });\n};\n\n/**\n * Returns a clone of the {@link Model} that disables batching. This is the default mode. Each get operation will be executed on the {@link DataSource} separately.\n * @name unbatch\n * @memberof Model.prototype\n * @function\n * @return {Model} a {@link Model} that batches requests of the same type and sends them to the data source together\n */\nModel.prototype.unbatch = function unbatch() {\n    return this._clone({ _scheduler: new ImmediateScheduler() });\n};\n\n/**\n * Returns a clone of the {@link Model} that treats errors as values. Errors will be reported in the same callback used to report data. Errors will appear as objects in responses, rather than being sent to the {@link Observable~onErrorCallback} callback of the {@link ModelResponse}.\n * @return {Model}\n */\nModel.prototype.treatErrorsAsValues = function treatErrorsAsValues() {\n    return this._clone({ _treatErrorsAsValues: true });\n};\n\n/**\n * Adapts a Model to the {@link DataSource} interface.\n * @return {DataSource}\n * @example\nvar model =\n    new falcor.Model({\n        cache: {\n            user: {\n                name: 'Steve',\n                surname: 'McGuire'\n            }\n        }\n    }),\n    proxyModel = new falcor.Model({ source: model.asDataSource() });\n\n// Prints 'Steve'\nproxyModel.getValue('user.name').\n    then(function(name) {\n        console.log(name);\n    });\n */\nModel.prototype.asDataSource = function asDataSource() {\n    return new ModelDataSourceAdapter(this);\n};\n\nModel.prototype._materialize = function materialize() {\n    return this._clone({\n        _materialized: true\n    });\n};\n\nModel.prototype._dematerialize = function dematerialize() {\n    return this._clone({\n        _materialized: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that boxes values returning the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the value inside it. This allows any metadata attached to the wrapper to be inspected.\n * @return {Model}\n */\nModel.prototype.boxValues = function boxValues() {\n    return this._clone({\n        _boxed: true\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that unboxes values, returning the value inside of the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the wrapper itself. This is the default mode.\n * @return {Model}\n */\nModel.prototype.unboxValues = function unboxValues() {\n    return this._clone({\n        _boxed: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that only uses the local {@link JSONGraph} and never uses a {@link DataSource} to retrieve missing paths.\n * @return {Model}\n */\nModel.prototype.withoutDataSource = function withoutDataSource() {\n    return this._clone({\n        _source: 'delete'\n    });\n};\n\nModel.prototype.toJSON = function toJSON() {\n    return {\n        $type: 'ref',\n        value: this.getPath()\n    };\n};\n\n/**\n * Returns the {@link Path} to the object within the JSON Graph that this Model references.\n * @return {Path}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.getPath = function getPath() {\n    return this._path.slice(0);\n};\n\n/**\n * This one is actually private.  I would not use this without talking to\n * jhusain, sdesai, or michaelbpaulson (github).\n * @private\n */\nModel.prototype._fromWhenceYouCame = function fromWhenceYouCame(allow) {\n    return this._clone({\n        _allowFromWhenceYouCame: allow === undefined ? true : allow\n    });\n};\n\nModel.prototype._optimizePath = function _optimizePath(path) {\n    var node = getCachePosition(this._root.cache, path);\n    var abs_path = node && node[\"\u001eƒ_abs_path\"] || [];\n    return abs_path.slice(0);\n};\n\nModel.prototype._getVersion = __webpack_require__(72);\nModel.prototype._getPathValuesAsPathMap = getJSON;\nModel.prototype._getPathValuesAsJSONG = getJSONGraph;\n\nModel.prototype._setPathValues = __webpack_require__(28);\nModel.prototype._setPathMaps = __webpack_require__(19);\nModel.prototype._setJSONGs = __webpack_require__(18);\nModel.prototype._setCache = __webpack_require__(19);\n\nModel.prototype._invalidatePathValues = __webpack_require__(26);\nModel.prototype._invalidatePathMaps = __webpack_require__(41);\n\n/***/ },\n/* 60 */\n/***/ function(module, exports) {\n\nfunction ModelDataSourceAdapter(model) {\n    this._model = model\n    // .boxValues()\n    ._materialize().treatErrorsAsValues();\n}\n\nModelDataSourceAdapter.prototype.get = function get(pathSets) {\n    return this._model.get.apply(this._model, pathSets)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.set = function set(jsongResponse) {\n    return this._model.set(jsongResponse)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.call = function call(path, args, suffixes, paths) {\n    return this._model.call.apply(this._model, [path, args, suffixes].concat(paths))._toJSONG();\n};\n\nmodule.exports = ModelDataSourceAdapter;\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar functionTypeof = 'function';\nvar Requests = __webpack_require__(87);\nvar getTimestamp = __webpack_require__(30);\n\nfunction ModelRoot(o, model) {\n\n    var options = o || {};\n\n    this.cache = {};\n    this.version = -1;\n    this.syncRefCount = 0;\n    this.maxRetryCount = 10;\n    this.topLevelModel = model;\n    this.requests = new Requests(this);\n    this.expired = options.expired || [];\n\n    this.collectRatio = 0.75;\n    this.maxSize = Math.pow(2, 53) - 1;\n\n    if (typeof options.collectRatio === 'number') {\n        this.collectRatio = options.collectRatio;\n    }\n\n    if (typeof options.maxSize === 'number') {\n        this.maxSize = options.maxSize;\n    }\n\n    if (typeof options.comparator === functionTypeof) {\n        this.comparator = options.comparator;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.errorSelector === functionTypeof) {\n        this.errorSelector = options.errorSelector;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.onChange === functionTypeof) {\n        this.onChange = options.onChange;\n    }\n\n    if (typeof options.onChangesCompleted === functionTypeof) {\n        this.onChangesCompleted = options.onChangesCompleted;\n    }\n}\n\nfunction defaultCompare(node, message) {\n    var cType = node && node.$type;\n    var mType = message && message.$type;\n    if (cType) {\n        // If the cache has a type, but the message is a primitive,\n        // the message might be the primitive response from the datasource.\n        // If so, return true, so we don't update the back-reference versions.\n        if (!mType) {\n            return node.value === message;\n        }\n        // Otherwise they are the same if all the following fields are the same.\n        else if (cType !== mType) {\n                return false; // isDistinct = true\n            } else if (getTimestamp(message) < getTimestamp(node) === true) {\n                return true; // isDistinct = false\n            } else if (node.value !== message.value) {\n                return false; // isDistinct = true\n            } else if (node.$expires !== message.$expires) {\n                return false; // isDistinct = true\n            }\n        return true; // isDistinct = false\n    }\n    // If cache doesn't have a type but the message\n    // does, they must be different.\n    else if (mType) {\n            return false;\n        }\n    return node === message;\n}\n\nModelRoot.comparator = ModelRoot.prototype.comparator = defaultCompare;\n\nmodule.exports = ModelRoot;\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar getJSON = __webpack_require__(22);\nvar getJSONGraph = __webpack_require__(23);\n\nmodule.exports = { json: json, jsonGraph: jsonGraph };\n\nfunction json(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue = getJSON(model, thisPaths, data, progressive, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [path, args, suffixes, thisPaths]\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed,\n            _materialized: model._materialized,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, thisPaths, data, true, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [path, args, suffixes, thisPaths]\n    };\n}\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n    json: __webpack_require__(34),\n    jsonGraph: __webpack_require__(37)\n};\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar clone = __webpack_require__(6);\n\nmodule.exports = onError;\n\nfunction onError(node, depth, results, requestedPath, fromReference, boxValues) {\n\n    var index = -1;\n    var length = depth + !!fromReference; // depth + 1 if fromReference === true\n    var errorPath = new Array(length);\n    var errorValue = !boxValues ? node.value : clone(node);\n\n    while (++index < length) {\n        errorPath[index] = requestedPath[index];\n    }\n\n    (results.errors || (results.errors = [])).push({\n        path: errorPath,\n        value: errorValue\n    });\n}\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(2);\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar onValue = __webpack_require__(36);\nvar FalcorJSON = __webpack_require__(2);\nvar isExpired = __webpack_require__(0);\nvar onValueType = __webpack_require__(15);\nvar originalOnMissing = __webpack_require__(25);\nvar getReferenceTarget = __webpack_require__(35);\nvar onMaterialize = __webpack_require__(70);\nvar NullInPathError = __webpack_require__(3);\nvar InvalidKeySetError = __webpack_require__(11);\nvar getHashCode = __webpack_require__(102);\nvar flatBufferToPaths = __webpack_require__(101);\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, json, path, depth, seed, results, requestedPath, optimizedPath, optimizedLength, fromReference, referenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === node || undefined !== (type = node.$type) || undefined === path) {\n        arr[1] = hasDataSource && node === undefined;\n        arr[0] = onValueType(node, type, json, path, depth, seed, results, requestedPath, depth, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, onValue, onMissing, onMaterialize);\n        return arr;\n    }\n\n    var f_meta,\n        f_old_keys,\n        f_new_keys,\n        f_code = '';\n\n    var next,\n        nextKey,\n        keyset,\n        keyIsRange,\n        keys = path['$keys'],\n        nodeAbsPath,\n        jsonAbsPath,\n        nextDepth = depth + 1,\n        rangeEnd,\n        nextJSON,\n        nextReferenceContainer,\n        nextOptimizedLength,\n        nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath,\n        refContainerRefPath;\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[\"\u001eƒ_abs_path\"];\n    }\n\n    if (!json || typeofObject !== typeof json) {\n        json = undefined;\n    } else if (f_meta = json[\"\u001eƒ_meta\"]) {\n\n        nodeAbsPath = node[\"\u001eƒ_abs_path\"];\n        jsonAbsPath = f_meta[\"abs_path\"];\n\n        if (!branchSelector && !(json instanceof FalcorJSON)) {\n            json.__proto__ = {};\n            json.__proto__[\"\u001eƒ_meta\"] = f_meta;\n            json.__proto__.__proto__ = FalcorJSON.prototype;\n        }\n\n        if (nodeAbsPath !== jsonAbsPath) {\n            f_meta['$code'] = '__incomplete__';\n            f_meta[\"abs_path\"] = nodeAbsPath;\n            f_meta[\"version\"] = node[\"\u001eƒ_version\"];\n            f_meta[\"deref_to\"] = refContainerRefPath;\n            f_meta[\"deref_from\"] = refContainerAbsPath;\n            if (f_old_keys = f_meta[\"keys\"]) {\n                f_meta[\"keys\"] = Object.create(null);\n                for (nextKey in f_old_keys) {\n                    if (f_old_keys[nextKey]) {\n                        delete json[nextKey];\n                    }\n                }\n            }\n            arr[0] = json;\n            arr[1] = true;\n            return arr;\n        } else if (!(f_meta[\"version\"] !== node[\"\u001eƒ_version\"] || f_meta['$code'] !== path['$code'])) {\n            results.hasValue = true;\n            arr[0] = json;\n            arr[1] = false;\n            return arr;\n        }\n\n        f_old_keys = f_meta[\"keys\"];\n        f_meta[\"abs_path\"] = nodeAbsPath;\n        f_meta[\"version\"] = node[\"\u001eƒ_version\"];\n        f_meta[\"deref_to\"] = refContainerRefPath;\n        f_meta[\"deref_from\"] = refContainerAbsPath;\n    }\n\n    f_new_keys = Object.create(null);\n\n    var keysIndex = -1;\n    var keysLength = keys.length;\n    var nextPath,\n        nextPathKey,\n        hasMissingPath = false;\n\n    iteratingKeyset: while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            f_code = '' + getHashCode('' + f_code + 'null');\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if (typeofObject !== typeof keyset) {\n                nextKey = keyset;\n                rangeEnd = undefined;\n                keyIsRange = false;\n                nextPathKey = nextKey;\n            }\n            // If the Keyset isn't null or primitive, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if (typeofNumber !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                    nextPathKey = '[' + nextKey + '..' + rangeEnd + ']';\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextPath === undefined) {\n\n                arr = walkPathAndBuildOutput(root, next, nextJSON, nextPath, nextDepth, seed, results, requestedPath, nextOptimizedPath, nextOptimizedLength, fromReference, nextReferenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n\n                nextJSON = arr[0];\n                hasMissingPath = hasMissingPath || arr[1];\n\n                if (nextJSON === undefined && !materialized) {\n                    hasMissingPath = true;\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            } else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                // If the reference is expired, it will be invalidated and\n                // reported as missing in the next call to walkPath below.\n                next.$type === \"ref\" && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                arr = walkPathAndBuildOutput(root, next, nextJSON, nextPath, nextDepth, seed, results, requestedPath, nextOptimizedPath, nextOptimizedLength, fromReference, nextReferenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n\n                nextJSON = arr[0];\n                hasMissingPath = hasMissingPath || arr[1];\n\n                if (nextJSON === undefined) {\n                    hasMissingPath = true;\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = {};\n                f_meta[\"version\"] = node[\"\u001eƒ_version\"];\n                f_meta[\"abs_path\"] = node[\"\u001eƒ_abs_path\"];\n                f_meta[\"deref_to\"] = refContainerRefPath;\n                f_meta[\"deref_from\"] = refContainerAbsPath;\n                json = {};\n                json[\"\u001eƒ_meta\"] = f_meta;\n                json.__proto__ = FalcorJSON.prototype;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                // node creation to them.\n                if (branchSelector) {\n                    json = branchSelector(json);\n                } else {\n                    var tmp = json;\n                    json = {};\n                    json.__proto__ = tmp;\n                    tmp = undefined;\n                }\n            }\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && nextKey in f_old_keys) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        if (!hasMissingPath) {\n            f_code = '' + getHashCode('' + f_code + nextPathKey + (nextPath && nextPath['$code'] || ''));\n        }\n    }\n\n    if (hasMissingPath) {\n        f_code = '__incomplete__';\n    }\n\n    if (f_meta) {\n        f_meta['$code'] = f_code;\n        f_meta[\"keys\"] = f_new_keys;\n        if (f_old_keys) {\n            for (nextKey in f_old_keys) {\n                if (f_old_keys[nextKey]) {\n                    delete json[nextKey];\n                }\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n\n    arr[0] = json;\n    arr[1] = hasMissingPath;\n\n    return arr;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, reportMaterialized, json, branchSelector, boxValues, onMaterialize) {\n\n    if (reportMaterialized) {\n        return onMaterialize(json, path, depth, depth, branchSelector, boxValues, results, requestedPath, optimizedPath, optimizedLength, fromReference, reportMissing, onMissing);\n    }\n\n    var paths = path ? flatBufferToPaths(path) : [[]];\n    var rPath = requestedPath.slice(0, requestedLength);\n\n    return paths.forEach(function (restPath) {\n        requestedLength = depth + restPath.length;\n        return originalOnMissing(rPath.concat(restPath), depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, false, json, branchSelector, boxValues, onMaterialize);\n    });\n}\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar onValue = __webpack_require__(36);\nvar onMissing = __webpack_require__(25);\nvar FalcorJSON = __webpack_require__(2);\nvar onValueType = __webpack_require__(15);\nvar isExpired = __webpack_require__(0);\nvar onMaterialize = __webpack_require__(38);\nvar getReferenceTarget = __webpack_require__(35);\nvar NullInPathError = __webpack_require__(3);\nvar InvalidKeySetError = __webpack_require__(11);\nvar materializedAtom = __webpack_require__(21);\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, json, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, referenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (type = node.$type) || depth === requestedLength) {\n        return onValueType(node, type, json, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, onValue, onMissing, onMaterialize);\n    }\n\n    var f_meta;\n\n    var next,\n        nextKey,\n        keyset,\n        keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd,\n        keysOrRanges,\n        nextJSON,\n        nextReferenceContainer,\n        keysetIndex = -1,\n        keysetLength = 0,\n        nextOptimizedLength,\n        nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath,\n        refContainerRefPath;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        return json;\n    }\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[\"\u001eƒ_abs_path\"];\n    }\n\n    if (!json || typeofObject !== typeof json) {\n        json = undefined;\n    } else if (f_meta = json[\"\u001eƒ_meta\"]) {\n        f_meta[\"version\"] = node[\"\u001eƒ_version\"];\n        f_meta[\"abs_path\"] = node[\"\u001eƒ_abs_path\"];\n        f_meta[\"deref_to\"] = refContainerRefPath;\n        f_meta[\"deref_from\"] = refContainerAbsPath;\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    throw new InvalidKeySetError(path, keysOrRanges);\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                keyset = keysOrRanges[keysetIndex];\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if (typeofNumber !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextDepth === requestedLength) {\n                nextJSON = walkPathAndBuildOutput(root, next, nextJSON, path, nextDepth, seed, results, requestedPath, requestedLength, nextOptimizedPath, nextOptimizedLength, fromReference, nextReferenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame);\n                if (nextJSON === undefined && !materialized) {\n                    continue;\n                }\n            } else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                // If the reference is expired, it will be invalidated and\n                // reported as missing in the next call to walkPath below.\n                next.$type === \"ref\" && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                if (undefined === (nextJSON = walkPathAndBuildOutput(root, next, nextJSON, path, nextDepth, seed, results, requestedPath, requestedLength, nextOptimizedPath, nextOptimizedLength, fromReference, nextReferenceContainer, modelRoot, expired, expireImmediate, branchSelector, boxValues, materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame))) {\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = {};\n                f_meta[\"version\"] = node[\"\u001eƒ_version\"];\n                f_meta[\"abs_path\"] = node[\"\u001eƒ_abs_path\"];\n                f_meta[\"deref_to\"] = refContainerRefPath;\n                f_meta[\"deref_from\"] = refContainerAbsPath;\n                json = {};\n                json[\"\u001eƒ_meta\"] = f_meta;\n                json.__proto__ = FalcorJSON.prototype;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                if (branchSelector) {\n                    json = branchSelector(json);\n                }\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n/* eslint-enable */\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar arr = new Array(2);\nvar clone = __webpack_require__(6);\nvar inlineValue = __webpack_require__(24);\nvar promote = __webpack_require__(12);\nvar isExpired = __webpack_require__(0);\nvar createHardlink = __webpack_require__(7);\nvar CircularReferenceError = __webpack_require__(47);\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, ref, modelRoot, seed, expireImmediate) {\n\n    promote(modelRoot, ref);\n\n    var context,\n        key,\n        type,\n        depth = 0,\n        node = root,\n        path = ref.value,\n        copy = path,\n        length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[\"\u001eƒ_context\"])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                    throw new CircularReferenceError(path);\n                }\n                // If the node we land on isn't the existing ref context,\n                // create a hard-link between the reference and the node\n                // it points to.\n                else if (node !== context) {\n                        createHardlink(ref, node);\n                    }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === \"ref\") {\n\n                promote(modelRoot, node);\n\n                seed && inlineValue(clone(node), path, length, seed);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n\n    return arr;\n}\n/* eslint-enable */\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar typeofObject = 'object';\nvar clone = __webpack_require__(6);\nvar inlineValue = __webpack_require__(24);\n\nmodule.exports = onJSONGraphValue;\n\nfunction onJSONGraphValue(node, type, depth, seed, results, requestedPath, optimizedPath, optimizedLength, fromReference, boxValues, materialized) {\n\n    var value = node.value;\n\n    // boxValues always clones the node\n    if (boxValues || !(\n    /**\n     * JSON Graph should always clone:\n     * - refs\n     * - errors\n     * - atoms we didn't create\n     * - atoms we created to wrap Objects\n     **/\n    \"ref\" !== type && \"error\" !== type && node[\"\u001eƒ_wrapped_value\"] && typeofObject !== typeof value)) {\n        value = clone(node);\n    }\n\n    results.hasValue = true;\n    inlineValue(value, optimizedPath, optimizedLength, seed);\n    (seed.paths || (seed.paths = [])).push(requestedPath.slice(0, depth + !!fromReference) // depth + 1 if fromReference === true\n    );\n\n    return value;\n}\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar clone = __webpack_require__(6);\nvar onValue = __webpack_require__(68);\nvar inlineValue = __webpack_require__(24);\nvar isExpired = __webpack_require__(0);\nvar onValueType = __webpack_require__(15);\nvar onMaterialize = __webpack_require__(38);\nvar originalOnMissing = __webpack_require__(25);\nvar getReferenceTarget = __webpack_require__(67);\nvar NullInPathError = __webpack_require__(3);\nvar InvalidKeySetError = __webpack_require__(11);\nvar materializedAtom = __webpack_require__(21);\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, boxValues, materialized, hasDataSource, treatErrorsAsValues) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (type = node.$type) || depth === requestedLength) {\n        return onValueType(node, type, seed, path, depth, seed, results, requestedPath, requestedLength, optimizedPath, optimizedLength, fromReference, modelRoot, expired, expireImmediate, undefined, boxValues, materialized, hasDataSource, treatErrorsAsValues, onValue, onMissing, onMaterialize);\n    }\n\n    var next,\n        nextKey,\n        keyset,\n        keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd,\n        keysOrRanges,\n        keysetIndex = -1,\n        keysetLength = 0,\n        nextOptimizedLength,\n        nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        return undefined;\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n                // If we've already encountered an Array keyset, throw an error.\n                if (keysOrRanges !== undefined) {\n                    throw new InvalidKeySetError(path, keysOrRanges);\n                }\n                keysetIndex = 0;\n                keysOrRanges = keyset;\n                keysetLength = keyset.length;\n                // If an Array of keys or ranges is empty, terminate the graph walk\n                // and return the json constructed so far. An example of an empty\n                // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n                // without building missing paths.\n                if (0 === keysetLength) {\n                    break iteratingKeyset;\n                }\n                keyset = keysOrRanges[keysetIndex];\n                // Assign `keyset` to the first value in the Keyset. Re-entering the\n                // outer loop mimics a singly-recursive function call.\n                continue iteratingKeyset;\n            }\n            // If the Keyset isn't a primitive or Array, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if ('number' !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            // If we encounter a ref, inline the reference target and continue\n            // evaluating the path.\n            if (next && nextDepth < requestedLength &&\n            // If the reference is expired, it will be invalidated and\n            // reported as missing in the next call to walkPath below.\n            next.$type === \"ref\" && !isExpired(next, expireImmediate)) {\n\n                // Write the cloned ref value into the jsonGraph at the\n                // optimized path. JSONGraph must always clone references.\n                seed && inlineValue(clone(next), optimizedPath, nextOptimizedLength, seed);\n\n                // Retrieve the reference target and next referenceContainer (if\n                // this reference points to other references) and continue\n                // following the path. If the reference resolves to a missing\n                // path or leaf node, it will be handled in the next call to\n                // walkPath.\n                refTarget = getReferenceTarget(root, next, modelRoot, seed, expireImmediate);\n\n                next = refTarget[0];\n                fromReference = true;\n                nextOptimizedPath = refTarget[1];\n                nextOptimizedLength = nextOptimizedPath.length;\n                refTarget[0] = refTarget[1] = undefined;\n            }\n\n            walkPathAndBuildOutput(root, next, path, nextDepth, seed, results, requestedPath, requestedLength, nextOptimizedPath, nextOptimizedLength, fromReference, modelRoot, expired, expireImmediate, boxValues, materialized, hasDataSource, treatErrorsAsValues);\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return undefined;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, reportMaterialized, seed, branchSelector, boxValues, onMaterialize) {\n\n    var json, isLeaf;\n\n    if (seed && reportMaterialized) {\n\n        (seed.paths || (seed.paths = [])).push((isLeaf = 0 === requestedLength - depth) &&\n        // depth + 1 if fromReference === true\n        requestedPath.slice(0, depth + !!fromReference) || requestedPath.slice(0, depth).concat(path.slice(depth, requestedLength + !!fromReference)));\n\n        json = inlineValue(isLeaf && clone(materializedAtom) || undefined, optimizedPath, optimizedLength, seed, !isLeaf);\n    }\n\n    return originalOnMissing(path, depth, results, requestedPath, requestedLength, fromReference, optimizedPath, optimizedLength, reportMissing, !isLeaf && reportMaterialized, json, branchSelector, true, onMaterialize);\n}\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar clone = __webpack_require__(6);\nvar onValueType = __webpack_require__(15);\nvar FalcorJSON = __webpack_require__(2);\nvar NullInPathError = __webpack_require__(3);\nvar InvalidKeySetError = __webpack_require__(11);\nvar materializedAtom = __webpack_require__(21);\n\nmodule.exports = onMaterializeFlatBuffer;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterializeFlatBuffer(json, path, depth, length, branchSelector, boxValues, results, requestedPath, optimizedPath, optimizedLength, fromReference, reportMissing, onMissing) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === path) {\n        onValueType(undefined, undefined, json, path, depth, undefined, results, requestedPath, depth, optimizedPath, optimizedLength, fromReference, undefined, undefined, false, branchSelector, boxValues, false, reportMissing, false, undefined, onMissing, undefined);\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta, f_old_keys, f_new_keys;\n\n    var nextKey,\n        keyset,\n        keyIsRange,\n        keys = path['$keys'],\n        nextDepth = depth + 1,\n        rangeEnd,\n        nextOptimizedLength = optimizedLength + 1;\n\n    if (!json || typeofObject !== typeof json) {\n        json = {};\n        json.__proto__ = FalcorJSON.prototype;\n        json[\"\u001eƒ_meta\"] = f_meta = {};\n        f_meta[\"version\"] = 0;\n        f_meta[\"abs_path\"] = optimizedPath.slice(0, optimizedLength);\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[\"\u001eƒ_meta\"])) {\n        json[\"\u001eƒ_meta\"] = f_meta = {};\n        f_meta[\"version\"] = 0;\n        f_meta[\"abs_path\"] = optimizedPath.slice(0, optimizedLength);\n    } else {\n        f_old_keys = f_meta[\"keys\"];\n        f_meta[\"abs_path\"] = optimizedPath.slice(0, optimizedLength);\n    }\n\n    f_new_keys = {};\n\n    var nextPath;\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    iteratingKeyset: while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if (typeofObject !== typeof keyset) {\n                nextKey = keyset;\n                rangeEnd = undefined;\n                keyIsRange = false;\n            }\n            // If the Keyset isn't null or primitive, then it must be a Range.\n            else {\n                    rangeEnd = keyset.to;\n                    nextKey = keyset.from || 0;\n                    if (typeofNumber !== typeof rangeEnd) {\n                        rangeEnd = nextKey + (keyset.length || 0) - 1;\n                    }\n                    if (rangeEnd - nextKey < 0) {\n                        break iteratingKeyset;\n                    }\n                    keyIsRange = true;\n                }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && nextKey in f_old_keys) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // insert the materialized branch\n            json[nextKey] = onMaterializeFlatBuffer(json[nextKey], nextPath, nextDepth, nextDepth, branchSelector, boxValues, results, requestedPath, optimizedPath, nextOptimizedLength, fromReference, reportMissing, onMissing);\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n    }\n\n    f_meta['$code'] = '__incomplete__';\n    f_meta[\"keys\"] = f_new_keys;\n    if (f_old_keys) {\n        for (nextKey in f_old_keys) {\n            if (f_old_keys[nextKey]) {\n                delete json[nextKey];\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isInternalKey = __webpack_require__(20);\n\n/**\n * decends and copies the cache.\n */\nmodule.exports = function getCache(cache) {\n    var out = {};\n    _copyCache(cache, out);\n\n    return out;\n};\n\nfunction cloneBoxedValue(boxedValue) {\n    var clonedValue = {};\n\n    var keys = Object.keys(boxedValue);\n    var key;\n    var i;\n    var l;\n\n    for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n\n        if (key === '$type' || !isInternalKey(key)) {\n            clonedValue[key] = boxedValue[key];\n        }\n    }\n\n    return clonedValue;\n}\n\nfunction _copyCache(node, out, fromKey) {\n    // copy and return\n\n    // only copy objects\n    if (!node || typeof node !== 'object') {\n        return;\n    }\n\n    Object.keys(node).filter(function (key) {\n        // Its not an internal key and the node has a value.  In the cache\n        // there are 3 possibilities for values.\n        // 1: A branch node.\n        // 2: A $type-value node.\n        // 3: undefined\n        // We will strip out 3\n        return (key === '$type' || !isInternalKey(key)) && node[key] !== undefined;\n    }).forEach(function (key) {\n        var cacheNext = node[key];\n        var outNext = out[key];\n\n        if (!outNext) {\n            outNext = out[key] = {};\n        }\n\n        // Paste the node into the out cache.\n        if (cacheNext.$type) {\n            var isObject = cacheNext.value && typeof cacheNext.value === 'object';\n            var isUserCreatedcacheNext = !cacheNext[\"\u001eƒ_wrapped_value\"];\n            var value;\n            if (isObject || isUserCreatedcacheNext) {\n                value = cloneBoxedValue(cacheNext);\n            } else {\n                value = cacheNext.value;\n            }\n\n            out[key] = value;\n            return;\n        }\n\n        _copyCache(cacheNext, outNext, key);\n    });\n}\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar getBoundCacheNode = __webpack_require__(16);\n\nmodule.exports = function _getVersion(model, path) {\n    var node = getBoundCacheNode(model, path);\n    var version = node && node[\"\u001eƒ_version\"];\n    return version == null ? -1 : version;\n};\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar groupCacheArguments = __webpack_require__(39);\n\nmodule.exports = {\n    json: invalidate,\n    jsonGraph: invalidate,\n    invalidatePathMaps: __webpack_require__(41),\n    invalidatePathValues: __webpack_require__(26)\n};\n\nfunction invalidate(model, args, seed, progressive, expireImmediate) {\n    invalidateArgumentGroups(model, groupCacheArguments(args), expireImmediate);\n    return {};\n}\n\nfunction invalidateArgumentGroups(model, xs, expireImmediate) {\n\n    var groupIndex = -1;\n    var groupCount = xs.length;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            if (inputType === 'PathValues') {\n                groupedArgs = groupedArgs.map(pluckPaths);\n            }\n            module.exports['invalidate' + inputType](model, groupedArgs, expireImmediate);\n        }\n    }\n}\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar wrapNode = __webpack_require__(46);\nvar isExpired = __webpack_require__(0);\nvar insertNode = __webpack_require__(40);\nvar expireNode = __webpack_require__(1);\nvar replaceNode = __webpack_require__(44);\nvar getSize = __webpack_require__(8);\nvar reconstructPath = __webpack_require__(43);\nvar getTimestamp = __webpack_require__(30);\nvar updateNodeAncestors = __webpack_require__(10);\n\nmodule.exports = function mergeJSONGraphNode(parent, node, message, key, requestedPath, optimizedPath, version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var sizeOffset;\n\n    var cType, mType, cIsObject, mIsObject, cTimestamp, mTimestamp;\n\n    // If the cache and message are the same, we can probably return early:\n    // - If they're both nullsy,\n    //   - If null then the node needs to be wrapped in an atom and inserted.\n    //     This happens from whole branch merging when a leaf is just a null value\n    //     instead of being wrapped in an atom.\n    //   - If undefined then return null (previous behavior).\n    // - If they're both branches, return the branch.\n    // - If they're both edges, continue below.\n    if (node === message) {\n\n        // The message and cache are both undefined, return undefined.\n        if (message === undefined) {\n            return message;\n        }\n        // There should not be undefined values. Those should always be\n        // wrapped in an $atom\n        else if (message === null) {\n                node = wrapNode(message, undefined, message);\n                parent = updateNodeAncestors(parent, -node.$size, lru, version);\n                node = insertNode(node, parent, key, undefined, optimizedPath);\n                return node;\n            }\n            // Is the cache node a branch? If so, return the cache branch.\n            else if ((cIsObject = !(!node || typeof node !== 'object')) && (cType = node.$type) === undefined) {\n                    // Has the branch been introduced to the cache yet? If not,\n                    // give it a parent, key, and absolute path.\n                    if (node[\"\u001eƒ_parent\"] === undefined) {\n                        insertNode(node, parent, key, version, optimizedPath);\n                    }\n                    return node;\n                }\n    } else if (cIsObject = !(!node || typeof node !== 'object')) {\n        cType = node.$type;\n    }\n\n    // If the cache isn't a reference, we might be able to return early.\n    if (cType !== \"ref\") {\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n        }\n        if (cIsObject && !cType) {\n            // If the cache is a branch and the message is empty or\n            // also a branch, continue with the cache branch.\n            if (message == null || mIsObject && !mType) {\n                return node;\n            }\n        }\n    }\n    // If the cache is a reference, we might not need to replace it.\n    else {\n            // If the cache is a reference, but the message is empty,\n            // leave the cache alone...\n            if (message == null) {\n                // ...unless the cache is an expired reference. In that case, expire\n                // the cache node and return undefined.\n                if (isExpired(node, expireImmediate)) {\n                    expireNode(node, expired, lru);\n                    return void 0;\n                }\n                return node;\n            }\n            mIsObject = !(!message || typeof message !== 'object');\n            if (mIsObject) {\n                mType = message.$type;\n                // If the cache and the message are both references,\n                // check if we need to replace the cache reference.\n                if (mType === \"ref\") {\n                    if (node === message) {\n                        // If the cache and message are the same reference,\n                        // we performed a whole-branch merge of one of the\n                        // grandparents. If we've previously graphed this\n                        // reference, break early. Otherwise, continue to\n                        // leaf insertion below.\n                        if (node[\"\u001eƒ_parent\"] != null) {\n                            return node;\n                        }\n                    } else {\n\n                        cTimestamp = node.$timestamp;\n                        mTimestamp = message.$timestamp;\n\n                        // - If either the cache or message reference is expired,\n                        //   replace the cache reference with the message.\n                        // - If neither of the references are expired, compare their\n                        //   timestamps. If either of them don't have a timestamp,\n                        //   or the message's timestamp is newer, replace the cache\n                        //   reference with the message reference.\n                        // - If the message reference is older than the cache\n                        //   reference, short-circuit.\n                        if (!isExpired(node, expireImmediate) && !isExpired(message, expireImmediate) && mTimestamp < cTimestamp) {\n                            return void 0;\n                        }\n                    }\n                }\n            }\n        }\n\n    // If the cache is a leaf but the message is a branch,\n    // merge the branch over the leaf.\n    if (cType && mIsObject && !mType) {\n        return insertNode(replaceNode(node, message, parent, key, lru, version), parent, key, undefined, optimizedPath);\n    }\n    // If the message is a sentinel or primitive, insert it into the cache.\n    else if (mType || !mIsObject) {\n\n            if (mType === \"error\" && errorSelector) {\n                message = errorSelector(reconstructPath(requestedPath, key), message);\n            }\n\n            // If the cache and the message are the same value, we branch-merged one\n            // of the message's ancestors. If this is the first time we've seen this\n            // leaf, give the message a $size and $type, attach its graph pointers,\n            // and update the cache sizes and versions.\n            if (mType && node === message) {\n                if (!node[\"\u001eƒ_parent\"]) {\n                    node = wrapNode(node, cType, node.value);\n                    parent = updateNodeAncestors(parent, -node.$size, lru, version);\n                    node = insertNode(node, parent, key, version, optimizedPath);\n                }\n            }\n            // If the cache and message are different, the cache value is expired,\n            // or the message is a primitive, replace the cache with the message value.\n            // If the message is a sentinel, clone and maintain its type.\n            // If the message is a primitive value, wrap it in an atom.\n            else {\n                    var isDistinct = true;\n                    // If both the cache and message are primitives, we branch-merged\n                    // one of the message's ancestors. Insert the value into the cache.\n                    if (!cType && !mType) {\n                        isDistinct = true;\n                    }\n                    // If the cache is a branch, but the message is a leaf, replace the\n                    // cache branch with the message leaf.\n                    else if (!cIsObject || !isExpired(node, expireImmediate)) {\n                            // Compare the current cache value with the new value. If either of\n                            // them don't have a timestamp, or the message's timestamp is newer,\n                            // replace the cache value with the message value. If a comparator\n                            // is specified, the comparator takes precedence over timestamps.\n                            if (comparator) {\n                                isDistinct = !(comparator.length < 3 ? comparator(node, message) : comparator(node, message, optimizedPath.slice(0, optimizedPath.index)));\n                            } else {\n                                // Comparing either Number or undefined to undefined always results in false.\n                                isDistinct = getTimestamp(message) < getTimestamp(node) === false;\n                            }\n                        }\n                    if (isDistinct) {\n                        sizeOffset = getSize(node) - getSize(message = wrapNode(message, mType, mType ? message.value : message));\n                        node = replaceNode(node, message, parent, key, lru, version);\n                        parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n                        node = insertNode(node, parent, key, version, optimizedPath);\n                    }\n                }\n\n            // Promote the message edge in the LRU.\n            if (isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge.\n             */\n            true)) {\n                expireNode(node, expired, lru);\n            }\n        } else if (node == null) {\n            node = insertNode(message, parent, key, undefined, optimizedPath);\n        }\n\n    return node;\n};\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar getJSON = __webpack_require__(22);\nvar getJSONGraph = __webpack_require__(23);\nvar arrayFlatMap = __webpack_require__(91);\nvar groupCacheArguments = __webpack_require__(39);\n\nmodule.exports = {\n    json: json,\n    jsonGraph: jsonGraph,\n    setPathMaps: __webpack_require__(19),\n    setPathValues: __webpack_require__(28),\n    setJSONGraphs: __webpack_require__(18)\n};\n\nfunction json(model, _args, data, progressive, expireImmediate) {\n\n    var set,\n        get,\n        jsong,\n        changed,\n        relative,\n        optimized,\n        missing,\n        fragments,\n        requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args, expireImmediate);\n\n    if ((relative = set.requested).length) {\n\n        if (!(changed = set.changed) || progressive) {\n            get = getJSON(model, relative, data, progressive, expireImmediate);\n        }\n\n        if (changed) {\n\n            jsong = getJSONGraph({\n                _root: model._root,\n                _boxed: model._boxed, _materialized: true,\n                _treatErrorsAsValues: model._treatErrorsAsValues\n            }, set.optimized, {}, progressive, expireImmediate);\n\n            fragments = jsong.data;\n            missing = fragments.paths;\n            requested = jsong.requested;\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: get && get.error,\n        errors: get && get.errors,\n        hasValue: get && get.hasValue\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive, expireImmediate) {\n\n    var set,\n        jsong,\n        changed,\n        relative,\n        optimized,\n        missing,\n        fragments,\n        requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args, expireImmediate);\n\n    if ((relative = set.requested).length && (progressive || set.changed)) {\n\n        jsong = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed, _materialized: true,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, set.optimized, data, progressive, expireImmediate);\n\n        fragments = jsong.data;\n        missing = fragments.paths;\n        requested = jsong.requested;\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: jsong && jsong.error,\n        hasValue: jsong && jsong.hasValue\n    };\n}\n\nfunction setGroupsIntoCache(model, xs, expireImmediate) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var modelRoot = model._root;\n    var errorSelector = modelRoot.errorSelector;\n\n    expireImmediate = expireImmediate && !Boolean(model._source);\n    var comparator = Boolean(model._source) ? null : modelRoot.comparator;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            var operation = module.exports['set' + inputType];\n            var results = operation(model, groupedArgs, errorSelector, comparator, expireImmediate);\n            changed = changed || results[2];\n            optimizedPaths.push.apply(optimizedPaths, results[1]);\n            if (inputType === 'PathValues') {\n                requestedPaths.push.apply(requestedPaths, groupedArgs.map(pluckPaths));\n            } else if (inputType === 'JSONGraphs') {\n                requestedPaths.push.apply(requestedPaths, arrayFlatMap(groupedArgs, pluckPaths));\n            } else {\n                requestedPaths.push.apply(requestedPaths, results[0]);\n            }\n        }\n    }\n\n    return {\n        changed: changed,\n        requested: requestedPaths,\n        optimized: optimizedPaths\n    };\n}\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function transferBackReferences(fromNode, destNode) {\n    var fromNodeRefsLength = fromNode[\"\u001eƒ_refs_length\"] || 0,\n        destNodeRefsLength = destNode[\"\u001eƒ_refs_length\"] || 0,\n        i = -1;\n    while (++i < fromNodeRefsLength) {\n        var ref = fromNode[\"\u001eƒ_ref\" + i];\n        if (ref !== void 0) {\n            ref[\"\u001eƒ_context\"] = destNode;\n            destNode[\"\u001eƒ_ref\" + (destNodeRefsLength + i)] = ref;\n            fromNode[\"\u001eƒ_ref\" + i] = void 0;\n        }\n    }\n    destNode[\"\u001eƒ_refs_length\"] = fromNodeRefsLength + destNodeRefsLength;\n    fromNode[\"\u001eƒ_refs_length\"] = void 0;\n    return destNode;\n};\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function unlinkBackReferences(node) {\n    var i = -1,\n        n = node[\"\u001eƒ_refs_length\"] || 0;\n    while (++i < n) {\n        var ref = node[\"\u001eƒ_ref\" + i];\n        if (ref != null) {\n            ref[\"\u001eƒ_context\"] = ref[\"\u001eƒ_ref_index\"] = node[\"\u001eƒ_ref\" + i] = void 0;\n        }\n    }\n    node[\"\u001eƒ_refs_length\"] = void 0;\n    return node;\n};\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = function unlinkForwardReference(reference) {\n    var destination = reference[\"\u001eƒ_context\"];\n    if (destination) {\n        var i = (reference[\"\u001eƒ_ref_index\"] || 0) - 1,\n            n = (destination[\"\u001eƒ_refs_length\"] || 0) - 1;\n        while (++i <= n) {\n            destination[\"\u001eƒ_ref\" + i] = destination[\"\u001eƒ_ref\" + (i + 1)];\n        }\n        destination[\"\u001eƒ_refs_length\"] = n;\n        reference[\"\u001eƒ_ref_index\"] = reference[\"\u001eƒ_context\"] = destination = void 0;\n    }\n    return reference;\n};\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = hasValidParentReference;\n\nfunction hasValidParentReference() {\n    var reference = this._referenceContainer;\n\n    // Always true when this mode is false.\n    if (!this._allowFromWhenceYouCame) {\n        return true;\n    }\n\n    // If fromWhenceYouCame is true and the first set of keys did not have\n    // a reference, this case can happen.  They are always valid.\n    if (reference === true) {\n        return true;\n    }\n\n    // was invalid before even derefing.\n    if (reference === false) {\n        return false;\n    }\n\n    // Its been disconnected (set over or collected) from the graph.\n    if (reference && reference[\"\u001eƒ_parent\"] === undefined) {\n        return false;\n    }\n\n    // The reference has expired but has not been collected from the graph.\n    if (reference && reference[\"\u001eƒ_invalidated\"]) {\n        return false;\n    }\n\n    return true;\n}\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar CONTAINER_DOES_NOT_EXIST = 'e';\nvar FalcorJSON = __webpack_require__(2);\nvar getCachePosition = __webpack_require__(9);\nvar InvalidDerefInputError = __webpack_require__(82);\n\nmodule.exports = function deref(json) {\n\n    var seed, f_meta;\n\n    if (!json || 'object' !== typeof json || !(f_meta = json[\"\u001eƒ_meta\"]) || 'object' !== typeof f_meta) {\n        return null;\n    }\n\n    var cacheRoot = this._root.cache;\n    var recycleJSON = this._recycleJSON;\n    var absolutePath = f_meta[\"abs_path\"];\n    var referenceContainer, currentRefPath, i, len;\n\n    if (!absolutePath) {\n        if (recycleJSON) {\n            seed = { json: json };\n            seed.__proto__ = FalcorJSON.prototype;\n        }\n        return this._clone({\n            _node: undefined,\n            _seed: seed\n        });\n    } else if (absolutePath.length === 0) {\n        if (recycleJSON) {\n            seed = { json: json };\n            seed.__proto__ = FalcorJSON.prototype;\n        }\n        return this._clone({\n            _node: cacheRoot,\n            _path: absolutePath,\n            _referenceContainer: true,\n            _seed: seed\n        });\n    }\n\n    var originalRefPath = f_meta[\"deref_to\"];\n    var originalAbsPath = f_meta[\"deref_from\"];\n\n    // We deref and then ensure that the reference container is attached to\n    // the model.\n    var cacheNode = getCachePosition(cacheRoot, absolutePath);\n    var validContainer = CONTAINER_DOES_NOT_EXIST;\n\n    if (originalAbsPath) {\n\n        validContainer = false;\n\n        i = -1;\n        len = originalAbsPath.length;\n        referenceContainer = cacheRoot;\n        while (++i < len) {\n            referenceContainer = referenceContainer[originalAbsPath[i]];\n            if (!referenceContainer || referenceContainer.$type) {\n                break;\n            }\n        }\n\n        // If the reference container is still a sentinel value then compare\n        // the reference value with refPath.  If they are the same, then the\n        // model is still valid.\n        if (originalRefPath && referenceContainer && referenceContainer.$type === \"ref\") {\n            validContainer = true;\n            len = originalRefPath.length;\n            currentRefPath = referenceContainer.value;\n            for (i = 0; i < len; ++i) {\n                if (currentRefPath[i] !== originalRefPath[i]) {\n                    cacheNode = undefined;\n                    validContainer = false;\n                    break;\n                }\n            }\n        }\n    }\n\n    // Signal to the deref'd model that it has been disconnected from the\n    // graph or there is no _fromWhenceYouCame\n    if (!validContainer) {\n        referenceContainer = false;\n    }\n\n    // The container did not exist, therefore there is no reference\n    // container and fromWhenceYouCame should always return true.\n    else if (validContainer === CONTAINER_DOES_NOT_EXIST) {\n            referenceContainer = true;\n        }\n\n    if (recycleJSON) {\n        seed = { json: json };\n        seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    return this._clone({\n        _seed: seed,\n        _node: cacheNode,\n        _path: absolutePath,\n        _referenceContainer: referenceContainer\n    });\n};\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\nvar MESSAGE = 'It is not legal to use the JSON Graph ' + 'format from a bound Model. JSON Graph format' + ' can only be used from a root model.';\n\n/**\n * When a bound model attempts to retrieve JSONGraph it should throw an\n * error.\n *\n * @private\n */\nmodule.exports = createErrorClass('BoundJSONGraphModelError', function () {\n    this.message = MESSAGE;\n});\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\nvar MESSAGE = 'Deref can only be used with a non-primitive object from get, set, or call.';\n\n/**\n * An invalid deref input is when deref is used with input that is not generated\n * from a get, set, or a call.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidDerefInputError', function () {\n  this.message = MESSAGE;\n});\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\nvar MESSAGE = 'The boundPath of the model is not valid since a value or error was found before the path end.';\n\n/**\n * An InvalidModelError can only happen when a user binds, whether sync\n * or async to shorted value.  See the unit tests for examples.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidModelError', function (boundPath, shortedPath) {\n  this.message = MESSAGE;\n  this.boundPath = boundPath;\n  this.shortedPath = shortedPath;\n});\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar createErrorClass = __webpack_require__(4);\n\n/**\n * A request can only be retried up to a specified limit.  Once that\n * limit is exceeded, then an error will be thrown.\n *\n * @private\n */\nmodule.exports = createErrorClass('MaxRetryExceededError', function (maxRetryCount, absolute, relative, optimized) {\n    this.message = '' + 'Exceeded the max retry count (' + maxRetryCount + ') for these paths: \\n' + (absolute && 'absolute: [\\n\\t' + printPaths(absolute) + '\\n]\\n' || '') + (relative && 'relative: [\\n\\t' + printPaths(relative) + '\\n]\\n' || '') + (optimized && 'optimized: [\\n\\t' + printPaths(optimized) + '\\n]\\n' || '');\n});\n\nfunction printPaths(paths) {\n    return paths.map(function (path) {\n        return JSON.stringify(path);\n    }).join(',\\n\\t');\n}\n\n/***/ },\n/* 85 */\n/***/ function(module, exports) {\n\nmodule.exports = String.fromCharCode(30) + 'ƒ_';\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Source = __webpack_require__(51);\nvar Subscriber = __webpack_require__(13);\nvar lruCollect = __webpack_require__(49);\nvar FalcorJSON = __webpack_require__(2);\nvar collapse = __webpack_require__(57);\nvar InvalidSourceError = __webpack_require__(48);\nvar MaxRetryExceededError = __webpack_require__(84);\n\nmodule.exports = Call;\n\nfunction Call(type, model, _args) {\n    Source.call(this, type);\n    if (model && _args) {\n        this.type = type;\n        this.source = this;\n        this.model = model;\n        this._args = _args;\n    }\n}\n\nCall.prototype = Object.create(Source.prototype);\n\nCall.prototype.lift = function (operator, source) {\n    source = new Call(source || this);\n    source.type = this.type;\n    source.model = this.model;\n    source._args = this._args;\n    source.operator = operator;\n    operator.data = operator.data || this.operator.data;\n    operator.errors = operator.errors || this.operator.errors;\n    operator.operation = operator.operation || this.operator.operation;\n    operator.progressive = operator.progressive || this.operator.progressive;\n    operator.maxRetryCount = operator.maxRetryCount || this.operator.maxRetryCount;\n    return source;\n};\n\nCall.prototype.operator = function (subscriber) {\n    return this._subscribe(subscriber);\n};\n\nCall.prototype._subscribe = function (subscriber) {\n    subscriber.onNext({\n        type: this.type,\n        args: this._args,\n        model: this.model,\n        version: this.model._root.version\n    });\n    subscriber.onCompleted();\n    return subscriber;\n};\n\nCall.prototype._toJSON = function (data, errors) {\n    if (data === undefined) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    return this.lift(new CallOperator(data, errors || this.operator.errors, 'json', this.operator.progressive, this.operator.maxRetryCount), this.source);\n};\n\nCall.prototype._toJSONG = function (data, errors) {\n    if (data === undefined) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    return this.lift(new CallOperator(data, errors || this.operator.errors, 'jsonGraph', this.operator.progressive, this.operator.maxRetryCount), this.source);\n};\n\nCall.prototype.retry = function (maxRetryCount) {\n    return this.lift(new CallOperator(this.operator.data, this.operator.errors, this.operator.operation, this.operator.progresive, maxRetryCount), this.source);\n};\n\nCall.prototype.progressively = function () {\n    return this.lift(new CallOperator(this.operator.data, this.operator.errors, this.operator.operation, true, this.operator.maxRetryCount), this.source);\n};\n\nfunction CallOperator(data, errors, operation, progressive, maxRetryCount) {\n    this.data = data;\n    this.errors = errors;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallOperator.prototype.call = function (source, destination) {\n    return source.subscribe(new CallSubscriber(destination, this.data, this.errors, this.operation, this.progressive));\n};\n\nfunction CallSubscriber(destination, data, errors, operation, progressive, maxRetryCount) {\n    Subscriber.call(this, destination);\n    this.data = data;\n    this.retryCount = -1;\n    this.errors = errors;\n    this.hasValue = false;\n    this.completed = false;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallSubscriber.prototype = Object.create(Subscriber.prototype);\nCallSubscriber.prototype.operations = {\n    get: __webpack_require__(63),\n    set: __webpack_require__(75),\n    call: __webpack_require__(62),\n    invalidate: __webpack_require__(73)\n};\n\nCallSubscriber.prototype.next = CallSubscriber.prototype.onNext = function (seed) {\n\n    if (!this.started) {\n        this.args = seed.args;\n        this.type = seed.type;\n        this.model = seed.model;\n        this.version = seed.version;\n        this.maxRetryCount = this.maxRetryCount || this.model._root.maxRetryCount;\n        return;\n    }\n\n    var missing, fragments;\n    var type = seed.type;\n    var args = seed.args || seed.paths;\n\n    var data = this.data;\n    var model = this.model;\n    var errors = this.errors;\n    var results = this.results;\n    var version = this.version;\n    var hasValue = this.hasValue;\n    var operation = this.operation;\n    var progressive = this.progressive;\n\n    var seedIsImmutable = progressive && data;\n\n    // If we request paths as JSON in progressive mode, ensure each progressive\n    // valueNode is immutable. If not in progressive mode, we can write into the\n    // same JSON tree until the request is completed.\n    if (seedIsImmutable) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n\n    if (args && args.length) {\n\n        results = this.operations[type][operation](model, args, data, progressive || !model._source, this.retryCount === -1);\n\n        // We must communicate critical errors from get, such as bound path is\n        // broken or this is a JSONGraph request with a bound path.\n        if (results.error) {\n            return tryOnError(this, results.error);\n        }\n\n        errors && results.errors && errors.push.apply(errors, results.errors);\n\n        if (fragments = results.fragments) {\n            args = results.args;\n            this.fragments = fragments;\n        }\n\n        this.relative = results.relative;\n        this.requested = results.requested;\n        this.missing = missing = results.missing;\n        this.hasValue = hasValue || (hasValue = results.hasValue);\n    }\n\n    // We are done when there are no missing paths or\n    // the model does not have a dataSource to fetch from.\n    this.completed = !missing || !model._source;\n\n    if (type !== 'set') {\n        this.args = args;\n        if (seedIsImmutable) {\n            this.data = mergeInto(data, this.data);\n        }\n    }\n\n    if (progressive && hasValue && data && (data.json || data.jsonGraph)) {\n        tryOnNext(data, operation, model._root, this.destination);\n    }\n};\n\nCallSubscriber.prototype.error = CallSubscriber.prototype.onError = function (error) {\n    if (error instanceof InvalidSourceError) {\n        return Subscriber.prototype.onError.call(this, error);\n    }\n    this.errored = true;\n    this.onCompleted(error);\n};\n\nCallSubscriber.prototype.complete = CallSubscriber.prototype.onCompleted = function (error) {\n\n    var data, type, errors, errored;\n\n    if (!this.started && (this.started = true)) {\n        this.onNext(this);\n    } else if (errored = this.errored) {\n        this.onNext({ type: 'get', paths: this.relative });\n    }\n\n    if (errored || this.completed) {\n        if (!this.progressive && this.hasValue && ((data = this.data) && data.json || data.jsonGraph)) {\n            tryOnNext(data, this.operation, this.model._root, this.destination);\n        }\n        errors = this.errors;\n        if (errored || error || errors && errors.length) {\n            return tryOnError(this, errors.length && errors || error);\n        }\n\n        return Subscriber.prototype.onCompleted.call(this);\n    }\n\n    if (++this.retryCount >= this.maxRetryCount) {\n        return tryOnError(this, new MaxRetryExceededError(this.retryCount, this.requested, this.relative, this.missing));\n    }\n\n    this.request = this.model._root.requests[this.type](this.model, this.missing, this.relative, this.fragments).subscribe(this);\n};\n\nCallSubscriber.prototype.dispose = CallSubscriber.prototype.unsubscribe = function () {\n\n    var model = this.model;\n    var version = this.version;\n    var request = this.request;\n\n    this.args = null;\n    this.data = null;\n    this.model = null;\n    this.errors = null;\n    this.errored = false;\n    this.started = false;\n    this.hasValue = false;\n    this.completed = false;\n\n    Subscriber.prototype.dispose.call(this);\n\n    if (request) {\n        this.request = null;\n        request.dispose();\n    }\n\n    if (model) {\n\n        var modelRoot = model._root;\n        var cache = modelRoot.cache;\n        var shouldCollectCache = modelRoot.syncRefCount <= 0 && version !== modelRoot.version;\n\n        // Prune the cache via the LRU if this is the last request.\n        if (shouldCollectCache) {\n\n            if (cache) {\n                lruCollect(modelRoot, modelRoot.expired, cache.$size || 0, modelRoot.maxSize, modelRoot.collectRatio, modelRoot.version);\n            }\n\n            var rootOnChangesCompletedHandler = modelRoot.onChangesCompleted;\n\n            if (rootOnChangesCompletedHandler) {\n                rootOnChangesCompletedHandler.call(modelRoot.topLevelModel);\n            }\n        }\n    }\n};\n\nfunction tryOnNext(data, operation, modelRoot, destination) {\n    if (operation === 'jsonGraph' && data.paths) {\n        data.paths = collapse(data.paths);\n    }\n    try {\n        ++modelRoot.syncRefCount;\n        destination.onNext(data);\n    } catch (e) {\n        throw e;\n    } finally {\n        --modelRoot.syncRefCount;\n    }\n}\n\nfunction tryOnError(self, error) {\n    try {\n        throw error;\n    } catch (err) {\n        Subscriber.prototype.onError.call(self, err);\n    }\n}\n\nfunction mergeInto(dest, node) {\n\n    var destValue,\n        nodeValue,\n        key,\n        keys = Object.keys(node),\n        index = -1,\n        length = keys.length;\n\n    while (++index < length) {\n\n        key = keys[index];\n\n        if (key === \"\u001eƒ_meta\") {\n            dest[\"\u001eƒ_meta\"] = node[\"\u001eƒ_meta\"];\n        } else {\n\n            nodeValue = node[key];\n            destValue = dest[key];\n\n            if (destValue !== nodeValue) {\n                if (!nodeValue || typeof nodeValue !== 'object') {\n                    if (destValue === undefined) {\n                        dest[key] = nodeValue;\n                    }\n                } else if (destValue === undefined) {\n                    dest[key] = nodeValue;\n                } else {\n                    mergeInto(destValue, nodeValue);\n                }\n            }\n        }\n    }\n\n    return dest;\n}\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Source = __webpack_require__(51);\nvar Request = __webpack_require__(88);\nvar Subscriber = __webpack_require__(13);\nvar Subscription = __webpack_require__(14);\nvar ImmediateScheduler = __webpack_require__(52);\n\nmodule.exports = Queue;\n\nfunction Queue(modelRoot) {\n    Subscription.call(this, []);\n    this.modelRoot = modelRoot;\n}\n\nQueue.prototype = Object.create(Subscription.prototype);\n\nQueue.prototype.set = isolateSet;\nQueue.prototype.call = isolateCall;\nQueue.prototype.get = batchAndDedupeGet;\n\nfunction isolateSet(model, optimized, requested, env) {\n    var queue = this;\n    return new Source(function (destination) {\n\n        var request = new Request('set', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = env.jsonGraph;\n        request.requested.push(requested);\n        request.optimized.push(optimized);\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction isolateCall(model, optimized, requested, callArgs) {\n    var queue = this;\n    return new Source(function (destination) {\n\n        var request = new Request('call', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = callArgs;\n        request.boundPath = model._path;\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction batchAndDedupeGet(model, optimized, requested) {\n    return new Dedupe(this, model._source, model._scheduler, requested, optimized);\n}\n\nfunction Dedupe(queue, source, scheduler, requested, optimized) {\n    this.queue = queue;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n    this.requested = requested;\n    this.optimized = optimized;\n}\n\nDedupe.prototype.subscribe = function (destination) {\n\n    var queue = this.queue;\n    var source = this.dataSource;\n    var requested = this.requested;\n    var optimized = this.optimized;\n    var scheduler = this.scheduler;\n\n    var requestsIndex = -1;\n    var requests = queue.subscriptions;\n    var requestsCount = requests.length;\n    var subscription = new Subscription([], destination);\n\n    while (++requestsIndex < requestsCount) {\n\n        var request = requests[requestsIndex];\n\n        if (request.type !== 'get') {\n            continue;\n        }\n\n        if (request = request.batch(requested, optimized, requested = [], optimized = [])) {\n            subscription.add(request.subscribe(new Subscriber(destination, request)));\n        }\n\n        if (!optimized.length) {\n            break;\n        }\n    }\n\n    if (optimized.length) {\n        request = requests[requestsIndex] = new Request('get', queue, source, scheduler).batch(requested, optimized);\n        subscription.add(request.subscribe(new Subscriber(destination, request)));\n        request.connect();\n    }\n\n    return subscription;\n};\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar Subject = __webpack_require__(89);\nvar Subscriber = __webpack_require__(13);\nvar Subscription = __webpack_require__(14);\nvar InvalidSourceError = __webpack_require__(48);\n\nvar setJSONGraphs = __webpack_require__(18);\nvar setPathValues = __webpack_require__(28);\nvar invalidatePaths = __webpack_require__(26);\n\nvar toPaths = __webpack_require__(107);\nvar toCollapseMap = __webpack_require__(104);\nvar toCollapseTrees = __webpack_require__(105);\nvar hasIntersection = __webpack_require__(103);\n\nmodule.exports = Request;\n\nfunction Request(type, queue, source, scheduler) {\n    Subject.call(this, [], queue);\n    this.tree = {};\n    this.paths = [];\n    this.type = type;\n    this.data = null;\n    this.active = false;\n    this.responded = false;\n    this.requested = [];\n    this.optimized = [];\n    this.disposable = null;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n}\n\nRequest.prototype = Object.create(Subject.prototype);\n\nRequest.prototype.next = Request.prototype.onNext = function (envelopes) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    var env = envelopes,\n        envelopeIndex = 0,\n        envelopeCount = 0;\n\n    if (isArray(envelopes)) {\n        if ((envelopeCount = envelopes.length) <= 0) {\n            return;\n        }\n        env = envelopes[0];\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    var boundPath = this.boundPath;\n\n    do {\n\n        var jsonGraph = env.jsonGraph;\n        var requested = this.requested;\n        var modelRoot = queue.modelRoot;\n        var invalidated = env.invalidated;\n        var paths = env.paths || this.paths;\n\n        // Run invalidations first.\n        if (invalidated && invalidated.length) {\n            invalidatePaths({ _root: modelRoot, _path: [] }, invalidated, false);\n        }\n\n        if (paths && paths.length && !(!jsonGraph || typeof jsonGraph !== 'object')) {\n            paths = setJSONGraphs({ _root: modelRoot }, [{ paths: paths, jsonGraph: jsonGraph }], modelRoot.errorSelector, modelRoot.comparator, false)[0];\n        }\n    } while (++envelopeIndex < envelopeCount && (env = envelopes[envelopeIndex]));\n\n    this.observers.slice(0).forEach(function (observer, index) {\n        observer.onNext({\n            type: 'get', paths: requested[index] || filterPathsBoundTo(boundPath, paths)\n        });\n    });\n};\n\nRequest.prototype.error = Request.prototype.onError = function (error) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    error = error || {};\n\n    // Converts errors to object we can insert into the cache.\n    error = !(error instanceof Error) ?\n    // if it's $type error, use it raw\n    error.$type === \"error\" && error ||\n    // Otherwise make it an error\n    { $type: \"error\", value: error } :\n    // If it's instanceof Error, pluck error.message\n    { $type: \"error\", value: { message: error.message } };\n\n    var modelRoot = queue.modelRoot;\n\n    var errorPathValues = toPaths(toCollapseTrees(this.requested.reduce(function (collapseMap, paths) {\n        return toCollapseMap(paths, collapseMap);\n    }, {}))).map(function (path) {\n        return { path: path, value: error };\n    });\n\n    if (errorPathValues.length) {\n        setPathValues({ _root: modelRoot, _path: [] }, errorPathValues, modelRoot.errorSelector, modelRoot.comparator, false);\n    }\n\n    Subject.prototype.onError.call(this, error);\n};\n\nRequest.prototype.complete = Request.prototype.onCompleted = function () {\n    if (this.responded === false) {\n        this.onNext({});\n    }\n    Subject.prototype.onCompleted.call(this);\n};\n\nRequest.prototype.remove = function (subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.requested.splice(index, 1);\n        this.optimized.splice(index, 1);\n        this.observers.splice(index, 1);\n        this.subscriptions.splice(index, 1);\n    }\n    if (this.subscriptions.length === 0) {\n        this.dispose();\n    }\n    return this;\n};\n\nRequest.prototype.dispose = Request.prototype.unsubscribe = function () {\n    this.tree = {};\n    this.data = null;\n    this.paths = null;\n    this.active = false;\n    this.boundPath = null;\n    this.requested = [];\n    this.optimized = [];\n    var queue = this.parent;\n    if (queue) {\n        this.parent = null;\n        queue.remove(this);\n    }\n    var disposable = this.disposable;\n    if (disposable) {\n        this.disposable = null;\n        if (disposable.dispose) {\n            disposable.dispose();\n        } else if (disposable.unsubscribe) {\n            disposable.unsubscribe();\n        }\n    }\n    Subject.prototype.dispose.call(this);\n};\n\nRequest.prototype.connect = function () {\n    if (!this.active && !this.disposable) {\n        var scheduledDisposable = this.scheduler.schedule(flush.bind(this));\n        if (!this.disposable) {\n            this.disposable = scheduledDisposable;\n        }\n    }\n    return this;\n};\n\nRequest.prototype.batch = function (requested, optimized, requestedComplements, optimizedComplements) {\n    if (this.active) {\n        var requestedIntersection = [];\n        var optimizedIntersection = [];\n        if (findIntersections(this.tree, requested, optimized, requestedComplements, optimizedComplements, requestedIntersection, optimizedIntersection)) {\n            this.requested.push(requestedIntersection);\n            this.optimized.push(optimizedIntersection);\n            return this;\n        }\n        return null;\n    }\n    this.requested.push(requested);\n    this.optimized.push(optimized);\n    return this;\n};\n\nfunction flush() {\n\n    this.active = true;\n\n    var obs,\n        paths = this.paths = toPaths(this.tree = toCollapseTrees(this.optimized.reduce(function (collapseMap, paths) {\n        return toCollapseMap(paths, collapseMap);\n    }, {})));\n\n    try {\n        switch (this.type) {\n            case 'get':\n                obs = this.dataSource.get(paths);\n                break;\n            case 'set':\n                obs = this.dataSource.set({ paths: paths, jsonGraph: this.data });\n                break;\n            case 'call':\n                obs = this.dataSource.call.apply(this.dataSource, this.data);\n                break;\n        }\n        this.disposable = obs.subscribe(this);\n    } catch (e) {\n        this.disposable = {};\n        Subject.prototype.onError.call(this, new InvalidSourceError(e));\n    }\n}\n\nfunction findIntersections(tree, requested, optimized, requestedComplements, optimizedComplements, requestedIntersection, optimizedIntersection) {\n\n    var index = -1;\n    var complementIndex = -1;\n    var intersectionIndex = -1;\n    var optTotal = optimized.length;\n    var reqTotal = requested.length - 1;\n\n    while (++index < optTotal) {\n        var path = optimized[index];\n        var pathLen = path.length;\n        var subTree = tree[pathLen];\n        if (subTree && hasIntersection(subTree, path, 0, pathLen)) {\n            optimizedIntersection[++intersectionIndex] = path;\n            requestedIntersection[intersectionIndex] = requested[index < reqTotal ? index : reqTotal];\n        } else {\n            optimizedComplements[++complementIndex] = path;\n            requestedComplements[complementIndex] = requested[index < reqTotal ? index : reqTotal];\n        }\n    }\n\n    return ~intersectionIndex;\n}\n\nfunction filterPathsBoundTo(boundPath, paths) {\n\n    var boundLength;\n\n    if (!boundPath || (boundLength = boundPath.length) === 0) {\n        return paths;\n    }\n\n    var filtered = [],\n        filteredIndex = -1,\n        keyIndex;\n    var path,\n        pathsIndex = -1,\n        pathsCount = paths.length;\n\n    outer: while (++pathsIndex < pathsCount) {\n        path = paths[pathsIndex];\n        if (path.length > boundLength) {\n            keyIndex = 0;\n            do {\n                if (path[keyIndex] !== boundPath[keyIndex]) {\n                    continue outer;\n                }\n            } while (++keyIndex < boundLength);\n            filtered[++filteredIndex] = path.slice(boundLength);\n        }\n    }\n\n    return filtered;\n}\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Subscriber = __webpack_require__(13);\nvar Subscription = __webpack_require__(14);\n\nmodule.exports = Subject;\n\nfunction Subject(observers, parent) {\n    Subscriber.call(this, null, parent);\n    this.observers = observers || [];\n}\n\nSubject.prototype = Object.create(Subscriber.prototype);\n\n// Unused\n// Subject.prototype.onNext = function(value) {\n//     this.observers.slice(0).forEach(function(observer) {\n//         observer.onNext(value);\n//     });\n// }\n\nSubject.prototype.onError = function (error) {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function (observer) {\n        observer.onError(error);\n    });\n};\n\nSubject.prototype.onCompleted = function () {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function (observer) {\n        observer.onCompleted();\n    });\n};\n\nSubject.prototype.subscribe = function (subscriber) {\n    this.observers.push(subscriber);\n    this.subscriptions.push(subscriber = new Subscription([subscriber], this));\n    return subscriber;\n};\n\nSubject.prototype.dispose = Subject.prototype.unsubscribe = function () {\n    this.observers = [];\n};\n\n/***/ },\n/* 90 */\n/***/ function(module, exports) {\n\nfunction TimeoutScheduler(delay) {\n    this.delay = delay;\n}\n\nvar TimerDisposable = function TimerDisposable(id) {\n    this.id = id;\n    this.disposed = false;\n};\n\nTimeoutScheduler.prototype.schedule = function schedule(action) {\n    return new TimerDisposable(setTimeout(action, this.delay));\n};\n\nTimerDisposable.prototype.dispose = TimerDisposable.prototype.unsubscribe = function () {\n    if (!this.disposed) {\n        clearTimeout(this.id);\n        this.id = null;\n        this.disposed = true;\n    }\n};\n\nmodule.exports = TimeoutScheduler;\n\n/***/ },\n/* 91 */\n/***/ function(module, exports) {\n\nmodule.exports = function arrayFlatMap(array, selector) {\n    var index = -1;\n    var i = -1;\n    var n = array.length;\n    var array2 = [];\n    while (++i < n) {\n        var array3 = selector(array[i], i, array);\n        var j = -1;\n        var k = array3.length;\n        while (++j < k) {\n            array2[++index] = array3[j];\n        }\n    }\n    return array2;\n};\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar isInternal = __webpack_require__(29);\n\nmodule.exports = clone;\n\nfunction clone(source) {\n    var dest = source;\n    if (!(!dest || typeof dest !== 'object')) {\n        dest = isArray(source) ? [] : {};\n        for (var key in source) {\n            if (isInternal(key)) {\n                continue;\n            }\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(5);\nmodule.exports = function getSize(node) {\n    return isObject(node) && node.$expires || undefined;\n};\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(5);\n\nmodule.exports = function getType(node, anyType) {\n    var type = isObject(node) && node.$type || void 0;\n    if (anyType && type) {\n        return 'branch';\n    }\n    return type;\n};\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isArray = Array.isArray;\nvar isObject = __webpack_require__(5);\n\nmodule.exports = function isPathValue(pathValue) {\n    return isObject(pathValue) && (isArray(pathValue.path) || typeof pathValue.path === 'string');\n};\n\n/***/ },\n/* 96 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(97);\n\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global, module) {'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = __webpack_require__(98);\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (true) {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32), __webpack_require__(99)(module)))\n\n/***/ },\n/* 98 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n/***/ },\n/* 99 */\n/***/ function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.l; }\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.i; }\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n/***/ },\n/* 100 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/computeFlatBufferHash\");\n\n/***/ },\n/* 101 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/flatBufferToPaths\");\n\n/***/ },\n/* 102 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/getHashCode\");\n\n/***/ },\n/* 103 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/hasIntersection\");\n\n/***/ },\n/* 104 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/toCollapseMap\");\n\n/***/ },\n/* 105 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/toCollapseTrees\");\n\n/***/ },\n/* 106 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/toFlatBuffer\");\n\n/***/ },\n/* 107 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"@graphistry/falcor-path-utils/lib/toPaths\");\n\n/***/ },\n/* 108 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(58);\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// falcor.node.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 108);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7e761371508c317a8b8e","var now = require('../support/now');\nvar $now = require('../values/expires-now');\nvar $never = require('../values/expires-never');\n\nmodule.exports = function isExpired(node, expireImmediate) {\n    var exp = node.$expires;\n    if (exp === undefined || exp === null || exp === $never) {\n        return false;\n    } else if (exp === $now) {\n        return expireImmediate;\n    }\n    return exp < now();\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/isExpired.js","var splice = require('./../lru/splice');\n\nmodule.exports = function expireNode(node, expired, lru) {\n    if (!node[f_invalidated]) {\n        node[f_invalidated] = true;\n        expired.push(node);\n        splice(lru, node);\n    }\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/expireNode.js","function FalcorJSON(f_meta) {\n    if (!f_meta) {\n        this[f_meta_data] = {};\n    } else if (!(this[f_meta_data] = f_meta[f_meta_data])) {\n        this[f_meta_data] = f_meta;\n    }\n}\n\nObject.defineProperties(FalcorJSON.prototype, [\n        'concat', 'copyWithin', 'entries', 'every', 'fill', 'filter',\n        'find', 'findIndex', 'forEach', 'includes', 'indexOf', 'join',\n        'keys', 'lastIndexOf', 'map', 'pop', 'push', 'reduce', 'reduceRight',\n        'reverse', 'shift', 'slice', 'some', 'sort', 'splice', 'unshift', 'values'\n    ]\n    .reduce(function (descriptors, name) {\n        descriptors[name] = {\n            writable: true, enumerable: false,\n            value: bindArrayMethod(Array.prototype[name])\n        };\n        return descriptors;\n    }, {\n        toJSON: { enumerable: false, value: toJSON },\n        toProps: { enumerable: false, value: toProps },\n        toString: { enumerable: false, value: toString },\n        $__hash: {\n            enumerable: false,\n            get: function() {\n                var f_meta = this[f_meta_data];\n                return f_meta && f_meta['$code'] || '';\n            }\n        },\n        $__path: {\n            enumerable: false,\n            get: function() {\n                var f_meta = this[f_meta_data];\n                return f_meta && f_meta[f_meta_abs_path] || [];\n            }\n        },\n        $__version: {\n            enumerable: false,\n            get: function() {\n                var f_meta = this[f_meta_data];\n                return f_meta && f_meta[f_meta_version] || 0;\n            }\n        }\n    })\n);\n\nfunction bindArrayMethod(fn) {\n    return (bound.fn = fn) && bound;\n    function bound() {\n        return bound.fn.apply(this, arguments);\n    }\n}\n\nvar isArray = Array.isArray;\nvar typeofObject = 'object';\nvar typeofString = 'string';\n\nfunction getInst(inst) {\n    var typeofInst = typeof inst;\n    var argsLen = arguments.length;\n    if (argsLen === 0) {\n        inst = this;\n    } else if (typeofInst !== typeofString) {\n        if (!inst || typeofInst !== typeofObject) {\n            return inst;\n        }\n    } else if (argsLen !== 1) {\n        return inst;\n    } else {\n        inst = this;\n    }\n    return inst === global ? undefined : inst;\n}\n\nfunction toJSON() {\n    return serialize(getInst.apply(this, arguments), toJSON);\n}\n\nfunction toString(includeMetadata) {\n    return JSON.stringify(serialize(\n        getInst.call(this, this),\n        serialize, includeMetadata === true\n    ));\n}\n\nfunction toProps(inst) {\n\n    inst = getInst.apply(this, arguments);\n\n    var f_meta_inst, f_meta_json, version = 0;\n    var json = serialize(inst, toProps, true, true);\n\n    if (inst && (f_meta_inst = inst[f_meta_data])) {\n        version = f_meta_inst[f_meta_version];\n    }\n\n    if (!(!json || typeof json !== typeofObject)) {\n        if (f_meta_json = json[f_meta_data]) {\n            f_meta_json[f_meta_version] = version;\n        }\n    }\n\n    return json;\n}\n\nfunction serialize(inst, serializer, includeMetadata, createWithProto) {\n\n    if (!inst || typeof inst !== typeofObject) {\n        return inst;\n    }\n\n    var count, total, f_meta, keys, key, xs, ys;\n\n    if (isArray(inst)) {\n        xs = inst;\n    } else {\n\n        count = -1;\n        keys = Object.keys(inst);\n        total = keys.length;\n        xs = {};\n\n        if (createWithProto) {\n            xs.__proto__ = FalcorJSON.prototype;\n        }\n\n        if (includeMetadata && (f_meta = inst[f_meta_data])) {\n\n            var $code = f_meta['$code'];\n            var abs_path = f_meta[f_meta_abs_path];\n            var deref_to = f_meta[f_meta_deref_to];\n            var deref_from = f_meta[f_meta_deref_from];\n\n            f_meta = {};\n            $code && (f_meta['$code'] = $code);\n            abs_path && (f_meta[f_meta_abs_path] = abs_path);\n            deref_to && (f_meta[f_meta_deref_to] = deref_to);\n            deref_from && (f_meta[f_meta_deref_from] = deref_from);\n\n            xs[f_meta_data] = f_meta;\n\n            if (createWithProto) {\n                ys = {};\n                ys.__proto__ = xs;\n                xs = ys;\n            }\n        }\n\n        while (++count < total) {\n            if ((key = keys[count]) !== f_meta_data) {\n                xs[key] = serializer(inst[key], serializer, includeMetadata);\n            }\n        }\n    }\n\n    return xs;\n}\n\nmodule.exports = FalcorJSON;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/FalcorJSON.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = '`null` is not allowed in branch key positions.';\n\n/**\n * Do not allow null in path.\n */\nmodule.exports = createErrorClass('NullInPathError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/NullInPathError.js","module.exports = createErrorClass;\n\nfunction createErrorClass(name, init) {\n    function E(message) {\n        this.message = message;\n        init && init.apply(this, arguments);\n        if (!Error.captureStackTrace) {\n            this.stack = (new Error()).stack;\n        } else {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n    E.prototype = Object.create(Error.prototype);\n    E.prototype.name = name;\n    E.prototype.constructor = E;\n    E.is = function(x) { return x.name === name; };\n    return E;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/createErrorClass.js","var objTypeof = 'object';\nmodule.exports = function isObject(value) {\n    return value !== null && typeof value === objTypeof;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isObject.js","var isInternal = require('../internal/isInternal');\n\nmodule.exports = clone;\n\nfunction clone(node) {\n\n    var key, keys = Object.keys(node),\n        json = {}, index = -1, length = keys.length;\n\n    while (++index < length) {\n        key = keys[index];\n        if (isInternal(key)) {\n            continue;\n        }\n        json[key] = node[key];\n    }\n\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/clone.js","module.exports = function createHardlink(from, to) {\n\n    // create a back reference\n    var backRefs = to[f_refs_length] || 0;\n    to[f_ref + backRefs] = from;\n    to[f_refs_length] = backRefs + 1;\n\n    // create a hard reference\n    from[f_ref_index] = backRefs;\n    from[f_context] = to;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/createHardlink.js","var isObject = require('./../support/isObject');\nmodule.exports = function getSize(node) {\n    return isObject(node) && node.$size || 0;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getSize.js","/**\n * getCachePosition makes a fast walk to the bound value since all bound\n * paths are the most possible optimized path.\n *\n * @param {Model} model -\n * @param {Array} path -\n * @returns {Mixed} - undefined if there is nothing in this position.\n * @private\n */\nmodule.exports = getCachePosition;\n\nfunction getCachePosition(cache, path) {\n\n    var node = cache;\n    var type, depth = 0;\n    var maxDepth = path.length;\n\n    if (maxDepth > 0) {\n        do {\n            node = node[path[depth]];\n\n            while (node && (type = node.$type) === $ref) {\n                node = getCachePosition(cache, node.value);\n            }\n        } while (++depth < maxDepth && node && !type);\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getCachePosition.js","var removeNode = require('./removeNode');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = function updateNodeAncestors(nodeArg, offset, lru, version) {\n    var child = nodeArg;\n    do {\n        var node = child[f_parent];\n        var size = child.$size = (child.$size || 0) - offset;\n        if (size <= 0 && node != null) {\n            removeNode(child, node, child[f_key], lru);\n        } else if (child[f_version] !== version) {\n            updateBackReferenceVersions(child, version);\n        }\n        child = node;\n    } while (child);\n    return nodeArg;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/updateNodeAncestors.js","var createErrorClass = require('./createErrorClass');\n\n/**\n * InvalidKeySetError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidKeySetError', function(path, keysOrRanges) {\n    this.mesage = '' +\n        'The KeySet ' + JSON.stringify(keysOrRanges) +\n        ' in path ' + JSON.stringify(path) + ' contains a KeySet. ' +\n        'Keysets can only contain Keys or Ranges';\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidKeySetError.js","var EXPIRES_NEVER = require('./../values/expires-never');\n\n// [H] -> Next -> ... -> [T]\n// [T] -> Prev -> ... -> [H]\nmodule.exports = function lruPromote(root, object) {\n    // Never promote node.$expires === 1.  They cannot expire.\n    if (object.$expires === EXPIRES_NEVER) {\n        return;\n    }\n\n    var head = root[f_head];\n\n    // Nothing is in the cache.\n    if (!head) {\n        root[f_head] = root[f_tail] = object;\n        return;\n    }\n\n    if (head === object) {\n        return;\n    }\n\n    // The item always exist in the cache since to get anything in the\n    // cache it first must go through set.\n    var prev = object[f_prev];\n    var next = object[f_next];\n    if (next) {\n        next[f_prev] = prev;\n    }\n    if (prev) {\n        prev[f_next] = next;\n    }\n    object[f_prev] = undefined;\n\n    // Insert into head position\n    root[f_head] = object;\n    object[f_next] = head;\n    head[f_prev] = object;\n\n    // If the item we promoted was the tail, then set prev to tail.\n    if (object === root[f_tail]) {\n        root[f_tail] = prev;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/promote.js","var Subscription = require('./Subscription');\n\nmodule.exports = Subscriber;\n\nfunction Subscriber(destination, parent, onCompleted) {\n    if (typeof destination === 'function' ||\n             typeof parent === 'function' ||\n        typeof onCompleted === 'function') {\n        Subscription.call(this, []);\n        this.destination = {\n            error: parent,\n            onError: parent,\n            next: destination,\n            onNext: destination,\n            complete: onCompleted,\n            onCompleted: onCompleted\n        }\n    } else {\n        Subscription.call(this, [], parent);\n        this.parent = parent;\n        this.destination = destination;\n    }\n}\n\nSubscriber.prototype = Object.create(Subscription.prototype);\n\nSubscriber.prototype.next =\nSubscriber.prototype.onNext = function onNext(value) {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onNext) {\n            dest.onNext(value);\n        } else if (dest.next) {\n            dest.next(value);\n        }\n    }\n}\n\nSubscriber.prototype.error =\nSubscriber.prototype.onError = function onError(error) {\n    var signaled = false;\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onError) {\n            signaled = true;\n            dest.onError(error);\n        } else if (dest.error) {\n            signaled = true;\n            dest.error(error);\n        }\n        this.dispose();\n    }\n    if (!signaled) {\n        throw error;\n    }\n}\n\nSubscriber.prototype.complete =\nSubscriber.prototype.onCompleted = function onCompleted() {\n    var dest = this.destination;\n    if (dest) {\n        if (dest.onCompleted) {\n            dest.onCompleted();\n        } else if (dest.complete) {\n            dest.complete();\n        }\n        this.dispose();\n    }\n}\n\nSubscriber.prototype.dispose =\nSubscriber.prototype.unsubscribe = function () {\n    this.destination = null;\n    Subscription.prototype.dispose.call(this);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subscriber.js","module.exports = Subscription;\n\nfunction Subscription(subscriptions, parent) {\n    this.parent = parent;\n    this.subscriptions = subscriptions || [];\n}\n\nSubscription.prototype.add = function(subscription) {\n    return this.subscriptions.push(subscription) && this || this;\n}\n\nSubscription.prototype.remove = function(subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.subscriptions.splice(index, 1);\n    }\n    return this;\n}\n\nSubscription.prototype.dispose =\nSubscription.prototype.unsubscribe = function () {\n    var subscription, subscriptions = this.subscriptions;\n    while (subscriptions.length) {\n        (subscription = subscriptions.pop()) &&\n            subscription.dispose &&\n            subscription.dispose();\n    }\n    var parent = this.parent;\n    if (parent) {\n        this.parent = null;\n        parent.remove && parent.remove(this);\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subscription.js","var isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\n\nmodule.exports = onValueType;\n\nfunction onValueType(node, type, json,\n                     path, depth, seed, results,\n                     requestedPath, requestedLength,\n                     optimizedPath, optimizedLength,\n                     fromReference, modelRoot, expired, expireImmediate,\n                     branchSelector, boxValues, materialized, reportMissing,\n                     treatErrorsAsValues, onValue, onMissing, onMaterialize) {\n\n    var reportMaterialized = reportMissing;\n\n    if (type) {\n        if (isExpired(node, expireImmediate)) {\n            if (!node[f_invalidated]) {\n                expireNode(node, expired, modelRoot);\n            }\n        } else {\n            lruPromote(modelRoot, node);\n            if (node.value === undefined) {\n                reportMissing = false;\n                reportMaterialized = materialized;\n            } else {\n                if (seed) {\n                    if (fromReference) {\n                        requestedPath[depth] = null;\n                    }\n                    return onValue(node, type, depth, seed, results,\n                                   requestedPath, optimizedPath, optimizedLength,\n                                   fromReference, boxValues, materialized, treatErrorsAsValues);\n                }\n                return undefined;\n            }\n        }\n    }\n\n    if (materialized) {\n        seed && (results.hasValue = true);\n    } else if (!reportMaterialized) {\n        return undefined;\n    }\n\n    return onMissing(path, depth, results,\n                     requestedPath, requestedLength, fromReference,\n                     optimizedPath, optimizedLength, reportMissing,\n                     materialized, json, branchSelector,\n                     boxValues, onMaterialize);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onValueType.js","var getCachePosition = require('./getCachePosition');\n\nmodule.exports = getBoundCacheNode;\n\nfunction getBoundCacheNode(model, path) {\n    path = path || model._path;\n    var node = model._node;\n    if (!node || node[f_parent] === undefined || node[f_invalidated]) {\n        model._node = null;\n        if (path.length === 0) {\n            node = model._root.cache;\n        } else {\n            node = getCachePosition(model._root.cache, path);\n            if (path === model._path) {\n                model._node = node;\n            }\n        }\n    }\n    return node;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getBoundCacheNode.js","var removeNode = require('./removeNode');\nvar isInternalKey = require('../support/isInternalKey');\n\nmodule.exports = function removeNodeAndDescendants(node, parent, key, lru) {\n    if (removeNode(node, parent, key, lru)) {\n        if (node.$type == null) {\n            for (var key2 in node) {\n                if (!isInternalKey(key2)) {\n                    removeNodeAndDescendants(node[key2], node, key2, lru);\n                }\n            }\n        }\n        return true;\n    }\n    return false;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/removeNodeAndDescendants.js","var arr = new Array(5);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar mergeJSONGraphNode = require('../mergeJSONGraphNode');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\n\n/**\n * Merges a list of {@link JSONGraphEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to merge the {@link JSONGraphEnvelope}s.\n * @param {Array.<PathValue>} jsonGraphEnvelopes - the {@link JSONGraphEnvelope}s to merge.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setJSONGraphs(model, jsonGraphEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var cache = modelRoot.cache;\n    var initialVersion = cache[f_version];\n\n    var requestedPath = [];\n    var optimizedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var jsonGraphEnvelopeIndex = -1;\n    var jsonGraphEnvelopeCount = jsonGraphEnvelopes.length;\n\n    while (++jsonGraphEnvelopeIndex < jsonGraphEnvelopeCount) {\n\n        var jsonGraphEnvelope = jsonGraphEnvelopes[jsonGraphEnvelopeIndex];\n        var paths = jsonGraphEnvelope.paths;\n        var jsonGraph = jsonGraphEnvelope.jsonGraph;\n\n        var pathIndex = -1;\n        var pathCount = paths.length;\n\n        while (++pathIndex < pathCount) {\n\n            var path = paths[pathIndex];\n            optimizedPath.index = 0;\n\n            setJSONGraphPathSet(\n                path, 0,\n                cache, cache, cache,\n                jsonGraph, jsonGraph, jsonGraph,\n                requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n                version, expired, lru, comparator, errorSelector, expireImmediate\n            );\n        }\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n    arr[3] = undefined;\n    arr[4] = undefined;\n\n    var newVersion = cache[f_version];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (initialVersion !== newVersion) {\n        modelRoot.version = version;\n        rootChangeHandler && rootChangeHandler();\n    }\n\n    return [requestedPaths, optimizedPaths, initialVersion !== newVersion];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setJSONGraphPathSet(\n    path, depth, root, parent, node,\n    messageRoot, messageParent, message,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n\n        var results = setNode(\n            root, parent, node, messageRoot, messageParent, message,\n            key, branch, false, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = results[0];\n        var nextParent = results[1];\n        var nextOptimizedPath = results[4];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setJSONGraphPathSet(\n                    path, depth + 1, root, nextParent, nextNode,\n                    messageRoot, results[3], results[2],\n                    requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                    version, expired, lru, comparator, errorSelector, expireImmediate\n                );\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(\n    root, node, messageRoot, message, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var messageParent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        messageParent = messageRoot;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var index = 0;\n        var container = node;\n        var count = reference.length - 1;\n        parent = node = root;\n        messageParent = message = messageRoot;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            optimizedPath.index = index;\n\n            var results = setNode(\n                root, parent, node, messageRoot, messageParent, message,\n                key, branch, true, requestedPath, optimizedPath, version,\n                expired, lru, comparator, errorSelector, expireImmediate\n            );\n            node = results[0];\n            optimizedPath = results[4];\n            if (!node || typeof node !== 'object') {\n                optimizedPath.index = index;\n                return results;\n            }\n            parent = results[1];\n            message = results[2];\n            messageParent = results[3];\n        } while (index++ < count);\n\n        optimizedPath.index = index;\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(\n    root, parent, node, messageRoot, messageParent, message,\n    key, branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = setReference(\n            root, node, messageRoot, message, requestedPath, optimizedPath,\n            version, expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        message = results[2];\n        messageParent = results[3];\n        optimizedPath = results[4];\n        type = node.$type;\n    }\n\n    if (type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            messageParent = message;\n            node = parent[key];\n            message = messageParent && messageParent[key];\n        }\n\n        node = mergeJSONGraphNode(\n            parent, node, message, key, requestedPath, optimizedPath,\n            version, expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = message;\n    arr[3] = messageParent;\n    arr[4] = optimizedPath;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setJSONGraphs.js","var arr = new Array(3);\nvar isArray = Array.isArray;\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar getCachePosition = require('../getCachePosition');\nvar isInternalKey = require('../../support/isInternalKey');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar mergeValueOrInsertBranch = require('../mergeValueOrInsertBranch');\n\n/**\n * Sets a list of {@link PathMapEnvelope}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of {@link PathMapEnvelope}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setPathMaps(model, pathMapEnvelopes, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[f_parent] || cache;\n    var initialVersion = cache[f_version];\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathMapIndex = -1;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathMap(\n            pathMapEnvelope.json, 0, cache, parent, node,\n            requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n            version, expired, modelRoot, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    var newVersion = cache[f_version];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (initialVersion !== newVersion) {\n        modelRoot.version = version;\n        rootChangeHandler && rootChangeHandler();\n    }\n\n    return [requestedPaths, optimizedPaths, initialVersion !== newVersion];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setPathMap(\n    pathMap, depth, root, parent, node,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var keys = getKeys(pathMap);\n\n    if (keys && keys.length) {\n\n        var keyIndex = 0;\n        var keyCount = keys.length;\n        var optimizedIndex = optimizedPath.index;\n\n        do {\n            var key = keys[keyIndex];\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n\n            requestedPath.depth = depth;\n\n            var results = setNode(\n                root, parent, node, key, child,\n                branch, false, requestedPath, optimizedPath, version,\n                expired, lru, comparator, errorSelector, expireImmediate\n            );\n\n            requestedPath[depth] = key;\n            requestedPath.index = depth;\n\n            var nextNode = results[0];\n            var nextParent = results[1];\n            var nextOptimizedPath = results[2];\n            nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n            if (nextNode) {\n                if (branch) {\n                    setPathMap(\n                        child, depth + 1,\n                        root, nextParent, nextNode,\n                        requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                        version, expired, lru, comparator, errorSelector, expireImmediate\n                    );\n                } else {\n                    requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                    optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n                }\n            }\n            if (++keyIndex >= keyCount) {\n                break;\n            }\n            optimizedPath.index = optimizedIndex;\n        } while (true);\n    }\n}\n/* eslint-enable */\n\nfunction setReference(\n    value, root, node, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n        var container = node;\n        parent = root;\n\n        node = node[f_context];\n\n        if (node != null) {\n            parent = node[f_parent] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n            optimizedPath.index = index;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                var results = setNode(\n                    root, parent, node, key, value,\n                    branch, true, requestedPath, optimizedPath, version,\n                    expired, lru, comparator, errorSelector, expireImmediate\n                );\n                node = results[0];\n                optimizedPath = results[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return results;\n                }\n                parent = results[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[f_context] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(\n    root, parent, node, key, value,\n    branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = setReference(\n            value, root, node, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate);\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        optimizedPath = results[2];\n        type = node && node.$type;\n    }\n\n    if (type === void 0) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(\n            parent, node, key, value,\n            branch, reference, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction getKeys(pathMap) {\n\n    if (!(!pathMap || typeof pathMap !== 'object') && !pathMap.$type) {\n        var keys = [];\n        var itr = 0;\n        if (isArray(pathMap)) {\n            keys[itr++] = 'length';\n        }\n        for (var key in pathMap) {\n            if (isInternalKey(key)) {\n                continue;\n            }\n            keys[itr++] = key;\n        }\n        return keys;\n    }\n\n    return void 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setPathMaps.js","/**\n * Determined if the key passed in is an internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nmodule.exports = isInternalKey;\n\nvar isInternal = require('../internal/isInternal');\n\nfunction isInternalKey(key) {\n    return key && key[0] === '$' || isInternal(key);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isInternalKey.js","module.exports = require(\"@graphistry/falcor-path-utils/lib/support/materializedAtom\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/support/materializedAtom\"\n// module id = 21\n// module chunks = 0","module.exports = require('./getJSON');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/index.js","module.exports = require('./getJSONGraph');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/index.js","module.exports = inlineJSONGraphValue;\n\n/* eslint-disable no-constant-condition */\nfunction inlineJSONGraphValue(node, path, length, seed, branch) {\n\n    var key, depth = 0, prev,\n        curr = seed.jsonGraph;\n\n    if (!curr) {\n        seed.jsonGraph = curr = {};\n    }\n\n    do {\n        prev = curr;\n        key = path[depth++];\n        if (depth >= length) {\n            curr = prev[key] = branch !== true ? node : prev[key] || {};\n            break;\n        }\n        curr = prev[key] || (prev[key] = {});\n    } while (true);\n\n    return curr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/inlineValue.js","var isArray = Array.isArray;\n\nmodule.exports = onMissing;\n\n/* eslint-disable no-constant-condition */\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, json, branchSelector,\n                   boxValues, onMaterialize) {\n\n    if (!reportMissing && !reportMaterialized) {\n        return;\n    }\n\n    var keyset,\n        restPathIndex = -1,\n        restPathCount = requestedLength - depth,\n        restPath = restPathCount && new Array(restPathCount) || undefined;\n\n    while (++restPathIndex < restPathCount) {\n        keyset = path[restPathIndex + depth];\n        if (isEmptyKeySet(keyset)) {\n            return;\n        }\n        restPath[restPathIndex] = keyset;\n    }\n\n    var index, count, mPath;\n    var lastKeyIsNull = keyset === null;\n    var isRequestedPath = reportMissing;\n    var missDepth, missTotal, missingPath, missingPaths;\n\n    if (!reportMissing) {\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } else {\n        missDepth = depth;\n        missTotal = requestedLength;\n        missingPath = requestedPath;\n        missingPaths = results.requested || (results.requested = []);\n    }\n\n    do {\n        if (restPathCount < requestedLength || !isRequestedPath) {\n            index = -1;\n            count = missDepth;\n            mPath = new Array(missTotal);\n            while (++index < count) {\n                mPath[index] = missingPath[index];\n            }\n            restPathIndex = -1;\n            while (index < missTotal) {\n                mPath[index++] = restPath[++restPathIndex];\n            }\n        }\n\n        // break after inserting both requested and optimized missing paths\n        if (isRequestedPath = !isRequestedPath) {\n            if (reportMissing) {\n                missingPaths[missingPaths.length] = mPath;\n            }\n            break;\n        }\n\n        missingPaths[missingPaths.length] = mPath || restPath;\n\n        missDepth = optimizedLength;\n        missingPath = optimizedPath;\n        missingPaths = results.missing || (results.missing = []);\n        missTotal = optimizedLength + restPathCount - Number(lastKeyIsNull);\n    } while (true);\n\n    if (reportMaterialized) {\n        return onMaterialize(json, mPath, missDepth, missTotal, branchSelector, boxValues);\n    }\n}\n/* eslint-enable */\n\nfunction isEmptyKeySet(keyset) {\n\n    // false if the keyset is a primitive\n    if ('object' !== typeof keyset) {\n        return false;\n    } else if (keyset === null) {\n        return false;\n    }\n\n    if (isArray(keyset)) {\n        // return true if the keyset is an empty array\n        return keyset.length === 0;\n    }\n\n    var rangeEnd = keyset.to,\n        from = keyset.from || 0;\n    if ('number' !== typeof rangeEnd) {\n        rangeEnd = from + (keyset.length || 0);\n    }\n\n    // false if trying to request incorrect or empty ranges\n    // e.g. { from: 10, to: 0 } or { from: 5, length: 0 }\n    return from >= rangeEnd;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMissing.js","var arr = new Array(2);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\nvar getSize = require('../../support/getSize');\nvar createHardlink = require('../createHardlink');\nvar getBoundCacheNode = require('../getBoundCacheNode');\nvar updateNodeAncestors = require('../updateNodeAncestors');\nvar removeNodeAndDescendants = require('../removeNodeAndDescendants');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\n\n/**\n * Invalidates a list of Paths in a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathValues.\n * @param {Array.<PathValue>} paths - the PathValues to set.\n */\n\nmodule.exports = function invalidatePathSets(model, paths, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version++;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n\n    if (!node) {\n        return;\n    }\n\n    var parent = node[f_parent] || cache;\n    var initialVersion = cache[f_version];\n\n    var pathIndex = -1;\n    var pathCount = paths.length;\n\n    while (++pathIndex < pathCount) {\n\n        var path = paths[pathIndex];\n\n        invalidatePathSet(\n            path, 0, cache, parent, node,\n            version, expired, lru, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n\n    var newVersion = cache[f_version];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (rootChangeHandler && initialVersion !== newVersion) {\n        rootChangeHandler();\n    }\n};\n\nfunction invalidatePathSet(\n    path, depth, root, parent, node,\n    version, expired, lru, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n\n    do {\n        arr = invalidateNode(\n            root, parent, node,\n            key, branch, false, version,\n            expired, lru, expireImmediate\n        );\n        var nextNode = arr[0];\n        var nextParent = arr[1];\n        if (nextNode) {\n            if (branch) {\n                invalidatePathSet(\n                    path, depth + 1,\n                    root, nextParent, nextNode,\n                    version, expired, lru, expireImmediate\n                );\n            } else if (removeNodeAndDescendants(nextNode, nextParent, key, lru)) {\n                updateNodeAncestors(nextParent, getSize(nextNode), lru, version);\n            }\n        }\n        key = iterateKeySet(keySet, note);\n    } while (!note.done);\n}\n\nfunction invalidateReference(root, node, version, expired, lru, expireImmediate) {\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        arr[0] = undefined;\n        arr[1] = root;\n        return arr;\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[f_context];\n\n    if (node != null) {\n        parent = node[f_parent] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            arr = invalidateNode(\n                root, parent, node,\n                key, branch, true, version,\n                expired, lru, expireImmediate\n            );\n            node = arr[0];\n            if (!node && typeof node !== 'object') {\n                return arr;\n            }\n            parent = arr[1];\n        } while (index++ < count);\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\nfunction invalidateNode(\n    root, parent, node,\n    key, branch, reference, version,\n    expired, lru, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        arr = invalidateReference(root, node, version, expired, lru, expireImmediate);\n\n        node = arr[0];\n\n        if (!node && typeof node !== 'object') {\n            return arr;\n        }\n\n        parent = arr[1];\n        type = node.$type;\n    }\n\n    if (type !== void 0) {\n        return [node, parent];\n    }\n\n    if (key == null) {\n        if (branch) {\n            throw new Error('`null` is not allowed in branch key positions.');\n        } else if (node) {\n            key = node[f_key];\n        }\n    } else {\n        parent = node;\n        node = parent[key];\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/invalidatePathSets.js","var lruSplice = require('../lru/splice');\nvar unlinkBackReferences = require('./unlinkBackReferences');\nvar unlinkForwardReference = require('./unlinkForwardReference');\n\nmodule.exports = function removeNode(node, parent, key, lru) {\n    if (!(!node || typeof node !== 'object')) {\n        var type = node.$type;\n        if (type) {\n            if (type === $ref) {\n                unlinkForwardReference(node);\n            }\n            lruSplice(lru, node);\n        }\n        unlinkBackReferences(node);\n        parent[key] = node[f_parent] = void 0;\n        return true;\n    }\n    return false;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/removeNode.js","var arr = new Array(3);\nvar isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar createHardlink = require('../createHardlink');\nvar getCachePosition = require('../getCachePosition');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar iterateKeySet = require('@graphistry/falcor-path-utils/lib/iterateKeySet');\nvar mergeValueOrInsertBranch = require('../mergeValueOrInsertBranch');\n\n/**\n * Sets a list of {@link PathValue}s into a {@link JSONGraph}.\n * @function\n * @param {Object} model - the Model for which to insert the {@link PathValue}s.\n * @param {Array.<PathValue>} pathValues - the list of {@link PathValue}s to set.\n * @return {Array.<Array.<Path>>} - an Array of Arrays where each inner Array is a list of requested and optimized paths (respectively) for the successfully set values.\n */\n\nmodule.exports = function setPathValues(model, pathValues, errorSelector, comparator, expireImmediate) {\n\n    var modelRoot = model._root;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version + 1;\n    var bound = model._path;\n    var cache = modelRoot.cache;\n    var node = getCachePosition(cache, bound);\n\n    if (!node) {\n        return [[], [], false];\n    }\n\n    var parent = node[f_parent] || cache;\n    var initialVersion = cache[f_version];\n\n    var requestedPath = [];\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var optimizedIndex = bound.length;\n    var pathValueIndex = -1;\n    var pathValueCount = pathValues.length;\n\n    while (++pathValueIndex < pathValueCount) {\n\n        var pathValue = pathValues[pathValueIndex];\n        var path = pathValue.path;\n        var value = pathValue.value;\n        var optimizedPath = bound.slice(0);\n        optimizedPath.index = optimizedIndex;\n\n        setPathSet(\n            value, path, 0, cache, parent, node,\n            requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n            version, expired, modelRoot, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = undefined;\n    arr[1] = undefined;\n    arr[2] = undefined;\n\n    var newVersion = cache[f_version];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (initialVersion !== newVersion) {\n        modelRoot.version = version;\n        rootChangeHandler && rootChangeHandler();\n    }\n\n    return [requestedPaths, optimizedPaths, initialVersion !== newVersion];\n};\n\n/* eslint-disable no-constant-condition */\nfunction setPathSet(\n    value, path, depth, root, parent, node,\n    requestedPaths, optimizedPaths, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var note = {};\n    var branch = depth < path.length - 1;\n    var keySet = path[depth];\n    var key = iterateKeySet(keySet, note);\n    var optimizedIndex = optimizedPath.index;\n\n    do {\n\n        requestedPath.depth = depth;\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var results = setNode(\n            root, parent, node, key, value,\n            branch, false, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        requestedPath[depth] = key;\n        requestedPath.index = depth;\n\n        var nextNode = results[0];\n        var nextParent = results[1];\n        var nextOptimizedPath = results[2];\n        nextOptimizedPath[nextOptimizedPath.index++] = key;\n\n        if (nextNode) {\n            if (branch) {\n                setPathSet(\n                    value, path, depth + 1,\n                    root, nextParent, nextNode,\n                    requestedPaths, optimizedPaths, requestedPath, nextOptimizedPath,\n                    version, expired, lru, comparator, errorSelector, expireImmediate\n                );\n            } else {\n                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));\n                optimizedPaths.push(nextOptimizedPath.slice(0, nextOptimizedPath.index));\n            }\n        }\n        key = iterateKeySet(keySet, note);\n        if (note.done) {\n            break;\n        }\n        optimizedPath.index = optimizedIndex;\n    } while (true);\n}\n/* eslint-enable */\n\nfunction setReference(\n    value, root, node, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var parent;\n    var reference = node.value;\n    optimizedPath = reference.slice(0);\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        node = undefined;\n        parent = root;\n        optimizedPath.index = reference.length;\n    } else {\n\n        var container = node;\n        parent = root;\n\n        node = node[f_context];\n\n        if (node != null) {\n            parent = node[f_parent] || root;\n            optimizedPath.index = reference.length;\n        } else {\n\n            var index = 0;\n            var count = reference.length - 1;\n\n            parent = node = root;\n\n            do {\n                var key = reference[index];\n                var branch = index < count;\n                optimizedPath.index = index;\n\n                var results = setNode(\n                    root, parent, node, key, value,\n                    branch, true, requestedPath, optimizedPath, version,\n                    expired, lru, comparator, errorSelector, expireImmediate\n                );\n                node = results[0];\n                optimizedPath = results[2];\n                if (!node || typeof node !== 'object') {\n                    optimizedPath.index = index;\n                    return results;\n                }\n                parent = results[1];\n            } while (index++ < count);\n\n            optimizedPath.index = index;\n\n            if (container[f_context] !== node) {\n                createHardlink(container, node);\n            }\n        }\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\nfunction setNode(\n    root, parent, node, key, value,\n    branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = setReference(\n            value, root, node, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n\n        node = results[0];\n\n        if (!node || typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        optimizedPath = results[2];\n        type = node.$type;\n    }\n\n    if (!branch || type === undefined) {\n        if (key == null) {\n            if (branch) {\n                throw new NullInPathError();\n            } else if (node) {\n                key = node[f_key];\n            }\n        } else {\n            parent = node;\n            node = parent[key];\n        }\n\n        node = mergeValueOrInsertBranch(\n            parent, node, key, value,\n            branch, reference, requestedPath, optimizedPath, version,\n            expired, lru, comparator, errorSelector, expireImmediate\n        );\n    }\n\n    arr[0] = node;\n    arr[1] = parent;\n    arr[2] = optimizedPath;\n\n    return arr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/setPathValues.js","/**\n * Determined if the key passed in is an f_ internal key.\n *\n * @param {String} x The key\n * @private\n * @returns {Boolean}\n */\n\nvar f_ = require('./f_');\nvar regexp = new RegExp('^' + f_, 'i', 'g');\n\nmodule.exports = regexp.test.bind(regexp);\n\n\n\n// WEBPACK FOOTER //\n// ./lib/internal/isInternal.js","var isObject = require('./../support/isObject');\nmodule.exports = function getTimestamp(node) {\n    return isObject(node) && node.$timestamp || undefined;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getTimestamp.js","module.exports = 0;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/values/expires-now.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() { return this; })();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 32\n// module chunks = 0","module.exports = require(\"@graphistry/falcor-path-utils/lib/iterateKeySet\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/iterateKeySet\"\n// module id = 33\n// module chunks = 0","var isArray = Array.isArray;\nvar walkPathAndBuildOutput = require('./walkPath');\nvar walkFlatBufferAndBuildOutput = require('./walkFlatBuffer');\nvar getBoundCacheNode = require('../../getBoundCacheNode');\nvar InvalidModelError = require('../../../errors/InvalidModelError');\nvar toFlatBuffer = require('@graphistry/falcor-path-utils/lib/toFlatBuffer');\nvar computeFlatBufferHash = require('@graphistry/falcor-path-utils/lib/computeFlatBufferHash');\n\nmodule.exports = getJSON;\n\nfunction getJSON(model, paths, seed, progressive, expireImmediate) {\n\n    var node,\n        referenceContainer,\n        boundPath = model._path,\n        modelRoot = model._root,\n        cache = modelRoot.cache,\n        requestedPath, requestedLength,\n        optimizedPath, optimizedLength =\n            boundPath && boundPath.length || 0;\n\n    // If the model is bound, get the cache position.\n    if (optimizedLength) {\n        node = getBoundCacheNode(model);\n        // If there was a short, then we 'throw an error' to the outside\n        // calling function which will onError the observer.\n        if (node && node.$type) {\n            return { error: new InvalidModelError(boundPath, boundPath) };\n        }\n        // We need to get the new cache position and copy the bound path.\n        optimizedPath = [];\n        for (var i = 0; i < optimizedLength; ++i) {\n            optimizedPath[i] = boundPath[i];\n        }\n        referenceContainer = model._referenceContainer;\n    } else {\n        node = cache;\n        optimizedPath = [];\n    }\n\n    requestedPath = [];\n\n    var isFlatBuffer = false,\n        json = seed && seed.json,\n        results = { data: seed },\n        boxValues = model._boxed,\n        expired = modelRoot.expired,\n        recycleJSON = model._recycleJSON,\n        hasDataSource = Boolean(model._source),\n        branchSelector = modelRoot.branchSelector,\n        materialized = seed && model._materialized,\n        treatErrorsAsValues = model._treatErrorsAsValues,\n        allowFromWhenceYouCame = model._allowFromWhenceYouCame;\n\n    var arr, path, pathsIndex = 0, pathsCount = paths.length;\n\n    if (pathsCount > 0) {\n        if (recycleJSON) {\n            isFlatBuffer = true;\n            if (pathsCount > 1 || isArray(paths[0])) {\n                paths = [computeFlatBufferHash(toFlatBuffer(paths, {}))];\n            }\n            arr = walkFlatBufferAndBuildOutput(cache, node, json, paths[0], 0, seed, results,\n                                               requestedPath, optimizedPath, optimizedLength,\n                                               /* fromReference = */ false, referenceContainer,\n                                               modelRoot, expired, expireImmediate, branchSelector,\n                                               boxValues, materialized, hasDataSource,\n                                               treatErrorsAsValues, allowFromWhenceYouCame);\n            json = arr[0];\n            arr[0] = undefined;\n            arr[1] = undefined;\n        } else {\n            do {\n                path = paths[pathsIndex];\n                requestedLength = path.length;\n                json = walkPathAndBuildOutput(cache, node, json, path,\n                                           /* depth = */ 0, seed, results,\n                                              requestedPath, requestedLength,\n                                              optimizedPath, optimizedLength,\n                                              /* fromReference = */ false, referenceContainer,\n                                              modelRoot, expired, expireImmediate, branchSelector,\n                                              boxValues, materialized, hasDataSource,\n                                              treatErrorsAsValues, allowFromWhenceYouCame);\n            } while (++pathsIndex < pathsCount)\n        }\n    }\n\n    var requested = results.requested;\n\n    results.args = isFlatBuffer && paths || requested;\n\n    if (requested && requested.length) {\n        results.relative = results.args;\n        if (optimizedLength) {\n            var boundRequested = [];\n            for (var i = 0, len = requested.length; i < len; ++i) {\n                boundRequested[i] = boundPath.concat(requested[i]);\n            }\n            results.requested = boundRequested;\n        }\n    }\n\n    if (results.hasValue) {\n        seed.json = json;\n    }\n\n    return results;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/getJSON.js","var arr = new Array(3);\nvar promote = require('../../../lru/promote');\nvar isExpired = require('../../isExpired');\nvar createHardlink = require('../../createHardlink');\nvar CircularReferenceError = require('../../../errors/CircularReferenceError');\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, ref, modelRoot, expireImmediate) {\n\n    promote(modelRoot, ref);\n\n    var context,\n        key, type, depth = 0,\n        node = root, path = ref.value,\n        copy = path, length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[f_context])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                throw new CircularReferenceError(path);\n            }\n            // If the node we land on isn't the existing ref context,\n            // create a hard-link between the reference and the node\n            // it points to.\n            else if (node !== context) {\n                createHardlink(ref, node);\n            }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === $ref) {\n\n                promote(modelRoot, node);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n    arr[2] = ref;\n\n    return arr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/getReferenceTarget.js","var clone = require('../../clone');\nvar onError = require('./onError');\n\nmodule.exports = onJSONValue;\n\nfunction onJSONValue(node, type, depth, seed, results,\n                     requestedPath, optimizedPath, optimizedLength,\n                     fromReference, boxValues, materialized,\n                     treatErrorsAsValues) {\n\n    if ($error === type && !treatErrorsAsValues) {\n        return onError(node, depth, results, requestedPath,\n                       fromReference, boxValues);\n    }\n\n    results.hasValue = true;\n\n    // boxValues always clones the node\n    return !boxValues ? node.value : clone(node);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/onValue.js","var walkPathAndBuildOutput = require('./walkPath');\nvar BoundJSONGraphModelError = require('../../../errors/BoundJSONGraphModelError');\n\nmodule.exports = getJSONGraph;\n\nfunction getJSONGraph(model, paths, seed, progressive, expireImmediate) {\n\n    var node, cache,\n        boundPath = model._path,\n        modelRoot = model._root,\n        requestedPath, requestedLength,\n        optimizedPath, optimizedLength =\n            boundPath && boundPath.length || 0;\n\n    // If the model is bound, then get that cache position.\n    if (optimizedLength) {\n        // JSONGraph output cannot ever be bound or else it will\n        // throw an error.\n        return { error: new BoundJSONGraphModelError() };\n    } else {\n        optimizedPath = [];\n        cache = node = modelRoot.cache;\n    }\n\n    requestedPath = [];\n\n    var boxValues = model._boxed,\n        expired = modelRoot.expired,\n        materialized = model._materialized,\n        hasDataSource = Boolean(model._source),\n        treatErrorsAsValues = model._treatErrorsAsValues,\n\n        results = { data: seed },\n        pathsIndex = -1, pathsCount = paths.length;\n\n    while (++pathsIndex < pathsCount) {\n        var path = paths[pathsIndex];\n        requestedLength = path.length;\n        walkPathAndBuildOutput(cache, node, path,\n                            /* depth = */ 0, seed, results,\n                               requestedPath, requestedLength,\n                               optimizedPath, optimizedLength,\n              /* fromReference = */ false, modelRoot, expired, expireImmediate,\n                               boxValues, materialized, hasDataSource, treatErrorsAsValues);\n    }\n\n    results.args =\n    results.relative = results.requested;\n\n    return results;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/getJSONGraph.js","var isArray = Array.isArray;\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar clone = require('../clone');\nvar FalcorJSON = require('./json/FalcorJSON');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = onMaterialize;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterialize(json, path, depth, length,\n                       branchSelector, boxValues) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (depth === length) {\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta;\n\n    var nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        keysetIndex = -1, keysetLength = 0;\n\n    keyset = path[depth];\n\n    if (!json || typeofObject !== typeof json) {\n        json = {};\n        json.__proto__ = FalcorJSON.prototype;\n        json[f_meta_data] = f_meta = {};\n        f_meta[f_meta_version] = 0;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[f_meta_data])) {\n        json[f_meta_data] = f_meta = {};\n        f_meta[f_meta_version] = 0;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n    } else {\n        f_meta[f_meta_version] = 0;\n        f_meta[f_meta_abs_path] = path.slice(0, depth);\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            // insert the materialized branch\n            json[nextKey] = onMaterialize(\n                json[nextKey], path,\n                nextDepth, length,\n                branchSelector,\n                boxValues\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMaterialize.js","var isArray = Array.isArray;\nvar isPathValue = require('../support/isPathValue');\nvar isJSONEnvelope = require('../support/isJSONEnvelope');\nvar isJSONGraphEnvelope = require('../support/isJSONGraphEnvelope');\n\nmodule.exports = groupCacheArguments;\n\nfunction groupCacheArguments(args) {\n\n    var groups = [];\n    var argIndex = -1;\n    var argCount = args.length;\n    var group, groupType, arg, argType;\n\n    while (++argIndex < argCount) {\n        arg = args[argIndex];\n        if (isArray(arg)) {\n            arg = { path: arg };\n            argType = 'PathValues';\n        } else if (isPathValue(arg)) {\n            argType = 'PathValues';\n        } else if (isJSONGraphEnvelope(arg)) {\n            argType = 'JSONGraphs';\n        } else if (isJSONEnvelope(arg)) {\n            argType = 'PathMaps';\n        }\n\n        if (groupType !== argType) {\n            groupType = argType;\n            groups.push(group = {\n                arguments: [],\n                inputType: argType\n            });\n        }\n\n        group.arguments.push(arg);\n    }\n\n    return groups;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/groupCacheArguments.js","module.exports = function insertNode(node, parent, key, version, optimizedPath) {\n    node[f_key] = key;\n    node[f_parent] = parent;\n\n    if (version !== undefined) {\n        node[f_version] = version;\n    }\n    if (!node[f_abs_path]) {\n        node[f_abs_path] = optimizedPath.slice(0, optimizedPath.index).concat(key);\n    }\n\n    parent[key] = node;\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/insertNode.js","var isExpired = require('../isExpired');\nvar expireNode = require('../expireNode');\nvar lruPromote = require('../../lru/promote');\nvar getSize = require('../../support/getSize');\nvar createHardlink = require('../createHardlink');\nvar getBoundCacheNode = require('../getBoundCacheNode');\nvar isInternalKey = require('../../support/isInternalKey');\nvar updateNodeAncestors = require('../updateNodeAncestors');\nvar removeNodeAndDescendants = require('../removeNodeAndDescendants');\n\n/**\n * Sets a list of PathMaps into a JSON Graph.\n * @function\n * @param {Object} model - the Model for which to insert the PathMaps.\n * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of @PathMapEnvelopes to set.\n */\n\nmodule.exports = function invalidatePathMaps(model, pathMapEnvelopes, expireImmediate) {\n\n    var modelRoot = model._root;\n    var lru = modelRoot;\n    var expired = modelRoot.expired;\n    var version = modelRoot.version++;\n    var comparator = modelRoot._comparator;\n    var cache = modelRoot.cache;\n    var node = getBoundCacheNode(model);\n\n    if (!node) {\n        return;\n    }\n\n    var parent = node[f_parent] || cache;\n    var initialVersion = cache[f_version];\n\n    var pathMapIndex = -1;\n    var pathMapCount = pathMapEnvelopes.length;\n\n    while (++pathMapIndex < pathMapCount) {\n\n        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];\n\n        invalidatePathMap(\n            pathMapEnvelope.json, 0, cache, parent, node,\n            version, expired, lru, comparator, expireImmediate\n        );\n    }\n\n    var newVersion = cache[f_version];\n    var rootChangeHandler = modelRoot.onChange;\n\n    if (rootChangeHandler && initialVersion !== newVersion) {\n        rootChangeHandler();\n    }\n};\n\nfunction invalidatePathMap(\n    pathMap, depth, root, parent, node, version,\n    expired, lru, comparator, expireImmediate) {\n\n    if (!pathMap || typeof pathMap !== 'object' || pathMap.$type) {\n        return;\n    }\n\n    for (var key in pathMap) {\n        if (!isInternalKey(key)) {\n            var child = pathMap[key];\n            var branch = !(!child || typeof child !== 'object') && !child.$type;\n            var results = invalidateNode(\n                root, parent, node,\n                key, child, branch, false, version, expired,\n                lru, comparator, expireImmediate\n            );\n            var nextNode = results[0];\n            var nextParent = results[1];\n            if (nextNode) {\n                if (branch) {\n                    invalidatePathMap(\n                        child, depth + 1,\n                        root, nextParent, nextNode,\n                        version, expired, lru, comparator, expireImmediate\n                    );\n                } else if (removeNodeAndDescendants(nextNode, nextParent, key, lru)) {\n                    updateNodeAncestors(nextParent, getSize(nextNode), lru, version);\n                }\n            }\n        }\n    }\n}\n\nfunction invalidateReference(\n    value, root, node, version,\n    expired, lru, comparator, expireImmediate) {\n\n    if (isExpired(node, expireImmediate)) {\n        expireNode(node, expired, lru);\n        return [undefined, root];\n    }\n\n    lruPromote(lru, node);\n\n    var container = node;\n    var reference = node.value;\n    var parent = root;\n\n    node = node[f_context];\n\n    if (node != null) {\n        parent = node[f_parent] || root;\n    } else {\n\n        var index = 0;\n        var count = reference.length - 1;\n\n        parent = node = root;\n\n        do {\n            var key = reference[index];\n            var branch = index < count;\n            var results = invalidateNode(\n                root, parent, node,\n                key, value, branch, true, version,\n                expired, lru, comparator, expireImmediate\n            );\n            node = results[0];\n            if (!node || typeof node !== 'object') {\n                return results;\n            }\n            parent = results[1];\n        } while (index++ < count);\n\n        if (container[f_context] !== node) {\n            createHardlink(container, node);\n        }\n    }\n\n    return [node, parent];\n}\n\nfunction invalidateNode(\n    root, parent, node,\n    key, value, branch, reference, version,\n    expired, lru, comparator, expireImmediate) {\n\n    var type = node.$type;\n\n    while (type === $ref) {\n\n        var results = invalidateReference(\n            value, root, node, version, expired,\n            lru, comparator, expireImmediate\n        );\n\n        node = results[0];\n\n        if (!node && typeof node !== 'object') {\n            return results;\n        }\n\n        parent = results[1];\n        type = node && node.$type;\n    }\n\n    if (type !== void 0) {\n        return [node, parent];\n    }\n\n    if (key == null) {\n        if (branch) {\n            throw new Error('`null` is not allowed in branch key positions.');\n        } else if (node) {\n            key = node[f_key];\n        }\n    } else {\n        parent = node;\n        node = parent[key];\n    }\n\n    return [node, parent];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/invalidatePathMaps.js","var $now = require('../values/expires-now');\nvar getType = require('../support/getType');\nvar getSize = require('../support/getSize');\nvar getTimestamp = require('../support/getTimestamp');\n\nvar wrapNode = require('./wrapNode');\nvar isExpired = require('./isExpired');\nvar expireNode = require('./expireNode');\nvar insertNode = require('./insertNode');\nvar replaceNode = require('./replaceNode');\nvar reconstructPath = require('./reconstructPath');\nvar updateNodeAncestors = require('./updateNodeAncestors');\nvar removeNodeAndDescendants = require('./removeNodeAndDescendants');\n\nmodule.exports = function mergeValueOrInsertBranch(\n    parent, node, key, value,\n    branch, reference, requestedPath, optimizedPath, version,\n    expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var cType = getType(node, reference);\n\n    if (branch || reference) {\n        if (cType && isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge if it expires immediately\n             */\n            true)) {\n            expireNode(node, expired, lru);\n            cType = node.$expires === $now ? cType : 'expired';\n        }\n        if ((cType && cType !== $ref) || (!node || typeof node !== 'object')) {\n            node = replaceNode(node, {}, parent, key, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    } else {\n        var message = value;\n        var isDistinct = true;\n        var mType = getType(message);\n\n        // If both the cache and message are primitives,\n        // insert the message into the cache.\n        if (!cType && !mType) {\n            isDistinct = true;\n        }\n        // Compare the current cache value with the new value. If either of\n        // them don't have a timestamp, or the message's timestamp is newer,\n        // replace the cache value with the message value. If a comparator\n        // is specified, the comparator takes precedence over timestamps.\n        else if (comparator) {\n            isDistinct = !(comparator.length < 3 ?\n                comparator(node, message) : comparator(node, message,\n                    optimizedPath.slice(0, optimizedPath.index))\n            );\n        } else {\n            // Comparing either Number or undefined to undefined always results in false.\n            isDistinct = getTimestamp(message) < getTimestamp(node) === false;\n        }\n\n        if (isDistinct) {\n\n            if (errorSelector && mType === $error) {\n                message = errorSelector(reconstructPath(requestedPath, key), message);\n            }\n\n            var sizeOffset = getSize(node) - getSize(message =\n                wrapNode(message, mType, mType ? message.value : message));\n\n            node = replaceNode(node, message, parent, key, lru, version);\n            parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n            node = insertNode(node, parent, key, version, optimizedPath);\n        }\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/mergeValueOrInsertBranch.js","/**\n * Reconstructs the path for the current key, from currentPath (requestedPath)\n * state maintained during set/merge walk operations.\n *\n * During the walk, since the requestedPath array is updated after we attempt to\n * merge/insert nodes during a walk (it reflects the inserted node's parent branch)\n * we need to reconstitute a path from it.\n *\n * @param  {Array} currentPath The current requestedPath state, during the walk\n * @param  {String} key        The current key value, during the walk\n * @return {Array} A new array, with the path which represents the node we're about\n * to insert\n */\nmodule.exports = function reconstructPath(currentPath, key) {\n\n    var path = currentPath.slice(0, currentPath.depth);\n    path[path.length] = key;\n\n    return path;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/reconstructPath.js","var transferBackReferences = require('./transferBackReferences');\nvar removeNodeAndDescendants = require('./removeNodeAndDescendants');\nvar updateBackReferenceVersions = require('./updateBackReferenceVersions');\n\nmodule.exports = function replaceNode(node, replacement, parent, key, lru, version) {\n    if (node === replacement) {\n        return node;\n    } else if (!(!node || typeof node !== 'object')) {\n        transferBackReferences(node, replacement);\n        removeNodeAndDescendants(node, parent, key, lru);\n        updateBackReferenceVersions(replacement, version);\n    }\n\n    parent[key] = replacement;\n    return replacement;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/replaceNode.js","module.exports = function updateBackReferenceVersions(nodeArg, version) {\n    var stack = [nodeArg];\n    var count = 0;\n    do {\n        var node = stack[count];\n        if (node && node[f_version] !== version) {\n            node[f_version] = version;\n            stack[count++] = node[f_parent];\n            var i = -1;\n            var n = node[f_refs_length] || 0;\n            while (++i < n) {\n                stack[count++] = node[f_ref + i];\n            }\n        }\n    } while (--count > -1);\n    return nodeArg;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/updateBackReferenceVersions.js","var isArray = Array.isArray;\nvar now = require('../support/now');\nvar clone = require('./../support/clone');\nvar getSize = require('./../support/getSize');\nvar getExpires = require('../support/getExpires');\nvar expiresNow = require('../values/expires-now');\n\nvar atomSize = 50;\n\nmodule.exports = function wrapNode(nodeArg, typeArg, value) {\n\n    var size = 0;\n    var node = nodeArg;\n    var type = typeArg;\n\n    if (type) {\n        var modelCreated = node[f_wrapped_value];\n        node = clone(node);\n        size = getSize(node);\n        node.$type = type;\n        node[f_prev] = undefined;\n        node[f_next] = undefined;\n        node[f_wrapped_value] = modelCreated || false;\n    } else {\n        node = { $type: $atom, value: value };\n        node[f_prev] = undefined;\n        node[f_next] = undefined;\n        node[f_wrapped_value] = true;\n    }\n\n    if (value == null) {\n        size = atomSize + 1;\n    } else if (size == null || size <= 0) {\n        switch (typeof value) {\n            case 'object':\n                if (isArray(value)) {\n                    size = atomSize + value.length;\n                } else {\n                    size = atomSize + 1;\n                }\n                break;\n            case 'string':\n                size = atomSize + value.length;\n                break;\n            default:\n                size = atomSize + 1;\n                break;\n        }\n    }\n\n    var expires = getExpires(node);\n\n    if (typeof expires === 'number' && expires < expiresNow) {\n        node.$expires = now() + (expires * -1);\n    }\n\n    node.$size = size;\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/wrapNode.js","var createErrorClass = require('./createErrorClass');\n\nmodule.exports = createErrorClass('CircularReferenceError', function(referencePath) {\n    this.message = 'Encountered circular reference ' + JSON.stringify(referencePath);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/CircularReferenceError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'An exception was thrown when making a request';\n\n/**\n * InvalidSourceError happens when a dataSource syncronously throws\n * an exception during a get/set/call operation.\n *\n * @param {Error} error - The error that was thrown.\n * @private\n */\nmodule.exports = createErrorClass('InvalidSourceError', function(error) {\n    this.message = MESSAGE + ':\\n\\t' + error;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidSourceError.js","var removeNode = require('../cache/removeNode');\nvar updateNodeAncestors = require('../cache/updateNodeAncestors');\n\nmodule.exports = function collect(lru, expired, totalArg, max, ratioArg, version) {\n\n    var total = totalArg;\n    var ratio = ratioArg;\n\n    if (typeof ratio !== 'number') {\n        ratio = 0.75;\n    }\n\n    var shouldUpdate = typeof version === 'number';\n    var targetSize = max * ratio;\n    var parent, node, size;\n\n    node = expired.pop();\n\n    while (node) {\n        size = node.$size || 0;\n        total -= size;\n        if (shouldUpdate === true) {\n            updateNodeAncestors(node, size, lru, version);\n        } else if (parent = node[f_parent]) {  // eslint-disable-line no-cond-assign\n            removeNode(node, parent, node[f_key], lru);\n        }\n        node = expired.pop();\n    }\n\n    if (total >= max) {\n        var prev = lru[f_tail];\n        node = prev;\n        while ((total >= targetSize) && node) {\n            prev = prev[f_prev];\n            size = node.$size || 0;\n            total -= size;\n            if (shouldUpdate === true) {\n                updateNodeAncestors(node, size, lru, version);\n            }\n            node = prev;\n        }\n\n        lru[f_tail] = lru[f_prev] = node;\n        if (node == null) {\n            lru[f_head] = lru[f_next] = undefined;\n        } else {\n            node[f_next] = undefined;\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/collect.js","module.exports = function lruSplice(root, object) {\n\n    // Its in the cache.  Splice out.\n    var prev = object[f_prev];\n    var next = object[f_next];\n    if (next) {\n        next[f_prev] = prev;\n    }\n    if (prev) {\n        prev[f_next] = next;\n    }\n    object[f_prev] = object[f_next] = undefined;\n\n    if (object === root[f_head]) {\n        root[f_head] = next;\n    }\n    if (object === root[f_tail]) {\n        root[f_tail] = prev;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lru/splice.js","var Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar $$observable = require('symbol-observable').default;\n\nmodule.exports = Source;\n\nfunction Source(subscribe) {\n    if (!subscribe) {\n        return;\n    }\n    switch (typeof subscribe) {\n        case 'object':\n            this.source = subscribe;\n            break;\n        case 'function':\n            this.source = { subscribe: subscribe };\n            break;\n    }\n}\n\nSource.prototype[$$observable] = function() {\n    return this;\n}\n\nSource.prototype.operator = function(destination) {\n    return this.subscribe(destination);\n}\n\n// Unused\n// Source.prototype.lift = function(operator, source) {\n//     source = new Source(source || this);\n//     source.operator = operator;\n//     source._promise = this._promise;\n//     return source;\n// }\n\nSource.prototype.subscribe = function(destination, x, y) {\n    return new Subscription([\n        this.operator.call(\n            this.source, !(destination instanceof Subscriber) ?\n                new Subscriber(destination, x, y) : destination)\n    ]);\n}\n\nSource.prototype.then = function then(onNext, onError) {\n    /* global Promise */\n    var source = this;\n    if (!this._promise) {\n        this._promise = new global['Promise'](function(resolve, reject) {\n            var values = [], rejected = false;\n            source.subscribe({\n                next: function(value) { values[values.length] = value; },\n                error: function(errors) { (rejected = true) && reject(errors); },\n                complete: function() {\n                    !rejected &&\n                    resolve(values.length <= 1 ? values[0] : values);\n                }\n            });\n        });\n    }\n    return this._promise.then(onNext, onError);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Source.js","var empty = {\n    dispose: function() {},\n    unsubscribe: function() {}\n};\n\nfunction ImmediateScheduler() {}\n\nImmediateScheduler.prototype.schedule = function schedule(action) {\n    action();\n    return empty;\n};\n\nmodule.exports = ImmediateScheduler;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/schedulers/ImmediateScheduler.js","var isObject = require('./../support/isObject');\n\nmodule.exports = function isJSONEnvelope(envelope) {\n    return isObject(envelope) && ('json' in envelope);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isJSONEnvelope.js","var isArray = Array.isArray;\nvar isObject = require('./../support/isObject');\n\nmodule.exports = function isJSONGraphEnvelope(envelope) {\n    return isObject(envelope) && isArray(envelope.paths) && (\n        isObject(envelope.jsonGraph) ||\n        isObject(envelope.jsong) ||\n        isObject(envelope.json) ||\n        isObject(envelope.values) ||\n        isObject(envelope.value)\n    );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isJSONGraphEnvelope.js","module.exports = Date.now;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/now.js","module.exports = 1;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/values/expires-never.js","module.exports = require(\"@graphistry/falcor-path-utils/lib/collapse\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/collapse\"\n// module id = 57\n// module chunks = 0","var Model = require('./Model');\nvar FalcorJSON = require('./cache/get/json/FalcorJSON');\n\nfunction falcor(opts) {\n    if (!(this instanceof Model)) {\n        return new Model(opts);\n    }\n    Model.call(this, opts);\n}\n\nfalcor.prototype = Object.create(Model.prototype);\n\nfalcor['Model'] = Model;\nfalcor['FalcorJSON'] = FalcorJSON;\nfalcor['toProps'] = FalcorJSON.prototype.toProps;\n\nmodule.exports = falcor;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/index.js","var Call = require('./request/Call');\nvar ModelRoot = require('./ModelRoot');\nvar FalcorJSON = require('./cache/get/json/FalcorJSON');\nvar ModelDataSourceAdapter = require('./ModelDataSourceAdapter');\nvar TimeoutScheduler = require('./schedulers/TimeoutScheduler');\nvar ImmediateScheduler = require('./schedulers/ImmediateScheduler');\nvar collapse = require('@graphistry/falcor-path-utils/lib/collapse');\n\nvar lruCollect = require('./lru/collect');\nvar getSize = require('./support/getSize');\nvar isObject = require('./support/isObject');\nvar isJSONEnvelope = require('./support/isJSONEnvelope');\nvar getCachePosition = require('./cache/getCachePosition');\nvar isJSONGraphEnvelope = require('./support/isJSONGraphEnvelope');\n\nvar setCache = require('./cache/set/setPathMaps');\nvar setJSONGraphs = require('./cache/set/setJSONGraphs');\n\nvar getJSON = require('./cache/get/json');\nvar getCache = require('./cache/getCache');\nvar getJSONGraph = require('./cache/get/jsonGraph');\n\nmodule.exports = Model;\n\n/**\n * This callback is invoked when the Model's cache is changed.\n * @callback Model~onChange\n */\n\n /**\n * This function is invoked on every JSONGraph Error retrieved from the DataSource. This function allows Error objects to be transformed before being stored in the Model's cache.\n * @callback Model~errorSelector\n * @param {Object} jsonGraphError - the JSONGraph Error object to transform before it is stored in the Model's cache.\n * @returns {Object} the JSONGraph Error object to store in the Model cache.\n */\n\n /**\n * This function is invoked every time a value in the Model cache is about to be replaced with a new value. If the function returns true, the existing value is replaced with a new value and the version flag on all of the value's ancestors in the tree are incremented.\n * @callback Model~comparator\n * @param {Object} existingValue - the current value in the Model cache.\n * @param {Object} newValue - the value about to be set into the Model cache.\n * @returns {Boolean} the Boolean value indicating whether the new value and the existing value are equal.\n */\n\n/**\n * A Model object is used to execute commands against a {@link JSONGraph} object. {@link Model}s can work with a local JSONGraph cache, or it can work with a remote {@link JSONGraph} object through a {@link DataSource}.\n * @constructor\n * @param {?Object} options - a set of options to customize behavior\n * @param {?DataSource} options.source - a data source to retrieve and manage the {@link JSONGraph}\n * @param {?JSONGraph} options.cache - initial state of the {@link JSONGraph}\n * @param {?number} options.maxSize - the maximum size of the cache. This value roughly correlates to item count (where itemCount = maxSize / 50). Each item by default is given a metadata `$size` of 50 (or its length when it's an array or string). You can get better control of falcor's memory usage by tweaking `$size`\n * @param {?number} options.collectRatio - the ratio of the maximum size to collect when the maxSize is exceeded\n * @param {?Model~errorSelector} options.errorSelector - a function used to translate errors before they are returned\n * @param {?Model~onChange} options.onChange - a function called whenever the Model's cache is changed\n * @param {?Model~comparator} options.comparator - a function called whenever a value in the Model's cache is about to be replaced with a new value.\n */\nfunction Model(opts) {\n\n    var options = opts || {};\n\n    this._node = options._node;\n    this._path = options._path || [];\n    this._source = options.source || options._source;\n    this._root = options._root || new ModelRoot(options, this);\n    this._recycleJSON = options.recycleJSON === true || options._recycleJSON;\n    this._scheduler = options.scheduler || options._scheduler || new ImmediateScheduler();\n\n    if (options._seed) {\n        this._recycleJSON = true;\n        this._seed = options._seed;\n        this._treatErrorsAsValues = true;\n    } else if (this._recycleJSON) {\n        this._treatErrorsAsValues = true;\n        this._seed = {};\n        this._seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    this._boxed = options.boxed === true || options._boxed || false;\n    this._materialized = options.materialized === true || options._materialized || false;\n    this._treatErrorsAsValues = options.treatErrorsAsValues === true || options._treatErrorsAsValues || false;\n    this._allowFromWhenceYouCame = options.allowFromWhenceYouCame === true || options._allowFromWhenceYouCame || false;\n\n    if (options.cache) {\n        this.setCache(options.cache);\n    }\n}\n\nModel.prototype.constructor = Model;\n\n/**\n * The get method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model}. The get method loads each value into a JSON object and returns in a ModelResponse.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - the requested data as JSON\n */\nModel.prototype.get = function get(...args) {\n    var seed = this._seed;\n    if (!seed) {\n        seed = {};\n        seed.__proto__ = FalcorJSON.prototype;\n    }\n    return new Call('get', this, args)._toJSON(seed, []);\n}\n\n/**\n * Sets the value at one or more places in the JSONGraph model. The set method accepts one or more {@link PathValue}s, each of which is a combination of a location in the document and the value to place there.  In addition to accepting  {@link PathValue}s, the set method also returns the values after the set operation is complete.\n * @function\n * @return {ModelResponse.<JSONEnvelope>} - an {@link Observable} stream containing the values in the JSONGraph model after the set was attempted\n */\nModel.prototype.set = function set(...args) {\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n    return new Call('set', this, args)._toJSON(seed, []);\n}\n\n/**\n * The preload method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model} and loads them into the Model cache.\n * @function\n * @param {...PathSet} path - the path(s) to retrieve\n * @return {ModelResponse.<JSONEnvelope>} - a ModelResponse that completes when the data has been loaded into the cache.\n */\nModel.prototype.preload = function preload(...args) {\n    return new Call('get', this, args)._toJSON(null, []);\n}\n\n/**\n * Invokes a function in the JSON Graph.\n * @function\n * @param {Path} functionPath - the path to the function to invoke\n * @param {Array.<Object>} args - the arguments to pass to the function\n * @param {Array.<PathSet>} refPaths - the paths to retrieve from the JSON Graph References in the message returned from the function\n * @param {Array.<PathSet>} thisPaths - the paths to retrieve from function's this object after successful function execution\n * @return {ModelResponse.<JSONEnvelope> - a JSONEnvelope contains the values returned from the function\n */\n\nModel.prototype.call = function call(...args) {\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n    return new Call('call', this, args)._toJSON(seed, []);\n}\n\n/**\n * The invalidate method synchronously removes several {@link Path}s or {@link PathSet}s from a {@link Model} cache.\n * @function\n * @param {...PathSet} path - the  paths to remove from the {@link Model}'s cache.\n */\nModel.prototype.invalidate = function invalidate(...args) {\n    return new Call('invalidate', this, args)._toJSON(null, null).then();\n}\n\n/**\n * Returns a new {@link Model} bound to a location within the {@link\n * JSONGraph}. The bound location is never a {@link Reference}: any {@link\n * Reference}s encountered while resolving the bound {@link Path} are always\n * replaced with the {@link Reference}s target value. For subsequent operations\n * on the {@link Model}, all paths will be evaluated relative to the bound\n * path. Deref allows you to:\n * - Expose only a fragment of the {@link JSONGraph} to components, rather than\n *   the entire graph\n * - Hide the location of a {@link JSONGraph} fragment from components\n * - Optimize for executing multiple operations and path looksup at/below the\n *   same location in the {@link JSONGraph}\n * @method\n * @param {Object} responseObject - an object previously retrieved from the\n * Model\n * @return {Model} - the dereferenced {@link Model}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.deref = require('./deref');\n\n/**\n * A dereferenced model can become invalid when the reference from which it was\n * built has been removed/collected/expired/etc etc.  To fix the issue, a from\n * the parent request should be made (no parent, then from the root) for a valid\n * path and re-dereference performed to update what the model is bound too.\n *\n * @method\n * @private\n * @return {Boolean} - If the currently deref'd model is still considered a\n * valid deref.\n */\nModel.prototype._hasValidParentReference = require('./deref/hasValidParentReference');\n\n/**\n * Get data for a single {@link Path}.\n * @param {Path} path - the path to retrieve\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     getValue('user.name').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.getValue = function getValue(path) {\n    return new Call('get', this, [path])\n        ._toJSON({}, [])\n        .lift(function(subscriber) {\n            return this.subscribe({\n                onNext: function(data) {\n                    var depth = -1;\n                    var x = data.json;\n                    var length = path.length;\n                    while (x && !x.$type && ++depth < length) {\n                        x = x[path[depth]];\n                    }\n                    subscriber.onNext(x);\n                },\n                onError: subscriber.onError.bind(subscriber),\n                onCompleted: subscriber.onCompleted.bind(subscriber)\n            })\n        });\n}\n\n/**\n * Set value for a single {@link Path}.\n * @param {Path} path - the path to set\n * @param {Object} value - the value to set\n * @return {Observable.<*>} - the value for the path\n * @example\n var model = new falcor.Model({source: new falcor.HttpDataSource('/model.json') });\n\n model.\n     setValue('user.name', 'Jim').\n     subscribe(function(name) {\n         console.log(name);\n     });\n\n // The code above prints 'Jim' to the console.\n */\nModel.prototype.setValue = function setValue(path, value) {\n    path = arguments.length === 1 ? path.path : path;\n    value = arguments.length === 1 ? path : {path:path,value:value};\n    return new Call('set', this, [value])\n        ._toJSON({}, [])\n        .lift(function(subscriber) {\n            return this.subscribe({\n                onNext: function(data) {\n                    var depth = -1;\n                    var x = data.json;\n                    var length = path.length;\n                    while (x && !x.$type && ++depth < length) {\n                        x = x[path[depth]];\n                    }\n                    subscriber.onNext(x);\n                },\n                onError: subscriber.onError.bind(subscriber),\n                onCompleted: subscriber.onCompleted.bind(subscriber)\n            })\n        });\n}\n\n/**\n * Set the local cache to a {@link JSONGraph} fragment. This method can be a useful way of mocking a remote document, or restoring the local cache from a previously stored state.\n * @param {JSONGraph} jsonGraph - the {@link JSONGraph} fragment to use as the local cache\n */\nModel.prototype.setCache = function modelSetCache(cacheOrJSONGraphEnvelope) {\n\n    var modelRoot = this._root;\n    var cache = modelRoot.cache;\n\n    if (cacheOrJSONGraphEnvelope !== cache) {\n\n        var options = {\n            _path: [],\n            _boxed: false,\n            _root: modelRoot,\n            _materialized: false,\n            _treatErrorsAsValues: false\n        };\n\n        modelRoot.cache = this._node = {};\n\n        if (typeof cache !== 'undefined') {\n            lruCollect(modelRoot, modelRoot.expired, getSize(cache), 0);\n            if (this._recycleJSON) {\n                this._seed = {};\n                this._seed.__proto__ = FalcorJSON.prototype;\n            }\n        }\n\n        var paths;\n        if (isJSONGraphEnvelope(cacheOrJSONGraphEnvelope)) {\n            paths = setJSONGraphs(options, [cacheOrJSONGraphEnvelope])[0];\n        } else if (isJSONEnvelope(cacheOrJSONGraphEnvelope)) {\n            paths = setCache(options, [cacheOrJSONGraphEnvelope])[0];\n        } else if (isObject(cacheOrJSONGraphEnvelope)) {\n            paths = setCache(options, [{ json: cacheOrJSONGraphEnvelope }])[0];\n        }\n\n        // performs promotion without producing output.\n        if (paths) {\n            getJSON(options, paths, null, false, false);\n        }\n    } else if (typeof cache === 'undefined') {\n        this._root.cache = {};\n    }\n    return this;\n};\n\n/**\n * Get the local {@link JSONGraph} cache. This method can be a useful to store the state of the cache.\n * @param {...Array.<PathSet>} [pathSets] - The path(s) to retrieve. If no paths are specified, the entire {@link JSONGraph} is returned.\n * @return {JSONGraph} all of the {@link JSONGraph} data in the {@link Model} cache.\n * @example\n // Storing the boxshot of the first 10 titles in the first 10 genreLists to local storage.\n localStorage.setItem('cache', JSON.stringify(model.getCache('genreLists[0...10][0...10].boxshot')));\n */\nModel.prototype.getCache = function _getCache() {\n\n    var paths = Array.prototype.slice.call(arguments, 0);\n\n    if (paths.length === 0) {\n        return getCache(this._root.cache);\n    }\n\n    var seed = {};\n    seed.__proto__ = FalcorJSON.prototype;\n\n    var env = getJSONGraph({\n        _path: [],\n        _root: this._root,\n        _boxed: this._boxed,\n        _materialized: this._materialized,\n        _treatErrorsAsValues: this._treatErrorsAsValues\n    }, paths, seed).data;\n\n    env.paths = collapse(paths);\n\n    return env;\n};\n\n/**\n * Retrieves a number which is incremented every single time a value is changed underneath the Model or the object at an optionally-provided Path beneath the Model.\n * @param {Path?} path - a path at which to retrieve the version number\n * @return {Number} a version number which changes whenever a value is changed underneath the Model or provided Path\n */\nModel.prototype.getVersion = function getVersion(path) {\n    path = path || [];\n    if (Array.isArray(path) === false) {\n        throw new Error('Model#getVersion must be called with an Array path.');\n    }\n    if (this._path.length) {\n        path = this._path.concat(path);\n    }\n    return this._getVersion(this, path);\n};\n\n/* eslint-disable guard-for-in */\nModel.prototype._clone = function cloneModel(opts) {\n    var clone = new Model(this);\n    if (opts) {\n        for (var key in opts) {\n            var value = opts[key];\n            if (value === 'delete') {\n                delete clone[key];\n            } else if (key === '_path') {\n                clone[key] = value;\n                if (false === opts.hasOwnProperty('_node')) {\n                    delete clone['_node'];\n                }\n            } else {\n                clone[key] = value;\n            }\n        }\n    }\n    if (clone._path.length > 0) {\n        clone.setCache = void 0;\n    }\n    return clone;\n};\n/* eslint-enable */\n\n/**\n * Returns a clone of the {@link Model} that enables batching. Within the configured time period, paths for get operations are collected and sent to the {@link DataSource} in a batch. Batching can be more efficient if the {@link DataSource} access the network, potentially reducing the number of HTTP requests to the server.\n * @param {?Scheduler|number} schedulerOrDelay - Either a {@link Scheduler} that determines when to send a batch to the {@link DataSource}, or the number in milliseconds to collect a batch before sending to the {@link DataSource}. If this parameter is omitted, then batch collection ends at the end of the next tick.\n * @return {Model} a Model which schedules a batch of get requests to the DataSource.\n */\nModel.prototype.batch = function batch(schedulerOrDelay) {\n\n    var scheduler;\n\n    if (typeof schedulerOrDelay === 'number') {\n        scheduler = new TimeoutScheduler(Math.round(Math.abs(schedulerOrDelay)));\n    } else if (!schedulerOrDelay) {\n        scheduler = new TimeoutScheduler(1);\n    } else if (typeof schedulerOrDelay.schedule === 'function') {\n        scheduler = schedulerOrDelay;\n    } else if (typeof schedulerOrDelay === 'function') {\n        scheduler = { scheudle: schedulerOrDelay };\n    }\n\n    return this._clone({ _scheduler: scheduler });\n};\n\n/**\n * Returns a clone of the {@link Model} that disables batching. This is the default mode. Each get operation will be executed on the {@link DataSource} separately.\n * @name unbatch\n * @memberof Model.prototype\n * @function\n * @return {Model} a {@link Model} that batches requests of the same type and sends them to the data source together\n */\nModel.prototype.unbatch = function unbatch() {\n    return this._clone({ _scheduler: new ImmediateScheduler() });\n};\n\n/**\n * Returns a clone of the {@link Model} that treats errors as values. Errors will be reported in the same callback used to report data. Errors will appear as objects in responses, rather than being sent to the {@link Observable~onErrorCallback} callback of the {@link ModelResponse}.\n * @return {Model}\n */\nModel.prototype.treatErrorsAsValues = function treatErrorsAsValues() {\n    return this._clone({ _treatErrorsAsValues: true });\n};\n\n/**\n * Adapts a Model to the {@link DataSource} interface.\n * @return {DataSource}\n * @example\nvar model =\n    new falcor.Model({\n        cache: {\n            user: {\n                name: 'Steve',\n                surname: 'McGuire'\n            }\n        }\n    }),\n    proxyModel = new falcor.Model({ source: model.asDataSource() });\n\n// Prints 'Steve'\nproxyModel.getValue('user.name').\n    then(function(name) {\n        console.log(name);\n    });\n */\nModel.prototype.asDataSource = function asDataSource() {\n    return new ModelDataSourceAdapter(this);\n};\n\nModel.prototype._materialize = function materialize() {\n    return this._clone({\n        _materialized: true\n    });\n};\n\nModel.prototype._dematerialize = function dematerialize() {\n    return this._clone({\n        _materialized: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that boxes values returning the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the value inside it. This allows any metadata attached to the wrapper to be inspected.\n * @return {Model}\n */\nModel.prototype.boxValues = function boxValues() {\n    return this._clone({\n        _boxed: true\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that unboxes values, returning the value inside of the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the wrapper itself. This is the default mode.\n * @return {Model}\n */\nModel.prototype.unboxValues = function unboxValues() {\n    return this._clone({\n        _boxed: 'delete'\n    });\n};\n\n/**\n * Returns a clone of the {@link Model} that only uses the local {@link JSONGraph} and never uses a {@link DataSource} to retrieve missing paths.\n * @return {Model}\n */\nModel.prototype.withoutDataSource = function withoutDataSource() {\n    return this._clone({\n        _source: 'delete'\n    });\n};\n\nModel.prototype.toJSON = function toJSON() {\n    return {\n        $type: 'ref',\n        value: this.getPath()\n    };\n};\n\n/**\n * Returns the {@link Path} to the object within the JSON Graph that this Model references.\n * @return {Path}\n * @example\nvar Model = falcor.Model;\nvar model = new Model({\n  cache: {\n    users: [\n      Model.ref(['usersById', 32])\n    ],\n    usersById: {\n      32: {\n        name: 'Steve',\n        surname: 'McGuire'\n      }\n    }\n  }\n});\n\nmodel.\n    get(['users', 0, 'name']).\n    subscribe(function(jsonEnv) {\n        var userModel = model.deref(jsonEnv.json.users[0]);\n        console.log(model.getPath());\n        console.log(userModel.getPath());\n   });\n});\n\n// prints the following:\n// []\n// ['usersById', 32] - because userModel refers to target of reference at ['users', 0]\n */\nModel.prototype.getPath = function getPath() {\n    return this._path.slice(0);\n};\n\n/**\n * This one is actually private.  I would not use this without talking to\n * jhusain, sdesai, or michaelbpaulson (github).\n * @private\n */\nModel.prototype._fromWhenceYouCame = function fromWhenceYouCame(allow) {\n    return this._clone({\n        _allowFromWhenceYouCame: allow === undefined ? true : allow\n    });\n};\n\nModel.prototype._optimizePath = function _optimizePath(path) {\n    var node = getCachePosition(this._root.cache, path);\n    var abs_path = node && node[f_abs_path] || [];\n    return abs_path.slice(0);\n};\n\nModel.prototype._getVersion = require('./cache/getVersion');\nModel.prototype._getPathValuesAsPathMap = getJSON;\nModel.prototype._getPathValuesAsJSONG = getJSONGraph;\n\nModel.prototype._setPathValues = require('./cache/set/setPathValues');\nModel.prototype._setPathMaps = require('./cache/set/setPathMaps');\nModel.prototype._setJSONGs = require('./cache/set/setJSONGraphs');\nModel.prototype._setCache = require('./cache/set/setPathMaps');\n\nModel.prototype._invalidatePathValues = require('./cache/invalidate/invalidatePathSets');\nModel.prototype._invalidatePathMaps = require('./cache/invalidate/invalidatePathMaps');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Model.js","function ModelDataSourceAdapter(model) {\n    this._model = model\n        // .boxValues()\n        ._materialize().treatErrorsAsValues();\n}\n\nModelDataSourceAdapter.prototype.get = function get(pathSets) {\n    return this._model.get.apply(this._model, pathSets)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.set = function set(jsongResponse) {\n    return this._model.set(jsongResponse)._toJSONG();\n};\n\nModelDataSourceAdapter.prototype.call = function call(path, args, suffixes, paths) {\n    return this._model.call.apply(this._model, [\n        path, args, suffixes\n    ].concat(paths))._toJSONG();\n};\n\nmodule.exports = ModelDataSourceAdapter;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ModelDataSourceAdapter.js","var functionTypeof = 'function';\nvar Requests = require('./request/Queue');\nvar getTimestamp = require('./support/getTimestamp');\n\nfunction ModelRoot(o, model) {\n\n    var options = o || {};\n\n    this.cache = {};\n    this.version = -1;\n    this.syncRefCount = 0;\n    this.maxRetryCount = 10;\n    this.topLevelModel = model;\n    this.requests = new Requests(this);\n    this.expired = options.expired || [];\n\n    this.collectRatio = 0.75;\n    this.maxSize = Math.pow(2, 53) - 1;\n\n    if (typeof options.collectRatio === 'number') {\n        this.collectRatio = options.collectRatio;\n    }\n\n    if (typeof options.maxSize === 'number') {\n        this.maxSize = options.maxSize;\n    }\n\n    if (typeof options.comparator === functionTypeof) {\n        this.comparator = options.comparator;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.errorSelector === functionTypeof) {\n        this.errorSelector = options.errorSelector;\n    }\n\n    if (typeof options.branchSelector === functionTypeof) {\n        this.branchSelector = options.branchSelector;\n    }\n\n    if (typeof options.onChange === functionTypeof) {\n        this.onChange = options.onChange;\n    }\n\n    if (typeof options.onChangesCompleted === functionTypeof) {\n        this.onChangesCompleted = options.onChangesCompleted;\n    }\n}\n\nfunction defaultCompare(node, message) {\n    var cType = node && node.$type;\n    var mType = message && message.$type;\n    if (cType) {\n        // If the cache has a type, but the message is a primitive,\n        // the message might be the primitive response from the datasource.\n        // If so, return true, so we don't update the back-reference versions.\n        if (!mType) {\n            return node.value === message;\n        }\n        // Otherwise they are the same if all the following fields are the same.\n        else if (cType !== mType) {\n            return false; // isDistinct = true\n        } else if (getTimestamp(message) < getTimestamp(node) === true) {\n            return true; // isDistinct = false\n        } else if (node.value !== message.value) {\n            return false; // isDistinct = true\n        } else if (node.$expires !== message.$expires) {\n            return false; // isDistinct = true\n        }\n        return true; // isDistinct = false\n    }\n    // If cache doesn't have a type but the message\n    // does, they must be different.\n    else if (mType) {\n        return false;\n    }\n    return node === message;\n}\n\nModelRoot.comparator = ModelRoot.prototype.comparator = defaultCompare;\n\nmodule.exports = ModelRoot;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ModelRoot.js","var getJSON = require('../get/json');\nvar getJSONGraph = require('../get/jsonGraph');\n\nmodule.exports = { json: json, jsonGraph: jsonGraph };\n\nfunction json(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue =  getJSON(model, thisPaths, data, progressive, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [\n            path, args, suffixes, thisPaths\n        ]\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive) {\n    var hasValue = false;\n    if (!_args) {\n        return { missing: false, hasValue: false };\n    }\n    var args = [].concat(_args[1] || []);\n    var suffixes = [].concat(_args[2] || []);\n    var thisPaths = [].concat(_args[3] || []);\n    var path = (model._path || []).concat(_args[0] || []);\n    if (progressive && thisPaths && thisPaths.length) {\n        hasValue = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed,\n            _materialized: model._materialized,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, thisPaths, data, true, true).hasValue;\n    }\n    return {\n        data: data,\n        missing: true,\n        hasValue: hasValue,\n        fragments: [\n            path, args, suffixes, thisPaths\n        ]\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/call/index.js","module.exports = {\n    json: require('./json/getJSON'),\n    jsonGraph: require('./jsonGraph/getJSONGraph')\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/index.js","var clone = require('../../clone');\n\nmodule.exports = onError;\n\nfunction onError(node, depth, results,\n                 requestedPath, fromReference, boxValues) {\n\n    var index = -1;\n    var length = depth + !!fromReference; // depth + 1 if fromReference === true\n    var errorPath = new Array(length);\n    var errorValue = !boxValues ? node.value : clone(node);\n\n    while (++index < length) {\n        errorPath[index] = requestedPath[index];\n    }\n\n    (results.errors || (results.errors = [])).push({\n        path: errorPath,\n        value: errorValue\n    });\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/onError.js","var arr = new Array(2);\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar onValue = require('./onValue');\nvar FalcorJSON = require('./FalcorJSON');\nvar isExpired = require('../../isExpired');\nvar onValueType = require('../onValueType');\nvar originalOnMissing = require('../onMissing');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar onMaterialize = require('../onMaterializeFlatBuffer');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar getHashCode = require('@graphistry/falcor-path-utils/lib/getHashCode');\nvar flatBufferToPaths = require('@graphistry/falcor-path-utils/lib/flatBufferToPaths');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, json, path,\n                                depth, seed, results, requestedPath,\n                                optimizedPath, optimizedLength,\n                                fromReference, referenceContainer,\n                                modelRoot, expired, expireImmediate,\n                                branchSelector, boxValues, materialized,\n                                hasDataSource, treatErrorsAsValues,\n                                allowFromWhenceYouCame) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === node ||\n        undefined !== (type = node.$type) ||\n        undefined === path) {\n        arr[1] = hasDataSource && node === undefined;\n        arr[0] = onValueType(node, type, json,\n                             path, depth, seed, results,\n                             requestedPath, depth,\n                             optimizedPath, optimizedLength,\n                             fromReference, modelRoot, expired, expireImmediate,\n                             branchSelector, boxValues, materialized, hasDataSource,\n                             treatErrorsAsValues, onValue, onMissing, onMaterialize);\n        return arr;\n    }\n\n    var f_meta, f_old_keys, f_new_keys, f_code = '';\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        keys = path['$keys'],\n        nodeAbsPath, jsonAbsPath,\n        nextDepth = depth + 1, rangeEnd,\n        nextJSON, nextReferenceContainer,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath, refContainerRefPath;\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[f_abs_path];\n    }\n\n    if (!json || typeofObject !== typeof json) {\n        json = undefined;\n    } else if (f_meta = json[f_meta_data]) {\n\n        nodeAbsPath = node[f_abs_path];\n        jsonAbsPath = f_meta[f_meta_abs_path];\n\n        if (!branchSelector && !(json instanceof FalcorJSON)) {\n            json.__proto__ = {};\n            json.__proto__[f_meta_data] = f_meta;\n            json.__proto__.__proto__ = FalcorJSON.prototype;\n        }\n\n        if (nodeAbsPath !== jsonAbsPath) {\n            f_meta['$code'] = '__incomplete__';\n            f_meta[f_meta_abs_path] = nodeAbsPath;\n            f_meta[f_meta_version] = node[f_version];\n            f_meta[f_meta_deref_to] = refContainerRefPath;\n            f_meta[f_meta_deref_from] = refContainerAbsPath;\n            if (f_old_keys = f_meta[f_meta_keys]) {\n                f_meta[f_meta_keys] = Object.create(null);\n                for (nextKey in f_old_keys) {\n                    if (f_old_keys[nextKey]) {\n                        delete json[nextKey];\n                    }\n                }\n            }\n            arr[0] = json;\n            arr[1] = true;\n            return arr;\n        } else if (!(\n            f_meta[f_meta_version]  !== node[f_version]  ||\n            f_meta['$code']         !== path['$code'])) {\n            results.hasValue = true;\n            arr[0] = json;\n            arr[1] = false;\n            return arr;\n        }\n\n        f_old_keys = f_meta[f_meta_keys];\n        f_meta[f_meta_abs_path] = nodeAbsPath;\n        f_meta[f_meta_version] = node[f_version];\n        f_meta[f_meta_deref_to] = refContainerRefPath;\n        f_meta[f_meta_deref_from] = refContainerAbsPath;\n    }\n\n    f_new_keys = Object.create(null);\n\n    var keysIndex = -1;\n    var keysLength = keys.length;\n    var nextPath, nextPathKey,\n        hasMissingPath = false;\n\n    iteratingKeyset:\n    while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            f_code = '' + getHashCode('' + f_code + 'null');\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n            nextPathKey = nextKey;\n        }\n        // If the Keyset isn't null or primitive, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n            nextPathKey = '[' + nextKey + '..' + rangeEnd + ']';\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextPath === undefined) {\n\n                arr = walkPathAndBuildOutput(\n                    root, next, nextJSON, nextPath, nextDepth, seed,\n                    results, requestedPath, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                nextJSON = arr[0];\n                hasMissingPath = hasMissingPath || arr[1];\n\n                if (nextJSON === undefined && !materialized) {\n                    hasMissingPath = true;\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n            else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                    // If the reference is expired, it will be invalidated and\n                    // reported as missing in the next call to walkPath below.\n                    next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                arr = walkPathAndBuildOutput(\n                    root, next, nextJSON, nextPath, nextDepth, seed,\n                    results, requestedPath, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n\n                nextJSON = arr[0];\n                hasMissingPath = hasMissingPath || arr[1];\n\n                if (nextJSON === undefined) {\n                    hasMissingPath = true;\n                    if (json && json.hasOwnProperty(nextKey)) {\n                        delete json[nextKey];\n                    }\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = {};\n                f_meta[f_meta_version] = node[f_version];\n                f_meta[f_meta_abs_path] = node[f_abs_path];\n                f_meta[f_meta_deref_to] = refContainerRefPath;\n                f_meta[f_meta_deref_from] = refContainerAbsPath;\n                json = {};\n                json[f_meta_data] = f_meta;\n                json.__proto__ = FalcorJSON.prototype;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                // node creation to them.\n                if (branchSelector) {\n                    json = branchSelector(json);\n                } else {\n                    var tmp = json;\n                    json = {};\n                    json.__proto__ = tmp;\n                    tmp = undefined;\n                }\n            }\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && (nextKey in f_old_keys)) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        if (!hasMissingPath) {\n            f_code = '' + getHashCode('' + f_code + nextPathKey +\n                                     (  nextPath && nextPath['$code'] || ''));\n        }\n    }\n\n    if (hasMissingPath) {\n        f_code = '__incomplete__';\n    }\n\n    if (f_meta) {\n        f_meta['$code'] = f_code;\n        f_meta[f_meta_keys] = f_new_keys;\n        if (f_old_keys) {\n            for (nextKey in f_old_keys) {\n                if (f_old_keys[nextKey]) {\n                    delete json[nextKey];\n                }\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n\n    arr[0] = json;\n    arr[1] = hasMissingPath;\n\n    return arr;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, json, branchSelector,\n                   boxValues, onMaterialize) {\n\n    if (reportMaterialized) {\n        return onMaterialize(json, path, depth, depth, branchSelector,\n                             boxValues, results, requestedPath, optimizedPath,\n                             optimizedLength, fromReference, reportMissing, onMissing);\n    }\n\n    var paths = path ? flatBufferToPaths(path) : [[]];\n    var rPath = requestedPath.slice(0, requestedLength);\n\n    return paths.forEach(function(restPath) {\n        requestedLength = depth + restPath.length;\n        return originalOnMissing(rPath.concat(restPath), depth, results,\n                                 requestedPath, requestedLength, fromReference,\n                                 optimizedPath, optimizedLength, reportMissing,\n                                 false, json, branchSelector,\n                                 boxValues, onMaterialize);\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/walkFlatBuffer.js","var isArray = Array.isArray;\nvar typeofNumber = 'number';\nvar typeofObject = 'object';\nvar onValue = require('./onValue');\nvar onMissing = require('../onMissing');\nvar FalcorJSON = require('./FalcorJSON');\nvar onValueType = require('../onValueType');\nvar isExpired = require('../../isExpired');\nvar onMaterialize = require('../onMaterialize');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, json, path,\n                                depth, seed, results,\n                                requestedPath, requestedLength,\n                                optimizedPath, optimizedLength,\n                                fromReference, referenceContainer,\n                                modelRoot, expired, expireImmediate,\n                                branchSelector, boxValues, materialized,\n                                hasDataSource, treatErrorsAsValues,\n                                allowFromWhenceYouCame) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (\n        type = node.$type) || (\n        depth === requestedLength)) {\n        return onValueType(node, type, json,\n                           path, depth, seed, results,\n                           requestedPath, requestedLength,\n                           optimizedPath, optimizedLength,\n                           fromReference, modelRoot, expired, expireImmediate,\n                           branchSelector, boxValues, materialized, hasDataSource,\n                           treatErrorsAsValues, onValue, onMissing, onMaterialize);\n    }\n\n    var f_meta;\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        nextJSON, nextReferenceContainer,\n        keysetIndex = -1, keysetLength = 0,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1,\n        refContainerAbsPath, refContainerRefPath;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        return json;\n    }\n\n    if (allowFromWhenceYouCame && referenceContainer) {\n        refContainerRefPath = referenceContainer.value;\n        refContainerAbsPath = referenceContainer[f_abs_path];\n    }\n\n    if (!json || typeofObject !== typeof json) {\n        json = undefined;\n    } else if (f_meta = json[f_meta_data]) {\n        f_meta[f_meta_version] = node[f_version];\n        f_meta[f_meta_abs_path] = node[f_abs_path];\n        f_meta[f_meta_deref_to] = refContainerRefPath;\n        f_meta[f_meta_deref_from] = refContainerAbsPath;\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            keyset = keysOrRanges[keysetIndex];\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextJSON = json && json[nextKey];\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n            nextReferenceContainer = referenceContainer;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            if (nextDepth === requestedLength) {\n                nextJSON = walkPathAndBuildOutput(\n                    root, next, nextJSON, path, nextDepth, seed,\n                    results, requestedPath, requestedLength, nextOptimizedPath,\n                    nextOptimizedLength, fromReference, nextReferenceContainer,\n                    modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                    materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                );\n                if (nextJSON === undefined && !materialized) {\n                    continue;\n                }\n            }\n            else {\n                // If we encounter a ref, inline the reference target and continue\n                // evaluating the path.\n                if (next &&\n                    // If the reference is expired, it will be invalidated and\n                    // reported as missing in the next call to walkPath below.\n                    next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                    // Retrieve the reference target and next referenceContainer (if\n                    // this reference points to other references) and continue\n                    // following the path. If the reference resolves to a missing\n                    // path or leaf node, it will be handled in the next call to\n                    // walkPath.\n                    refTarget = getReferenceTarget(root, next, modelRoot, expireImmediate);\n\n                    next = refTarget[0];\n                    fromReference = true;\n                    nextOptimizedPath = refTarget[1];\n                    nextReferenceContainer = refTarget[2];\n                    nextOptimizedLength = nextOptimizedPath.length;\n                    refTarget[0] = refTarget[1] = refTarget[2] = undefined;\n                }\n\n                // Continue following the path\n\n                // Inspect the return value from the step and determine whether to\n                // create or write into the JSON branch at this level.\n                //\n                // 1. If the next node was a leaf value, nextJSON is the value.\n                // 2. If the next node was a missing path, nextJSON is undefined.\n                // 3. If the next node was a branch, then nextJSON will either be an\n                //    Object or undefined. If nextJSON is undefined, all paths under\n                //    this step resolved to missing paths. If it's an Object, then\n                //    at least one path resolved to a successful leaf value.\n                //\n                // This check defers creating branches until we see at least one\n                // cache hit. Otherwise, don't waste the cycles creating a branch\n                // if everything underneath is a cache miss.\n\n                if (undefined === (nextJSON = walkPathAndBuildOutput(\n                        root, next, nextJSON, path, nextDepth, seed,\n                        results, requestedPath, requestedLength, nextOptimizedPath,\n                        nextOptimizedLength, fromReference, nextReferenceContainer,\n                        modelRoot, expired, expireImmediate, branchSelector, boxValues,\n                        materialized, hasDataSource, treatErrorsAsValues, allowFromWhenceYouCame\n                    ))) {\n                    continue;\n                }\n            }\n\n            // The json value will initially be undefined. If we're here,\n            // then at least one leaf value was encountered, so create a\n            // branch to contain it.\n            if (f_meta === undefined) {\n                f_meta = {};\n                f_meta[f_meta_version] = node[f_version];\n                f_meta[f_meta_abs_path] = node[f_abs_path];\n                f_meta[f_meta_deref_to] = refContainerRefPath;\n                f_meta[f_meta_deref_from] = refContainerAbsPath;\n                json = {};\n                json[f_meta_data] = f_meta;\n                json.__proto__ = FalcorJSON.prototype;\n                // Empower developers to instrument branch node creation by\n                // providing a custom function. If they do, delegate branch\n                if (branchSelector) {\n                    json = branchSelector(json);\n                }\n            }\n\n            // Set the reported branch or leaf into this branch.\n            json[nextKey] = nextJSON;\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/json/walkPath.js","var arr = new Array(2);\nvar clone = require('../../clone');\nvar inlineValue = require('./inlineValue');\nvar promote = require('../../../lru/promote');\nvar isExpired = require('../../isExpired');\nvar createHardlink = require('../../createHardlink');\nvar CircularReferenceError = require('../../../errors/CircularReferenceError');\n\nmodule.exports = getReferenceTarget;\n\n/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction getReferenceTarget(root, ref, modelRoot, seed, expireImmediate) {\n\n    promote(modelRoot, ref);\n\n    var context,\n        key, type, depth = 0,\n        node = root, path = ref.value,\n        copy = path, length = path.length;\n\n    do {\n        if (depth === 0 && undefined !== (context = ref[f_context])) {\n            node = context;\n            depth = length;\n        } else {\n            key = path[depth++];\n            if (undefined === (node = node[key])) {\n                break;\n            }\n        }\n\n        if (depth === length) {\n            type = node.$type;\n            // If the reference points to an expired\n            // value node, don't create a hard-link.\n            if (undefined !== type && isExpired(node, expireImmediate)) {\n                break;\n            }\n            // If a reference points to itself, throw an error.\n            else if (node === ref) {\n                throw new CircularReferenceError(path);\n            }\n            // If the node we land on isn't the existing ref context,\n            // create a hard-link between the reference and the node\n            // it points to.\n            else if (node !== context) {\n                createHardlink(ref, node);\n            }\n\n            // If the reference points to another ref, follow the new ref\n            // by resetting the relevant state and continuing from the top.\n            if (type === $ref) {\n\n                promote(modelRoot, node);\n\n                seed && inlineValue(clone(node), path, length, seed);\n\n                depth = 0;\n                ref = node;\n                node = root;\n                path = copy = ref.value;\n                length = path.length;\n\n                continue;\n            }\n            break;\n        } else if (undefined !== node.$type) {\n            break;\n        }\n    } while (true);\n\n    if (depth < length && undefined !== node) {\n        length = depth;\n    }\n\n    depth = -1;\n    path = new Array(length);\n    while (++depth < length) {\n        path[depth] = copy[depth];\n    }\n\n    arr[0] = node;\n    arr[1] = path;\n\n    return arr;\n}\n/* eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/getReferenceTarget.js","var typeofObject = 'object';\nvar clone = require('../../clone');\nvar inlineValue = require('./inlineValue');\n\nmodule.exports = onJSONGraphValue;\n\nfunction onJSONGraphValue(node, type, depth, seed, results,\n                          requestedPath, optimizedPath, optimizedLength,\n                          fromReference, boxValues, materialized) {\n\n    var value = node.value;\n\n    // boxValues always clones the node\n    if (boxValues || !(\n        /**\n         * JSON Graph should always clone:\n         * - refs\n         * - errors\n         * - atoms we didn't create\n         * - atoms we created to wrap Objects\n         **/\n        $ref !== type &&\n        $error !== type &&\n        node[f_wrapped_value] &&\n        typeofObject !== typeof value)) {\n        value = clone(node);\n    }\n\n    results.hasValue = true;\n    inlineValue(value, optimizedPath, optimizedLength, seed);\n    (seed.paths || (seed.paths = [])).push(\n        requestedPath.slice(0, depth + !!fromReference) // depth + 1 if fromReference === true\n    );\n\n    return value;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/onValue.js","var isArray = Array.isArray;\nvar clone = require('../../clone');\nvar onValue = require('./onValue');\nvar inlineValue = require('./inlineValue');\nvar isExpired = require('../../isExpired');\nvar onValueType = require('../onValueType');\nvar onMaterialize = require('../onMaterialize');\nvar originalOnMissing = require('../onMissing');\nvar getReferenceTarget = require('./getReferenceTarget');\nvar NullInPathError = require('../../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = walkPathAndBuildOutput;\n\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction walkPathAndBuildOutput(root, node, path,\n                                depth, seed, results,\n                                requestedPath, requestedLength,\n                                optimizedPath, optimizedLength,\n                                fromReference, modelRoot, expired, expireImmediate,\n                                boxValues, materialized, hasDataSource, treatErrorsAsValues) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (node === undefined || (\n        type = node.$type) || (\n        depth === requestedLength)) {\n        return onValueType(node, type, seed,\n                           path, depth, seed, results,\n                           requestedPath, requestedLength,\n                           optimizedPath, optimizedLength,\n                           fromReference, modelRoot, expired, expireImmediate,\n                           undefined, boxValues, materialized, hasDataSource,\n                           treatErrorsAsValues, onValue, onMissing, onMaterialize);\n    }\n\n    var next, nextKey,\n        keyset, keyIsRange,\n        nextDepth = depth + 1,\n        rangeEnd, keysOrRanges,\n        keysetIndex = -1, keysetLength = 0,\n        nextOptimizedLength, nextOptimizedPath,\n        optimizedLengthNext = optimizedLength + 1;\n\n    keyset = path[depth];\n\n    // If `null` appears before the end of the path, throw an error.\n    // If `null` is at the end of the path, but the reference doesn't\n    // point to a sentinel value, throw an error.\n    //\n    // Inserting `null` at the end of the path indicates the target of a ref\n    // should be returned, rather than the ref itself. When `null` is the last\n    // key, the path is lengthened by one, ensuring that if a ref is encountered\n    // just before the `null` key, the reference is followed before terminating.\n    if (null === keyset) {\n        if (nextDepth < requestedLength) {\n            throw new NullInPathError();\n        }\n        return undefined;\n    }\n\n    // Iterate over every key in the keyset. This loop is perhaps a bit clever,\n    // but we do it this way because this is a performance-sensitive code path.\n    // This loop simulates a recursive function if we encounter a Keyset that\n    // contains Keys or Ranges. This is accomplished by a nifty dance between an\n    // outer loop and an inner loop.\n    //\n    // The outer loop is responsible for identifying if the value at this depth\n    // is a Key, Range, or Keyset. If it encounters a Keyset, the `keysetIndex`,\n    // `keysetLength`, and `keysOrRanges` variables are assigned and the outer\n    // loop restarts. If it encounters a Key or Range, `nextKey`, `keyIsRange`,\n    // and `rangeEnd` are assigned values which signal whether the inner loop\n    // should iterate a Range or exit after the first run.\n    //\n    // The inner loop steps `nextKey` one level down in the cache. If a Range\n    // was encountered in the outer loop, the inner loop will iterate until the\n    // Range has been exhausted. If a Key was encountered, the inner loop exits\n    // after the first execution.\n    //\n    // After the inner loop exits, the outer loop iterates the `keysetIndex`\n    // until the Keyset is exhausted. `keysetIndex` and `keysetLength` are\n    // initialized to -1 and 0 respectively, so if a Keyset wasn't encountered\n    // at this depth in the path, then the outer loop exits after one execution.\n\n    iteratingKeyset: do {\n\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        if ('object' !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If we encounter a Keyset, either iterate through the Keys and Ranges,\n        // or throw an error if we're already iterating a Keyset. Keysets cannot\n        // contain other Keysets.\n        else if (isArray(keyset)) {\n            // If we've already encountered an Array keyset, throw an error.\n            if (keysOrRanges !== undefined) {\n                throw new InvalidKeySetError(path, keysOrRanges);\n            }\n            keysetIndex = 0;\n            keysOrRanges = keyset;\n            keysetLength = keyset.length;\n            // If an Array of keys or ranges is empty, terminate the graph walk\n            // and return the json constructed so far. An example of an empty\n            // Keyset is: ['lolomo', [], 'summary']. This should short circuit\n            // without building missing paths.\n            if (0 === keysetLength) {\n                break iteratingKeyset;\n            }\n            keyset = keysOrRanges[keysetIndex];\n            // Assign `keyset` to the first value in the Keyset. Re-entering the\n            // outer loop mimics a singly-recursive function call.\n            continue iteratingKeyset;\n        }\n        // If the Keyset isn't a primitive or Array, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if ('number' !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n            fromReference = false;\n            nextOptimizedPath = optimizedPath;\n            nextOptimizedLength = optimizedLengthNext;\n\n            next = node[nextKey];\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            // If we encounter a ref, inline the reference target and continue\n            // evaluating the path.\n            if (next &&\n                nextDepth < requestedLength &&\n                // If the reference is expired, it will be invalidated and\n                // reported as missing in the next call to walkPath below.\n                next.$type === $ref && !isExpired(next, expireImmediate)) {\n\n                // Write the cloned ref value into the jsonGraph at the\n                // optimized path. JSONGraph must always clone references.\n                seed && inlineValue(clone(next), optimizedPath, nextOptimizedLength, seed);\n\n                // Retrieve the reference target and next referenceContainer (if\n                // this reference points to other references) and continue\n                // following the path. If the reference resolves to a missing\n                // path or leaf node, it will be handled in the next call to\n                // walkPath.\n                refTarget = getReferenceTarget(root, next, modelRoot, seed, expireImmediate);\n\n                next = refTarget[0];\n                fromReference = true;\n                nextOptimizedPath = refTarget[1];\n                nextOptimizedLength = nextOptimizedPath.length;\n                refTarget[0] = refTarget[1] = undefined;\n            }\n\n            walkPathAndBuildOutput(\n                root, next, path, nextDepth, seed,\n                results, requestedPath, requestedLength, nextOptimizedPath,\n                nextOptimizedLength, fromReference, modelRoot, expired, expireImmediate,\n                boxValues, materialized, hasDataSource, treatErrorsAsValues\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n\n        // If we've exhausted the Keyset (or never encountered one at all),\n        // exit the outer loop.\n        if (++keysetIndex === keysetLength) {\n            break iteratingKeyset;\n        }\n\n        // Otherwise get the next Key or Range from the Keyset and re-enter the\n        // outer loop from the top.\n        keyset = keysOrRanges[keysetIndex];\n    } while (true);\n\n    return undefined;\n}\n/* eslint-enable */\n\nfunction onMissing(path, depth, results,\n                   requestedPath, requestedLength, fromReference,\n                   optimizedPath, optimizedLength, reportMissing,\n                   reportMaterialized, seed, branchSelector,\n                   boxValues, onMaterialize) {\n\n    var json, isLeaf;\n\n    if (seed && reportMaterialized) {\n\n        (seed.paths || (seed.paths = [])).push(\n            (isLeaf = 0 === requestedLength - depth) &&\n                                 // depth + 1 if fromReference === true\n                requestedPath.slice(0, depth + !!fromReference) ||\n                requestedPath.slice(0, depth).concat(path\n                    .slice(depth, requestedLength + !!fromReference))\n        );\n\n        json = inlineValue(isLeaf && clone(materializedAtom) || undefined,\n                           optimizedPath, optimizedLength, seed, !isLeaf);\n    }\n\n    return originalOnMissing(path, depth, results,\n                             requestedPath, requestedLength, fromReference,\n                             optimizedPath, optimizedLength, reportMissing,\n                             !isLeaf && reportMaterialized, json,\n                             branchSelector, true, onMaterialize);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/jsonGraph/walkPath.js","var typeofNumber = 'number';\nvar typeofObject = 'object';\nvar clone = require('../clone');\nvar onValueType = require('./onValueType');\nvar FalcorJSON = require('./json/FalcorJSON');\nvar NullInPathError = require('../../errors/NullInPathError');\nvar InvalidKeySetError = require('../../errors/InvalidKeySetError');\nvar materializedAtom = require('@graphistry/falcor-path-utils/lib/support/materializedAtom');\n\nmodule.exports = onMaterializeFlatBuffer;\n\n/* eslint-disable camelcase */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-constant-condition */\nfunction onMaterializeFlatBuffer(json, path, depth, length,\n                                 branchSelector, boxValues, results,\n                                 requestedPath, optimizedPath, optimizedLength,\n                                 fromReference, reportMissing, onMissing) {\n\n    var type, refTarget;\n\n    // ============ Check for base cases ================\n\n    // If there's nowhere to go, we've reached a terminal node, or hit\n    // the end of the path, stop now. Either build missing paths or report the value.\n    if (undefined === path) {\n        onValueType(undefined, undefined, json,\n                    path, depth, undefined, results,\n                    requestedPath, depth, optimizedPath,\n                    optimizedLength, fromReference, undefined, undefined,\n                    false, branchSelector, boxValues, false, reportMissing,\n                    false, undefined, onMissing, undefined);\n        return boxValues ? clone(materializedAtom) : undefined;\n    }\n\n    var f_meta, f_old_keys, f_new_keys;\n\n    var nextKey,\n        keyset, keyIsRange,\n        keys = path['$keys'],\n        nextDepth = depth + 1, rangeEnd,\n        nextOptimizedLength = optimizedLength + 1;\n\n    if (!json || typeofObject !== typeof json) {\n        json = {};\n        json.__proto__ = FalcorJSON.prototype;\n        json[f_meta_data] = f_meta = {};\n        f_meta[f_meta_version] = 0;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n        if (branchSelector) {\n            json = branchSelector(json);\n        }\n    } else if (!(f_meta = json[f_meta_data])) {\n        json[f_meta_data] = f_meta = {};\n        f_meta[f_meta_version] = 0;\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n    } else {\n        f_old_keys = f_meta[f_meta_keys];\n        f_meta[f_meta_abs_path] = optimizedPath.slice(\n            0, optimizedLength\n        );\n    }\n\n    f_new_keys = {};\n\n    var nextPath;\n    var keysIndex = -1;\n    var keysLength = keys.length;\n\n    iteratingKeyset:\n    while (++keysIndex < keysLength) {\n\n        keyset = keys[keysIndex];\n        nextPath = path[keysIndex];\n\n        // If `null` appears before the end of the path, throw an error.\n        // If `null` is at the end of the path, but the reference doesn't\n        // point to a sentinel value, throw an error.\n        //\n        // Inserting `null` at the end of the path indicates the target of a ref\n        // should be returned, rather than the ref itself. When `null` is the last\n        // key, the path is lengthened by one, ensuring that if a ref is encountered\n        // just before the `null` key, the reference is followed before terminating.\n        if (null === keyset) {\n            if (nextPath !== undefined) {\n                throw new NullInPathError();\n            }\n            continue;\n        }\n        // If the keyset is a primitive value, we've found our `nextKey`.\n        else if (typeofObject !== typeof keyset) {\n            nextKey = keyset;\n            rangeEnd = undefined;\n            keyIsRange = false;\n        }\n        // If the Keyset isn't null or primitive, then it must be a Range.\n        else {\n            rangeEnd = keyset.to;\n            nextKey = keyset.from || 0;\n            if (typeofNumber !== typeof rangeEnd) {\n                rangeEnd = nextKey + (keyset.length || 0) - 1;\n            }\n            if ((rangeEnd - nextKey) < 0) {\n                break iteratingKeyset;\n            }\n            keyIsRange = true;\n        }\n\n        // Now that we have the next key, step down one level in the cache.\n        do {\n\n            requestedPath[depth] = nextKey;\n            optimizedPath[optimizedLength] = nextKey;\n\n            f_new_keys[nextKey] = true;\n            if (f_old_keys && (nextKey in f_old_keys)) {\n                f_old_keys[nextKey] = false;\n            }\n\n            // insert the materialized branch\n            json[nextKey] = onMaterializeFlatBuffer(\n                json[nextKey], nextPath, nextDepth,\n                nextDepth, branchSelector, boxValues, results,\n                requestedPath, optimizedPath, nextOptimizedLength,\n                fromReference, reportMissing, onMissing\n            );\n        }\n        // Re-enter the inner loop and continue iterating the Range, or exit\n        // here if we encountered a Key.\n        while (keyIsRange && ++nextKey <= rangeEnd);\n    }\n\n    f_meta['$code'] = '__incomplete__';\n    f_meta[f_meta_keys] = f_new_keys;\n    if (f_old_keys) {\n        for (nextKey in f_old_keys) {\n            if (f_old_keys[nextKey]) {\n                delete json[nextKey];\n            }\n        }\n    }\n\n    // `json` will be a branch if any cache hits, or undefined if all cache misses\n    return json;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/get/onMaterializeFlatBuffer.js","var isInternalKey = require('../support/isInternalKey');\n\n/**\n * decends and copies the cache.\n */\nmodule.exports = function getCache(cache) {\n    var out = {};\n    _copyCache(cache, out);\n\n    return out;\n};\n\nfunction cloneBoxedValue(boxedValue) {\n    var clonedValue = {};\n\n    var keys = Object.keys(boxedValue);\n    var key;\n    var i;\n    var l;\n\n    for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n\n        if (key === '$type' || !isInternalKey(key)) {\n            clonedValue[key] = boxedValue[key];\n        }\n    }\n\n    return clonedValue;\n}\n\nfunction _copyCache(node, out, fromKey) {\n    // copy and return\n\n    // only copy objects\n    if (!node || typeof node !== 'object') {\n        return;\n    }\n\n    Object.\n        keys(node).\n        filter(function(key) {\n            // Its not an internal key and the node has a value.  In the cache\n            // there are 3 possibilities for values.\n            // 1: A branch node.\n            // 2: A $type-value node.\n            // 3: undefined\n            // We will strip out 3\n            return (key === '$type' || !isInternalKey(key)) && node[key] !== undefined;\n        }).\n        forEach(function(key) {\n            var cacheNext = node[key];\n            var outNext = out[key];\n\n            if (!outNext) {\n                outNext = out[key] = {};\n            }\n\n            // Paste the node into the out cache.\n            if (cacheNext.$type) {\n                var isObject = cacheNext.value && typeof cacheNext.value === 'object';\n                var isUserCreatedcacheNext = !cacheNext[f_wrapped_value];\n                var value;\n                if (isObject || isUserCreatedcacheNext) {\n                    value = cloneBoxedValue(cacheNext);\n                } else {\n                    value = cacheNext.value;\n                }\n\n                out[key] = value;\n                return;\n            }\n\n            _copyCache(cacheNext, outNext, key);\n        });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getCache.js","var getBoundCacheNode = require('./getBoundCacheNode');\n\nmodule.exports = function _getVersion(model, path) {\n    var node = getBoundCacheNode(model, path);\n    var version = node && node[f_version];\n    return (version == null) ? -1 : version;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/getVersion.js","var groupCacheArguments = require('../groupCacheArguments');\n\nmodule.exports = {\n    json: invalidate,\n    jsonGraph: invalidate,\n    invalidatePathMaps: require('./invalidatePathMaps'),\n    invalidatePathValues: require('./invalidatePathSets')\n};\n\nfunction invalidate(model, args, seed, progressive, expireImmediate) {\n    invalidateArgumentGroups(model, groupCacheArguments(args), expireImmediate);\n    return {};\n}\n\nfunction invalidateArgumentGroups(model, xs, expireImmediate) {\n\n    var groupIndex = -1;\n    var groupCount = xs.length;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            if (inputType === 'PathValues') {\n                groupedArgs = groupedArgs.map(pluckPaths);\n            }\n            module.exports['invalidate' + inputType](model, groupedArgs, expireImmediate);\n        }\n    }\n}\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/invalidate/index.js","var wrapNode = require('./wrapNode');\nvar isExpired = require('./isExpired');\nvar insertNode = require('./insertNode');\nvar expireNode = require('./expireNode');\nvar replaceNode = require('./replaceNode');\nvar getSize = require('../support/getSize');\nvar reconstructPath = require('./reconstructPath');\nvar getTimestamp = require('../support/getTimestamp');\nvar updateNodeAncestors = require('./updateNodeAncestors');\n\nmodule.exports = function mergeJSONGraphNode(\n    parent, node, message, key, requestedPath, optimizedPath,\n    version, expired, lru, comparator, errorSelector, expireImmediate) {\n\n    var sizeOffset;\n\n    var cType, mType,\n        cIsObject, mIsObject,\n        cTimestamp, mTimestamp;\n\n    // If the cache and message are the same, we can probably return early:\n    // - If they're both nullsy,\n    //   - If null then the node needs to be wrapped in an atom and inserted.\n    //     This happens from whole branch merging when a leaf is just a null value\n    //     instead of being wrapped in an atom.\n    //   - If undefined then return null (previous behavior).\n    // - If they're both branches, return the branch.\n    // - If they're both edges, continue below.\n    if (node === message) {\n\n        // The message and cache are both undefined, return undefined.\n        if (message === undefined) {\n            return message;\n        }\n        // There should not be undefined values. Those should always be\n        // wrapped in an $atom\n        else if (message === null) {\n            node = wrapNode(message, undefined, message);\n            parent = updateNodeAncestors(parent, -node.$size, lru, version);\n            node = insertNode(node, parent, key, undefined, optimizedPath);\n            return node;\n        }\n        // Is the cache node a branch? If so, return the cache branch.\n        else if ((\n            cIsObject = !(!node || typeof node !== 'object')) && (\n            cType = node.$type) === undefined) {\n            // Has the branch been introduced to the cache yet? If not,\n            // give it a parent, key, and absolute path.\n            if (node[f_parent] === undefined) {\n                insertNode(node, parent, key, version, optimizedPath);\n            }\n            return node;\n        }\n    } else if (cIsObject = !(!node || typeof node !== 'object')) {\n        cType = node.$type;\n    }\n\n    // If the cache isn't a reference, we might be able to return early.\n    if (cType !== $ref) {\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n        }\n        if (cIsObject && !cType) {\n            // If the cache is a branch and the message is empty or\n            // also a branch, continue with the cache branch.\n            if (message == null || (mIsObject && !mType)) {\n                return node;\n            }\n        }\n    }\n    // If the cache is a reference, we might not need to replace it.\n    else {\n        // If the cache is a reference, but the message is empty,\n        // leave the cache alone...\n        if (message == null) {\n            // ...unless the cache is an expired reference. In that case, expire\n            // the cache node and return undefined.\n            if (isExpired(node, expireImmediate)) {\n                expireNode(node, expired, lru);\n                return void 0;\n            }\n            return node;\n        }\n        mIsObject = !(!message || typeof message !== 'object');\n        if (mIsObject) {\n            mType = message.$type;\n            // If the cache and the message are both references,\n            // check if we need to replace the cache reference.\n            if (mType === $ref) {\n                if (node === message) {\n                    // If the cache and message are the same reference,\n                    // we performed a whole-branch merge of one of the\n                    // grandparents. If we've previously graphed this\n                    // reference, break early. Otherwise, continue to\n                    // leaf insertion below.\n                    if (node[f_parent] != null) {\n                        return node;\n                    }\n                } else {\n\n                    cTimestamp = node.$timestamp;\n                    mTimestamp = message.$timestamp;\n\n                    // - If either the cache or message reference is expired,\n                    //   replace the cache reference with the message.\n                    // - If neither of the references are expired, compare their\n                    //   timestamps. If either of them don't have a timestamp,\n                    //   or the message's timestamp is newer, replace the cache\n                    //   reference with the message reference.\n                    // - If the message reference is older than the cache\n                    //   reference, short-circuit.\n                    if (!isExpired(node, expireImmediate) &&\n                        !isExpired(message, expireImmediate) &&\n                        mTimestamp < cTimestamp) {\n                        return void 0;\n                    }\n                }\n            }\n        }\n    }\n\n    // If the cache is a leaf but the message is a branch,\n    // merge the branch over the leaf.\n    if (cType && mIsObject && !mType) {\n        return insertNode(replaceNode(\n                node, message, parent, key, lru, version),\n            parent, key, undefined, optimizedPath\n        );\n    }\n    // If the message is a sentinel or primitive, insert it into the cache.\n    else if (mType || !mIsObject) {\n\n        if (mType === $error && errorSelector) {\n            message = errorSelector(reconstructPath(requestedPath, key), message);\n        }\n\n        // If the cache and the message are the same value, we branch-merged one\n        // of the message's ancestors. If this is the first time we've seen this\n        // leaf, give the message a $size and $type, attach its graph pointers,\n        // and update the cache sizes and versions.\n        if (mType && node === message) {\n            if (!node[f_parent]) {\n                node = wrapNode(node, cType, node.value);\n                parent = updateNodeAncestors(parent, -node.$size, lru, version);\n                node = insertNode(node, parent, key, version, optimizedPath);\n            }\n        }\n        // If the cache and message are different, the cache value is expired,\n        // or the message is a primitive, replace the cache with the message value.\n        // If the message is a sentinel, clone and maintain its type.\n        // If the message is a primitive value, wrap it in an atom.\n        else {\n            var isDistinct = true;\n            // If both the cache and message are primitives, we branch-merged\n            // one of the message's ancestors. Insert the value into the cache.\n            if (!cType && !mType) {\n                isDistinct = true;\n            }\n            // If the cache is a branch, but the message is a leaf, replace the\n            // cache branch with the message leaf.\n            else if (!cIsObject || !isExpired(node, expireImmediate)) {\n                // Compare the current cache value with the new value. If either of\n                // them don't have a timestamp, or the message's timestamp is newer,\n                // replace the cache value with the message value. If a comparator\n                // is specified, the comparator takes precedence over timestamps.\n                if (comparator) {\n                    isDistinct = !(comparator.length < 3 ?\n                        comparator(node, message) : comparator(node, message,\n                            optimizedPath.slice(0, optimizedPath.index))\n                    );\n                } else {\n                    // Comparing either Number or undefined to undefined always results in false.\n                    isDistinct = getTimestamp(message) < getTimestamp(node) === false;\n                }\n            }\n            if (isDistinct) {\n                sizeOffset = getSize(node) - getSize(message =\n                    wrapNode(message, mType, mType ? message.value : message));\n                node = replaceNode(node, message, parent, key, lru, version);\n                parent = updateNodeAncestors(parent, sizeOffset, lru, version);\n                node = insertNode(node, parent, key, version, optimizedPath);\n            }\n        }\n\n        // Promote the message edge in the LRU.\n        if (isExpired(node,\n            /* expireImmediate:\n             * force true so the node is marked as\n             * expired but keep using it for the merge.\n             */\n            true)) {\n            expireNode(node, expired, lru);\n        }\n    }\n    else if (node == null) {\n        node = insertNode(message, parent, key, undefined, optimizedPath);\n    }\n\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/mergeJSONGraphNode.js","var getJSON = require('../get/json');\nvar getJSONGraph = require('../get/jsonGraph');\nvar arrayFlatMap = require('../../support/array-flat-map');\nvar groupCacheArguments = require('../groupCacheArguments');\n\nmodule.exports = {\n    json: json,\n    jsonGraph: jsonGraph,\n    setPathMaps: require('./setPathMaps'),\n    setPathValues: require('./setPathValues'),\n    setJSONGraphs: require('./setJSONGraphs')\n};\n\nfunction json(model, _args, data, progressive, expireImmediate) {\n\n    var set, get, jsong,\n        changed, relative, optimized,\n        missing, fragments, requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args, expireImmediate);\n\n    if ((relative = set.requested).length) {\n\n        if (!(changed = set.changed) || progressive) {\n            get = getJSON(model, relative, data, progressive, expireImmediate);\n        }\n\n        if (changed) {\n\n            jsong = getJSONGraph({\n                _root: model._root,\n                _boxed: model._boxed, _materialized: true,\n                _treatErrorsAsValues: model._treatErrorsAsValues\n            }, set.optimized, {}, progressive, expireImmediate);\n\n            fragments = jsong.data;\n            missing = fragments.paths;\n            requested = jsong.requested;\n        }\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: get && get.error,\n        errors: get && get.errors,\n        hasValue: get && get.hasValue\n    };\n}\n\nfunction jsonGraph(model, _args, data, progressive, expireImmediate) {\n\n    var set, jsong,\n        changed, relative, optimized,\n        missing, fragments, requested,\n        args = groupCacheArguments(_args);\n\n    set = setGroupsIntoCache(model, args, expireImmediate);\n\n    if ((relative = set.requested).length && (\n         progressive || set.changed)) {\n\n        jsong = getJSONGraph({\n            _root: model._root,\n            _boxed: model._boxed, _materialized: true,\n            _treatErrorsAsValues: model._treatErrorsAsValues\n        }, set.optimized, data, progressive, expireImmediate);\n\n        fragments = jsong.data;\n        missing = fragments.paths;\n        requested = jsong.requested;\n    }\n\n    return {\n        args: args,\n        data: data,\n        missing: missing,\n        relative: relative,\n        fragments: fragments,\n        requested: requested,\n        error: jsong && jsong.error,\n        hasValue: jsong && jsong.hasValue\n    };\n}\n\nfunction setGroupsIntoCache(model, xs, expireImmediate) {\n\n    var changed = false;\n    var groupIndex = -1;\n    var groupCount = xs.length;\n    var requestedPaths = [];\n    var optimizedPaths = [];\n    var modelRoot = model._root;\n    var errorSelector = modelRoot.errorSelector;\n\n    expireImmediate = expireImmediate && !Boolean(model._source);\n    var comparator = Boolean(model._source) ? null : modelRoot.comparator;\n\n    // Takes each of the groups and normalizes their input into\n    // requested paths and optimized paths.\n    while (++groupIndex < groupCount) {\n\n        var group = xs[groupIndex];\n        var inputType = group.inputType;\n        var groupedArgs = group.arguments;\n\n        if (groupedArgs.length > 0) {\n            var operation = module.exports['set' + inputType];\n            var results = operation(model, groupedArgs, errorSelector, comparator, expireImmediate);\n            changed = changed || results[2];\n            optimizedPaths.push.apply(optimizedPaths, results[1]);\n            if (inputType === 'PathValues') {\n                requestedPaths.push.apply(requestedPaths, groupedArgs.map(pluckPaths));\n            } else if (inputType === 'JSONGraphs') {\n                requestedPaths.push.apply(requestedPaths, arrayFlatMap(groupedArgs, pluckPaths));\n            } else {\n                requestedPaths.push.apply(requestedPaths, results[0]);\n            }\n        }\n    }\n\n    return {\n        changed: changed,\n        requested: requestedPaths,\n        optimized: optimizedPaths\n    };\n}\n\nfunction pluckPaths(x) {\n    return x.path || x.paths;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/set/index.js","module.exports = function transferBackReferences(fromNode, destNode) {\n    var fromNodeRefsLength = fromNode[f_refs_length] || 0,\n        destNodeRefsLength = destNode[f_refs_length] || 0,\n        i = -1;\n    while (++i < fromNodeRefsLength) {\n        var ref = fromNode[f_ref + i];\n        if (ref !== void 0) {\n            ref[f_context] = destNode;\n            destNode[f_ref + (destNodeRefsLength + i)] = ref;\n            fromNode[f_ref + i] = void 0;\n        }\n    }\n    destNode[f_refs_length] = fromNodeRefsLength + destNodeRefsLength;\n    fromNode[f_refs_length] = void 0;\n    return destNode;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/transferBackReferences.js","module.exports = function unlinkBackReferences(node) {\n    var i = -1, n = node[f_refs_length] || 0;\n    while (++i < n) {\n        var ref = node[f_ref + i];\n        if (ref != null) {\n            ref[f_context] = ref[f_ref_index] = node[f_ref + i] = void 0;\n        }\n    }\n    node[f_refs_length] = void 0;\n    return node;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/unlinkBackReferences.js","module.exports = function unlinkForwardReference(reference) {\n    var destination = reference[f_context];\n    if (destination) {\n        var i = (reference[f_ref_index] || 0) - 1,\n            n = (destination[f_refs_length] || 0) - 1;\n        while (++i <= n) {\n            destination[f_ref + i] = destination[f_ref + (i + 1)];\n        }\n        destination[f_refs_length] = n;\n        reference[f_ref_index] = reference[f_context] = destination = void 0;\n    }\n    return reference;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/cache/unlinkForwardReference.js","module.exports = hasValidParentReference;\n\nfunction hasValidParentReference() {\n    var reference = this._referenceContainer;\n\n    // Always true when this mode is false.\n    if (!this._allowFromWhenceYouCame) {\n        return true;\n    }\n\n    // If fromWhenceYouCame is true and the first set of keys did not have\n    // a reference, this case can happen.  They are always valid.\n    if (reference === true) {\n        return true;\n    }\n\n    // was invalid before even derefing.\n    if (reference === false) {\n        return false;\n    }\n\n    // Its been disconnected (set over or collected) from the graph.\n    if (reference && reference[f_parent] === undefined) {\n        return false;\n    }\n\n    // The reference has expired but has not been collected from the graph.\n    if (reference && reference[f_invalidated]) {\n        return false;\n    }\n\n    return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/deref/hasValidParentReference.js","var CONTAINER_DOES_NOT_EXIST = 'e';\nvar FalcorJSON = require('../cache/get/json/FalcorJSON');\nvar getCachePosition = require('../cache/getCachePosition');\nvar InvalidDerefInputError = require('../errors/InvalidDerefInputError');\n\nmodule.exports = function deref(json) {\n\n    var seed, f_meta;\n\n    if (!json || 'object' !== typeof json || !(\n        f_meta = json[f_meta_data]) || 'object' !== typeof f_meta) {\n        return null;\n    }\n\n    var cacheRoot = this._root.cache;\n    var recycleJSON = this._recycleJSON;\n    var absolutePath = f_meta[f_meta_abs_path];\n    var referenceContainer, currentRefPath, i, len;\n\n    if (!absolutePath) {\n        if (recycleJSON) {\n            seed = { json: json };\n            seed.__proto__ = FalcorJSON.prototype;\n        }\n        return this._clone({\n            _node: undefined,\n            _seed: seed\n        });\n    } else if (absolutePath.length === 0) {\n        if (recycleJSON) {\n            seed = { json: json };\n            seed.__proto__ = FalcorJSON.prototype;\n        }\n        return this._clone({\n            _node: cacheRoot,\n            _path: absolutePath,\n            _referenceContainer: true,\n            _seed: seed\n        });\n    }\n\n    var originalRefPath = f_meta[f_meta_deref_to];\n    var originalAbsPath = f_meta[f_meta_deref_from];\n\n    // We deref and then ensure that the reference container is attached to\n    // the model.\n    var cacheNode = getCachePosition(cacheRoot, absolutePath);\n    var validContainer = CONTAINER_DOES_NOT_EXIST;\n\n    if (originalAbsPath) {\n\n        validContainer = false;\n\n        i = -1;\n        len = originalAbsPath.length;\n        referenceContainer = cacheRoot;\n        while (++i < len) {\n            referenceContainer = referenceContainer[originalAbsPath[i]];\n            if (!referenceContainer || referenceContainer.$type) {\n                break;\n            }\n        }\n\n        // If the reference container is still a sentinel value then compare\n        // the reference value with refPath.  If they are the same, then the\n        // model is still valid.\n        if (originalRefPath && referenceContainer && referenceContainer.$type === $ref) {\n            validContainer = true;\n            len = originalRefPath.length;\n            currentRefPath = referenceContainer.value;\n            for (i = 0; i < len; ++i) {\n                if (currentRefPath[i] !== originalRefPath[i]) {\n                    cacheNode = undefined;\n                    validContainer = false;\n                    break;\n                }\n            }\n        }\n    }\n\n    // Signal to the deref'd model that it has been disconnected from the\n    // graph or there is no _fromWhenceYouCame\n    if (!validContainer) {\n        referenceContainer = false;\n    }\n\n    // The container did not exist, therefore there is no reference\n    // container and fromWhenceYouCame should always return true.\n    else if (validContainer === CONTAINER_DOES_NOT_EXIST) {\n        referenceContainer = true;\n    }\n\n    if (recycleJSON) {\n        seed = { json: json };\n        seed.__proto__ = FalcorJSON.prototype;\n    }\n\n    return this._clone({\n        _seed: seed,\n        _node: cacheNode,\n        _path: absolutePath,\n        _referenceContainer: referenceContainer\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/deref/index.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'It is not legal to use the JSON Graph ' +\n    'format from a bound Model. JSON Graph format' +\n    ' can only be used from a root model.';\n\n/**\n * When a bound model attempts to retrieve JSONGraph it should throw an\n * error.\n *\n * @private\n */\nmodule.exports = createErrorClass('BoundJSONGraphModelError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/BoundJSONGraphModelError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'Deref can only be used with a non-primitive object from get, set, or call.';\n\n/**\n * An invalid deref input is when deref is used with input that is not generated\n * from a get, set, or a call.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidDerefInputError', function() {\n    this.message = MESSAGE;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidDerefInputError.js","var createErrorClass = require('./createErrorClass');\nvar MESSAGE = 'The boundPath of the model is not valid since a value or error was found before the path end.';\n\n/**\n * An InvalidModelError can only happen when a user binds, whether sync\n * or async to shorted value.  See the unit tests for examples.\n *\n * @param {String} message\n * @private\n */\nmodule.exports = createErrorClass('InvalidModelError', function(boundPath, shortedPath) {\n    this.message = MESSAGE;\n    this.boundPath = boundPath;\n    this.shortedPath = shortedPath;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/InvalidModelError.js","var createErrorClass = require('./createErrorClass');\n\n/**\n * A request can only be retried up to a specified limit.  Once that\n * limit is exceeded, then an error will be thrown.\n *\n * @private\n */\nmodule.exports = createErrorClass('MaxRetryExceededError', function(maxRetryCount, absolute, relative, optimized) {\n    this.message = '' +\n        'Exceeded the max retry count (' + maxRetryCount + ') for these paths: \\n' +\n        (absolute &&\n        'absolute: [\\n\\t' + printPaths(absolute) + '\\n]\\n' || '') +\n        (relative &&\n        'relative: [\\n\\t' + printPaths(relative) + '\\n]\\n' || '') +\n        (optimized &&\n        'optimized: [\\n\\t' + printPaths(optimized) + '\\n]\\n' || '');\n});\n\nfunction printPaths(paths) {\n    return paths.map(function(path) {\n        return JSON.stringify(path);\n    }).join(',\\n\\t');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/errors/MaxRetryExceededError.js","module.exports = String.fromCharCode(30) + 'ƒ_';\n\n\n\n// WEBPACK FOOTER //\n// ./lib/internal/f_.js","var Source = require('./Source');\nvar Subscriber = require('./Subscriber');\nvar lruCollect = require('../lru/collect');\nvar FalcorJSON = require('../cache/get/json/FalcorJSON');\nvar collapse = require('@graphistry/falcor-path-utils/lib/collapse');\nvar InvalidSourceError = require('../errors/InvalidSourceError');\nvar MaxRetryExceededError = require('../errors/MaxRetryExceededError');\n\nmodule.exports = Call;\n\nfunction Call(type, model, _args) {\n    Source.call(this, type);\n    if (model && _args) {\n        this.type = type;\n        this.source = this;\n        this.model = model;\n        this._args = _args;\n    }\n}\n\nCall.prototype = Object.create(Source.prototype);\n\nCall.prototype.lift = function(operator, source) {\n    source = new Call(source || this);\n    source.type = this.type;\n    source.model = this.model;\n    source._args = this._args;\n    source.operator = operator;\n    operator.data = operator.data || this.operator.data;\n    operator.errors = operator.errors || this.operator.errors;\n    operator.operation = operator.operation || this.operator.operation;\n    operator.progressive = operator.progressive || this.operator.progressive;\n    operator.maxRetryCount = operator.maxRetryCount || this.operator.maxRetryCount;\n    return source;\n}\n\nCall.prototype.operator = function(subscriber) {\n    return this._subscribe(subscriber);\n}\n\nCall.prototype._subscribe = function(subscriber) {\n    subscriber.onNext({\n        type: this.type,\n        args: this._args,\n        model: this.model,\n        version: this.model._root.version\n    });\n    subscriber.onCompleted();\n    return subscriber;\n}\n\nCall.prototype._toJSON = function(data, errors) {\n    if (data === undefined) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    return this.lift(new CallOperator(\n        data, errors || this.operator.errors, 'json',\n        this.operator.progressive, this.operator.maxRetryCount\n    ), this.source);\n}\n\nCall.prototype._toJSONG = function(data, errors) {\n    if (data === undefined) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n    return this.lift(new CallOperator(\n        data, errors || this.operator.errors, 'jsonGraph',\n        this.operator.progressive, this.operator.maxRetryCount\n    ), this.source);\n}\n\nCall.prototype.retry = function(maxRetryCount) {\n    return this.lift(new CallOperator(\n        this.operator.data,\n        this.operator.errors,\n        this.operator.operation,\n        this.operator.progresive,\n        maxRetryCount\n    ), this.source);\n}\n\nCall.prototype.progressively = function() {\n    return this.lift(new CallOperator(\n        this.operator.data,\n        this.operator.errors,\n        this.operator.operation,\n        true,\n        this.operator.maxRetryCount\n    ), this.source);\n}\n\nfunction CallOperator(data, errors, operation, progressive, maxRetryCount) {\n    this.data = data;\n    this.errors = errors;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallOperator.prototype.call = function(source, destination) {\n    return source.subscribe(new CallSubscriber(\n        destination, this.data, this.errors, this.operation, this.progressive\n    ));\n}\n\nfunction CallSubscriber(destination, data, errors, operation, progressive, maxRetryCount) {\n    Subscriber.call(this, destination);\n    this.data = data;\n    this.retryCount = -1;\n    this.errors = errors;\n    this.hasValue = false;\n    this.completed = false;\n    this.operation = operation;\n    this.progressive = progressive;\n    this.maxRetryCount = maxRetryCount;\n}\n\nCallSubscriber.prototype = Object.create(Subscriber.prototype);\nCallSubscriber.prototype.operations = {\n    get: require('../cache/get'),\n    set: require('../cache/set'),\n    call: require('../cache/call'),\n    invalidate: require('../cache/invalidate')\n};\n\nCallSubscriber.prototype.next =\nCallSubscriber.prototype.onNext = function(seed) {\n\n    if (!this.started) {\n        this.args = seed.args;\n        this.type = seed.type;\n        this.model = seed.model;\n        this.version = seed.version;\n        this.maxRetryCount = this.maxRetryCount || this.model._root.maxRetryCount;\n        return;\n    }\n\n    var missing, fragments;\n    var type = seed.type;\n    var args = seed.args || seed.paths;\n\n    var data = this.data;\n    var model = this.model;\n    var errors = this.errors;\n    var results = this.results;\n    var version = this.version;\n    var hasValue = this.hasValue;\n    var operation = this.operation;\n    var progressive = this.progressive;\n\n    var seedIsImmutable = progressive && data;\n\n    // If we request paths as JSON in progressive mode, ensure each progressive\n    // valueNode is immutable. If not in progressive mode, we can write into the\n    // same JSON tree until the request is completed.\n    if (seedIsImmutable) {\n        data = {};\n        data.__proto__ = FalcorJSON.prototype;\n    }\n\n    if (args && args.length) {\n\n        results = this.operations[type]\n            [operation](model, args, data,\n                        progressive || !model._source,\n                        this.retryCount === -1);\n\n        // We must communicate critical errors from get, such as bound path is\n        // broken or this is a JSONGraph request with a bound path.\n        if (results.error) {\n            return tryOnError(this, results.error);\n        }\n\n        errors && results.errors &&\n            errors.push.apply(errors, results.errors);\n\n        if (fragments = results.fragments) {\n            args = results.args;\n            this.fragments = fragments;\n        }\n\n        this.relative = results.relative;\n        this.requested = results.requested;\n        this.missing = missing = results.missing;\n        this.hasValue = hasValue || (hasValue = results.hasValue);\n    }\n\n    // We are done when there are no missing paths or\n    // the model does not have a dataSource to fetch from.\n    this.completed = !missing || !model._source;\n\n    if (type !== 'set') {\n        this.args = args;\n        if (seedIsImmutable) {\n            this.data = mergeInto(data, this.data);\n        }\n    }\n\n    if (progressive && hasValue && data && (data.json || data.jsonGraph)) {\n        tryOnNext(data, operation, model._root, this.destination);\n    }\n}\n\nCallSubscriber.prototype.error =\nCallSubscriber.prototype.onError = function(error) {\n    if (error instanceof InvalidSourceError) {\n        return Subscriber.prototype.onError.call(this, error);\n    }\n    this.errored = true;\n    this.onCompleted(error);\n}\n\nCallSubscriber.prototype.complete =\nCallSubscriber.prototype.onCompleted = function(error) {\n\n    var data, type, errors, errored;\n\n    if (!this.started && (this.started = true)) {\n        this.onNext(this);\n    } else if (errored = this.errored) {\n        this.onNext({ type: 'get', paths: this.relative });\n    }\n\n    if (errored || this.completed) {\n        if (!this.progressive && this.hasValue && (\n            (data = this.data) && data.json || data.jsonGraph)) {\n            tryOnNext(data, this.operation, this.model._root, this.destination);\n        }\n        errors = this.errors;\n        if (errored || error || errors && errors.length) {\n            return tryOnError(this, errors.length && errors || error);\n        }\n\n        return Subscriber.prototype.onCompleted.call(this);\n    }\n\n    if (++this.retryCount >= this.maxRetryCount) {\n        return tryOnError(this, new MaxRetryExceededError(\n            this.retryCount,\n            this.requested,\n            this.relative,\n            this.missing\n        ));\n    }\n\n    this.request = this.model._root.requests[this.type](\n        this.model, this.missing, this.relative, this.fragments\n    ).subscribe(this);\n}\n\nCallSubscriber.prototype.dispose =\nCallSubscriber.prototype.unsubscribe = function() {\n\n    var model = this.model;\n    var version = this.version;\n    var request = this.request;\n\n    this.args = null;\n    this.data = null;\n    this.model = null;\n    this.errors = null;\n    this.errored = false;\n    this.started = false;\n    this.hasValue = false;\n    this.completed = false;\n\n    Subscriber.prototype.dispose.call(this);\n\n    if (request) {\n        this.request = null;\n        request.dispose();\n    }\n\n    if (model) {\n\n        var modelRoot = model._root;\n        var cache = modelRoot.cache;\n        var shouldCollectCache = modelRoot.syncRefCount <= 0 &&\n                                 version !== modelRoot.version;\n\n        // Prune the cache via the LRU if this is the last request.\n        if (shouldCollectCache) {\n\n            if (cache) {\n                lruCollect(modelRoot,\n                           modelRoot.expired,\n                           cache.$size || 0,\n                           modelRoot.maxSize,\n                           modelRoot.collectRatio,\n                           modelRoot.version);\n            }\n\n            var rootOnChangesCompletedHandler = modelRoot.onChangesCompleted;\n\n            if (rootOnChangesCompletedHandler) {\n                rootOnChangesCompletedHandler.call(modelRoot.topLevelModel);\n            }\n        }\n    }\n}\n\nfunction tryOnNext(data, operation, modelRoot, destination) {\n    if (operation === 'jsonGraph' && data.paths) {\n        data.paths = collapse(data.paths);\n    }\n    try {\n        ++modelRoot.syncRefCount;\n        destination.onNext(data);\n    } catch(e) {\n        throw e;\n    } finally {\n        --modelRoot.syncRefCount;\n    }\n}\n\nfunction tryOnError(self, error) {\n    try {\n        throw error;\n    } catch (err) {\n        Subscriber.prototype.onError.call(self, err);\n    }\n}\n\nfunction mergeInto(dest, node) {\n\n    var destValue, nodeValue,\n        key, keys = Object.keys(node),\n        index = -1, length = keys.length;\n\n    while (++index < length) {\n\n        key = keys[index];\n\n        if (key === f_meta_data) {\n            dest[f_meta_data] = node[f_meta_data];\n        } else {\n\n            nodeValue = node[key];\n            destValue = dest[key];\n\n            if (destValue !== nodeValue) {\n                if (!nodeValue || typeof nodeValue !== 'object') {\n                    if (destValue === undefined) {\n                        dest[key] = nodeValue;\n                    }\n                } else if (destValue === undefined) {\n                    dest[key] = nodeValue;\n                } else {\n                    mergeInto(destValue, nodeValue);\n                }\n            }\n        }\n    }\n\n    return dest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Call.js","var Source = require('./Source');\nvar Request = require('./Request');\nvar Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar ImmediateScheduler = require('../schedulers/ImmediateScheduler');\n\nmodule.exports = Queue;\n\nfunction Queue(modelRoot) {\n    Subscription.call(this, []);\n    this.modelRoot = modelRoot;\n}\n\nQueue.prototype = Object.create(Subscription.prototype);\n\nQueue.prototype.set = isolateSet;\nQueue.prototype.call = isolateCall;\nQueue.prototype.get = batchAndDedupeGet;\n\nfunction isolateSet(model, optimized, requested, env) {\n    var queue = this;\n    return new Source(function(destination) {\n\n        var request = new Request('set', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = env.jsonGraph;\n        request.requested.push(requested);\n        request.optimized.push(optimized);\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction isolateCall(model, optimized, requested, callArgs) {\n    var queue = this;\n    return new Source(function(destination) {\n\n        var request = new Request('call', queue, model._source, new ImmediateScheduler());\n        var subscriber = request.subscribe(new Subscriber(destination, request));\n\n        queue.add(request);\n        request.data = callArgs;\n        request.boundPath = model._path;\n\n        request.connect();\n\n        return subscriber;\n    });\n}\n\nfunction batchAndDedupeGet(model, optimized, requested) {\n    return new Dedupe(\n        this, model._source, model._scheduler, requested, optimized\n    );\n}\n\nfunction Dedupe(queue, source, scheduler, requested, optimized) {\n    this.queue = queue;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n    this.requested = requested;\n    this.optimized = optimized;\n}\n\nDedupe.prototype.subscribe = function(destination) {\n\n    var queue = this.queue;\n    var source = this.dataSource;\n    var requested = this.requested;\n    var optimized = this.optimized;\n    var scheduler = this.scheduler;\n\n    var requestsIndex = -1;\n    var requests  = queue.subscriptions;\n    var requestsCount = requests.length;\n    var subscription = new Subscription([], destination);\n\n    while (++requestsIndex < requestsCount) {\n\n        var request = requests[requestsIndex];\n\n        if (request.type !== 'get') {\n            continue;\n        }\n\n        if (request = request.batch(requested, optimized, requested = [], optimized = [])) {\n            subscription.add(request.subscribe(new Subscriber(destination, request)));\n        }\n\n        if (!optimized.length) {\n            break;\n        }\n    }\n\n    if (optimized.length) {\n        request = requests[requestsIndex] =\n            new Request('get', queue, source, scheduler).batch(requested, optimized);\n        subscription.add(request.subscribe(new Subscriber(destination, request)));\n        request.connect();\n    }\n\n    return subscription;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Queue.js","var isArray = Array.isArray;\nvar Subject = require('./Subject');\nvar Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\nvar InvalidSourceError = require('../errors/InvalidSourceError');\n\nvar setJSONGraphs = require('../cache/set/setJSONGraphs');\nvar setPathValues = require('../cache/set/setPathValues');\nvar invalidatePaths = require('../cache/invalidate/invalidatePathSets');\n\nvar toPaths = require('@graphistry/falcor-path-utils/lib/toPaths');\nvar toCollapseMap = require('@graphistry/falcor-path-utils/lib/toCollapseMap');\nvar toCollapseTrees = require('@graphistry/falcor-path-utils/lib/toCollapseTrees');\nvar hasIntersection = require('@graphistry/falcor-path-utils/lib/hasIntersection');\n\nmodule.exports = Request;\n\nfunction Request(type, queue, source, scheduler) {\n    Subject.call(this, [], queue);\n    this.tree = {};\n    this.paths = [];\n    this.type = type;\n    this.data = null;\n    this.active = false;\n    this.responded = false;\n    this.requested = [];\n    this.optimized = [];\n    this.disposable = null;\n    this.dataSource = source;\n    this.scheduler = scheduler;\n}\n\nRequest.prototype = Object.create(Subject.prototype);\n\nRequest.prototype.next =\nRequest.prototype.onNext = function(envelopes) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    var env = envelopes,\n        envelopeIndex = 0,\n        envelopeCount = 0;\n\n    if (isArray(envelopes)) {\n        if ((envelopeCount = envelopes.length) <= 0) {\n            return;\n        }\n        env = envelopes[0];\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    var boundPath = this.boundPath;\n\n    do {\n\n        var jsonGraph = env.jsonGraph;\n        var requested = this.requested;\n        var modelRoot = queue.modelRoot;\n        var invalidated = env.invalidated;\n        var paths = env.paths || this.paths;\n\n        // Run invalidations first.\n        if (invalidated && invalidated.length) {\n            invalidatePaths({ _root: modelRoot, _path: [] }, invalidated, false);\n        }\n\n        if (paths && paths.length && !(!jsonGraph || typeof jsonGraph !== 'object')) {\n            paths = setJSONGraphs(\n                { _root: modelRoot },\n                [{ paths: paths, jsonGraph: jsonGraph }],\n                modelRoot.errorSelector, modelRoot.comparator, false\n            )[0];\n        }\n    } while (++envelopeIndex < envelopeCount && (env = envelopes[envelopeIndex]))\n\n    this.observers.slice(0).forEach(function(observer, index) {\n        observer.onNext({\n            type: 'get', paths: requested[index] ||\n                filterPathsBoundTo(boundPath, paths)\n        });\n    });\n}\n\nRequest.prototype.error =\nRequest.prototype.onError = function(error) {\n\n    var queue = this.parent;\n\n    if (!queue) {\n        return;\n    }\n\n    if (this.responded === false) {\n        this.responded = true;\n        // Remove this request from the request queue as soon as we get\n        // at least one response back. This ensures we won't be the target\n        // of in-flight batch requests.\n        queue.remove(this);\n    }\n\n    error = error || {};\n\n    // Converts errors to object we can insert into the cache.\n    error = !(error instanceof Error) ?\n        // if it's $type error, use it raw\n        error.$type === $error && error ||\n        // Otherwise make it an error\n        { $type: $error, value: error } :\n        // If it's instanceof Error, pluck error.message\n        { $type: $error, value: { message: error.message }};\n\n    var modelRoot = queue.modelRoot;\n\n    var errorPathValues = toPaths(toCollapseTrees(\n        this.requested.reduce(function(collapseMap, paths) {\n            return toCollapseMap(paths, collapseMap);\n        }, {})\n    ))\n    .map(function(path) { return { path: path, value: error }; });\n\n    if (errorPathValues.length) {\n        setPathValues(\n            { _root: modelRoot, _path: [] },\n            errorPathValues,\n            modelRoot.errorSelector,\n            modelRoot.comparator,\n            false\n        );\n    }\n\n    Subject.prototype.onError.call(this, error);\n}\n\nRequest.prototype.complete =\nRequest.prototype.onCompleted = function() {\n    if (this.responded === false) {\n        this.onNext({});\n    }\n    Subject.prototype.onCompleted.call(this);\n}\n\nRequest.prototype.remove = function(subscription) {\n    var index = this.subscriptions.indexOf(subscription);\n    if (~index) {\n        this.requested.splice(index, 1);\n        this.optimized.splice(index, 1);\n        this.observers.splice(index, 1);\n        this.subscriptions.splice(index, 1);\n    }\n    if (this.subscriptions.length === 0) {\n        this.dispose();\n    }\n    return this;\n}\n\nRequest.prototype.dispose =\nRequest.prototype.unsubscribe = function () {\n    this.tree = {};\n    this.data = null;\n    this.paths = null;\n    this.active = false;\n    this.boundPath = null;\n    this.requested = [];\n    this.optimized = [];\n    var queue = this.parent;\n    if (queue) {\n        this.parent = null;\n        queue.remove(this);\n    }\n    var disposable = this.disposable;\n    if (disposable) {\n        this.disposable = null;\n        if (disposable.dispose) {\n            disposable.dispose();\n        } else if (disposable.unsubscribe) {\n            disposable.unsubscribe();\n        }\n    }\n    Subject.prototype.dispose.call(this);\n}\n\nRequest.prototype.connect = function() {\n    if (!this.active && !this.disposable) {\n        var scheduledDisposable = this.scheduler.schedule(flush.bind(this));\n        if (!this.disposable) {\n            this.disposable = scheduledDisposable;\n        }\n    }\n    return this;\n}\n\nRequest.prototype.batch = function(requested, optimized,\n                                   requestedComplements,\n                                   optimizedComplements) {\n    if (this.active) {\n        var requestedIntersection = [];\n        var optimizedIntersection = [];\n        if (findIntersections(this.tree,\n                              requested, optimized,\n                              requestedComplements,\n                              optimizedComplements,\n                              requestedIntersection,\n                              optimizedIntersection)) {\n            this.requested.push(requestedIntersection);\n            this.optimized.push(optimizedIntersection);\n            return this;\n        }\n        return null;\n    }\n    this.requested.push(requested);\n    this.optimized.push(optimized);\n    return this;\n}\n\nfunction flush() {\n\n    this.active = true;\n\n    var obs, paths = this.paths = toPaths(this.tree = toCollapseTrees(\n        this.optimized.reduce(function(collapseMap, paths) {\n            return toCollapseMap(paths, collapseMap);\n        }, {})\n    ));\n\n    try {\n        switch (this.type) {\n            case 'get':\n                obs = this.dataSource.get(paths);\n                break;\n            case 'set':\n                obs = this.dataSource.set({ paths: paths, jsonGraph: this.data });\n                break;\n            case 'call':\n                obs = this.dataSource.call.apply(this.dataSource, this.data);\n                break;\n        }\n        this.disposable = obs.subscribe(this);\n    } catch (e) {\n        this.disposable = {};\n        Subject.prototype.onError.call(this, new InvalidSourceError(e));\n    }\n}\n\nfunction findIntersections(tree,\n                           requested, optimized,\n                           requestedComplements,\n                           optimizedComplements,\n                           requestedIntersection,\n                           optimizedIntersection) {\n\n    var index = -1;\n    var complementIndex = -1;\n    var intersectionIndex = -1;\n    var optTotal = optimized.length;\n    var reqTotal = requested.length - 1;\n\n    while (++index < optTotal) {\n        var path = optimized[index];\n        var pathLen = path.length;\n        var subTree = tree[pathLen];\n        if (subTree && hasIntersection(subTree, path, 0, pathLen)) {\n            optimizedIntersection[++intersectionIndex] = path;\n            requestedIntersection[intersectionIndex] = requested[\n                index < reqTotal ? index : reqTotal\n            ];\n        } else {\n            optimizedComplements[++complementIndex] = path;\n            requestedComplements[complementIndex] = requested[\n                index < reqTotal ? index : reqTotal\n            ];\n        }\n    }\n\n    return ~intersectionIndex;\n}\n\nfunction filterPathsBoundTo(boundPath, paths) {\n\n    var boundLength;\n\n    if (!boundPath || (boundLength = boundPath.length) === 0) {\n        return paths;\n    }\n\n    var filtered = [], filteredIndex = -1, keyIndex;\n    var path, pathsIndex = -1, pathsCount = paths.length;\n\n    outer: while (++pathsIndex < pathsCount) {\n        path = paths[pathsIndex];\n        if (path.length > boundLength) {\n            keyIndex = 0;\n            do {\n                if (path[keyIndex] !== boundPath[keyIndex]) {\n                    continue outer;\n                }\n            } while (++keyIndex < boundLength);\n            filtered[++filteredIndex] = path.slice(boundLength);\n        }\n    }\n\n    return filtered;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Request.js","var Subscriber = require('./Subscriber');\nvar Subscription = require('./Subscription');\n\nmodule.exports = Subject;\n\nfunction Subject(observers, parent) {\n    Subscriber.call(this, null, parent);\n    this.observers = observers || [];\n}\n\nSubject.prototype = Object.create(Subscriber.prototype);\n\n// Unused\n// Subject.prototype.onNext = function(value) {\n//     this.observers.slice(0).forEach(function(observer) {\n//         observer.onNext(value);\n//     });\n// }\n\nSubject.prototype.onError = function(error) {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function(observer) {\n        observer.onError(error);\n    });\n}\n\nSubject.prototype.onCompleted = function() {\n    var observers = this.observers.slice(0);\n    this.dispose();\n    observers.forEach(function(observer) {\n        observer.onCompleted();\n    });\n}\n\nSubject.prototype.subscribe = function(subscriber) {\n    this.observers.push(subscriber);\n    this.subscriptions.push(subscriber = new Subscription([subscriber], this));\n    return subscriber;\n}\n\nSubject.prototype.dispose =\nSubject.prototype.unsubscribe = function () {\n    this.observers = [];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/request/Subject.js","function TimeoutScheduler(delay) {\n    this.delay = delay;\n}\n\nvar TimerDisposable = function TimerDisposable(id) {\n    this.id = id;\n    this.disposed = false;\n};\n\nTimeoutScheduler.prototype.schedule = function schedule(action) {\n    return new TimerDisposable(setTimeout(action, this.delay));\n};\n\nTimerDisposable.prototype.dispose =\nTimerDisposable.prototype.unsubscribe = function() {\n    if (!this.disposed) {\n        clearTimeout(this.id);\n        this.id = null;\n        this.disposed = true;\n    }\n};\n\nmodule.exports = TimeoutScheduler;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/schedulers/TimeoutScheduler.js","module.exports = function arrayFlatMap(array, selector) {\n    var index = -1;\n    var i = -1;\n    var n = array.length;\n    var array2 = [];\n    while (++i < n) {\n        var array3 = selector(array[i], i, array);\n        var j = -1;\n        var k = array3.length;\n        while (++j < k) {\n            array2[++index] = array3[j];\n        }\n    }\n    return array2;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/array-flat-map.js","var isArray = Array.isArray;\nvar isInternal = require('../internal/isInternal');\n\nmodule.exports = clone;\n\nfunction clone(source) {\n    var dest = source;\n    if (!(!dest || typeof dest !== 'object')) {\n        dest = isArray(source) ? [] : {};\n        for (var key in source) {\n            if (isInternal(key)) {\n                continue;\n            }\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/clone.js","var isObject = require('./isObject');\nmodule.exports = function getSize(node) {\n    return isObject(node) && node.$expires || undefined;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getExpires.js","var isObject = require('./../support/isObject');\n\nmodule.exports = function getType(node, anyType) {\n    var type = isObject(node) && node.$type || void 0;\n    if (anyType && type) {\n        return 'branch';\n    }\n    return type;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/getType.js","var isArray = Array.isArray;\nvar isObject = require('./../support/isObject');\n\nmodule.exports = function isPathValue(pathValue) {\n    return isObject(pathValue) && (\n        isArray(pathValue.path) || (\n            typeof pathValue.path === 'string'\n        ));\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/support/isPathValue.js","module.exports = require('./lib/index');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/index.js\n// module id = 96\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = require('./ponyfill');\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/lib/index.js\n// module id = 97\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/lib/ponyfill.js\n// module id = 98\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.l; }\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function() { return module.i; }\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 99\n// module chunks = 0","module.exports = require(\"@graphistry/falcor-path-utils/lib/computeFlatBufferHash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/computeFlatBufferHash\"\n// module id = 100\n// module chunks = 0","module.exports = require(\"@graphistry/falcor-path-utils/lib/flatBufferToPaths\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/flatBufferToPaths\"\n// module id = 101\n// module chunks = 0","module.exports = require(\"@graphistry/falcor-path-utils/lib/getHashCode\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/getHashCode\"\n// module id = 102\n// module chunks = 0","module.exports = require(\"@graphistry/falcor-path-utils/lib/hasIntersection\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/hasIntersection\"\n// module id = 103\n// module chunks = 0","module.exports = require(\"@graphistry/falcor-path-utils/lib/toCollapseMap\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/toCollapseMap\"\n// module id = 104\n// module chunks = 0","module.exports = require(\"@graphistry/falcor-path-utils/lib/toCollapseTrees\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/toCollapseTrees\"\n// module id = 105\n// module chunks = 0","module.exports = require(\"@graphistry/falcor-path-utils/lib/toFlatBuffer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/toFlatBuffer\"\n// module id = 106\n// module chunks = 0","module.exports = require(\"@graphistry/falcor-path-utils/lib/toPaths\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@graphistry/falcor-path-utils/lib/toPaths\"\n// module id = 107\n// module chunks = 0"],"sourceRoot":""}